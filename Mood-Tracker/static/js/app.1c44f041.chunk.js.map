{"version":3,"sources":["assets/wallpaper.png","shared/dateRange.js","shared/dates.js","styles/loginStyles.js","styles/entrancesStyles.js","components/subcomponents/UserEntryCards.js","components/EntrancesComponent.js","styles/postEntryStyles.js","components/subcomponents/EditEmotions.js","components/subcomponents/GoogleMapsAPI.js","components/PostEntryComponent.js","components/LoginComponent.js","components/SettingsScreen.js","components/WallpapersComponent.js","shared/UserContext.js","components/WallpaperZoomComponent.js","components/victory.ts","components/Charts.js","App.js","shared/emotionsConfig.js"],"names":["module","exports","dateRange","monthDict","Today","now","Date","toString","split","join","oneDigit","stringNumber","slice","length","getNextDate","date","next","nextDate","indexOf","getUniqueYears","uniqueYears","year","includes","push","fullDates","dates","currentYear","currentWeek","dateObj","newDate","day","parseInt","weekday","getDay","week","month","getFullYear","Years","FullDates","Weeks","weeks","fullDate","getWeeks","Months","months","getMonths","fullDateMap","current","period","dateCollections","getNext","currentIndex","dateCollection","nDates","forEach","collDate","index","lastDateIndex","isInLastDateIndex","nextIndex","intWeekDayMap","0","1","2","3","4","5","6","portugueseMonthSigs","formatDate","formatWeek","thisWeek","lastWeek","isThisWeek","isLastWeek","formatMonth","thisMonth","lastMonth","isThisMonth","isLastMonth","isWindowsBroswer","Platform","OS","Device","screenWidth","Dimensions","get","width","screenHeight","height","relativeToScreen","size","axis","styles","login","mainView","flex","justifyContent","alignItems","paddingTop","StatusBar","currentHeight","titleView","flexDirection","minHeight","title","textAlign","fontSize","fontWeight","color","alignSelf","titleIcon","marginLeft","card","paddingHorizontal","paddingVertical","borderWidth","borderRadius","borderColor","backgroundColor","cardHeader","cardTitle","position","left","cardSection","loadingIcon","inputField","paddingLeft","button","buttonLabel","text","msgBox","marginBottom","msg","paddingBottom","scrollView","header","navigationRow","section","borderBottomWidth","sectionHeader","sectionTitle","cardRow","postButton","bottom","postButtonLabel","moodBadge","textAlignVertical","moodHeaderItem","emotionBadge","marginRight","textBadge","lineHeight","spaceBetween","icon","entryIcon","paddingRight","editButtonsView","editButton","editButtonLabel","theme","altTheme","moodColors","MoodHeader","entry","View","style","Text","mood","star","name","fill","weather","Image","source","uri","main","temp","startTime","Address","useState","isCollapsed","setIsCollapsed","address","numberOfLines","onPress","top","Emotions","emotions","flexWrap","PaddingBottom","map","emotion","Jornal","jornal","EmptyCard","props","navigateParams","currentEntry","type","parentState","selectedDate","textStyle","marginTop","Pressable","parentProps","navigation","navigate","CardsLoadingMessage","UserEntryCards","state","EntryCard","bind","EditEntryButtons","editUserEntry","deleteUserEntry","setFontColor","console","log","lastCard","this","setParams","selectedEntryId","_id","entryId","selDateEntries","user","entries","filter","reverse","isUserDataSyncing","onButtonPress","setAlertMsg","onButtonLongPress","isButtonPressed","setIsButtonPressed","highlightButtonFor","label","isLoading","isDeleteLoading","selectable","disabled","onPressIn","onLongPress","ActivityIndicator","selectedEntry","a","async","setMainScreenState","isDeleteEntryLoading","UsersResult","ok","status","deleteEntryURI","appServerURI","username","fetch","method","usersStatus","statusText","Error","syncUserData","fontColorDark","settings","fontColor","altFontColor","UserEntryCardsList","Component","EntrancesScreen","DateNavigationButton","onNextButtonPress","hitSlop","time","alertMsg","getMainScreenState","setState","setTimeout","setSelectedDate","route","params","appState","backgroundImage","imgURI","displayBackgroundImage","enableHighResolution","urls","raw","regular","ImageBackground","ScrollView","entrances","content","flexGrow","entryTitle","moodButton","jornalText","saveButton","borderTopLeftRadius","borderTopRightRadius","saveButtonLabel","marginVertical","marginHorizontal","entryCardEmotionBadge","datetimeTitle","capitalize","multipleWordString","words","trim","CapitalizedWords","element","toUpperCase","EditEmotions","showEditMenu","showExpandMenuButton","mode","newEmotionName","selectedEmotionType","selectedEmotionEnergy","initialEmotionLayout","EditEmotionsMenu","EditEmotionsSection","onSaveEmotionButtonPress","emotionLayoutMap","inputSectionStyle","inputStyle","tagStyle","createEmotionViewStyle","borderTopWidth","borderTopColor","isDeleteEmotionLoading","isSaveEmotionLoading","isPostEntryLoading","isUpdateUserDataLoading","isNewEmotionFormComplete","unselectedLayout","selectedEmotionLayout","TextInput","placeholder","placeholderTextColor","onChangeText","value","typeSelected","setParentState","deleteEmotionMode","layout","isLayoutSelected","onSaveEmotionLayoutButtonPress","hidden","anyOpen","Object","keys","isSelectedEmotions","newEmotion","energy","postEmotionResult","postUserEntryOpts","headers","body","JSON","stringify","postEmotionStatus","updateUserData","isSaveEmotionLayoutLoading","postEmotionLayoutResult","postEmotionLayoutOpts","postEmotionLayoutStatus","GoogleMapsAPI","GoogleMapsJavascriptAPIkey","GoogleMapsGeocodingAPIKey","Location","moods","moodColorsHEX","moodColorsRGBA","moodIcons","emotionGroupsNames","emotionTypes","emotionEnergy","buildIsSelectedEmotions","monthSigs","monthNameMap","monthSig","getTime","formatPostEntryDatetimeTitle","ymd","m","PostEntranceScreen","endTime","createdAt","lastEdited","selectedMood","jornalEntry","location","isMoodUnmarked","isFetchingLocationOrWeather","locationPermission","userCoordinates","loginMsg","initializeEntry","onSaveButtonPress","setLoginMsg","EmotionButtons","MoodButtons","postEntryHeader","onEmotionButtonPress","onMoodButtonPress","inputCardBody","setSelectedEntry","InputCard","JornalInput","postNewEntryAsync","deleteEmotion","onEmotionButtonLongPress","goBack","item","alpha","selected","selColor","selectMood","objList","objKey","obj","sortedKeys","sort","newObjList","key","sortObjListByKey","suppressHighlighting","selectEmotion","multiline","scrollEnabled","sectionName","cardBodyStyle","cardBodyContent","userEmotionGroups","emotionLabels","mapEmotions","setSelected","checkIfLocationEnabled","getCurrentLocation","fetchWeather","currentEmotions","isSelectedEmotionsNew","oldEmotions","newEmotionsSelected","isDataLoading","newEntryPost","newEntry","editMode","postUserEntryResult","postUserEntryStatus","coords","queryParams","lat","latitude","lon","longitude","units","fetchOptions","response","resStatus","json","weatherInfo","coord","clouds","wind","visibility","addr","street","streetNumber","district","subregion","region","isoCountryCode","require","userScheme","falseParams","validateEmail","email","emailStatus","emailAddress","param","apiResp","apiRespJson","formatCheck","smtpCheck","registerLocallyIfUserIsNewToDevice","AsyncStorage","getItem","localAuthInfo","parse","users","localUser","updatedLocalAuthInfo","password","setItem","keepUserConnectionAlive","id","keepConnected","userId","LoginScreen","textContentType","autoComplete","importantForAutofill","userInfo","secureTextEntry","submitButton","Switch","trackColor","false","true","thumbColor","ios_backgroundColor","onValueChange","LoginIcon","isUserAuth","onSignIn","onSignUp","restoreUserToken","animation","textField","setField","sign","signIn","errMsg","NetInfo","then","DEVICE_IP_ADDRESS","details","ipAddress","initialLocalAuthInfo","IP_ADDRESS","deviceBrand","deviceManufacturer","deviceModelName","deviceModelId","deviceOsName","deviceOsVersion","deviceName","deviceType","info","isInputEmpty","UsersStatus","Users","setAppState","postUserResult","emailValidation","reqStatus","passwordCheck","postUserOpts","postUserStatus","successMsg","colorList","background","foreground","settingsRow","colorBox","colorRow","colorSquare","logout","h1","h2","h3","h4","blinkButton","setPressed","timeSpan","postSettings","postSettingsResult","postSettingsOpts","postSettingsStatus","alert","SettingsScreen","isBackgroundColorSettingsOpen","selectedColor","isDisplayBackgroundImageLoading","isChangeFontColorLoading","isEnableHighResolutionLoading","isRestoreColorLoading","isSaveColorLoading","syncUserSettings","setBackgroundColor","ScreenSettings","ChooseImageSection","DisplayBackgroundImageSection","ChangeFontColorSection","EnableHighResolutionSection","ChangeBackgroundColorSection","ColorOptions","ColorControl","onLogoutButtonPress","onColorButtonPressFor","onSaveColorButtonPress","onChangeFontColorSwitch","ColorRow","logoutPressable","h","React","isChooseImageButtonPressed","setIsChooseImageButtonPressed","isExposeImageButtonPressed","setIsExposeImageButtonPressed","displayBackgroundImageValue","onDisplayBackgroundImageSwitch","isEnableHighResolutionButtonPressed","setIsEnableHighResolutionButtonPressed","enableHighResolutionValue","onEnableHighResolutionSwitch","isChangeFontColorButtonPressed","setIsChangeFontColorButtonPressed","changeFontColorValue","isColorButtonPressed","setIsColorButtonPressed","newColorUnselected","fontColorTransp","seeWallpaper","nestedScrollEnabled","isColorRowPressed","setIsColorRowPressed","fontStyle","textDecorationLine","isLogoutButtonPressed","setIsLogoutButtonPressed","logoutColor","newSettings","colorSetting","isWindows","formatTopicName","photosView","headerLabel","image","getUnsplash","endpoint","reqParams","result","result_json","success","Item","topicsScreen","photoURI","cover_photo","nextScreenName","windowHeight","photoHeight","photoWidth","selectedImage","margin","slug","WallpapersComponent","renderItem","PhotoList","useEffect","subscription","addEventListener","window","screen","Math","abs","remove","FlatList","data","photos","keyExtractor","numColumns","initialNumToRender","onEndReached","loadNextPagePhotosAsync","refreshing","isPhotosLoading","page","hideHeader","initializePhotosAsync","WallpapersHeaderText","WallpapersHeader","ControlButtons","per_page","order_by","asyncResult","orientation","prevState","headerText","topRight","right","SafeAreaView","UserContext","createContext","fotter","controlView","attributionView","controlButton","controlButtonLabel","userProfileImage","attributionLabel","maxWidth","attributionURL","openUnsplashURL","Linking","openURL","WallpaperZoom","useContext","isSaveImageLoading","setIsSaveImageLoading","userProfileHtmlLink","imageSetting","profile_image","large","links","html","Victory","moodColorsObj","periodButton","chartView","controlRow","moodPieCard","moodPieCardSection","moodPieStatsView","moodStatRow","statsRowItem","moodCircleBadge","h5","moodMap","periods","periodMap","ChartPanel","currentDates","setPeriod","setDate","NavigationRow","Chart","MoodLineCard","initialMode","modes","MoodPieCard","formatPeriodDate","datePeriodFilters","ChartCard","filters","setMode","temporal","setTemporal","ModeSwapButton","interpolation","setInterpolation","x","y","MoodLineTemporal","MoodLine","ModeControlRow","var1","setVar1","var1Options","interpolations","var2","setVar2","var2Options","modeClicked","setModeClicked","list","sortData","by","b","getDomain","space","x_min","x_max","x_range","x_dif","adjustedDomains","ticks","getTickValues","i","fullInitialDate","tickValueFromFullDate","tick","appendTimeData","time_s","time_d","datePeriodFilter","datePeriodDates","dateDifDays","xTickValues","x_domain","VictoryChart","padding","domain","VictoryAxis","dependentAxis","tickFormat","stroke","grid","tickLabels","tickValues","round","tickLabelComponent","VictoryLabel","angle","dx","dy","axisLabel","VictoryLine","strokeWidth","VictoryScatter","datum","moodCount","moodPieData","MoodPie","MoodPieStats","nEntries","colorScale","row","VictoryPie","innerRadius","padAngle","cornerRadius","labels","MoodStat","moodCountObj","countObj","moodProp","Charts","ChartsScreen","linking","prefixes","config","screens","Home","Entrances","Settings","PostEntrance","WallpaperTopics","Wallpapers","loginLinking","Login","LoadingScreen","SettingsScreenProvider","EntrancesScreenProvider","PostEntranceScreenProvider","WallpapersScreenProvider","WallpaperZoomScreenProvider","ChartsScreenProvider","tabBarLabelsMap","tabBarIconsMap","tabNavigatorOptionsProvider","iconName","headerShown","tabBarHideOnKeyboard","tabBarLabel","tabBarLabelPosition","tabBarLabelStyle","tabBarShowLabel","tabBarIcon","focused","newIconName","tabBarActiveTintColor","tabBarInactiveTintColor","tabBarActiveBackgroundColor","tabBarInactiveBackgroundColor","tabBarItemStyle","tabBarStyle","elevation","Stack","createNativeStackNavigator","Tab","createBottomTabNavigator","HomeTab","Navigator","initialRouteName","screenOptions","Screen","component","initialParams","options","HomeStack","App","getAppState","LoginContainer","ContextProvider","UserResult","userStatus","NavigationContainer","fallback","Provider","emotionGroups","defaultEmotions"],"mappings":"8FAAAA,EAAOC,QAAU,IAA0B,uC,uPCqiB5BC,EAriBG,CACd,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,a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","file":"static/js/app.1c44f041.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/wallpaper.219bc3cc.png\";","const dateRange = [\r\n    \"2021-01-01\",\r\n    \"2021-01-02\",\r\n    \"2021-01-03\",\r\n    \"2021-01-04\",\r\n    \"2021-01-05\",\r\n    \"2021-01-06\",\r\n    \"2021-01-07\",\r\n    \"2021-01-08\",\r\n    \"2021-01-09\",\r\n    \"2021-01-10\",\r\n    \"2021-01-11\",\r\n    \"2021-01-12\",\r\n    \"2021-01-13\",\r\n    \"2021-01-14\",\r\n    \"2021-01-15\",\r\n    \"2021-01-16\",\r\n    \"2021-01-17\",\r\n    \"2021-01-18\",\r\n    \"2021-01-19\",\r\n    \"2021-01-20\",\r\n    \"2021-01-21\",\r\n    \"2021-01-22\",\r\n    \"2021-01-23\",\r\n    \"2021-01-24\",\r\n    \"2021-01-25\",\r\n    \"2021-01-26\",\r\n    \"2021-01-27\",\r\n    \"2021-01-28\",\r\n    \"2021-01-29\",\r\n    \"2021-01-30\",\r\n    \"2021-01-31\",\r\n    \"2021-02-01\",\r\n    \"2021-02-02\",\r\n    \"2021-02-03\",\r\n    \"2021-02-04\",\r\n    \"2021-02-05\",\r\n    \"2021-02-06\",\r\n    \"2021-02-07\",\r\n    \"2021-02-08\",\r\n    \"2021-02-09\",\r\n    \"2021-02-10\",\r\n    \"2021-02-11\",\r\n    \"2021-02-12\",\r\n    \"2021-02-13\",\r\n    \"2021-02-14\",\r\n    \"2021-02-15\",\r\n    \"2021-02-16\",\r\n    \"2021-02-17\",\r\n    \"2021-02-18\",\r\n    \"2021-02-19\",\r\n    \"2021-02-20\",\r\n    \"2021-02-21\",\r\n    \"2021-02-22\",\r\n    \"2021-02-23\",\r\n    \"2021-02-24\",\r\n    \"2021-02-25\",\r\n    \"2021-02-26\",\r\n    \"2021-02-27\",\r\n    \"2021-02-28\",\r\n    \"2021-03-01\",\r\n    \"2021-03-02\",\r\n    \"2021-03-03\",\r\n    \"2021-03-04\",\r\n    \"2021-03-05\",\r\n    \"2021-03-06\",\r\n    \"2021-03-07\",\r\n    \"2021-03-08\",\r\n    \"2021-03-09\",\r\n    \"2021-03-10\",\r\n    \"2021-03-11\",\r\n    \"2021-03-12\",\r\n    \"2021-03-13\",\r\n    \"2021-03-14\",\r\n    \"2021-03-15\",\r\n    \"2021-03-16\",\r\n    \"2021-03-17\",\r\n    \"2021-03-18\",\r\n    \"2021-03-19\",\r\n    \"2021-03-20\",\r\n    \"2021-03-21\",\r\n    \"2021-03-22\",\r\n    \"2021-03-23\",\r\n    \"2021-03-24\",\r\n    \"2021-03-25\",\r\n    \"2021-03-26\",\r\n    \"2021-03-27\",\r\n    \"2021-03-28\",\r\n    \"2021-03-29\",\r\n    \"2021-03-30\",\r\n    \"2021-03-31\",\r\n    \"2021-04-01\",\r\n    \"2021-04-02\",\r\n    \"2021-04-03\",\r\n    \"2021-04-04\",\r\n    \"2021-04-05\",\r\n    \"2021-04-06\",\r\n    \"2021-04-07\",\r\n    \"2021-04-08\",\r\n    \"2021-04-09\",\r\n    \"2021-04-10\",\r\n    \"2021-04-11\",\r\n    \"2021-04-12\",\r\n    \"2021-04-13\",\r\n    \"2021-04-14\",\r\n    \"2021-04-15\",\r\n    \"2021-04-16\",\r\n    \"2021-04-17\",\r\n    \"2021-04-18\",\r\n    \"2021-04-19\",\r\n    \"2021-04-20\",\r\n    \"2021-04-21\",\r\n    \"2021-04-22\",\r\n    \"2021-04-23\",\r\n    \"2021-04-24\",\r\n    \"2021-04-25\",\r\n    \"2021-04-26\",\r\n    \"2021-04-27\",\r\n    \"2021-04-28\",\r\n    \"2021-04-29\",\r\n    \"2021-04-30\",\r\n    \"2021-05-01\",\r\n    \"2021-05-02\",\r\n    \"2021-05-03\",\r\n    \"2021-05-04\",\r\n    \"2021-05-05\",\r\n    \"2021-05-06\",\r\n    \"2021-05-07\",\r\n    \"2021-05-08\",\r\n    \"2021-05-09\",\r\n    \"2021-05-10\",\r\n    \"2021-05-11\",\r\n    \"2021-05-12\",\r\n    \"2021-05-13\",\r\n    \"2021-05-14\",\r\n    \"2021-05-15\",\r\n    \"2021-05-16\",\r\n    \"2021-05-17\",\r\n    \"2021-05-18\",\r\n    \"2021-05-19\",\r\n    \"2021-05-20\",\r\n    \"2021-05-21\",\r\n    \"2021-05-22\",\r\n    \"2021-05-23\",\r\n    \"2021-05-24\",\r\n    \"2021-05-25\",\r\n    \"2021-05-26\",\r\n    \"2021-05-27\",\r\n    \"2021-05-28\",\r\n    \"2021-05-29\",\r\n    \"2021-05-30\",\r\n    \"2021-05-31\",\r\n    \"2021-06-01\",\r\n    \"2021-06-02\",\r\n    \"2021-06-03\",\r\n    \"2021-06-04\",\r\n    \"2021-06-05\",\r\n    \"2021-06-06\",\r\n    \"2021-06-07\",\r\n    \"2021-06-08\",\r\n    \"2021-06-09\",\r\n    \"2021-06-10\",\r\n    \"2021-06-11\",\r\n    \"2021-06-12\",\r\n    \"2021-06-13\",\r\n    \"2021-06-14\",\r\n    \"2021-06-15\",\r\n    \"2021-06-16\",\r\n    \"2021-06-17\",\r\n    \"2021-06-18\",\r\n    \"2021-06-19\",\r\n    \"2021-06-20\",\r\n    \"2021-06-21\",\r\n    \"2021-06-22\",\r\n    \"2021-06-23\",\r\n    \"2021-06-24\",\r\n    \"2021-06-25\",\r\n    \"2021-06-26\",\r\n    \"2021-06-27\",\r\n    \"2021-06-28\",\r\n    \"2021-06-29\",\r\n    \"2021-06-30\",\r\n    \"2021-07-01\",\r\n    \"2021-07-02\",\r\n    \"2021-07-03\",\r\n    \"2021-07-04\",\r\n    \"2021-07-05\",\r\n    \"2021-07-06\",\r\n    \"2021-07-07\",\r\n    \"2021-07-08\",\r\n    \"2021-07-09\",\r\n    \"2021-07-10\",\r\n    \"2021-07-11\",\r\n    \"2021-07-12\",\r\n    \"2021-07-13\",\r\n    \"2021-07-14\",\r\n    \"2021-07-15\",\r\n    \"2021-07-16\",\r\n    \"2021-07-17\",\r\n    \"2021-07-18\",\r\n    \"2021-07-19\",\r\n    \"2021-07-20\",\r\n    \"2021-07-21\",\r\n    \"2021-07-22\",\r\n    \"2021-07-23\",\r\n    \"2021-07-24\",\r\n    \"2021-07-25\",\r\n    \"2021-07-26\",\r\n    \"2021-07-27\",\r\n    \"2021-07-28\",\r\n    \"2021-07-29\",\r\n    \"2021-07-30\",\r\n    \"2021-07-31\",\r\n    \"2021-08-01\",\r\n    \"2021-08-02\",\r\n    \"2021-08-03\",\r\n    \"2021-08-04\",\r\n    \"2021-08-05\",\r\n    \"2021-08-06\",\r\n    \"2021-08-07\",\r\n    \"2021-08-08\",\r\n    \"2021-08-09\",\r\n    \"2021-08-10\",\r\n    \"2021-08-11\",\r\n    \"2021-08-12\",\r\n    \"2021-08-13\",\r\n    \"2021-08-14\",\r\n    \"2021-08-15\",\r\n    \"2021-08-16\",\r\n    \"2021-08-17\",\r\n    \"2021-08-18\",\r\n    \"2021-08-19\",\r\n    \"2021-08-20\",\r\n    \"2021-08-21\",\r\n    \"2021-08-22\",\r\n    \"2021-08-23\",\r\n    \"2021-08-24\",\r\n    \"2021-08-25\",\r\n    \"2021-08-26\",\r\n    \"2021-08-27\",\r\n    \"2021-08-28\",\r\n    \"2021-08-29\",\r\n    \"2021-08-30\",\r\n    \"2021-08-31\",\r\n    \"2021-09-01\",\r\n    \"2021-09-02\",\r\n    \"2021-09-03\",\r\n    \"2021-09-04\",\r\n    \"2021-09-05\",\r\n    \"2021-09-06\",\r\n    \"2021-09-07\",\r\n    \"2021-09-08\",\r\n    \"2021-09-09\",\r\n    \"2021-09-10\",\r\n    \"2021-09-11\",\r\n    \"2021-09-12\",\r\n    \"2021-09-13\",\r\n    \"2021-09-14\",\r\n    \"2021-09-15\",\r\n    \"2021-09-16\",\r\n    \"2021-09-17\",\r\n    \"2021-09-18\",\r\n    \"2021-09-19\",\r\n    \"2021-09-20\",\r\n    \"2021-09-21\",\r\n    \"2021-09-22\",\r\n    \"2021-09-23\",\r\n    \"2021-09-24\",\r\n    \"2021-09-25\",\r\n    \"2021-09-26\",\r\n    \"2021-09-27\",\r\n    \"2021-09-28\",\r\n    \"2021-09-29\",\r\n    \"2021-09-30\",\r\n    \"2021-10-01\",\r\n    \"2021-10-02\",\r\n    \"2021-10-03\",\r\n    \"2021-10-04\",\r\n    \"2021-10-05\",\r\n    \"2021-10-06\",\r\n    \"2021-10-07\",\r\n    \"2021-10-08\",\r\n    \"2021-10-09\",\r\n    \"2021-10-10\",\r\n    \"2021-10-11\",\r\n    \"2021-10-12\",\r\n    \"2021-10-13\",\r\n    \"2021-10-14\",\r\n    \"2021-10-15\",\r\n    \"2021-10-16\",\r\n    \"2021-10-17\",\r\n    \"2021-10-18\",\r\n    \"2021-10-19\",\r\n    \"2021-10-20\",\r\n    \"2021-10-21\",\r\n    \"2021-10-22\",\r\n    \"2021-10-23\",\r\n    \"2021-10-24\",\r\n    \"2021-10-25\",\r\n    \"2021-10-26\",\r\n    \"2021-10-27\",\r\n    \"2021-10-28\",\r\n    \"2021-10-29\",\r\n    \"2021-10-30\",\r\n    \"2021-10-31\",\r\n    \"2021-11-01\",\r\n    \"2021-11-02\",\r\n    \"2021-11-03\",\r\n    \"2021-11-04\",\r\n    \"2021-11-05\",\r\n    \"2021-11-06\",\r\n    \"2021-11-07\",\r\n    \"2021-11-08\",\r\n    \"2021-11-09\",\r\n    \"2021-11-10\",\r\n    \"2021-11-11\",\r\n    \"2021-11-12\",\r\n    \"2021-11-13\",\r\n    \"2021-11-14\",\r\n    \"2021-11-15\",\r\n    \"2021-11-16\",\r\n    \"2021-11-17\",\r\n    \"2021-11-18\",\r\n    \"2021-11-19\",\r\n    \"2021-11-20\",\r\n    \"2021-11-21\",\r\n    \"2021-11-22\",\r\n    \"2021-11-23\",\r\n    \"2021-11-24\",\r\n    \"2021-11-25\",\r\n    \"2021-11-26\",\r\n    \"2021-11-27\",\r\n    \"2021-11-28\",\r\n    \"2021-11-29\",\r\n    \"2021-11-30\",\r\n    \"2021-12-01\",\r\n    \"2021-12-02\",\r\n    \"2021-12-03\",\r\n    \"2021-12-04\",\r\n    \"2021-12-05\",\r\n    \"2021-12-06\",\r\n    \"2021-12-07\",\r\n    \"2021-12-08\",\r\n    \"2021-12-09\",\r\n    \"2021-12-10\",\r\n    \"2021-12-11\",\r\n    \"2021-12-12\",\r\n    \"2021-12-13\",\r\n    \"2021-12-14\",\r\n    \"2021-12-15\",\r\n    \"2021-12-16\",\r\n    \"2021-12-17\",\r\n    \"2021-12-18\",\r\n    \"2021-12-19\",\r\n    \"2021-12-20\",\r\n    \"2021-12-21\",\r\n    \"2021-12-22\",\r\n    \"2021-12-23\",\r\n    \"2021-12-24\",\r\n    \"2021-12-25\",\r\n    \"2021-12-26\",\r\n    \"2021-12-27\",\r\n    \"2021-12-28\",\r\n    \"2021-12-29\",\r\n    \"2021-12-30\",\r\n    \"2021-12-31\",\r\n    \"2022-01-01\",\r\n    \"2022-01-02\",\r\n    \"2022-01-03\",\r\n    \"2022-01-04\",\r\n    \"2022-01-05\",\r\n    \"2022-01-06\",\r\n    \"2022-01-07\",\r\n    \"2022-01-08\",\r\n    \"2022-01-09\",\r\n    \"2022-01-10\",\r\n    \"2022-01-11\",\r\n    \"2022-01-12\",\r\n    \"2022-01-13\",\r\n    \"2022-01-14\",\r\n    \"2022-01-15\",\r\n    \"2022-01-16\",\r\n    \"2022-01-17\",\r\n    \"2022-01-18\",\r\n    \"2022-01-19\",\r\n    \"2022-01-20\",\r\n    \"2022-01-21\",\r\n    \"2022-01-22\",\r\n    \"2022-01-23\",\r\n    \"2022-01-24\",\r\n    \"2022-01-25\",\r\n    \"2022-01-26\",\r\n    \"2022-01-27\",\r\n    \"2022-01-28\",\r\n    \"2022-01-29\",\r\n    \"2022-01-30\",\r\n    \"2022-01-31\",\r\n    \"2022-02-01\",\r\n    \"2022-02-02\",\r\n    \"2022-02-03\",\r\n    \"2022-02-04\",\r\n    \"2022-02-05\",\r\n    \"2022-02-06\",\r\n    \"2022-02-07\",\r\n    \"2022-02-08\",\r\n    \"2022-02-09\",\r\n    \"2022-02-10\",\r\n    \"2022-02-11\",\r\n    \"2022-02-12\",\r\n    \"2022-02-13\",\r\n    \"2022-02-14\",\r\n    \"2022-02-15\",\r\n    \"2022-02-16\",\r\n    \"2022-02-17\",\r\n    \"2022-02-18\",\r\n    \"2022-02-19\",\r\n    \"2022-02-20\",\r\n    \"2022-02-21\",\r\n    \"2022-02-22\",\r\n    \"2022-02-23\",\r\n    \"2022-02-24\",\r\n    \"2022-02-25\",\r\n    \"2022-02-26\",\r\n    \"2022-02-27\",\r\n    \"2022-02-28\",\r\n    \"2022-03-01\",\r\n    \"2022-03-02\",\r\n    \"2022-03-03\",\r\n    \"2022-03-04\",\r\n    \"2022-03-05\",\r\n    \"2022-03-06\",\r\n    \"2022-03-07\",\r\n    \"2022-03-08\",\r\n    \"2022-03-09\",\r\n    \"2022-03-10\",\r\n    \"2022-03-11\",\r\n    \"2022-03-12\",\r\n    \"2022-03-13\",\r\n    \"2022-03-14\",\r\n    \"2022-03-15\",\r\n    \"2022-03-16\",\r\n    \"2022-03-17\",\r\n    \"2022-03-18\",\r\n    \"2022-03-19\",\r\n    \"2022-03-20\",\r\n    \"2022-03-21\",\r\n    \"2022-03-22\",\r\n    \"2022-03-23\",\r\n    \"2022-03-24\",\r\n    \"2022-03-25\",\r\n    \"2022-03-26\",\r\n    \"2022-03-27\",\r\n    \"2022-03-28\",\r\n    \"2022-03-29\",\r\n    \"2022-03-30\",\r\n    \"2022-03-31\",\r\n    \"2022-04-01\",\r\n    \"2022-04-02\",\r\n    \"2022-04-03\",\r\n    \"2022-04-04\",\r\n    \"2022-04-05\",\r\n    \"2022-04-06\",\r\n    \"2022-04-07\",\r\n    \"2022-04-08\",\r\n    \"2022-04-09\",\r\n    \"2022-04-10\",\r\n    \"2022-04-11\",\r\n    \"2022-04-12\",\r\n    \"2022-04-13\",\r\n    \"2022-04-14\",\r\n    \"2022-04-15\",\r\n    \"2022-04-16\",\r\n    \"2022-04-17\",\r\n    \"2022-04-18\",\r\n    \"2022-04-19\",\r\n    \"2022-04-20\",\r\n    \"2022-04-21\",\r\n    \"2022-04-22\",\r\n    \"2022-04-23\",\r\n    \"2022-04-24\",\r\n    \"2022-04-25\",\r\n    \"2022-04-26\",\r\n    \"2022-04-27\",\r\n    \"2022-04-28\",\r\n    \"2022-04-29\",\r\n    \"2022-04-30\",\r\n    \"2022-05-01\",\r\n    \"2022-05-02\",\r\n    \"2022-05-03\",\r\n    \"2022-05-04\",\r\n    \"2022-05-05\",\r\n    \"2022-05-06\",\r\n    \"2022-05-07\",\r\n    \"2022-05-08\",\r\n    \"2022-05-09\",\r\n    \"2022-05-10\",\r\n    \"2022-05-11\",\r\n    \"2022-05-12\",\r\n    \"2022-05-13\",\r\n    \"2022-05-14\",\r\n    \"2022-05-15\",\r\n    \"2022-05-16\",\r\n    \"2022-05-17\",\r\n    \"2022-05-18\",\r\n    \"2022-05-19\",\r\n    \"2022-05-20\",\r\n    \"2022-05-21\",\r\n    \"2022-05-22\",\r\n    \"2022-05-23\",\r\n    \"2022-05-24\",\r\n    \"2022-05-25\",\r\n    \"2022-05-26\",\r\n    \"2022-05-27\",\r\n    \"2022-05-28\",\r\n    \"2022-05-29\",\r\n    \"2022-05-30\",\r\n    \"2022-05-31\",\r\n    \"2022-06-01\",\r\n    \"2022-06-02\",\r\n    \"2022-06-03\",\r\n    \"2022-06-04\",\r\n    \"2022-06-05\",\r\n    \"2022-06-06\",\r\n    \"2022-06-07\",\r\n    \"2022-06-08\",\r\n    \"2022-06-09\",\r\n    \"2022-06-10\",\r\n    \"2022-06-11\",\r\n    \"2022-06-12\",\r\n    \"2022-06-13\",\r\n    \"2022-06-14\",\r\n    \"2022-06-15\",\r\n    \"2022-06-16\",\r\n    \"2022-06-17\",\r\n    \"2022-06-18\",\r\n    \"2022-06-19\",\r\n    \"2022-06-20\",\r\n    \"2022-06-21\",\r\n    \"2022-06-22\",\r\n    \"2022-06-23\",\r\n    \"2022-06-24\",\r\n    \"2022-06-25\",\r\n    \"2022-06-26\",\r\n    \"2022-06-27\",\r\n    \"2022-06-28\",\r\n    \"2022-06-29\",\r\n    \"2022-06-30\"\r\n]\r\n\r\nexport default dateRange;","// 1. Imports\r\n\r\nimport dateRange from \"./dateRange\"\r\n\r\n// 2. Definitions\r\n\r\nconst monthDict = {\r\n  'Jan': '01', 'Feb': '02', 'Mar': '03',\r\n  'Apr': '04', 'May': '05', 'Jun': '06',\r\n  'Jul': '07', 'Ago': '08', 'Sep': '09',\r\n  'Oct': '10', 'Nov': '11', 'Dec': '12'\r\n}\r\n\r\nexport function Today() {\r\n    const now = new Date().toString().split(' ')\r\n    const today = [ now[3], monthDict[now[1]], now[2] ].join('-')\r\n    return today\r\n}\r\n\r\nexport function oneDigit(stringNumber) {\r\n    if (stringNumber[0] == '0') return stringNumber.slice(1, stringNumber.length)\r\n    else return stringNumber\r\n}\r\n\r\nexport function getNextDate(date, next='next') {\r\n    const nextDate = dateRange[dateRange.indexOf(date) + (next=='previous' ? -1 : 1)]\r\n    return nextDate\r\n}\r\n\r\nfunction getUniqueYears() {\r\n    var uniqueYears = []\r\n  for (let date of dateRange) {\r\n    let year = date.slice(0,4)\r\n    if (!uniqueYears.includes(year)) {\r\n      uniqueYears.push(year)\r\n    }\r\n  }\r\n  return uniqueYears\r\n}\r\n\r\nfunction fullDates() {\r\n  var dates = []\r\n  var currentYear = getUniqueYears()[0]\r\n  var currentWeek = 1\r\n  for (let date of dateRange) {\r\n    const dateObj = new Date(date)\r\n    var newDate = {\r\n      date: date,\r\n      day: parseInt(oneDigit(date.slice(8,10))),\r\n      weekday: dateObj.getDay(),\r\n      week: null ,\r\n      month: parseInt(oneDigit(date.slice(5,7))),\r\n      year: dateObj.getFullYear(),\r\n    }\r\n\r\n    if (newDate.year != currentYear) {\r\n      currentYear = newDate.year\r\n      currentWeek = 1\r\n    } else {\r\n      if (newDate.weekday==0) {\r\n        currentWeek += 1\r\n      }\r\n    }\r\n    newDate.week = currentWeek\r\n    dates.push(newDate)\r\n  }\r\n  return dates\r\n}\r\n\r\nfunction getWeeks() {\r\n  const FullDates = fullDates()\r\n  var weeks = [ {week: FullDates[0].week, year: FullDates[0].year} ]\r\n  for (let fullDate of FullDates) {\r\n    if ( fullDate.week != weeks[weeks.length-1].week ) {\r\n      weeks.push({\r\n          week: fullDate.week,\r\n          year: fullDate.year\r\n      })\r\n    }\r\n  }\r\n  return weeks\r\n}\r\n\r\nexport function getMonths() {\r\n  const FullDates = fullDates()\r\n  var months = [ {month: FullDates[0].month, year: FullDates[0].year} ]\r\n  for (let fullDate of FullDates) {\r\n      if ( fullDate.month != months[months.length-1].month ) {\r\n      months.push({\r\n        month: fullDate.month,\r\n        year: fullDate.year\r\n      })\r\n    }\r\n  }\r\n  return months\r\n}\r\n\r\nexport const Years = getUniqueYears()\r\nexport const FullDates = fullDates()\r\nexport const Weeks = getWeeks()\r\nexport const Months = getMonths()\r\n\r\nexport function fullDateMap(date) {\r\n  return FullDates[dateRange.indexOf(date)]\r\n}\r\n\r\nexport function current(period) {\r\n  return fullDateMap(Today())[period]\r\n}\r\n\r\nexport const dateCollections = {\r\n  'day': dateRange,\r\n  'week': Weeks,\r\n  'month': Months,\r\n  'year': Years\r\n  }\r\n  \r\nexport function getNext(date, next='next', period) {\r\n  const dateCollection = dateCollections[period]\r\n  const nDates = dateCollection.length\r\n  var currentIndex\r\n  if (['day', 'year'].includes(period))\r\n    currentIndex = dateCollection.indexOf(date.toString())\r\n  else {\r\n    dateCollection.forEach((collDate, index) => {\r\n    if (collDate[period]==date[period] && collDate.year==date.year )\r\n      currentIndex = index\r\n    })\r\n  }\r\n  const lastDateIndex = next=='next' ? nDates-1 : 0\r\n  const isInLastDateIndex = currentIndex==lastDateIndex\r\n  const nextIndex = isInLastDateIndex\r\n  ? ( next=='next' ? 0 : nDates-1 )\r\n  : currentIndex + (next=='next' ? 1 : -1)\r\n  return dateCollection[nextIndex]\r\n}\r\n\r\nexport const intWeekDayMap = {\r\n  0: 'Seg',\r\n  1: 'Ter',\r\n  2: 'Qua',\r\n  3: 'Qui',\r\n  4: 'Sex',\r\n  5: 'Sab',\r\n  6: 'Dom',\r\n}\r\n\r\nexport const portugueseMonthSigs = [\r\n  'Jan', 'Fev', 'Mar', 'Abr',\r\n  'Mai', 'Jun', 'Jul', 'Ago',\r\n  'Set', 'Out', 'Nov', 'Dez'\r\n]\r\n\r\nexport function formatDate(date) {\r\n  const newDate = new Date(date)\r\n  const weekday = intWeekDayMap[newDate.getDay()]\r\n  const day = parseInt(oneDigit(date.slice(8,10)))\r\n  const month = portugueseMonthSigs[parseInt(oneDigit(date.slice(5,7)))-1]\r\n  var prefix\r\n  if (date === Today()) prefix = 'Hoje, '\r\n  else if (date === getNextDate(Today(), 'previous')) prefix = 'Ontem, '\r\n  else prefix = weekday + ', '\r\n  return prefix + day + ' ' + month  \r\n}\r\n\r\nexport function formatWeek(date) {\r\n  const thisWeek = {week: current('week'), year: current('year')}\r\n  const lastWeek = getNext(thisWeek, 'previous', 'week')\r\n  const isThisWeek = date.week==thisWeek.week && date.year==thisWeek.year\r\n  const isLastWeek = date.week==lastWeek.week && date.year==lastWeek.year\r\n  if (isThisWeek) return `Essa semana, ${date.year}`\r\n  else if (isLastWeek) return `Semana passada, ${date.year}`\r\n  else return `Semana ${date.week}, ${date.year}`\r\n}\r\n\r\nexport function formatMonth(date) {\r\n  const thisMonth = {month: current('month'), year: current('year')}\r\n  const lastMonth = getNext(thisMonth, 'previous', 'month')\r\n  const isThisMonth = date.month==thisMonth.month && date.year==thisMonth.year\r\n  const isLastMonth = date.month==lastMonth.month && date.year==lastMonth.year\r\n  if (isThisMonth) return `Esse mês, ${date.year}`\r\n  else if (isLastMonth) return `Mês passado, ${date.year}`\r\n  else return `Mês ${date.month}, ${date.year}`\r\n}","import { Platform, Dimensions, StatusBar } from 'react-native';\r\nimport * as Device from 'expo-device';\r\n\r\nconst isWindowsBroswer = Platform.OS=='web' & (Device.osName!='iOS' & Device.osName!='Android')\r\nconst screenWidth = Dimensions.get('screen').width\r\nconst screenHeight = Dimensions.get('screen').height\r\n\r\nexport function relativeToScreen(size, axis='width') {\r\n    if (typeof(size)=='string') {\r\n        return parseInt(size.slice(0, size.length-1)) / 100 * ( axis=='width' ? screenWidth : screenHeight )\r\n    } else {\r\n        return isWindowsBroswer ? size : size * ( axis=='width' ? screenWidth/392.72 : screenHeight/850.9 )\r\n    }\r\n}\r\n\r\nvar styles = {\r\n    login: {\r\n        mainView: {\r\n            flex: 1,\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n            // paddingHorizontal: Platform.OS != 'web' ? '5%' : '5%',\r\n            paddingTop: StatusBar.currentHeight,\r\n        },\r\n        titleView: {\r\n            flexDirection: 'row',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n            minHeight: relativeToScreen(50, 'height'),\r\n        },\r\n        title: {\r\n            // width: '70%',\r\n            textAlign: 'center',\r\n            fontSize: relativeToScreen(30),\r\n            fontWeight: 'bold',\r\n            color: 'white',\r\n            alignSelf: 'center',\r\n        },\r\n        titleIcon: {\r\n            width: relativeToScreen(30),\r\n            height: relativeToScreen(30),\r\n            marginLeft: relativeToScreen(6),\r\n            paddingTop: relativeToScreen(3),\r\n        },\r\n        card: {\r\n            height: relativeToScreen(440),\r\n            minHeight: relativeToScreen(430),\r\n            width: relativeToScreen(350),\r\n            paddingHorizontal: relativeToScreen(10),\r\n            paddingVertical: relativeToScreen(10),\r\n            borderWidth: relativeToScreen(4),\r\n            borderRadius: relativeToScreen(10),\r\n            borderColor: 'rgba(0,0,0,0.1)',\r\n            justifyContent: 'space-between',\r\n            backgroundColor: 'azure',\r\n        },\r\n        cardHeader: {\r\n            height: '21.42%',\r\n            width: '100%',\r\n            justifyContent: 'center'\r\n            // borderWidth: 1\r\n        },\r\n        cardTitle: {\r\n            position: 'relative',\r\n            left: relativeToScreen(5),\r\n            fontSize: relativeToScreen(24),\r\n            fontWeight: 'bold',\r\n            color: 'black',\r\n        },\r\n        cardSection: {\r\n            height: '20.5%',\r\n            justifyContent: 'space-between',\r\n            alignItems: 'center',\r\n            // borderWidth: 1\r\n        },\r\n        loadingIcon: {\r\n            alignSelf: 'center'\r\n        },\r\n        inputField: {\r\n            // minHeight: 40,\r\n            height: '47%',\r\n            width: '100%',\r\n            paddingLeft: relativeToScreen(10),\r\n            fontSize: relativeToScreen(14),\r\n            borderWidth: 1,\r\n            borderRadius: relativeToScreen(5),\r\n            borderColor: 'rgba(0,0,0,0.1)',\r\n            backgroundColor: 'white'\r\n        },\r\n        button: {\r\n            height: '29%',\r\n            width: '100%',\r\n            textAlign: 'center',\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n            borderWidth: 1,\r\n            borderRadius: 5,\r\n            borderColor: 'rgba(0,0,0,0)',\r\n            backgroundColor: 'lightblue',        \r\n        },\r\n        buttonLabel: {\r\n            fontSize: relativeToScreen(15),\r\n            fontWeight: 'bold',\r\n            color: 'black',\r\n        },\r\n        text: {\r\n            fontSize: relativeToScreen(15),\r\n            textAlign: 'center',\r\n        },\r\n        msgBox: {\r\n            width: relativeToScreen(300),\r\n            paddingVertical: relativeToScreen(5),\r\n            paddingHorizontal: relativeToScreen(3),\r\n            marginBottom: relativeToScreen(3),\r\n            justifyContent: 'center',\r\n            backgroundColor: 'rgb(30,30,30)',\r\n            borderWidth: 1,\r\n            borderColor: 'rgb(40,40,40)',\r\n            \r\n        },\r\n        msg: {\r\n            textAlign: 'center',\r\n            color: 'white',\r\n            // paddingHorizontal: 20,\r\n        },\r\n    }\r\n};\r\nexport default styles;","// import { StatusBar } from 'expo-status-bar';\r\nimport { Platform, StatusBar } from 'react-native';\r\nimport { relativeToScreen } from './loginStyles';\r\n\r\nvar styles = {\r\n    mainView: {\r\n        flex: 1,                 \r\n        paddingTop: StatusBar.currentHeight,\r\n        paddingBottom: relativeToScreen(55)\r\n    },\r\n    scrollView: {\r\n        flex: 1,\r\n    },\r\n    header: {\r\n        height: relativeToScreen(120),\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    navigationRow: {\r\n        height: relativeToScreen(60),\r\n        justifyContent: 'space-between',\r\n        alignItems: 'flex-start'\r\n    },\r\n    section: {\r\n        width: relativeToScreen(350),\r\n        paddingBottom: '16%',\r\n        borderBottomWidth: 1,\r\n        borderColor: '#fff3',\r\n        alignSelf: 'center',\r\n    },\r\n    sectionHeader: {\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        height: relativeToScreen(100)\r\n    },\r\n    sectionTitle: {\r\n        fontSize: relativeToScreen(25),\r\n        color: 'white',\r\n        // fontWeight: '400',   \r\n    },\r\n    card: {\r\n        marginBottom: '5%',\r\n        paddingVertical: relativeToScreen(5),\r\n        paddingHorizontal: relativeToScreen(10),\r\n        borderRadius: relativeToScreen(20),\r\n        backgroundColor: 'rgba(0,0,0,0.3)',\r\n    },\r\n    cardRow: {\r\n        flexDirection: 'row',\r\n        paddingVertical: relativeToScreen(5),\r\n        alignItems: 'center',\r\n    },\r\n    postButton: {\r\n        position: 'absolute',\r\n        height: relativeToScreen(59),\r\n        width: relativeToScreen(59),\r\n        borderRadius: relativeToScreen(30),\r\n        bottom: relativeToScreen(25 + 55),\r\n        // bottom: '2%',\r\n        alignSelf: 'center',\r\n        backgroundColor: 'rgba(0,0,0,1)',\r\n        justifyContent: 'center',\r\n    },\r\n    postButtonLabel: {\r\n        alignSelf: 'center',\r\n    },\r\n    moodBadge: {\r\n        height: Platform.OS=='web' ? null : relativeToScreen(30),\r\n        paddingVertical: Platform.OS=='web' ? 5 : null,\r\n        borderRadius: relativeToScreen(30),\r\n        width: relativeToScreen(130),\r\n        fontSize: relativeToScreen(15),\r\n        textAlign: 'center',\r\n        textAlignVertical: 'center'\r\n    },\r\n    moodHeaderItem: {\r\n        height: relativeToScreen(30),\r\n        alignItems: 'flex-end',\r\n        justifyContent: 'center',\r\n    },\r\n    emotionBadge: {\r\n        // fontFamily: 'sans-serif',\r\n        height: Platform.OS=='web' ? null : relativeToScreen(29),\r\n        backgroundColor: '#f4f3f4',\r\n        borderRadius: relativeToScreen(14.5),\r\n        paddingVertical: Platform.OS=='web' ? 5 : null,\r\n        paddingHorizontal: relativeToScreen(12.5),\r\n        marginRight: relativeToScreen(6),\r\n        fontSize: relativeToScreen(14),\r\n        textAlign: 'center',\r\n        textAlignVertical: 'center',\r\n    },\r\n    textBadge: {\r\n        backgroundColor: 'aliceblue',\r\n        borderRadius: relativeToScreen(17),\r\n        paddingTop: relativeToScreen(5),\r\n        paddingBottom: relativeToScreen(8),\r\n        paddingHorizontal: relativeToScreen(11),\r\n        width: '100%',\r\n        fontSize: relativeToScreen(15),\r\n        lineHeight: relativeToScreen(22),\r\n        textAlign: 'left',\r\n        textAlignVertical: 'top',\r\n},\r\n    text: {\r\n        // fontFamily: 'sans-serif',\r\n        fontSize: relativeToScreen(14),\r\n        color: 'white'\r\n    },\r\n    spaceBetween: {\r\n        justifyContent: 'space-between',\r\n    },\r\n    icon: {\r\n        paddingHorizontal: relativeToScreen(12),\r\n    },\r\n    entryIcon: {\r\n        paddingRight: 0,\r\n        borderWidth: 1,\r\n    },\r\n    editButtonsView: {\r\n        flexDirection: 'row',\r\n        height: relativeToScreen(50),\r\n        paddingBottom: relativeToScreen(5),\r\n        alignItems: 'flex-end',\r\n        justifyContent: 'space-between'\r\n    },\r\n    editButton: {\r\n        height: relativeToScreen(34),\r\n        width: relativeToScreen(102),\r\n        borderWidth: 1,\r\n        borderColor: 'aliceblue',\r\n        borderRadius: relativeToScreen(17),\r\n        alignItems: 'center',\r\n        justifyContent: 'center'\r\n    },\r\n    editButtonLabel: {\r\n        fontSize: relativeToScreen(15),\r\n        fontWeight: '400',\r\n        color: 'white',\r\n    },\r\n    msgBox: {\r\n        position: 'absolute',\r\n        alignSelf: 'center',\r\n        bottom: relativeToScreen(110),\r\n        width: relativeToScreen(300),\r\n        paddingVertical: relativeToScreen(10),\r\n        paddingHorizontal: relativeToScreen(10),\r\n        // height: 36,\r\n        justifyContent: 'center',\r\n        backgroundColor: 'rgb(30,30,30)',\r\n        borderWidth: 1,\r\n        borderColor: 'rgb(40,40,40)',\r\n    },\r\n    msg: {\r\n        textAlign: 'center',\r\n        color: 'white',\r\n        // paddingHorizontal: 20,\r\n    },\r\n};\r\n\r\nexport default styles;","// Module import\r\nimport React, { Component, useState } from 'react';\r\nimport { Platform, View, Text, Pressable, Image, ActivityIndicator } from 'react-native';\r\nimport { Icon } from 'react-native-eva-icons'\r\nimport { relativeToScreen } from '../../styles/loginStyles';\r\n\r\n// Local import\r\nimport styles from '../../styles/entrancesStyles'\r\nstyles.theme = {}; styles.altTheme = {}; \r\n\r\nconst appServerURI = 'https://mood-tracker-server.herokuapp.com/'\r\n\r\n// OpenWeatherMap API weather icons URI:\r\nfunction openWeatherMapIconsURI (icon) {\r\n    if (Platform.OS === 'android') {\r\n        return `http://openweathermap.org/img/wn/${icon}@2x.png`\r\n\r\n    } else if (Platform.OS === 'web') {\r\n        return `https://openweathermap.org/img/wn/${icon}@2x.png`\r\n    }\r\n}\r\n\r\n// Defining mood colors schema\r\nconst moodColors = {'Horrível': '#ff3333', 'Mal': '#0099cc', 'Regular': '#add8e6', 'Bem': '#ffff33', 'Ótimo': '#00cc00'};\r\n\r\nconst monthDict = {'Jan': '01', 'Feb': '02', 'Mar': '03', 'Apr': '04', 'May': '05', 'Jun': '06', 'Jul': '07', 'Ago': '08', 'Sep': '09', 'Oct': '10', 'Nov': '11', 'Dec': '12'}\r\nfunction Today() {\r\n    const now = Date().toString().split(' ')\r\n    const today = [ now[3], monthDict[now[1]], now[2] ].join('-')\r\n    return today\r\n}\r\n\r\nfunction MoodHeader({entry}) {\r\n    return(\r\n        <View style={ [styles.cardRow, styles.spaceBetween] }>\r\n            <View style={ [{flexDirection: 'row', alignItems: 'flex-start'} ] }>\r\n            <Text style={[styles.moodBadge, {backgroundColor: moodColors[entry.mood]}]}>{entry.mood}</Text>\r\n                    { entry.star ? (\r\n                    <View style={[styles.moodHeaderItem, {width: relativeToScreen(42)}]}>\r\n                        <Icon name='star' fill='gold' width={relativeToScreen(28)} height={relativeToScreen(28)} />\r\n                    </View>\r\n                    ) : null }                    \r\n                    { entry.weather ? (\r\n                        <View style={[styles.moodHeaderItem, {width: relativeToScreen(50)}]}>\r\n                            <Image\r\n                            source={{uri: openWeatherMapIconsURI(entry.weather.weather.icon)}}\r\n                            style={{width: relativeToScreen(40), height: relativeToScreen(40)}}\r\n                            />\r\n                        </View>\r\n                    ) : null }                    \r\n                    { entry.weather ? (\r\n                        <View style={[styles.moodHeaderItem, {width: relativeToScreen(35)}]}>\r\n                            <Text style={[styles.theme, {fontSize: relativeToScreen(14)}]}>\r\n                                { entry.weather.main.temp.toString().slice(0,2) + '°C' }\r\n                            </Text>\r\n                        </View>\r\n                    ) : null }                \r\n                \r\n            </View>\r\n            <View style={[styles.cardRow]}>\r\n                <Icon name='edit' height={relativeToScreen(18)} width={relativeToScreen(18)} fill='rgba(255,255,255,0.75)' style={{marginRight: relativeToScreen(6)}} />\r\n                <Text style={styles.text}>{entry.startTime.slice(0,5)}</Text>\r\n            </View>\r\n        </View>\r\n\r\n    )\r\n}\r\n\r\nfunction Address ({entry}) {\r\n    const [isCollapsed, setIsCollapsed] = useState( 1 );\r\n    if (entry.address) {\r\n        return(\r\n            <View style={styles.cardRow}>\r\n                <Text numberOfLines={ isCollapsed } onPress={ () => { setIsCollapsed( isCollapsed ? 0 : 1 ) }} style={styles.text}>\r\n                    <Icon name='pin' height={relativeToScreen(17)} width={relativeToScreen(17)} fill='rgba(255,255,255,0.75)' style={{position: 'relative', marginRight: relativeToScreen(5), top: relativeToScreen(2)}} />\r\n                    {entry.address}\r\n                </Text>\r\n            </View>        \r\n        )\r\n    } else {\r\n        return <></>\r\n    }\r\n}\r\n\r\nfunction Emotions ({entry}) {\r\n    if (entry.emotions.length > 0) {\r\n        return (\r\n            <View style={[styles.cardRow, {flexWrap: 'wrap', justifyContent: 'flex-start', paddingTop: 2, PaddingBottom: 0}]}>\r\n                { entry.emotions.map((emotion, index) => {\r\n                    if (emotion.name) {\r\n                        emotion = emotion.name\r\n                    }\r\n                    return(\r\n                        <View\r\n                        key={'emotion-' + emotion}\r\n                        style={{paddingVertical: relativeToScreen(5), paddingHorizontal: relativeToScreen(2)}}\r\n                        >\r\n                            <Text style={[styles.emotionBadge]}>{emotion}</Text>\r\n                        </View>\r\n                    )\r\n                })}\r\n            </View>\r\n        )\r\n    } else {\r\n        return (\r\n            <></>\r\n        )\r\n    }\r\n}\r\n\r\nfunction Jornal({ entry }) {\r\n    if (entry.jornal) {\r\n        return(\r\n            <View style={styles.cardRow}>\r\n                <Text style={styles.textBadge}>\r\n                    <Icon\r\n                    name='book-open'\r\n                    height={relativeToScreen(20)}\r\n                    width={relativeToScreen(20)}\r\n                    fill='rgba(0,0,0,0.25)'\r\n                    style={{position: 'relative', top: relativeToScreen(4), left: 1, marginRight: relativeToScreen(6)}}\r\n                    />\r\n                    {entry.jornal}\r\n                </Text>\r\n            </View>\r\n        )\r\n    } else {\r\n        return <></>\r\n    }\r\n}\r\n\r\nfunction EmptyCard(props) {\r\n    const today = props.parentState.selectedDate == Today()\r\n    const navigateParams = {\r\n        currentEntry: {\r\n            type: today ? 'new' : 'custom-date',\r\n            date: props.parentState.selectedDate,\r\n            entry: null\r\n        },\r\n        // setMainScreenState: props.setMainScreenState,\r\n        // getMainScreenState: props.getMainScreenState,\r\n\r\n    }\r\n    const textStyle = [{fontSize: relativeToScreen(16), textAlign: 'center', marginTop: relativeToScreen(7)}, styles.theme]\r\n    return (\r\n        <Pressable\r\n        onPress={ () => props.parentProps.navigation.navigate('PostEntrance', navigateParams) }\r\n        style={[styles.card, {alignItems: 'center', justifyContent: 'center', fontSize: relativeToScreen(16), height: relativeToScreen(145)}]}\r\n        >\r\n            <Icon name='inbox' fill='rgba(255,255,255,0.3)' width={relativeToScreen(25)} height={relativeToScreen(25)} />\r\n            <Text style={textStyle}> Nenhuma entrada encontrada. </Text>\r\n            <Text style={textStyle}> Pressione aqui para adicionar uma a este dia! </Text>\r\n        </Pressable>\r\n    );\r\n}\r\n\r\nfunction CardsLoadingMessage() {\r\n    return(\r\n        <View style={[styles.card, {alignItems: 'center', justifyContent: 'center', height: relativeToScreen(85)}]}>\r\n            <Icon name='sync-outline' fill='rgba(255,255,255,1)' width={relativeToScreen(25)} height={relativeToScreen(25)} />\r\n            <Text style={[styles.theme, {marginTop: relativeToScreen(10), fontSize: relativeToScreen(16)}]}>Sincronizando entradas...</Text>\r\n        </View>\r\n    )\r\n}\r\n\r\nexport default class UserEntryCards extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n        \r\n        this.EntryCard = this.EntryCard.bind(this);\r\n        this.EditEntryButtons = this.EditEntryButtons.bind(this);\r\n        this.editUserEntry = this.editUserEntry.bind(this);\r\n        this.deleteUserEntry = this.deleteUserEntry.bind(this);\r\n        this.setFontColor = this.setFontColor.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log('Subcomponent \"UserEntryCards\" did mount...')\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        console.log('\"UserEntryCards\" sub-component will unmount...')\r\n      }\r\n    \r\n    EntryCard({ entry, lastCard }) {\r\n        function onEntryCardPress() {\r\n            this.props.parentProps.navigation.setParams({ selectedEntryId: this.props.parentState.selectedEntryId === entry._id ? null : entry._id })\r\n        }\r\n        return (\r\n        <Pressable\r\n        onPress={onEntryCardPress.bind(this)}\r\n        style={[styles.card, {marginBottom: lastCard ? 0 : styles.card.marginBottom }]}>\r\n            <MoodHeader entry={entry} />\r\n            <Emotions entry={entry} />\r\n            <Address entry={entry} />\r\n            <Jornal entry={entry} />\r\n            <this.EditEntryButtons entryId={entry._id} />\r\n        </Pressable>\r\n        );\r\n    }\r\n\r\n    UserEntryCardsList() {\r\n        const selDateEntries = this.props.parentState.user.entries.filter( entry => entry.date === this.props.parentState.selectedDate ).reverse()\r\n        // console.log('LOGGING USER ENTRIES:')\r\n        // console.log(selDateEntries)\r\n        if (selDateEntries.length) {\r\n            return(\r\n                <>\r\n                    { this.props.parentState.isUserDataSyncing ? <CardsLoadingMessage /> : null }\r\n                    { selDateEntries.map( entry => <this.EntryCard key={'entry-card-'+entry.startTime} entry={entry} />) }\r\n                </>\r\n            )\r\n        } else if (this.props.parentState.isUserDataSyncing) {\r\n            return <CardsLoadingMessage />\r\n            \r\n        } else {\r\n            return <EmptyCard {...this.props} />\r\n        }\r\n    }\r\n\r\n    EditEntryButtons(props) {\r\n        const buttonLabels = ['Editar', 'Excluir']\r\n        const onButtonPress = {\r\n            'Editar': this.editUserEntry,\r\n            'Excluir': () => {this.props.setAlertMsg('Pressione e segure para excluir uma entrada.')}\r\n        }\r\n        const onButtonLongPress = { 'Editar': () => {}, 'Excluir': this.deleteUserEntry }\r\n\r\n        const [isButtonPressed, setIsButtonPressed] = useState({\r\n            'Editar': false,\r\n            'Excluir': false,\r\n        })\r\n\r\n        function highlightButtonFor(label) {\r\n            function highlightButton() {\r\n                setIsButtonPressed({ ...isButtonPressed, [label]: !isButtonPressed[label] })\r\n            }\r\n            return highlightButton.bind(this);\r\n        }\r\n\r\n        const isLoading = this.props.parentState.isDeleteLoading | this.props.parentState.isUserDataSyncing\r\n        const buttonLabel = (label) => <Text selectable={false} style={[styles.editButtonLabel, {color: label=='Excluir' ? 'red' : styles.theme.color }]}>{label}</Text>\r\n        if (this.props.parentState.selectedEntryId == props.entryId) {\r\n            return(\r\n                <View style={styles.editButtonsView}>\r\n                    { buttonLabels.map( (label) => (\r\n                        <Pressable\r\n                        key={`edit-${label}-${props.entryId}`}\r\n                        style={[ styles.editButton, {\r\n                            backgroundColor: isButtonPressed[label] ? styles.theme.color + '4' : '#0000',\r\n                            borderColor: label=='Excluir' ? 'red' : styles.theme.color\r\n                        }]}\r\n                        disabled={ isLoading }\r\n                        onPress={ () => {highlightButtonFor(label)(); onButtonPress[label]()} }\r\n                        onPressIn={highlightButtonFor(label)}\r\n                        onLongPress={() => {highlightButtonFor(label)(); onButtonLongPress[label]()}}\r\n                        >\r\n                            { label=='Excluir' ? (\r\n                                this.props.parentState.isDeleteLoading ? <ActivityIndicator color='red' /> : buttonLabel(label)\r\n                                \r\n                            ) : buttonLabel(label) }\r\n                                                \r\n                        </Pressable>\r\n                    )) }\r\n            </View>\r\n            )\r\n        } else {\r\n            return null\r\n        }\r\n    }\r\n\r\n    editUserEntry() {\r\n        const selectedEntry = this.props.parentState.user.entries.filter( (entry) => entry._id == this.props.parentState.selectedEntryId )[0]\r\n        const navigateParams = {\r\n            currentEntry: {\r\n                type: 'edit',\r\n                date: selectedEntry.date,\r\n                entry: selectedEntry\r\n            },\r\n            // setMainScreenState: this.props.setMainScreenState,\r\n            // getMainScreenState: this.props.getMainScreenState,\r\n    \r\n        }\r\n        this.props.parentProps.navigation.navigate('PostEntrance', navigateParams)\r\n    }\r\n\r\n    async deleteUserEntry() {\r\n\r\n        console.log('DELETE USER ENTRY STATUS: Started...')\r\n        this.props.setMainScreenState({ isDeleteEntryLoading: true });\r\n\r\n        try {\r\n            var UsersResult = {ok: false, status: 999}\r\n            const parentState = this.props.parentState\r\n            const deleteEntryURI = appServerURI + 'Users/' + parentState.user.username + '/entries/' + parentState.selectedEntryId\r\n            UsersResult = await fetch( deleteEntryURI, { method: 'DELETE' });\r\n            // var UsersResult = await fetch( 'https://localhost:3000/' + 'Users/' + this.props.parentState.user.username + '/entries/' + this.props.parentState.selectedEntryId, { method: 'DELETE' });\r\n            const usersStatus =  'Status ' + UsersResult.status + ', ' + UsersResult.statusText\r\n\r\n            if (UsersResult.ok) {\r\n                // const users = await UsersResult.json();\r\n                console.log('fetch DELETE request for user entry successful.')\r\n                console.log(usersStatus)\r\n                console.log('DELETE USER ENTRY STATUS: Successful.')\r\n\r\n            } else {\r\n                console.log( new Error('\"fetch\" DELETE request for user entry failed. Throwing error...') )\r\n                throw new Error(usersStatus)\r\n            }\r\n    \r\n        } catch (error) {\r\n                console.log('DELETE USER ENTRY STATUS: Error captured. Printing error...')\r\n                console.log(error);\r\n                this.props.setAlertMsg('Não foi possível deletar a entrada. Tente novamente.')\r\n\r\n        } finally {\r\n            this.props.setMainScreenState({ isDeleteEntryLoading: false });\r\n            // this.props.setMainScreenState({ selectedEntryId: null })\r\n            console.log('DELETE USER ENTRY STATUS: FINISHED.' + UsersResult.ok ? 'Proceeding to sync user entries...' : 'Delete failed, skipping sync of user entries...')\r\n            if (UsersResult.ok) {\r\n                await this.props.syncUserData();\r\n                this.props.parentProps.navigation.setParams({ selectedEntryId: null })\r\n            }\r\n        }    \r\n    }\r\n\r\n    setFontColor() {\r\n        const fontColorDark = this.props.parentState.user.settings.fontColorDark\r\n        const fontColor = fontColorDark ? '#000' : '#fff'\r\n        const altFontColor = fontColorDark ? '#fff' : '#000'\r\n        for (let style of ['theme', 'text']) {\r\n            styles[style] = { ...styles[style], color: fontColor }\r\n        }\r\n        styles.altTheme.color = altFontColor\r\n        styles.altTheme.backgroundColor = altFontColor\r\n    }\r\n\r\n    render() {\r\n        console.log('\"Rendering \"UserEntryCards\" sub-component...\"')\r\n        this.setFontColor()\r\n        return this.UserEntryCardsList()\r\n    }\r\n}","// Module imports\r\nimport React, { Component } from 'react';\r\nimport { View, Text, ImageBackground, Pressable, ScrollView, ActivityIndicator } from 'react-native';\r\nimport { Icon } from 'react-native-eva-icons'\r\nimport { relativeToScreen } from '../styles/loginStyles';\r\nimport { Today, formatDate, getNextDate, oneDigit } from '../shared/dates';\r\n\r\n\r\n// Component imports\r\nimport UserEntryCards from './subcomponents/UserEntryCards';\r\n\r\n// Local imports\r\nimport styles  from '../styles/entrancesStyles';\r\n\r\n// Defining pertinent constants\r\nfunction getTime() {\r\n    //Wed,Jan,26,2022,15:12:37,GMT-0300,(Horário,Padrão,de,Brasília)\r\n    const now = Date().toString().split(' ')\r\n    const time = now[4]\r\n    return time\r\n}\r\n\r\nexport default class EntrancesScreen extends Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {            \r\n            date: Today(),\r\n            time: getTime(),\r\n            isDeleteEntryLoading: false,\r\n            alertMsg: '',\r\n        };\r\n        this.onNextButtonPress = this.onNextButtonPress.bind(this);\r\n        this.setFontColor = this.setFontColor.bind(this);\r\n        this.setAlertMsg = this. setAlertMsg.bind(this);\r\n        this.getMainScreenState = this.getMainScreenState.bind(this); // remove\r\n    }\r\n    \r\n    componentDidMount() {\r\n        console.log('\"Entries\" screen component did mount...')\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        console.log('\"EntriesScreen\" component will unmount...')\r\n    }\r\n\r\n    getMainScreenState() {\r\n        return this.state\r\n    }\r\n\r\n    setAlertMsg(msg) {\r\n        this.setState({alertMsg: msg})\r\n        setTimeout( () => this.setState({alertMsg: ''}) , 1000 * 5 )\r\n    }\r\n    \r\n    alertMsg() {\r\n        return(\r\n            <View style={[styles.msgBox, this.state.alertMsg ? {} : {height: null, backgroundColor: 'transparent', borderColor: 'transparent'} ]}>\r\n                <Text style={styles.msg}>{this.state.alertMsg}</Text>\r\n            </View>\r\n        )\r\n    }\r\n\r\n    onNextButtonPress(next='next') {\r\n        function setSelectedDate() {\r\n            this.props.navigation.setParams({\r\n                selectedEntryId: null,\r\n                selectedDate: getNextDate(this.props.route.params.selectedDate, next),\r\n            })\r\n        }\r\n        return setSelectedDate.bind(this);\r\n    }\r\n\r\n    DateNavigationButton = ({next}) => {\r\n        return(\r\n            <Pressable onPress={this.onNextButtonPress(next)} hitSlop={relativeToScreen(15)} >\r\n                <Icon name={ next=='next' ? 'arrow-forward' : 'arrow-back'} width={relativeToScreen(29)} height={relativeToScreen(29)} fill={styles.theme.color} />\r\n            </Pressable>\r\n        )\r\n    }\r\n\r\n    setFontColor() {\r\n        const fontColor = this.props.appState.user.settings.fontColorDark ? '#000' : '#fff'\r\n        styles.theme = {color: fontColor}\r\n    }\r\n\r\n    render() {\r\n        console.log('Rendering \"EntriesScreen\" component...')\r\n\r\n        this.setFontColor()\r\n        const navigateParams = {\r\n            currentEntry: {type: 'new', date: Today(), entry: null},\r\n        }\r\n        const isLoading = this.props.appState.isUserDataSyncing | this.state.isDeleteEntryLoading\r\n        const settings = this.props.appState.user.settings\r\n        const backgroundImage = settings.backgroundImage\r\n        const imgURI =  settings.displayBackgroundImage ? (backgroundImage ? ( settings.enableHighResolution ? backgroundImage.urls.raw : backgroundImage.urls.regular ) : null ) : null\r\n        const backgroundColor = settings.backgroundColor\r\n\r\n        return(\r\n            <ImageBackground source={{uri: imgURI}} style={[styles.mainView, {backgroundColor: backgroundColor}]}>\r\n                \r\n                <ScrollView style={styles.scrollView}>\r\n                        <View style={[styles.header]}>\r\n                            <Text style={[styles.sectionTitle, styles.theme]}>{ 'Entradas' }</Text>                                \r\n                        </View>\r\n                    <View style={styles.section}>\r\n                        <View style={[styles.cardRow, styles.navigationRow, {paddingVertical: 0}]}>\r\n                            <this.DateNavigationButton icon='arrow-back' next='previous' />\r\n                            <Text style={[{fontSize: relativeToScreen(20), }, styles.theme]}> { formatDate(this.props.route.params.selectedDate)} </Text>                                \r\n                            <this.DateNavigationButton icon='arrow-forward' next='next' />\r\n                        </View>\r\n                        <UserEntryCards\r\n                        parentState={{\r\n                            selectedDate: this.props.route.params.selectedDate,\r\n                            selectedEntryId: this.props.route.params.selectedEntryId,\r\n                            user: this.props.appState.user,\r\n                            isUserDataSyncing: this.props.appState.isUserDataSyncing,\r\n                            isDeleteEntryLoading: this.state.isDeleteEntryLoading,\r\n                        }}\r\n                        parentProps={{\r\n                            navigation: this.props.navigation\r\n                        }}\r\n                        syncUserData={this.props.appState.syncUserData}\r\n                        setMainScreenState ={this.setState.bind(this)}\r\n                        getMainScreenState={this.getMainScreenState}\r\n                        setAlertMsg = {this.setAlertMsg}\r\n                        />\r\n                    </View>\r\n                </ScrollView>\r\n\r\n                <Pressable\r\n                onPress={() => {this.props.navigation.navigate( 'PostEntrance', navigateParams )}}\r\n                style={[styles.postButton, {backgroundColor: isLoading ? 'white' : 'black'}]}\r\n                disabled={isLoading}\r\n                >\r\n                { this.props.appState.isUserDataSyncing ? (\r\n                        <ActivityIndicator color='black' size={'large'} />\r\n                ) : (\r\n                    this.state.isDeleteEntryLoading ? (\r\n                        <ActivityIndicator color='red' size={'large'} />\r\n                    ) : (\r\n                        <Icon name='plus-circle' width={relativeToScreen(72)} height={relativeToScreen(72)} fill='#f4f3f4' style={styles.postButtonLabel}/>\r\n                    )\r\n                )}\r\n                </Pressable>\r\n\r\n                {this.alertMsg()}\r\n  \r\n            </ImageBackground>\r\n            )\r\n    }\r\n  }\r\n","import { Platform, StatusBar } from 'react-native';\r\nimport { relativeToScreen } from './loginStyles';\r\n\r\nconst styles = {\r\n  login: {\r\n    msgBox: {\r\n      position: 'absolute',\r\n      bottom: '10%',\r\n      width: relativeToScreen(300),\r\n      paddingHorizontal: 3,\r\n      paddingVertical: 5,\r\n      alignSelf: 'center',\r\n      justifyContent: 'center',\r\n      backgroundColor: 'rgb(30,30,30)',\r\n      borderWidth: 1,\r\n      borderColor: 'rgb(40,40,40)',\r\n    },\r\n    msg: {\r\n        textAlign: 'center',\r\n        color: 'white',\r\n    },\r\n  },\r\n  mainView: {\r\n    flex: 1,                 \r\n    paddingTop: StatusBar.currentHeight,\r\n    // paddingBottom: relativeToScreen(55),\r\n  },\r\n  entrances: {\r\n    marginTop: StatusBar.currentHeight,\r\n    borderWidth: 0,\r\n    flex:1,\r\n    justifyContent: 'space-between',\r\n    alignItems: 'flex-start',\r\n  },\r\n  scrollView: {\r\n    // paddingHorizontal: Platform.OS != 'web' ? '5%' : '5%',\r\n    width: '100%',\r\n    alignSelf: 'center',\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    paddingBottom: '0%',\r\n    paddingHorizontal: '5%',\r\n    alignSelf: 'stretch',\r\n    borderColor: 'black',\r\n  },\r\n  section: {\r\n    width: relativeToScreen(350),\r\n    // width: 350,\r\n    paddingVertical: '16%',\r\n    borderBottomWidth: 1,\r\n    borderColor: 'rgba(155,155,155,0.3)',\r\n    alignSelf: 'center',\r\n  },\r\n  // contentRow: {\r\n  //   flexDirection: 'column',\r\n  //   padding: 10,\r\n  //   marginTop: 22,\r\n  //   borderWidth: 1,\r\n  //   borderColor: 'rgba(155,155,155, 0.4)',\r\n  //   borderRadius: 30,\r\n  //   backgroundColor: 'rgba(255,255,255, 0.3)',\r\n\r\n  // },\r\n  entryTitle: {\r\n    paddingVertical: relativeToScreen(3),\r\n    paddingLeft: relativeToScreen(4),\r\n    fontSize: relativeToScreen(19),\r\n    color: '#fff',\r\n  },\r\n  entryIcon: {\r\n    paddingRight: 0,\r\n  },\r\n  // postButtonView: {\r\n  //   height: 60,\r\n  //   width: 60,\r\n  //   borderRadius: 30,\r\n  //   alignSelf: 'center',\r\n  //   justifyContent: 'center',\r\n  //   alignItems: 'center',\r\n  //   backgroundColor: 'white',\r\n  // },\r\n  // postButtonLabel: {\r\n  //   fontSize: 45,\r\n  //   fontWeight: 'bold',\r\n  // },\r\n  // moodButtonView: {\r\n  //   width: 65,\r\n  //   height: 65,\r\n  //   alignItems: 'center',\r\n  //   justifyContent: 'center',\r\n  //   borderWidth: 1,\r\n  // },\r\n  moodButton: {\r\n    width: relativeToScreen(65),\r\n    height: relativeToScreen(65),\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  // date: {\r\n  //   position: 'relative',\r\n  //   left: '60%',\r\n  //   paddingVertical: 8,\r\n  //   paddingHorizontal: 10,\r\n  //   fontSize: 15,\r\n  //   alignSelf: 'center',\r\n  //   backgroundColor: 'white',\r\n  //   borderRadius: 20\r\n  // },\r\n  jornalText: {\r\n    paddingVertical: 5,\r\n    paddingHorizontal: relativeToScreen(12),\r\n    flex: 1,\r\n    textAlignVertical: 'top',\r\n    width: '100%',\r\n    borderRadius: relativeToScreen(20),\r\n    color: 'white',\r\n    fontSize: 16,\r\n  },\r\n  saveButton: {\r\n    height: relativeToScreen(50),\r\n    width: '100%',\r\n    borderTopLeftRadius: relativeToScreen(25),\r\n    borderTopRightRadius: relativeToScreen(25),\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundColor: 'white'\r\n  },\r\n  saveButtonLabel: {\r\n    fontWeight:'bold',\r\n    fontSize: relativeToScreen(19)\r\n  },\r\n  card: {\r\n    marginTop: '5%',\r\n    paddingVertical: relativeToScreen(5),\r\n    paddingHorizontal: relativeToScreen(10),\r\n    borderRadius: relativeToScreen(20),\r\n    backgroundColor: 'rgba(0,0,0,0.2)',\r\n  },\r\n  cardRow: {\r\n      flexDirection: 'row',\r\n      paddingVertical: relativeToScreen(5),\r\n      alignItems: 'center',\r\n  },\r\n  // moodBadge: {\r\n  //     backgroundColor: 'green',\r\n  //     borderRadius: relativeToScreen(30),\r\n  //     paddingVertical: relativeToScreen(6),\r\n  //     width: relativeToScreen(130),\r\n  //     fontSize: 16,\r\n  //     textAlign: 'center',\r\n  // },\r\n  emotionBadge: {\r\n      height: Platform.OS=='web' ? null : relativeToScreen(33),\r\n      backgroundColor: 'rgba(1,1,1,0.5)',\r\n      borderRadius: relativeToScreen(30),\r\n      paddingVertical: Platform.OS=='web' ? 5 : null,\r\n      paddingHorizontal: relativeToScreen(12.5),\r\n      fontSize: relativeToScreen(15),\r\n      textAlign: 'center',\r\n      textAlignVertical: 'center',\r\n      marginVertical: relativeToScreen(5),\r\n      marginHorizontal: relativeToScreen(5)\r\n  },\r\n  entryCardEmotionBadge: {\r\n    height: relativeToScreen(35),\r\n    backgroundColor: 'aliceblue',\r\n    borderRadius: relativeToScreen(32.5),\r\n    // paddingVertical: 7,\r\n    paddingHorizontal: relativeToScreen(12.5),\r\n    marginRight: relativeToScreen(6),\r\n    fontSize: relativeToScreen(15),\r\n    textAlign: 'center',\r\n    textAlignVertical: 'center',\r\n  },\r\n  datetimeTitle: {\r\n    fontSize: relativeToScreen(16),\r\n    marginRight: relativeToScreen(3),\r\n  },\r\n  editButtonsView: {\r\n    flexDirection: 'row',\r\n    height: relativeToScreen(55),\r\n    paddingVertical: relativeToScreen(5),\r\n    alignItems: 'flex-end',\r\n    justifyContent: 'space-between'\r\n  },\r\n  editButton: {\r\n    height: relativeToScreen(34),\r\n    width: relativeToScreen(102),\r\n    borderWidth: 1,\r\n    borderColor: 'aliceblue',\r\n    borderRadius: relativeToScreen(17),\r\n    alignItems: 'center',\r\n    justifyContent: 'center'\r\n  },\r\n  editButtonLabel: {\r\n      fontSize: relativeToScreen(15),\r\n      fontWeight: '400',\r\n      color: 'white',\r\n  },\r\n}\r\n\r\nexport default styles;","import React, { Component, useState } from 'react';\r\nimport { View, Text,  Pressable, TextInput } from 'react-native';\r\nimport { Icon } from 'react-native-eva-icons'\r\nimport { relativeToScreen } from '../../styles/loginStyles';\r\nimport styles from '../../styles/postEntryStyles'\r\n// import VectorIcon from 'react-native-vector-icons/MaterialCommunityIcons';\r\n\r\nconst appServerURI = 'https://mood-tracker-server.herokuapp.com/'\r\n\r\nexport function capitalize(multipleWordString) {\r\n    var words = multipleWordString.trim().split(' ');\r\n    var CapitalizedWords = [];\r\n    words.forEach(element => {\r\n    CapitalizedWords.push(element[0].toUpperCase() + element.slice(1, element.length));\r\n    });\r\n    return CapitalizedWords.join(' ');\r\n}\r\n\r\nexport default class EditEmotions extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showEditMenu: false,\r\n            showExpandMenuButton: true,\r\n            mode: 'hidden',\r\n            newEmotionName: '',\r\n            selectedEmotionType: null,\r\n            selectedEmotionEnergy: null,\r\n            initialEmotionLayout: null,\r\n        }\r\n        this.EditEmotionsMenu = this.EditEmotionsMenu.bind(this);\r\n        this.EditEmotionsSection = this.EditEmotionsSection.bind(this);\r\n        this.onSaveEmotionButtonPress = this.onSaveEmotionButtonPress.bind(this);\r\n    }\r\n\r\n    EditEmotionsSection() {\r\n\r\n        const emotionTypes = ['Positiva', 'Negativa']\r\n        const emotionEnergy = ['Calmo(a)', 'Energizado(a)']\r\n        const emotionLayoutMap = {\r\n            'Positiva ou Negativa': 'type',\r\n            'Calmo(a) ou Energizado(a)': 'energy',\r\n            'Grade': 'grid',\r\n            'Espalhado': 'spread'\r\n        }\r\n\r\n        const inputSectionStyle = {marginTop: 0, marginTop: 0   , alignItems: 'center'}\r\n        const textStyle = {color: styles.theme.color, fontSize: relativeToScreen(16), alignSelf: 'center', marginBottom: relativeToScreen(8)}\r\n        const inputStyle = {width: '70%', height: relativeToScreen(35), borderRadius: relativeToScreen(15), color: styles.theme.color, backgroundColor: styles.altTheme.color+'8', fontSize: relativeToScreen(15), textAlign: 'center' }\r\n        const tagStyle = {width: '45%', height: relativeToScreen(28), borderRadius: relativeToScreen(14),  marginBottom: relativeToScreen(7), color: 'white', alignItems: 'center', justifyContent: 'center'}\r\n        const createEmotionViewStyle = {height: relativeToScreen(420), marginTop: relativeToScreen(10), paddingTop: relativeToScreen(10), justifyContent: 'space-evenly', borderTopWidth: 1, borderTopColor: 'rgba(255,255,255,0.2)'}\r\n\r\n        const [isButtonPressed, setIsButtonPressed] = useState({\r\n            'Salvar': false,\r\n            'Voltar': false,\r\n            'Terminar': false,\r\n            'Salvar-Layout': false,\r\n            'Voltar-Layout': false\r\n        })\r\n        function highlightButtonFor(label) {\r\n            function highlightButton() {\r\n                setIsButtonPressed({ ...isButtonPressed, [label]: !isButtonPressed[label] })\r\n            }\r\n            return highlightButton.bind(this);\r\n        }\r\n\r\n        const isLoading = (\r\n            this.props.isDeleteEmotionLoading |\r\n            this.props.isSaveEmotionLoading |\r\n            this.props.isPostEntryLoading |\r\n            this.props.appState.isUserDataSyncing |\r\n            this.props.isUpdateUserDataLoading\r\n        )\r\n\r\n        const isNewEmotionFormComplete = !this.state.newEmotionName | !this.state.selectedEmotionType | !this.state.selectedEmotionEnergy\r\n        const unselectedLayout = this.props.selectedEmotionLayout==this.state.initialEmotionLayout\r\n\r\n        switch (this.state.mode) {\r\n\r\n            case 'hidden':\r\n                return null\r\n\r\n            case 'create':\r\n                return(\r\n                    <View style={createEmotionViewStyle}>\r\n                        <Text style={[ styles.theme, {fontSize: relativeToScreen(22), alignSelf: 'center'}]}>Criar emoção</Text>\r\n                        <View style={inputSectionStyle}>\r\n                            <Text style={textStyle}>Nome</Text>\r\n                            <TextInput\r\n                            placeholder='Nome da emoção...'\r\n                            placeholderTextColor={styles.theme.color+'8'}\r\n                            style={inputStyle}\r\n                            onChangeText={text => this.setState({newEmotionName: text})}\r\n                            value={this.state.newEmotionName}\r\n                            />\r\n                        </View>\r\n                        <View style={inputSectionStyle}>\r\n                            <Text style={textStyle}>Tipo</Text>\r\n                            { emotionTypes.map((type) => {\r\n                                const typeSelected = this.state.selectedEmotionType === type\r\n                                return(\r\n                                    <Pressable\r\n                                    key={'emotion-'+type}\r\n                                    onPress={() => this.setState({selectedEmotionType: typeSelected ? null : type })}\r\n                                    style={[tagStyle, { backgroundColor: styles.altTheme.color + (typeSelected ? 'd' : '6') }]}>\r\n                                        <Text style={[{fontSize: relativeToScreen(15)}, styles.theme]}>{type}</Text>\r\n                                    </Pressable>\r\n                                )\r\n                            }) }\r\n                        </View>\r\n                        <View style={inputSectionStyle}>\r\n                            <Text style={textStyle}>Energia</Text>\r\n                            { emotionEnergy.map((type) => {\r\n                                const typeSelected = this.state.selectedEmotionEnergy === type\r\n                                return(\r\n                                    <Pressable\r\n                                    key={'emotion-'+type}\r\n                                    onPress={() => this.setState({selectedEmotionEnergy: typeSelected ? null : type })}\r\n                                    style={[tagStyle, { backgroundColor: styles.altTheme.color + (typeSelected ? 'd' : '6') }]}>\r\n                                        <Text style={[{fontSize: relativeToScreen(15)}, styles.theme]}>{type}</Text>\r\n                                    </Pressable>\r\n                                )\r\n                            }) }\r\n                        </View>\r\n                        <View style={[inputSectionStyle, {flexDirection: 'row', justifyContent: 'space-evenly'}]}>\r\n                            <Pressable\r\n                            onPress={() => {\r\n                                highlightButtonFor('Voltar')()\r\n                                this.setState({showEditMenu: true, showExpandMenuButton: true, mode: 'hidden'})\r\n                                setIsButtonPressed({'Voltar': false})\r\n                            }}\r\n                            onPressIn={highlightButtonFor('Voltar')}\r\n                            disabled={isLoading}\r\n                            style={[styles.editButton, {\r\n                                alignSelf: 'center',\r\n                                backgroundColor: isButtonPressed['Voltar'] ? styles.theme.color+'5' : '#0000',\r\n                                borderColor: isLoading ? styles.theme.color+'5' : styles.theme.color,\r\n                                }]}>\r\n                                <Text style={[styles.editButtonLabel, {color: isLoading ? styles.theme.color+'5' : styles.theme.color}]}>Voltar</Text>\r\n                            </Pressable>\r\n                            <Pressable\r\n                            onPress={() => {\r\n                                highlightButtonFor('Salvar')()\r\n                                this.onSaveEmotionButtonPress()\r\n                                setIsButtonPressed({'Salvar': false})\r\n                            }}\r\n                            onPressIn={highlightButtonFor('Salvar')}\r\n                            disabled={isLoading | isNewEmotionFormComplete}\r\n                            style={[styles.editButton, {\r\n                                alignSelf: 'center',\r\n                                backgroundColor: isButtonPressed['Salvar'] ? styles.theme.color+'5' : '#0000',\r\n                                borderColor: isLoading | isNewEmotionFormComplete ? styles.theme.color+'5' : styles.theme.color,\r\n                                }]}>\r\n                                <Text style={[ styles.editButtonLabel, {\r\n                                    color: isLoading | isNewEmotionFormComplete ? styles.theme.color+'5' : styles.theme.color\r\n                                }]}\r\n                                >\r\n                                {'Salvar'}\r\n                                </Text>\r\n                            </Pressable>\r\n                        </View>\r\n                    </View>\r\n                )\r\n\r\n            case 'delete':\r\n                return(\r\n                    <View style={[createEmotionViewStyle, {height: relativeToScreen(180)}]}>\r\n                        <Text style={{color: styles.theme.color, fontSize: relativeToScreen(22), alignSelf: 'center'}}>Excluir emoções</Text>\r\n                        <Text style={{color: styles.theme.color, fontSize: relativeToScreen(16), textAlign: 'center'}}>Pressione e segure para excluir uma emoção.</Text>\r\n                        <View style={[styles.cardRow, {justifyContent: 'space-evenly'}]}>\r\n                            <Pressable\r\n                            onPress={() => {\r\n                                highlightButtonFor('Terminar')();\r\n                                this.props.setParentState({deleteEmotionMode: false});\r\n                                this.setState({showEditMenu: true, showExpandMenuButton: true, mode: 'hidden'});\r\n                                setIsButtonPressed({'Terminar': false})\r\n                            }}\r\n                            onPressIn={highlightButtonFor('Terminar')}\r\n                            disabled={isLoading}\r\n                            style={[styles.editButton, {\r\n                                alignSelf: 'center',\r\n                                borderColor: isLoading ? styles.theme.color+'5' : styles.theme.color,\r\n                                backgroundColor: isButtonPressed['Terminar'] ? styles.theme.color+'5' : '#0000'\r\n                            }]}\r\n                            >\r\n                                <Text style={[styles.editButtonLabel, {color: isLoading ? styles.theme.color+'5' : styles.theme.color}]}>Terminar</Text>\r\n                            </Pressable>\r\n                        </View>\r\n                    </View>\r\n                )\r\n\r\n            case 'layout':\r\n                return(\r\n                    <View style={[createEmotionViewStyle, {height: relativeToScreen(320)}]}>\r\n                        <View style={inputSectionStyle}>\r\n                            <Text style={{color: styles.theme.color, fontSize: relativeToScreen(22), alignSelf: 'center', paddingBottom: relativeToScreen(25)}}>Escolha o layout</Text>\r\n                            { ['Positiva ou Negativa', 'Calmo(a) ou Energizado(a)', 'Grade', 'Espalhado'].map((layout) => {\r\n                                const isLayoutSelected = this.props.selectedEmotionLayout === emotionLayoutMap[layout]\r\n                                return(\r\n                                    <Pressable\r\n                                    key={'emotion-'+layout}\r\n                                    onPress={() => this.props.setParentState({selectedEmotionLayout: emotionLayoutMap[layout] })}\r\n                                    style={[tagStyle, {width: relativeToScreen(230), height: relativeToScreen(30), borderRadius: relativeToScreen(15), marginBottom: relativeToScreen(10), backgroundColor: isLayoutSelected ? styles.altTheme.color+'d' : styles.altTheme.color+'5'}]}>\r\n                                        <Text style={[{fontSize: 15, color: styles.theme.color}]}>{layout}</Text>\r\n                                    </Pressable>\r\n                                )\r\n                            }) }\r\n                        </View>\r\n                        <View style={[inputSectionStyle, {flexDirection: 'row', justifyContent: 'space-evenly'}]}>\r\n                            <Pressable\r\n                            onPress={() => {\r\n                                highlightButtonFor('Voltar-Layout')()\r\n                                this.props.setParentState({selectedEmotionLayout: this.state.initialEmotionLayout})\r\n                                this.setState({showEditMenu: true, showExpandMenuButton: true, mode: 'hidden', initialEmotionLayout: null})\r\n                                setIsButtonPressed({'Voltar-Layout': false})\r\n                            }}\r\n                            onPressIn={highlightButtonFor('Voltar-Layout')}\r\n                            disabled={isLoading}\r\n                            style={[styles.editButton, {\r\n                                alignSelf: 'center',\r\n                                borderColor: isLoading ? styles.theme.color+'5' : styles.theme.color,\r\n                                backgroundColor: isButtonPressed['Voltar-Layout'] ? styles.theme.color+'5' : '#0000'\r\n                                }]}>\r\n                                <Text style={[styles.editButtonLabel, {color: isLoading ? styles.theme.color+'5' : styles.theme.color}]}>Voltar</Text>\r\n                            </Pressable>\r\n                            <Pressable\r\n                            onPress={() => {\r\n                                highlightButtonFor('Salvar-Layout')()\r\n                                this.onSaveEmotionLayoutButtonPress()\r\n                                setIsButtonPressed({'Salvar-Layout': false})\r\n                            }}\r\n                            onPressIn={highlightButtonFor('Salvar-Layout')}\r\n                            disabled={ isLoading || unselectedLayout }\r\n                            style={[styles.editButton, {\r\n                                alignSelf: 'center',\r\n                                backgroundColor: isButtonPressed['Salvar-Layout'] ? styles.theme.color+'5' : '#0000',\r\n                                borderColor: isLoading || unselectedLayout ? styles.theme.color+'5' : styles.theme.color,\r\n                                }]}>\r\n                                <Text style={[styles.editButtonLabel, {color: isLoading || unselectedLayout ? styles.theme.color+'5' : styles.theme.color}]}>Salvar</Text>\r\n                            </Pressable>\r\n                        </View>\r\n                    </View>\r\n                )\r\n\r\n            default:\r\n                return null\r\n        }\r\n    }\r\n\r\n    EditEmotionsMenu() {\r\n\r\n        const buttonLabels = ['Criar', 'Excluir', 'Layout']\r\n        const onButtonPress = { \r\n            'Criar': () => this.setState({showEditMenu: false, showExpandMenuButton: false, mode: 'create'}),\r\n            'Excluir': () => {\r\n                this.props.setParentState({deleteEmotionMode: !this.props.deleteEmotionMode})\r\n                this.setState({showEditMenu: false , showExpandMenuButton: false, mode: 'delete'})\r\n            },\r\n            'Layout': () => this.setState({showEditMenu: false, showExpandMenuButton: false, mode: 'layout', initialEmotionLayout: this.props.selectedEmotionLayout})\r\n        }\r\n        const [isButtonPressed, setIsButtonPressed] = useState({\r\n            'Criar': false,\r\n            'Excluir': false,\r\n            'Layout': false,\r\n        })\r\n        function highlightButtonFor(label) {\r\n            function highlightButton() {\r\n                setIsButtonPressed({ ...isButtonPressed, [label]: !isButtonPressed[label] })\r\n            }\r\n            return highlightButton.bind(this);\r\n        }\r\n\r\n        const showEditMenu =  this.state.showEditMenu\r\n        const showExpandMenuButton = this.state.showExpandMenuButton\r\n        const hidden = this.state.mode == 'hidden'\r\n        const anyOpen = showEditMenu || !hidden\r\n\r\n        const isLoading = (\r\n            this.props.isPostEntryLoading |\r\n            this.props.appState.isUserDataSyncing |\r\n            this.props.isUpdateUserDataLoading |\r\n            this.props.isDeleteEmotionLoading |\r\n            this.props.isSaveEmotionLoading\r\n        )\r\n\r\n        return(\r\n            <>\r\n                { showExpandMenuButton ? (\r\n                    <View style={[styles.cardRow, {\r\n                        height: relativeToScreen(60),\r\n                        marginTop: relativeToScreen(10),\r\n                        paddingTop: relativeToScreen(10),\r\n                        justifyContent: showEditMenu ? 'space-between' : 'center', borderTopWidth: 1, borderTopColor: 'rgba(255,255,255,0.2)'\r\n                    }]}>\r\n                        { showEditMenu ? ( \r\n                            buttonLabels.map((label) => (\r\n                                <Pressable\r\n                                key={`emotion-${label}`}\r\n                                style={[styles.editButton,  {\r\n                                    backgroundColor: isButtonPressed[label] ? styles.theme.color+'5' : '#0000',\r\n                                    borderColor: isLoading ? styles.theme.color+'5' : styles.theme.color,\r\n                                    width: relativeToScreen(75)\r\n                                }]}\r\n                                disabled={ isLoading }\r\n                                onPress={() => {\r\n                                    highlightButtonFor(label)(); onButtonPress[label]()\r\n                                    setIsButtonPressed({ [label]: false })\r\n                                } }\r\n                                onPressIn={highlightButtonFor(label)}\r\n                                >\r\n                                    <Text style={[styles.editButtonLabel, {color: isLoading ? styles.theme.color+'5' : styles.theme.color}]}>{label}</Text>                    \r\n                                </Pressable>\r\n                            ))\r\n                        ) : null }\r\n                        <Pressable\r\n                        onPress={() => this.setState({ showEditMenu:  !showEditMenu })}\r\n                        // disabled={isLoading}\r\n                        style={{flexDirection: 'row', alignItems: 'center', justifyContent: 'center', paddingVertical: relativeToScreen(5), width: relativeToScreen(75)}}>\r\n                            <Icon name={ !showEditMenu ? 'more-horizontal-outline' : 'arrow-back-outline' } fill={styles.theme.color} width={relativeToScreen(20)} height={relativeToScreen(20)} />\r\n                            <Text style={{color: styles.theme.color, fontSize: relativeToScreen(15), marginLeft: 0}}> {anyOpen ? 'menos' : 'mais'}</Text>\r\n                        </Pressable>\r\n                    </View> \r\n                ) :  null  }\r\n            </>\r\n\r\n        )\r\n    }\r\n\r\n    async onSaveEmotionButtonPress() {\r\n\r\n        const newEmotionAlreadyExists = Object.keys(this.props.isSelectedEmotions).includes(capitalize(this.state.newEmotionName))\r\n        if (newEmotionAlreadyExists) {\r\n            this.props.setAlertMsg('Essa emoção já foi criada, escolha outro nome para continuar.')\r\n            return\r\n        }\r\n\r\n        try {\r\n            this.props.setParentState({ isSaveEmotionLoading: true });\r\n            var user = this.props.appState.user;\r\n            const newEmotion = {\r\n                name: capitalize(this.state.newEmotionName),\r\n                type: this.state.selectedEmotionType,\r\n                energy: this.state.selectedEmotionEnergy,\r\n            }\r\n\r\n            console.log('POST EMOTION STATUS: Started...')\r\n            var postEmotionResult = {ok: false, status: '999', statusText: 'Post not fetched yet.'}\r\n            const postUserEntryOpts = { \r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify( newEmotion ),\r\n            }\r\n            // var postUserEntryResult = await fetch('http://localhost:3000/Users/' + info.username + '/emotions', postUserEntryOpts);\r\n            postEmotionResult = await fetch( appServerURI + 'Users/' + user.username + '/emotions', postUserEntryOpts);\r\n            const postEmotionStatus = 'Status: ' + postEmotionResult.status + ', ' + postEmotionResult.statusText\r\n\r\n            if (postEmotionResult.ok) {\r\n                console.log('POST EMOTION STATUS: Successful.')\r\n                console.log(postEmotionStatus)\r\n                this.setState({\r\n                    showEditMenu: true,\r\n                    showExpandMenuButton: true,\r\n                    mode: 'hidden',\r\n                    newEmotionName: '',\r\n                    selectedEmotionType: null,\r\n                    selectedEmotionEnergy: null,        \r\n                })\r\n                    \r\n            } else {\r\n                console.log('POST EMOTION STATUS: Failed. Throwing error...')\r\n                throw new Error(postEmotionStatus)\r\n            }\r\n\r\n        } catch (error) {\r\n            this.props.setAlertMsg('Erro no servidor. Tente novamente...')\r\n            console.log('Erro capturado:')\r\n            console.log(error);\r\n\r\n        } finally {\r\n            console.log('POST EMOTION STATUS: Finished.')\r\n            this.props.setParentState({ isSaveEmotionLoading: false });\r\n            if (postEmotionResult.ok) {\r\n                await this.props.appState.syncUserData();\r\n                this.props.updateUserData();\r\n            }\r\n        } \r\n    }\r\n    \r\n    async onSaveEmotionLayoutButtonPress() {\r\n\r\n        try {\r\n            this.props.setParentState({ isSaveEmotionLayoutLoading: true });\r\n            var user = this.props.appState.user;\r\n            \r\n            console.log('POST EMOTION LAYOUT STATUS: Started...')\r\n            var postEmotionLayoutResult = {ok: false, status: '999', statusText: 'Post not fetched yet.'}\r\n            const postEmotionLayoutOpts = { \r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify( {layout: this.props.selectedEmotionLayout} ),\r\n            }\r\n            postEmotionLayoutResult = await fetch( appServerURI + 'Users/' + user.username + '/layout', postEmotionLayoutOpts);\r\n            // var postUserEntryResult = await fetch('http://localhost:3000/Users/' + info.username + '/emotions', postEmotionLayoutOpts);\r\n            const postEmotionLayoutStatus = 'Status: ' + postEmotionLayoutResult.status + ', ' + postEmotionLayoutResult.statusText\r\n\r\n            if (postEmotionLayoutResult.ok) {\r\n                console.log('POST EMOTION LAYOUT STATUS: Successful.')\r\n                console.log(postEmotionLayoutStatus)\r\n                this.setState({\r\n                    showEditMenu: true,\r\n                    showExpandMenuButton: true,\r\n                    mode: 'hidden',\r\n                    initialEmotionLayout: null,\r\n                })\r\n                    \r\n            } else {\r\n                console.log('POST EMOTION LAYOUT STATUS: Failed. Throwing error...')\r\n                throw new Error(postEmotionLayoutStatus)\r\n            }\r\n\r\n        } catch (error) {\r\n            this.props.setAlertMsg('Erro no servidor. Tente novamente...')\r\n            console.log('Erro capturado:')\r\n            console.log(error);\r\n\r\n        } finally {\r\n            console.log('POST EMOTION LAYOUT STATUS: Finished.')\r\n            this.props.setParentState({ isSaveEmotionLayoutLoading: false });\r\n            if (postEmotionLayoutResult.ok) {\r\n                await this.props.appState.syncUserData();\r\n                this.props.updateUserData();\r\n            }\r\n        } \r\n    }\r\n\r\n    setFontColor() {\r\n        const fontColorDark = this.props.appState.user.settings.fontColorDark\r\n        const fontColor = fontColorDark ? '#000' : '#fff'\r\n        const altFontColor = fontColorDark ? '#fff' : '#000'\r\n        for (let style of ['theme', ]) {\r\n            styles[style] = { ...styles[style], color: fontColor }\r\n        }\r\n        styles.altTheme.color = altFontColor\r\n        // styles.altTheme.backgroundColor = altFontColor\r\n    }    \r\n\r\n    render() {\r\n        return(\r\n            <>\r\n                <this.EditEmotionsSection />\r\n                <this.EditEmotionsMenu />\r\n            </>\r\n        )\r\n    }\r\n\r\n}","const GoogleMapsAPI = {\r\n    GoogleMapsJavascriptAPIkey: \"AIzaSyBVWbOwPAMRyz2bS6rYHrDftVeihQ8WMCo\",\r\n    GoogleMapsGeocodingAPIKey: \"AIzaSyB6O-DpvulBC0rom1mGy-mBcstIbPlDPHA\",\r\n}\r\n\r\nexport default GoogleMapsAPI","import React, { Component } from 'react';\r\nimport { View, Text, ImageBackground, Pressable, ScrollView, TextInput, ActivityIndicator,  } from 'react-native';\r\nimport { relativeToScreen } from '../styles/loginStyles';\r\n\r\nimport { Icon } from 'react-native-eva-icons'\r\nimport VectorIcon from 'react-native-vector-icons/MaterialCommunityIcons';\r\nimport EditEmotions from './subcomponents/EditEmotions'\r\nimport styles from '../styles/postEntryStyles'\r\nstyles.theme = {}; styles.altTheme = {};\r\n\r\n// Geocoding and weather dependencies and APIs\r\nimport * as Location from 'expo-location';\r\nimport GoogleMapsAPI from './subcomponents/GoogleMapsAPI'\r\nLocation.setGoogleApiKey(GoogleMapsAPI.GoogleMapsGeocodingAPIKey)\r\n\r\nconst appServerURI = 'https://mood-tracker-server.herokuapp.com/'\r\n\r\n// Mood configs\r\nconst moods = ['Horrível', 'Mal', 'Regular', 'Bem', 'Ótimo']\r\nexport const moodColorsHEX = ['#ff3333', '#0099cc', '#add8e6', '#ffff33', '#00cc00']\r\nconst moodColorsRGBA = ['rgba(255, 51, 51, 1)', 'rgba(0, 153, 204, 1)', 'rgba(173, 216, 230, 1)', 'rgba(255, 255, 51, 1)', 'rgba(0, 204, 0, 1)']\r\nconst moodColorsTransp = (alpha) => [`rgba(255, 51, 51, ${alpha})`, `rgba(0, 153, 204, ${alpha})`, `rgba(173, 216, 230, ${alpha})`, `rgba(255, 255, 51, ${alpha})`, `rgba(0, 204, 0, ${alpha})`]\r\nexport const moodIcons = ['emoticon-dead', 'emoticon-sad', 'emoticon-neutral', 'emoticon-happy', 'emoticon-excited']\r\n\r\n// Emotion configs\r\nconst emotionGroupsNames = [ 'Bem & Calmo(a)', 'Bem & Energizado(a)', 'Mal & Calmo(a)', 'Mal & Energizado(a)' ]\r\nconst emotionTypes = ['Positiva', 'Negativa']\r\nconst emotionEnergy = ['Calmo(a)', 'Energizado(a)']\r\n\r\nfunction buildIsSelectedEmotions(emotions) {\r\n    var isSelectedEmotions = {}\r\n    for ( let emotion of emotions) {\r\n        isSelectedEmotions[emotion.name] = false\r\n    }\r\n    return isSelectedEmotions\r\n}\r\n\r\n// Date config\r\nconst monthSigs = ['Jan', 'Feb', 'Mar', 'Apr', 'Jun', 'Jul', 'Ago', 'Sep', 'Oct', 'Nov', 'Dec']\r\nconst months = ['01', '02', '03', '04', '05', '06', '07', '08', '09', '10', '11', '12']\r\n\r\nconst monthNameMap = {\r\n    '01': 'Janeiro',\r\n    '02': 'Fevereiro',\r\n    '03': 'Março',\r\n    '04': 'Abril',\r\n    '05': 'Maio',\r\n    '06': 'Junho',\r\n    '07': 'Julho',\r\n    '08': 'Agosto',\r\n    '09': 'Setembro',\r\n    '10': 'Outubro',\r\n    '11': 'Novembro',\r\n    '12': 'Dezembro',\r\n}\r\n\r\n// Functions\r\n\r\nfunction convertMonthSig(monthSig) {\r\n    const thisMonth = months[monthSigs.indexOf(monthSig)]\r\n    return thisMonth\r\n}\r\n\r\nfunction Today() {\r\n    const now = Date().toString().split(' ')\r\n    const today = [ now[3], convertMonthSig(now[1]), now[2] ].join('-')\r\n    return today\r\n}\r\n\r\nfunction getTime() {\r\n    //Wed,Jan,26,2022,15:12:37,GMT-0300,(Horário,Padrão,de,Brasília)\r\n    const now = Date().toString().split(' ')\r\n    const time = now[4]\r\n    return time\r\n}\r\n\r\nfunction oneDigit(stringNumber) {\r\n    if (stringNumber[0] == '0') return stringNumber.slice(1, stringNumber.length)\r\n    else return stringNumber\r\n}\r\n\r\nfunction formatPostEntryDatetimeTitle(date, time) {\r\n    const ymd = date.split('-')\r\n    const m = monthNameMap[ ymd[1] ]\r\n    return oneDigit( ymd[2] ) + ' ' + m + ' ' + ymd[0] + (time ? ' - ' : '') + time.slice(0,5)\r\n}\r\n\r\nfunction formattedAddress(addr) {\r\n    return (\r\n        ( addr.street ? addr.street + ', ' : '' ) +\r\n        ( addr.streetNumber ? addr.streetNumber + ' - ' : '' ) +\r\n        ( addr.district ? addr.district + ', ' : '' ) +\r\n        ( addr.subregion ? addr.subregion + '. ' : '' ) +\r\n        ( addr.region ? addr.region + ', ' : '' ) +\r\n        ( addr.isoCountryCode ? addr.isoCountryCode : '' )  + '.'\r\n    )\r\n}\r\n\r\nfunction mapEmotions(emotions, layout='grid') {\r\n    var userEmotionGroups = layout=='grid' ? [[],[],[],[]] : ( layout=='spread' ? [[]] : [[],[]] )\r\n    var emotionLabels = layout=='grid' ? emotionGroupsNames : ( layout=='type' ? emotionTypes : (layout=='spread' ? [''] : emotionEnergy ) )\r\n    for (let emotion of emotions) {\r\n        if (layout=='grid') {\r\n            if (emotion.type=='Positiva') {\r\n                if (emotion.energy=='Calmo(a)')\r\n                    userEmotionGroups[0] = [ ...userEmotionGroups[0], emotion]\r\n                else if (emotion.energy=='Energizado(a)')\r\n                    userEmotionGroups[1] = [ ...userEmotionGroups[1], emotion]\r\n            } else if (emotion.type=='Negativa') {\r\n                if (emotion.energy=='Calmo(a)')\r\n                    userEmotionGroups[2] = [ ...userEmotionGroups[2], emotion]\r\n                else if (emotion.energy=='Energizado(a)')\r\n                    userEmotionGroups[3] = [ ...userEmotionGroups[3], emotion]\r\n            }\r\n        } else if (layout=='type') {\r\n            if (emotion.type=='Positiva')\r\n                userEmotionGroups[0] = [ ...userEmotionGroups[0], emotion]\r\n            else if (emotion.type=='Negativa')\r\n                userEmotionGroups[1] = [ ...userEmotionGroups[1], emotion]\r\n        } else if (layout=='energy') {\r\n            if (emotion.energy=='Calmo(a)')\r\n                userEmotionGroups[0] = [ ...userEmotionGroups[0], emotion]\r\n            else if (emotion.energy=='Energizado(a)')\r\n                userEmotionGroups[1] = [ ...userEmotionGroups[1], emotion]\r\n        } else if (layout=='spread') {\r\n            userEmotionGroups[0] = [ ...userEmotionGroups[0], emotion]\r\n        }\r\n    }\r\n    return [userEmotionGroups, emotionLabels]\r\n}\r\n\r\nfunction sortObjListByKey(objList, objKey) {\r\n    const keys = objList.map(obj => obj[objKey])\r\n    const sortedKeys = [...keys].sort()\r\n    var newObjList = []\r\n    sortedKeys.forEach(key => {\r\n        newObjList.push( objList[keys.indexOf(key)] )\r\n    })\r\n    return newObjList\r\n}\r\n\r\nexport default class PostEntranceScreen extends Component {\r\n  \r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            user: this.props.appState.user,\r\n\r\n            date: '',\r\n            startTime: '',\r\n            endTime: '',\r\n            createdAt: '',\r\n            lastEdited: [],\r\n\r\n            star: false,\r\n            selectedMood: '',\r\n            emotions: [],\r\n            jornalEntry: '',    \r\n            address: '',\r\n            location: null,\r\n            weather: null,\r\n\r\n            selectedEntry: 'Avaliação',\r\n            isMoodUnmarked: true,\r\n            isSelectedEmotions: buildIsSelectedEmotions(this.props.appState.user.emotions),\r\n            selectedEmotionLayout: this.props.appState.user.layout,\r\n            isFetchingLocationOrWeather: false,\r\n            isPostEntryLoading: false,\r\n            isDeleteEmotionLoading: false,\r\n            isSaveEmotionLoading: false,\r\n            deleteEmotionMode: false,\r\n            isUpdateUserDataLoading: false,\r\n\r\n            locationPermission: null,\r\n            userCoordinates: null,\r\n            loginMsg: '',\r\n        };\r\n\r\n        this.initializeEntry = this.initializeEntry.bind(this);\r\n        this.onSaveButtonPress = this.onSaveButtonPress.bind(this);\r\n        this.saveButton = this.saveButton.bind(this);\r\n        this.setLoginMsg = this.setLoginMsg.bind(this);\r\n        this.EmotionButtons = this.EmotionButtons.bind(this);\r\n        this.MoodButtons = this.MoodButtons.bind(this);\r\n        this.postEntryHeader = this.postEntryHeader.bind(this);\r\n        this.onEmotionButtonPress = this.onEmotionButtonPress.bind(this);\r\n        this.onMoodButtonPress = this.onMoodButtonPress.bind(this);\r\n        this.inputCardBody = this.inputCardBody.bind(this);\r\n        this.setSelectedEntry = this.setSelectedEntry.bind(this);\r\n        this.InputCard = this.InputCard.bind(this);\r\n        this.JornalInput = this.JornalInput.bind(this);\r\n        this.postNewEntryAsync = this.postNewEntryAsync.bind(this);\r\n        this.updateUserData = this.updateUserData.bind(this);\r\n        this.deleteEmotion = this.deleteEmotion.bind(this);\r\n        this.onEmotionButtonLongPress = this.onEmotionButtonLongPress.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log('\"PostEntry\" component did mount.')\r\n        this.initializeEntry()\r\n    }\r\n\r\n    postEntryHeader() {\r\n        return(\r\n            <View style={[styles.cardRow, {justifyContent: 'space-between'}]}>\r\n                <Pressable onPress={() => {this.props.navigation.goBack()}} hitSlop={relativeToScreen(10)} style={styles.postButton}>\r\n                    <Icon name='arrow-back' fill={styles.theme.color+'b'} height={relativeToScreen(29)} width={relativeToScreen(29)}/>\r\n                </Pressable>\r\n                <View style={[styles.entryCardEmotionBadge, {flexDirection: 'row', alignItems: 'center'}]}>\r\n                    <Text style={styles.datetimeTitle}> { formatPostEntryDatetimeTitle(this.props.route.params.currentEntry.date, this.state.startTime) } </Text>\r\n                    <Icon name='edit' fill='rgba(75,75,75,1)' height={relativeToScreen(20)} width={relativeToScreen(20)}/>\r\n                </View>\r\n                <Pressable onPress={() => {this.setState({star: !this.state.star})}}  hitSlop={relativeToScreen(10)} style={styles.postButton}>\r\n                    <Icon name={this.state.star ? 'star' : 'star-outline'} fill={this.state.star ? 'gold' : styles.theme.color+'b' } height={relativeToScreen(30)} width={relativeToScreen(30)}/>\r\n                </Pressable>\r\n            </View>\r\n        )\r\n    }\r\n\r\n    MoodButtons() {\r\n        return moods.map((item, index) => {\r\n            const selected = this.state.selectedMood == item\r\n            const isMoodUnmarked = this.state.isMoodUnmarked\r\n            const selColor = moodColorsRGBA[index]\r\n            return(\r\n                <View key={'mood '+index} style={styles.moodButton}>\r\n                    <VectorIcon\r\n                    name={moodIcons[index]}\r\n                    size={isMoodUnmarked ? relativeToScreen(52) : (selected ? relativeToScreen(57) : relativeToScreen(50)) }\r\n                    color={ isMoodUnmarked ? selColor : (selected ? selColor : moodColorsTransp(0.5)[index]) }\r\n                    onPress={this.onMoodButtonPress(item)}\r\n                    />\r\n                </View>\r\n            )\r\n        })\r\n    }\r\n\r\n    onMoodButtonPress(item) {\r\n        function selectMood() {\r\n            if (this.state.selectedMood==item) {\r\n                this.setState({selectedMood: null, isMoodUnmarked: true})\r\n            } else {\r\n                this.setState({selectedMood: item, isMoodUnmarked: false})\r\n            }\r\n        }\r\n        selectMood = selectMood.bind(this);\r\n        return selectMood\r\n    }\r\n\r\n    EmotionButtons(emotions) {\r\n        return(\r\n            sortObjListByKey(emotions, 'name').map( emotion => (\r\n                <Pressable\r\n                key={'emotion-' + emotion.name}\r\n                title={emotion.name}\r\n                onPress={this.onEmotionButtonPress(emotion.name)}\r\n                onLongPress={this.onEmotionButtonLongPress(emotion.name)}\r\n                suppressHighlighting={true}\r\n                selectable={false}\r\n                >\r\n                    <Text\r\n                    selectable={false}\r\n                    // selectionColor={'#0000'}\r\n                    onLongPress={null}\r\n                    style={[styles.emotionBadge,\r\n                        {backgroundColor: this.state.isSelectedEmotions[emotion.name] ? 'lightblue' : 'aliceblue' }\r\n                    ]}\r\n                    >\r\n                        {emotion.name}\r\n                        </Text>\r\n                </Pressable>\r\n            ))\r\n        )\r\n    }\r\n\r\n    onEmotionButtonPress(emotion) {\r\n        function selectEmotion () {\r\n            this.setState({\r\n                isSelectedEmotions: {\r\n                    ...this.state.isSelectedEmotions,\r\n                    [emotion]: !this.state.isSelectedEmotions[emotion]\r\n                }\r\n            })    \r\n        }\r\n        selectEmotion = selectEmotion.bind(this);\r\n        return selectEmotion\r\n    }\r\n\r\n    onEmotionButtonLongPress(emotion) { \r\n        function selectEmotion () {\r\n            if (this.state.deleteEmotionMode) {\r\n                this.deleteEmotion(emotion)\r\n            }\r\n        }\r\n        selectEmotion = selectEmotion.bind(this);\r\n        return selectEmotion\r\n    }\r\n\r\n    JornalInput() {\r\n        return(\r\n            <TextInput\r\n            multiline\r\n            scrollEnabled\r\n            placeholder='Escreva aqui...'\r\n            placeholderTextColor='rgba(255,255,255,0.6)'\r\n            onChangeText={text => this.setState({jornalEntry: text})}\r\n            value={this.state.jornalEntry}\r\n            style={[styles.jornalText, styles.theme]}\r\n            >\r\n            </TextInput>\r\n        )\r\n    }\r\n\r\n    inputCardBody(sectionName, cardBodyStyle, cardBodyContent) {\r\n        if (this.state.selectedEntry === sectionName) {\r\n            if (sectionName == 'Emoções') {\r\n                const [userEmotionGroups, emotionLabels] = mapEmotions(this.props.appState.user.emotions, this.state.selectedEmotionLayout)\r\n                return(\r\n                    <>\r\n                        { userEmotionGroups.map((emotions, index) => (\r\n                            <View key={'emotion-group-' + index} style={{width: '100%', alignItems: 'center', marginVertical: relativeToScreen(10)}}>\r\n                                { emotionLabels[index]\r\n                                    ? <Text style={{fontSize: relativeToScreen(15), color: styles.theme.color, marginVertical: relativeToScreen(8)}}>{emotionLabels[index]}</Text>\r\n                                    : null\r\n                                }\r\n                                <View key={index} style={[styles.cardRow, cardBodyStyle]}>\r\n                                    {cardBodyContent(emotions)}\r\n                                </View>\r\n                            </View>\r\n                        )) }\r\n                        <EditEmotions\r\n                        {...this.props}\r\n                        {...this.state}\r\n                        setParentState={this.setState.bind(this)}\r\n                        updateUserData={this.updateUserData}\r\n                        setAlertMsg={this.setLoginMsg}\r\n                        />\r\n                    </>\r\n\r\n                )\r\n            } else {\r\n                return(\r\n                    <View style={[styles.cardRow, cardBodyStyle]}>\r\n                        {cardBodyContent}\r\n                    </View>\r\n                )    \r\n            }\r\n        } else {\r\n            return(\r\n                <></>\r\n            )\r\n        }\r\n    }\r\n\r\n    InputCard(sectionName, icon, cardBodyStyle, cardBodyContent) {\r\n        return(\r\n            <View style={[styles.card]} >\r\n                <Pressable style={styles.cardRow} onPress={this.setSelectedEntry(sectionName)} >\r\n                    <Icon name={icon} fill={styles.theme.color+'c'} height={relativeToScreen(28)} width={relativeToScreen(28)} style={styles.entryIcon} />\r\n                    <Text style={styles.entryTitle}> {sectionName} </Text>\r\n                </Pressable>    \r\n                {this.inputCardBody(sectionName, cardBodyStyle, cardBodyContent)}  \r\n            </View>   \r\n        )\r\n    }\r\n\r\n    setSelectedEntry (entry) {\r\n        function setSelected() {\r\n            this.setState( {selectedEntry:  this.state.selectedEntry === entry ? null : entry  } )\r\n        }\r\n        setSelected = setSelected.bind(this);\r\n        return setSelected\r\n    }\r\n\r\n    loginMsg() {\r\n        return(\r\n          <View style={[styles.login.msgBox, this.state.loginMsg ? {} : {height: 0, backgroundColor: 'transparent', borderColor: 'transparent'} ]}>\r\n            <Text style={styles.login.msg}>{this.state.loginMsg}</Text>\r\n          </View>\r\n        )\r\n    }\r\n\r\n    setLoginMsg(msg) {\r\n        this.setState({loginMsg: msg})\r\n        setTimeout( () => this.setState({loginMsg: ''}) , 1000 * 5 )\r\n    }    \r\n\r\n    async initializeEntry() {\r\n        const currentEntry = this.props.route.params.currentEntry\r\n        const user = this.props.appState.user\r\n        switch (currentEntry.type) {\r\n            case 'new':\r\n                console.log('POST ENTRY STATUS: INITIATING BLANK NEW ENTRY! FETCHING LOCATION AND WEATHER DATA...')\r\n                this.setState({\r\n                    date: currentEntry.date,\r\n                    startTime: getTime(),\r\n                    endTime: '',\r\n                    isFetchingLocationOrWeather: true\r\n                })\r\n                await this.checkIfLocationEnabled();\r\n                await this.getCurrentLocation();                    \r\n                await this.fetchWeather()\r\n                this.setState({isFetchingLocationOrWeather: false})\r\n            break;\r\n        \r\n            case 'custom-date':\r\n                console.log('POST ENTRY STATUS: INITIALIZING CUSTOM DATE ENTRY! SETTING DATE TO: ' + currentEntry.date)\r\n                this.setState({\r\n                    date: currentEntry.date,\r\n                    startTime: '',\r\n                    endTime: '',\r\n                })\r\n                break\r\n\r\n            case 'edit':\r\n                const entry = currentEntry.entry\r\n                const currentEmotions = entry.emotions.map(emotion => emotion.name)\r\n                var isSelectedEmotionsNew = {}\r\n                for ( let emotion of user.emotions ) {\r\n                    isSelectedEmotionsNew[emotion.name] = currentEmotions.includes(emotion.name)\r\n                }\r\n\r\n                this.setState({\r\n                    date: entry.date,\r\n                    startTime: entry.startTime,\r\n                    endTime: entry.endTime,\r\n                    createdAt: entry.createdAt,\r\n                    lastEdited: entry.lastEdited,\r\n                    star: entry.star,\r\n                    selectedMood: entry.mood,\r\n                    isSelectedEmotions: isSelectedEmotionsNew,\r\n                    jornalEntry: entry.jornal,\r\n                    address: entry.address,\r\n                    location: entry.location,\r\n                    weather: entry.weather,\r\n                    isMoodUnmarked: false,\r\n                })\r\n                break\r\n    \r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    updateUserData() {\r\n        console.log('UPDATING USER DATA IN \"PostEntryComponent\"...')\r\n        this.setState({isUpdateUserDataLoading: true})\r\n        const user = this.props.appState.user\r\n\r\n        const oldEmotions = Object.keys(this.state.isSelectedEmotions)\r\n        const currentEmotions = user.emotions.map(emotion => emotion.name)\r\n        const newEmotions = currentEmotions.filter(emotion => oldEmotions.includes(emotion))\r\n\r\n        const newEmotionsSelected = buildIsSelectedEmotions(newEmotions)\r\n        oldEmotions.forEach(emotion => { \r\n            if (currentEmotions.includes(emotion)) \r\n                newEmotionsSelected[emotion] = this.state.isSelectedEmotions[emotion]\r\n        })\r\n\r\n        this.setState({\r\n            // user: user,\r\n            isSelectedEmotions: newEmotionsSelected,\r\n            isUpdateUserDataLoading: false\r\n        })\r\n    }\r\n\r\n    saveButton() {\r\n        const isDataLoading = (\r\n            this.state.isFetchingLocationOrWeather |\r\n            this.state.isPostEntryLoading |\r\n            this.state.isSaveEmotionLoading |\r\n            this.state.isDeleteEmotionLoading |\r\n            this.props.appState.isUserDataSyncing |\r\n            this.state.isUpdateUserDataLoading\r\n        )\r\n        var color;\r\n        switch (true) {\r\n            case this.state.isFetchingLocationOrWeather:\r\n                color = 'brown'\r\n                break;\r\n        \r\n            case this.state.isPostEntryLoading:\r\n                color = 'black'\r\n                break;\r\n            case this.state.isSaveEmotionLoading:\r\n                color = 'green'\r\n                break;\r\n            case this.state.isDeleteEmotionLoading:\r\n                color = 'red'\r\n                break;\r\n            case this.props.appState.isUserDataSyncing:\r\n                color = 'blue'\r\n                break;\r\n            case this.state.isUpdateUserDataLoading:\r\n                color = 'green'\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        return(\r\n            <Pressable\r\n            onPress={this.onSaveButtonPress}\r\n            disabled={isDataLoading}\r\n            style={styles.saveButton}\r\n            >\r\n                { isDataLoading ? (\r\n                    <ActivityIndicator size='small' color={color} />\r\n                ) : (\r\n                    <Text style={styles.saveButtonLabel}> Salvar </Text>\r\n                ) }\r\n            </Pressable>\r\n        )\r\n    }\r\n\r\n    onSaveButtonPress() {\r\n        if (!this.state.selectedMood) {\r\n            this.setLoginMsg('Adicione uma avaliação para continuar.')\r\n            this.setState({selectedEntry: 'Avaliação'})\r\n            return\r\n        }\r\n        const currentEntry = this.props.route.params.currentEntry\r\n        var lastEdited = getTime()\r\n        var createdAt, endTime\r\n        switch (currentEntry.type) {\r\n            case 'new':\r\n                endTime = lastEdited\r\n                createdAt = lastEdited\r\n                break;\r\n            case 'custom-date':\r\n                endTime = this.state.endTime // Returns empty string ''.\r\n                createdAt = lastEdited\r\n                break\r\n            case 'edit':\r\n                endTime = this.state.endTime\r\n                createdAt = this.state.createdAt\r\n                break\r\n            default:\r\n                break;\r\n        }\r\n        const newEntryPost = {\r\n            date: this.state.date,\r\n            startTime: this.state.startTime,\r\n            endTime: endTime,\r\n            createdAt: createdAt,\r\n            lastEdited: [ ...this.state.lastEdited, {date: Today(), time: lastEdited}],\r\n            star: this.state.star,\r\n            mood: this.state.selectedMood,\r\n            emotions: this.props.appState.user.emotions.filter( emotion => this.state.isSelectedEmotions[emotion.name] ),\r\n            jornal: this.state.jornalEntry,\r\n            address: this.state.address,\r\n            location: this.state.location,\r\n            weather: this.state.weather,\r\n        }\r\n        this.postNewEntryAsync(newEntryPost)\r\n    }\r\n    \r\n    async postNewEntryAsync(newEntry) {\r\n        this.setState({ isPostEntryLoading: true });\r\n        var user = this.props.appState.user;\r\n        const currentEntry = this.props.route.params.currentEntry\r\n        const editMode = currentEntry.type === 'edit';\r\n        try {\r\n            console.log('POST ENTRY STATUS: Started...')\r\n            var postUserEntryResult = {ok: false, status: '999', statusText: 'Post not fetched yet.'}\r\n            const postUserEntryOpts = { \r\n                method: editMode? 'PUT' : 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify( newEntry ),\r\n            }\r\n            // var postUserEntryResult = await fetch('http://localhost:3000/Users/' + info.username + '/entries', postUserEntryOpts);\r\n            postUserEntryResult = await fetch( appServerURI + 'Users/' + user.username + '/entries' + (editMode ? '/'+currentEntry.entry._id : ''), postUserEntryOpts);\r\n            const postUserEntryStatus = 'Status: ' + postUserEntryResult.status + ', ' + postUserEntryResult.statusText\r\n\r\n            if (postUserEntryResult.ok) {\r\n                console.log('POST ENTRY STATUS: Successful.')\r\n                console.log(postUserEntryStatus)\r\n                    \r\n            } else {\r\n                console.log('POST ENTRY STATUS: Failed. Throwing error...')\r\n                throw new Error(postUserEntryStatus)\r\n            }\r\n\r\n        } catch (error) {\r\n            this.setLoginMsg('Erro no servidor. Tente novamente...')\r\n            console.log('Erro capturado:')\r\n            console.log(error);\r\n\r\n        } finally {\r\n            console.log('POST ENTRY STATUS: Finished.')\r\n            this.setState({ isPostEntryLoading: false });\r\n            if (postUserEntryResult.ok) {\r\n                console.log('proceding to SYNC USER DATA IN RESPONSE TO SUCCESSFUL USER ENTRY POST... ')\r\n                this.props.appState.syncUserData()\r\n                // this.props.route.params.setMainScreenState({\r\n                //     selectedEntryId: null,\r\n                //     selectedDate: currentEntry.type == 'new' ? Today() : this.props.route.params.getMainScreenState().selectedDate,\r\n                // })\r\n                this.props.navigation.navigate('Entrances', {\r\n                    selectedEntryId: null,\r\n                    selectedDate: newEntry.date,\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    async deleteEmotion(emotion) {\r\n        this.setState({ isDeleteEmotionLoading: true });\r\n        var user = this.props.appState.user;\r\n        try {\r\n            console.log('DELETE EMOTION STATUS: Started...')\r\n            var postEmotionResult = {ok: false, status: '999', statusText: 'Post not fetched yet.'}\r\n            const postUserEntryOpts = { \r\n                method: 'DELETE',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n            }\r\n            // var postUserEntryResult = await fetch('http://localhost:3000/Users/' + info.username + '/emotions', postUserEntryOpts);\r\n            postEmotionResult = await fetch( appServerURI + 'Users/' + user.username + '/emotions/' + emotion, postUserEntryOpts);\r\n            const postEmotionStatus = 'Status: ' + postEmotionResult.status + ', ' + postEmotionResult.statusText\r\n\r\n            if (postEmotionResult.ok) {\r\n                console.log('DELETE EMOTION STATUS: Successful.')\r\n                console.log(postEmotionStatus)\r\n                    \r\n            } else {\r\n                console.log('DELETE EMOTION STATUS: Failed. Throwing error...')\r\n                throw new Error(postEmotionStatus)\r\n            }\r\n\r\n        } catch (error) {\r\n            this.setLoginMsg('Erro no servidor. Tente novamente...')\r\n            console.log('Erro capturado:')\r\n            console.log(error);\r\n\r\n        } finally {\r\n            console.log('DELETE EMOTION STATUS: Finished.')\r\n            this.setState({ isDeleteEmotionLoading: false });\r\n            if (postEmotionResult.ok) {\r\n                await this.props.appState.syncUserData();\r\n                this.updateUserData();\r\n            }\r\n        }\r\n    }\r\n\r\n    async fetchWeather() {\r\n        try {\r\n            if (this.state.userCoordinates) {\r\n                console.log('FETCH WEATHER STATUS: STARTED...!')\r\n                const coords = this.state.userCoordinates\r\n                const queryParams = {\r\n                    lat: coords.latitude,\r\n                    lon: coords.longitude,\r\n                    units: 'metric'\r\n                }\r\n                const fetchOptions = {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                    },    \r\n                    body: JSON.stringify({\r\n                        queryParams: queryParams\r\n                    })\r\n                }\r\n                const response = await fetch(appServerURI + 'api/weather', fetchOptions)\r\n                const resStatus = 'Status: ' + response.status + ', Status Text: ' + response.statusText\r\n                if (!response.ok) \r\n                    throw new Error(resStatus)\r\n                else {\r\n                    const weather = await response.json()\r\n                    console.log('FETCH WEATHER STATUS: SUCCESSFUL!')\r\n                    const weatherInfo = {\r\n                        coords: weather.coord,\r\n                        name: weather.name,\r\n                        weather: weather.weather[0],\r\n                        main: weather.main,\r\n                        clouds: weather.clouds,\r\n                        wind: weather.wind,\r\n                        visibility: weather.visibility,\r\n                    }\r\n                    this.setState({weather: weatherInfo})\r\n                }\r\n            } else {\r\n            // this.setLoginMsg('Não foi possível obter as condições do tempo. Tente reabrir essa tela...')\r\n            console.log('FETCH WEATHER STATUS: UNABLE TO START! USER POSITION NOT AVAILABLE.')\r\n            }\r\n        } catch (error) {\r\n            this.setLoginMsg('Não foi possível obter as condições do tempo. Tente reabrir essa tela...')\r\n            console.log('FETCH WEATHER STATUS: ERROR! LOGGING ERROR...')\r\n            console.log(error)\r\n\r\n        } finally {\r\n            console.log('FETCH WEATHER STATUS: FINISHED!')    \r\n        }\r\n    }\r\n\r\n    // Check if device has location services enabled\r\n    async checkIfLocationEnabled () {\r\n\r\n        try{\r\n            console.log('GEOCODING PROCESS (CHECK): CHECKING IF USER HAS SERVICES ENABLED.' )\r\n            let enabled = await Location.hasServicesEnabledAsync();            \r\n\r\n            if (!enabled) {\r\n                console.log('GEOCODING PROCESS (CHECK): CHECKED! USER DOES NOT HAVE SERVICES ENABLED.' )\r\n                this.setLoginMsg('Não foi possível obter sua localização. Habilite o serviço de localização para associar um endereço a essa entrada...')\r\n            } else {\r\n                console.log('GEOCODING PROCESS (CHECK): CHECKED! USER HAS SERVICES ENABLED.')\r\n            }\r\n\r\n        } catch(error) {\r\n            this.setLoginMsg('Não foi possível conferir se o serviço de localização está ativado. Tente reabrir essa tela...')\r\n            console.log(\"GEOCODING PROCESS (CHECK): ERROR IN SERVICES PERMISSION CHECK! COULD'NT CHECK IF USER HAS SERVICES ENABLED.\")\r\n        \r\n        } finally {\r\n            console.log(\"GEOCODING PROCESS (CHECK): FINISHED!\")\r\n        }\r\n    };\r\n\r\n    // Check for permission, get current user position and use reverse geocoding for user coordinates\r\n    async getCurrentLocation() {\r\n\r\n        try {\r\n\r\n            if (this.state.locationPermission === 'granted') {\r\n                console.log('GEOCODING PROCESS (PERMISSION): PERMISSION ALREADY GRANTED. SKIPPING REQUEST...')\r\n            } else {\r\n                console.log('GEOCODING PROCESS (PERMISSION): REQUESTING PERMISSION ASYNC...')\r\n                let { status } = await Location.requestForegroundPermissionsAsync()\r\n                // let { status } = await Location.requestBackgroundPermissionsAsync()        \r\n                this.setState({locationPermission: status})\r\n    \r\n                if (status !== 'granted') {\r\n                    console.log('GEOCODING PROCESS (PERMISSION): PERMISSION NOT GRANTED!')\r\n                    this.setLoginMsg('Permissão de localização não concedida. Permita que o app use os serviços de localização para associar um endereço a essa entrada...')\r\n                    return \r\n    \r\n                } else {\r\n                    console.log('GEOCODING PROCESS (PERMISSION): PERMISSION GRANTED!')\r\n                }\r\n            }\r\n\r\n            console.log('GEOCODING PROCESS (REQUEST): GETTING CURRENT USER POSITION ASYNC...')\r\n            let { coords } = await Location.getCurrentPositionAsync();\r\n            \r\n            if (coords) {   \r\n                console.log(`GEOCODING PROCESS (REQUEST): CURRENT USER POSITION FOUND... Latitude: ${latitude}, Logitude: ${longitude}`)\r\n                console.log('GEOCODING PROCESS (REVERSE GEOCODING): REVERSE GEOCODE ASYNC...')  \r\n                this.setState({userCoordinates: coords})\r\n                const { latitude, longitude } = coords;\r\n                let response = await Location.reverseGeocodeAsync({ latitude, longitude });\r\n        \r\n                if (response) {\r\n                    console.log('GEOCODING PROCESS (REVERSE GEOCODING): REVERSE GEOCODE SUCCESSFUL! UPDATING STATE...')  \r\n                    this.setState({ address: formattedAddress(response[0]), location: { position: coords, address: response[0] } })\r\n\r\n                } else {\r\n                    console.log('GEOCODING PROCESS (REVERSE GEOCODING): REVERSE GEOCODE FAILED! LOGGING RESPONSE...')  \r\n                    console.log(response)\r\n                }\r\n            } else {\r\n                console.log(`GEOCODING PROCESS (REVERSE GEOCODING): USER POSITION NOT FOUND! UNABLE TO PROCEED TO REVERSE GEOCODING...`)\r\n            }\r\n        } catch (error) {\r\n            this.setLoginMsg('Não foi possível obter a localização atual. Tente reabrir essa tela...')\r\n            console.log('GEOCODING PROCESS: ERROR IN USER POSITION REQUEST! LOGGING ERROR...')\r\n            console.log(error)\r\n        \r\n        } finally {\r\n            console.log('GEOCODING PROCESS: USER POSITION REQUEST FINISHED. PROCEEDING TO FETCH WEATHER DATA...')\r\n        }\r\n    };\r\n\r\n    setFontColor() {\r\n        const fontColorDark = this.props.appState.user.settings.fontColorDark\r\n        const fontColor = fontColorDark ? '#000' : '#fff'\r\n        const altFontColor = fontColorDark ? '#fff' : '#000'\r\n        for (let style of ['theme', 'entryTitle']) {\r\n            styles[style] = { ...styles[style], color: fontColor }\r\n        }\r\n        styles.altTheme.color = altFontColor\r\n        styles.altTheme.backgroundColor = altFontColor\r\n    }    \r\n\r\n    render() {\r\n        console.log('Rendering \"PostEntry\" component...')\r\n        this.setFontColor()\r\n        const settings = this.props.appState.user.settings\r\n        const backgroundColor = settings.backgroundColor\r\n        const backgroundImage = settings.backgroundImage\r\n        const imgURI =  settings.displayBackgroundImage ? (backgroundImage ? ( settings.enableHighResolution ? backgroundImage.urls.raw : backgroundImage.urls.regular ) : null ) : null\r\n        return(\r\n            <ImageBackground source={{'uri' : imgURI}} style={[styles.mainView, {backgroundColor: backgroundColor}]}>\r\n                <ScrollView style={styles.scrollView}>\r\n                    <View style={styles.section}>\r\n                            {this.postEntryHeader()}\r\n                            {this.InputCard('Avaliação', 'smiling-face', {justifyContent: 'space-between'}, this.MoodButtons())}\r\n                            {this.InputCard('Emoções', 'checkmark-square-outline', {flexWrap: 'wrap', justifyContent: 'center'}, this.EmotionButtons)}\r\n                            {this.InputCard('Jornal', 'book', {flexDirection: 'column', minHeight: relativeToScreen(130)}, this.JornalInput())}\r\n                    </View>\r\n                </ScrollView>  \r\n                <this.saveButton />\r\n                {this.loginMsg()}\r\n            </ImageBackground>\r\n        )    \r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { View, Text, ImageBackground, TextInput, Pressable, Platform, ActivityIndicator, Switch } from 'react-native';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport NetInfo from \"@react-native-community/netinfo\";\r\nimport * as Device from 'expo-device';\r\nimport { Icon } from 'react-native-eva-icons'\r\n\r\nimport styles, { relativeToScreen } from '../styles/loginStyles'\r\nlet backgroundColor = \"#5926a6\"\r\nlet imgURI = require('../assets/wallpaper.png')\r\n\r\nconst defaultEmotions = require('../shared/emotionsConfig')\r\nconst userScheme = {\r\n  emotions: defaultEmotions,\r\n  entries: [],\r\n  layout: 'grid',\r\n  settings: {\r\n    backgroundColor: \"#5926a6\",\r\n    backgroundImage: require('../shared/defaultWallpaper.json'),\r\n    displayBackgroundImage: true,\r\n    enableHighResolution: false,\r\n    fontColorDark: false,\r\n  }\r\n}\r\n\r\n// App server connection settings\r\nconst appServerURI = 'https://mood-tracker-server.herokuapp.com/'\r\n\r\n// Email Validation settings\r\nconst falseParams = ['validateDNS', 'checkCatchAll', 'checkFree', 'checkDisposable']\r\n\r\nasync function validateEmail(email) {\r\n  console.log('EMAIL VERIFICATION STATUS: Fetching email verification api...')\r\n  var emailStatus = {ok: false, status: 'Email não verificado.'}\r\n  try {\r\n    var queryParams = {\r\n      emailAddress: email,\r\n    }\r\n    falseParams.forEach(param => queryParams[param]='false')\r\n    const fetchOptions = {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },    \r\n        body: JSON.stringify({\r\n          queryParams: queryParams\r\n        }),\r\n    }\r\n    const apiResp = await fetch(appServerURI + 'api/email', fetchOptions)\r\n  \r\n    if (apiResp.ok) {  \r\n      console.log('EMAIL VERIFICATION STATUS: Api fetch request successful.')\r\n      const apiRespJson = await apiResp.json()\r\n      if ( apiRespJson.formatCheck!='true' ) {\r\n        emailStatus.status = 'Email inválido.'\r\n      } else if ( apiRespJson.smtpCheck!='true' ) {\r\n        emailStatus.status = 'Email não existe.'\r\n      } else {\r\n        emailStatus = {ok: true, status: 'Email válido.'}\r\n      }\r\n      return emailStatus\r\n  \r\n    } else {\r\n      console.log('EMAIL VERIFICATION STATUS: Api fetch request failed. Throwing error...')\r\n      throw new Error('Status: ' + apiResp.status + ', Status Text: ' + apiResp.statusText)\r\n    }\r\n  } finally {\r\n    console.log('EMAIL VERIFICATION STATUS: Concluído')\r\n  }\r\n}\r\n\r\nfunction validatePassword(password) {\r\n  console.log('VALIDATING PASSWORD FOR SIGNUP...')\r\n  const hasMinLength = password.length > 5\r\n  var res\r\n  if (!hasMinLength) {\r\n    res = {ok: false, status: 'A senha deve ter no mínimo 6 caractéres.'}\r\n  } else {\r\n    res = {ok: true, status: 'Senha válida.'}\r\n  }\r\n  return res\r\n}\r\n\r\n// async function fetchUsers() {\r\n//   var UsersResponse = await fetch( appServerURI + 'Users', { method: 'GET' });\r\n//   const UsersStatus = 'Status: ' + UsersResponse.status + ', ' + 'Status Text: ' + UsersResponse.statusText\r\n//   if (UsersResponse.ok) {\r\n//     console.log('fetch GET request for users data at signin successful.');\r\n//     console.log(UsersStatus)\r\n\r\n//     const Users = await UsersResponse.json();\r\n//     return Users\r\n//   } else {\r\n//     console.log('fetch GET request for users data at signin failed. Printing fetch response...')\r\n//     console.log(JSON.stringify(UsersResponse))\r\n//     console.log('Returning null...')\r\n//     return null\r\n//   }\r\n// }\r\n\r\nasync function registerLocallyIfUserIsNewToDevice(user) {\r\n  var localAuthInfo = await AsyncStorage.getItem('LocalAuthenticationInfo')\r\n  localAuthInfo = JSON.parse(localAuthInfo)  \r\n  if ( !localAuthInfo.users.filter(localUser => localUser._id == user._id)[0] ) {\r\n    console.log('SIGNIN STATUS: Primeiro login do usuário nesse aparelho. Adicionando informações do usuário no armazenamento local...')\r\n    const updatedLocalAuthInfo = {\r\n      ...localAuthInfo,\r\n      users: [ \r\n        ...localAuthInfo.users,\r\n        {\r\n          _id: user._id,\r\n          username: user.username,\r\n          email: user.email,\r\n          password: user.password,\r\n        }\r\n      ]\r\n    }\r\n    await AsyncStorage.setItem('LocalAuthenticationInfo', JSON.stringify(updatedLocalAuthInfo))\r\n    console.log('SIGNIN STATUS: Informações do usuário adicionadas no aparelho.')\r\n  } else {\r\n    console.log('SIGNIN STATUS: Informações do usuário já registradas nesse aparelho. Pulando registro do usuário no armazenamento local...')\r\n  } \r\n}\r\n\r\nexport async function keepUserConnectionAlive(id) {\r\n  var localAuthInfo = await AsyncStorage.getItem('LocalAuthenticationInfo')\r\n  localAuthInfo = JSON.parse(localAuthInfo)\r\n\r\n  if ( localAuthInfo.keepConnected.userId != id ) {\r\n    console.log(`SIGNIN STATUS: Usuário optou por ${id ? 'manter conexão ativa. Configurando conexão ativa para o usuário...' : 'desativar conexão ativa. Desativando...' }`)\r\n    const updatedLocalAuthInfo = {\r\n      ...localAuthInfo,\r\n      keepConnected: {\r\n        status: id ? true : false,\r\n        userId: id\r\n      }\r\n    }\r\n    await AsyncStorage.setItem('LocalAuthenticationInfo', JSON.stringify(updatedLocalAuthInfo))\r\n  } else {\r\n    console.log('SIGNIN STATUS: Fazendo login via conexã ativa. Pulando configuração de conexão ativa para o usuário...')\r\n  }\r\n}\r\n\r\nclass LoginScreen extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      userInfo: {\r\n        password: '',\r\n        email: '',\r\n        username: '',\r\n        settings: null,\r\n      },\r\n      keepConnected: true,\r\n      loginMsg: '',\r\n      isUserAuth: false,\r\n      isDataLoading: false,\r\n    }\r\n    this.onChangeText = this.onChangeText.bind(this);\r\n    this.submitButton = this.submitButton.bind(this);\r\n    this.loginMsg = this.loginMsg.bind(this);\r\n    this.setLoginMsg = this.setLoginMsg.bind(this);\r\n    this.onSignIn = this.onSignIn.bind(this);\r\n    this.onSignUp = this.onSignUp.bind(this);\r\n    this.LoginScreen = this.LoginScreen.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log('\"LoginScreen\" component did mount...')\r\n    this.restoreUserToken()\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    console.log('\"LoginScreen\" component will unmount...')\r\n  }\r\n\r\n  LoginIcon() {  \r\n    if (this.state.isDataLoading) {\r\n      return <ActivityIndicator color='#000000' />\r\n    } else {\r\n      return <Icon name='log-in-outline' animation='pulse' fill='#000' width={relativeToScreen(30)} height={relativeToScreen(30)} />\r\n    }\r\n  }\r\n\r\n  setLoginMsg(msg) {\r\n    this.setState({loginMsg: msg})\r\n    setTimeout( () => this.setState({loginMsg: ''}) , 1000 * 5 )\r\n  }\r\n\r\n  loginMsg() {\r\n      return(\r\n        <View style={[styles.login.msgBox, this.state.loginMsg ? {} : {backgroundColor: 'transparent', borderColor: 'transparent'} ]}>\r\n          <Text style={styles.login.msg}>{this.state.loginMsg}</Text>\r\n        </View>\r\n      )\r\n  }\r\n\r\n  onChangeText(textField) {\r\n    function setField(text) {\r\n      this.setState( { userInfo: { ...this.state.userInfo, [textField] : text}} )\r\n    }\r\n    setField = setField.bind(this);\r\n    return setField\r\n  }\r\n\r\n  submitButton(sign) {\r\n    const signIn = sign == 'signin'\r\n    return(\r\n      <Pressable\r\n      disabled={this.state.isDataLoading}\r\n      onPress={signIn ? this.onSignIn : this.onSignUp}\r\n      style={[styles.login.button]}\r\n      >\r\n        <Text style={styles.login.buttonLabel}>{ signIn ? 'Entrar' : 'Cadastrar' }</Text>\r\n      </Pressable>\r\n    )\r\n  }\r\n\r\n  LoginScreen = () => {\r\n  return(\r\n      <ImageBackground\r\n      source={imgURI}\r\n      style={[styles.login.mainView, {backgroundColor: backgroundColor, justifyContent: 'space-evenly'}]}\r\n      >\r\n        \r\n        <View style={styles.login.titleView}>\r\n          <Text style={styles.login.title}>Rastreador de humor</Text>\r\n        </View>\r\n\r\n        <View style={styles.login.card}>\r\n          <View style={styles.login.cardHeader} >\r\n            <Text style={styles.login.cardTitle}>Entrar</Text>\r\n          </View>\r\n          <View style={styles.login.cardSection}>\r\n            <TextInput\r\n            placeholder='Email'\r\n            textContentType='emailAddress'\r\n            style={styles.login.inputField}\r\n            onChangeText={this.onChangeText('email')}\r\n            autoComplete='email'\r\n            importantForAutofill='yes'\r\n            value={this.state.userInfo.email}\r\n            />\r\n            <TextInput\r\n            placeholder='Senha'\r\n            textContentType='password'\r\n            secureTextEntry={true}\r\n            style={styles.login.inputField}\r\n            onChangeText={this.onChangeText('password')}\r\n            autoComplete='password'\r\n            importantForAutofill='yes'\r\n            value={this.state.userInfo.password}\r\n            />\r\n          </View>\r\n          <View style={[styles.login.cardSection, {height: '33.0%'}]}>\r\n            {this.submitButton('signin')}\r\n            {this.submitButton('signup')}\r\n            <View style={{flexDirection: 'row', height: relativeToScreen(48), alignSelf: 'stretch', alignItems: 'center', justifyContent: 'flex-end'}}>\r\n              <Text style={{marginRight: Platform.OS=='web' ? relativeToScreen(10) : null }}>Manter-me conectado</Text>\r\n              <Switch\r\n                disabled={this.state.isDataLoading}\r\n                trackColor={{ false: \"#767577\", true: \"#81b0ff\" }}\r\n                thumbColor={this.state.keepConnected ? \"#f4f3f4\" : \"#f4f3f4\"}\r\n                ios_backgroundColor=\"#3e3e3e\" \r\n                onValueChange={() => this.setState({keepConnected: !this.state.keepConnected})}\r\n                value={this.state.keepConnected}\r\n              />\r\n            </View>\r\n          </View>\r\n          <View style={[styles.login.cardSection, {height: '19.04%', justifyContent: 'center'}]}>\r\n            {this.LoginIcon()}\r\n          </View>\r\n        </View>\r\n\r\n        {this.loginMsg()}\r\n\r\n      </ImageBackground>\r\n    )\r\n  }\r\n\r\n  isInputEmpty() {\r\n    if (!this.state.userInfo.email) {\r\n      const errMsg = 'Insira um endereço de email.'\r\n      this.setLoginMsg(errMsg)\r\n      console.log('SIGNIN STATUS: ' + errMsg)\r\n      return true\r\n    } else if (!this.state.userInfo.password) {\r\n      const errMsg = 'Insira uma senha.'\r\n      this.setLoginMsg(errMsg)\r\n      console.log('SIGNIN STATUS: ' + errMsg)\r\n      return true\r\n    } else return false\r\n  }\r\n\r\n  async restoreUserToken() {\r\n    try {\r\n      console.log('RESTORE USER TOKE STATUS: STARTED...')\r\n      var localAuthInfo = await AsyncStorage.getItem('LocalAuthenticationInfo')\r\n      if (localAuthInfo) {\r\n        console.log('RESTORE USER TOKEN STATUS: LOCAL AUTH INFO ALREADY CONFIGURED. LOGGING CURRENT VALUE...')\r\n        localAuthInfo = JSON.parse(localAuthInfo)\r\n\r\n        if (localAuthInfo.keepConnected.status) {\r\n          console.log(`RESTORE USER TOKEN STATUS: USER CONNECTION IS ALIVE FOR USER ID: ${localAuthInfo.keepConnected.userId}. PROCEDING TO SIGNIN...`)\r\n          const user = localAuthInfo.users.filter(user => user._id == localAuthInfo.keepConnected.userId)[0]\r\n          this.setState({\r\n            userInfo: {\r\n              username: user.username,\r\n              email: user.email,\r\n              password: user.password,\r\n            }\r\n          })\r\n          this.onSignIn()\r\n        }\r\n\r\n        else {\r\n          console.log('RESTORE USER TOKEN STATUS: NO USER CONNECTION ALIVE. PROCEEDING TO SIGNIN/SIGNUP ...')\r\n        }\r\n\r\n      } else {\r\n        console.log('RESTORE USER TOKEN STATUS: NO LOCAL AUTH INFO CONFIGURED IN THIS DEVICE. SETTING DEVICE LOCAL AUTH INFO FOR THE FIRST TIME...')\r\n\r\n        var DEVICE_IP_ADDRESS\r\n        NetInfo.fetch(\"wifi\").then(state => {\r\n          DEVICE_IP_ADDRESS = state.details.ipAddress\r\n          console.log(\"RESTORE USER TOKEN STATUS: IP ADDRESS REQUEST SUCCESSFUL. IP ADDRESS: \" + DEVICE_IP_ADDRESS);\r\n        });\r\n\r\n        const initialLocalAuthInfo = {\r\n          IP_ADDRESS: DEVICE_IP_ADDRESS,\r\n          deviceBrand: Device.brand,\r\n          deviceManufacturer: Device.manufacturer,\r\n          deviceModelName: Device.modelName,\r\n          deviceModelId: Device.modelId,\r\n          deviceOsName: Device.osName,\r\n          deviceOsVersion: Device.osVersion,\r\n          deviceName: Device.deviceName,\r\n          deviceType: await Device.getDeviceTypeAsync(),\r\n          users: [],\r\n          keepConnected: {\r\n            status: false,\r\n            userId: null\r\n          }\r\n        }\r\n        await AsyncStorage.setItem('LocalAuthenticationInfo', JSON.stringify(initialLocalAuthInfo))\r\n        console.log('RESTORE USER TOKEN STATUS: DEVICE LOCAL AUTH INFO CONFIGURED FOR THE FIRST TIME. PROCEEDING TO SIGNIN/SIGNUP ...')\r\n      }\r\n\r\n    } catch(error) {\r\n      console.log('RESTORE USER TOKEN STATUS: ERROR. LOGGING ERROR...')\r\n      console.log(error)\r\n    }\r\n  }  \r\n\r\n  async onSignIn() {\r\n\r\n    console.log('SIGNIN STATUS: Started...')\r\n    var info = this.state.userInfo;\r\n    info.email = info.email.trim()\r\n    this.setState({ isDataLoading: true });\r\n\r\n    try {\r\n\r\n      if (this.isInputEmpty()) return\r\n\r\n      var UsersResult = await fetch( appServerURI + 'Users', { method: 'GET' });\r\n      const UsersStatus = 'Status: ' + UsersResult.status + ', ' + 'Status Text: ' + UsersResult.statusText\r\n      if (UsersResult.ok) {\r\n        console.log('fetch GET request for users data at signin successful.');\r\n        console.log(UsersStatus)\r\n      } else {\r\n        console.log('fetch GET request for users data at signin failed. Printing fetch response...')\r\n        console.log(JSON.stringify(UsersResult))\r\n        console.log('Throwing error...')\r\n        throw new Error(UsersStatus)\r\n      }\r\n\r\n      const Users = await UsersResult.json();\r\n      const user = Users.filter((user) => user.email === info.email)[0]\r\n      \r\n      if ( user ) {          \r\n        \r\n        if ( user.password === info.password ) {\r\n\r\n          await registerLocallyIfUserIsNewToDevice(user)\r\n\r\n          if (this.state.keepConnected) {\r\n            await keepUserConnectionAlive(user._id)\r\n          }\r\n          this.setState( {isUserAuth: true, userInfo: user} )\r\n          const successMsg = 'Login realizado com sucesso!'\r\n          this.setLoginMsg(successMsg)\r\n          console.log('SIGNIN STATUS: Sucesso.')\r\n\r\n        } else {\r\n          const errMsg = 'Senha incorreta.'\r\n          this.setLoginMsg(errMsg)\r\n          console.log('SIGNIN STATUS: ' + errMsg);\r\n        }\r\n\r\n      } else {\r\n        const errMsg = 'Email não cadastrado!'\r\n        this.setLoginMsg(errMsg)\r\n        console.log('SIGNIN STATUS: ' + errMsg)\r\n      }\r\n\r\n    } catch (error) {\r\n      const errMsg = 'Erro no servidor! Tente novamente...'\r\n      this.setLoginMsg(errMsg)\r\n      console.log('Error catched in fetch GET request for users data at signin. Printing Error...')\r\n      console.log('SIGNIN STATUS:' + 'Erro capturado. Imprimindo erro...')\r\n      console.log(error);\r\n\r\n    } finally {\r\n      this.setState({ isDataLoading: false });\r\n      console.log('SIGNIN STATUS: Concluido.')\r\n      if (this.state.isUserAuth) {\r\n        console.log('User authenticated. Navigating to \"HomeScreen\"...')\r\n        this.props.setAppState({isUserAuth: true, user: this.state.userInfo})\r\n        // Parent class component method that authenticates the user and redirects to entrances screen.\r\n      }\r\n    }\r\n  }\r\n\r\n  async onSignUp() {\r\n\r\n    console.log('SIGNUP STATUS: started...')\r\n    var info = this.state.userInfo;\r\n    info.email = info.email.trim()\r\n    this.setState({ isDataLoading: true });\r\n    \r\n    try {\r\n\r\n      var postUserResult = {ok: false}\r\n      if (this.isInputEmpty()) return\r\n\r\n      // Validating email and password\r\n      const emailValidation = await validateEmail(info.email)\r\n      console.log('SING UP STATUS: ' + emailValidation.status)\r\n      if (!emailValidation.ok) {\r\n          this.setLoginMsg(emailValidation.status)\r\n          return\r\n      }\r\n\r\n      // Checking if email is already registerd\r\n      var UsersResult = await fetch( appServerURI + 'Users', { method: 'GET' } );  \r\n      const reqStatus = 'Status: ' + UsersResult.status + ', ' + UsersResult.statusText\r\n      if (UsersResult.ok) {\r\n        console.log('fetch GET request for users data at signup successful.')\r\n        console.log(reqStatus)\r\n      } else {\r\n        console.log('fetch GET request for users data at signup failed. Throwing error...')\r\n        throw new Error(reqStatus)\r\n      }\r\n\r\n      const Users = await UsersResult.json();\r\n      const User = Users.filter((user) => user.email === info.email)[0]\r\n      if ( !User ) {\r\n\r\n        // Validating Password\r\n        const passwordCheck = validatePassword(info.password)\r\n        if (!passwordCheck.ok) {\r\n          console.log('SING UP STATUS: ' + passwordCheck.status)\r\n          this.setLoginMsg(passwordCheck.status)\r\n          return\r\n      }\r\n\r\n        // Registering new user by posting user identification to database\r\n        info.username = info.email.split('@')[0]\r\n        const postUserOpts = {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify({ \r\n            ...info,\r\n            ...userScheme\r\n          })\r\n        }\r\n\r\n        postUserResult = await fetch( appServerURI +  'Users/' + info.username, postUserOpts );\r\n        const postUserStatus = 'Status: ' + postUserResult.status + ', ' + postUserResult.statusText\r\n\r\n        if (postUserResult.ok) {\r\n          const successMsg = 'Cadastro realizado com sucesso!'\r\n          this.setLoginMsg(successMsg)\r\n          console.log('fetch POST request for user data at signup successful.')\r\n          console.log(postUserStatus)\r\n          console.log('SING UP STATUS: ' + successMsg)\r\n\r\n        } else {\r\n          console.log('fetch POST request for user data at signup failed. Throwing error...')\r\n          throw new Error(postUserStatus)\r\n        }\r\n\r\n      } else {\r\n        const errMsg = 'Email já cadastrado.'\r\n        this.setLoginMsg(errMsg)\r\n        console.log('SING UP STATUS: ' + errMsg)\r\n      }\r\n\r\n    } catch (error) {\r\n      const errMsg = 'Erro no servidor, tente novamente...'\r\n      this.setLoginMsg(errMsg)\r\n      console.log('SING UP STATUS: Erro capturado. Imprimindo erro...')\r\n      console.log(error);\r\n\r\n    } finally {\r\n      this.setState({ isDataLoading: false })\r\n      console.log('SING UP STATUS: Concluido.')\r\n      if (postUserResult.ok)  this.onSignIn()\r\n    }\r\n  }\r\n\r\n  render() {\r\n    console.log('Rendering \"LoginScreen\" component...')\r\n    return this.LoginScreen()\r\n  }\r\n}\r\n\r\nexport default LoginScreen;","import React, { Component } from 'react';\r\nimport { ImageBackground, View, Text, Pressable, ScrollView, ActivityIndicator, Switch, StatusBar } from 'react-native';\r\nimport { Icon } from 'react-native-eva-icons';\r\nimport { keepUserConnectionAlive } from './LoginComponent';\r\nimport { relativeToScreen } from '../styles/loginStyles';\r\nimport { capitalize } from './subcomponents/EditEmotions';\r\nimport NativeIcon from 'react-native-vector-icons/MaterialCommunityIcons';\r\n\r\n// cors-midpoint uri (needed to avoid cors' allow-cross-origin error when fetching in web platforms)\r\nconst appServerURI = 'https://mood-tracker-server.herokuapp.com/'\r\n\r\nconst colorList = require('../shared/colorList.json')\r\n\r\nvar styles = {\r\n  background: {\r\n    flex: 1,\r\n    paddingTop: StatusBar.currentHeight,\r\n    paddingBottom: relativeToScreen(55),\r\n    alignItems: 'center',\r\n    justifyContent: 'space-between',\r\n  },\r\n  scrollView: {\r\n    width: '100%',\r\n    // alignItems: 'center',\r\n  },\r\n  foreground: {\r\n    width: relativeToScreen(350),\r\n    alignSelf: 'center'\r\n  },\r\n  header: {\r\n    height: relativeToScreen(120),\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    // borderWidth: 1,\r\n  },\r\n  settingsRow: {\r\n    height: relativeToScreen(60),\r\n    paddingHorizontal: relativeToScreen(10),\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    justifyContent: 'space-between',\r\n    borderRadius: relativeToScreen(10),\r\n    // borderWidth: 1,\r\n  },\r\n  colorBox: {\r\n    height: relativeToScreen(225),\r\n    paddingHorizontal: 0,\r\n    borderColor: 'rgba(200,200,200,0.2)'\r\n  },\r\n  colorRow: {\r\n    width: '100%',\r\n    height: relativeToScreen(50),\r\n    paddingHorizontal: relativeToScreen(10),\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    justifyContent: 'space-between',\r\n    borderBottomWidth: 1,\r\n    borderColor: '#fff4',\r\n    borderRadius: relativeToScreen(10),\r\n  },\r\n  colorSquare: {\r\n    // marginRight: 0,\r\n    width: relativeToScreen(28),\r\n    height: relativeToScreen(28),\r\n    borderRadius: relativeToScreen(6),\r\n    borderColor: 'white'\r\n  },\r\n  logout: {\r\n    height: relativeToScreen(33),\r\n    width: relativeToScreen(85),\r\n    marginTop: 0,\r\n    marginBottom: relativeToScreen(20),\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    // borderWidth: 1,\r\n    // borderColor: 'red',\r\n  },\r\n  h1: {\r\n    fontSize: relativeToScreen(25),\r\n    color: 'white'\r\n  },\r\n  h2: {\r\n    fontSize: relativeToScreen(20),\r\n    color: 'white',\r\n  },\r\n  h3: {\r\n    fontSize: relativeToScreen(17),\r\n    color: 'white',\r\n  },\r\n  h4: {\r\n    fontSize: relativeToScreen(16),\r\n    color: 'white',\r\n  },\r\n}\r\n\r\nexport function blinkButton(setPressed, timeSpan=200) {\r\n  setPressed(true)\r\n  setTimeout(() => {\r\n    setPressed(false)\r\n  }, timeSpan);\r\n}\r\n\r\nexport async function postSettings(settings, username) {\r\n  // fetch post display background image value to user settings in server\r\n  try {\r\n   console.log('POST SETTINGS STATUS: Started...')\r\n   console.log('POST SETTINGS STATUS: LOGGING NEW SETTING VALUES... ')\r\n   console.log(JSON.stringify(settings))\r\n   var postSettingsResult = {ok: false, status: '999', statusText: 'Post not fetched yet.'}\r\n   const postSettingsOpts = { \r\n     method: 'POST',\r\n     headers: {\r\n         'Content-Type': 'application/json',\r\n     },\r\n     body: JSON.stringify( settings ),\r\n   }\r\n   // var postDisplayResult = await fetch('http://localhost:3000/Users/' + this.context.username + '/settings', postColorSettingOpts);\r\n   postSettingsResult = await fetch( `${appServerURI}Users/${username}/settings`, postSettingsOpts);\r\n   const postSettingsStatus = 'Status: ' + postSettingsResult.status + ', ' + postSettingsResult.statusText\r\n\r\n   if (postSettingsResult.ok) {\r\n     console.log('POST SETTINGS STATUS: Successful.')\r\n     console.log(postSettingsStatus)\r\n         \r\n   } else {\r\n     console.log('POST SETTINGS STATUS: Failed. Throwing error...')\r\n     throw new Error(postSettingsStatus)\r\n   }\r\n } catch (error) {\r\n   alert('Erro no servidor. Tente novamente...')\r\n   console.log('Erro capturado:')\r\n   console.log(error);\r\n\r\n } finally {\r\n   console.log('POST DISPLAY BACKGROUND IMAGE STATUS: Finished.')\r\n   return postSettingsResult\r\n }\r\n} \r\n\r\nexport default class SettingsScreen extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isBackgroundColorSettingsOpen: false,\r\n      selectedColor: null,\r\n\r\n      isDisplayBackgroundImageLoading: false,\r\n      isChangeFontColorLoading: false,\r\n      isEnableHighResolutionLoading: false,\r\n      isRestoreColorLoading: false,\r\n      isSaveColorLoading: false,\r\n    }\r\n    this.syncUserSettings = this.syncUserSettings.bind(this);\r\n    this.setFontColor = this.setFontColor.bind(this);\r\n    this.setBackgroundColor = this.setBackgroundColor.bind(this);\r\n    this.SettingsScreen = this.SettingsScreen.bind(this);\r\n    this.ScreenSettings = this.ScreenSettings.bind(this);\r\n    this.ChooseImageSection = this.ChooseImageSection.bind(this);\r\n    this.DisplayBackgroundImageSection = this.DisplayBackgroundImageSection.bind(this);\r\n    this.ChangeFontColorSection = this.ChangeFontColorSection.bind(this);\r\n    this.EnableHighResolutionSection = this.EnableHighResolutionSection.bind(this);\r\n    this.ChangeBackgroundColorSection = this.ChangeBackgroundColorSection.bind(this);\r\n    this.ColorOptions = this.ColorOptions.bind(this);\r\n    this.ColorControl = this.ColorControl.bind(this);\r\n    this.onLogoutButtonPress = this.onLogoutButtonPress.bind(this);\r\n    this.onColorButtonPressFor = this.onColorButtonPressFor.bind(this);\r\n    this.onSaveColorButtonPress = this.onSaveColorButtonPress.bind(this);\r\n    this.onChangeFontColorSwitch = this.onChangeFontColorSwitch.bind(this);\r\n    this.ColorRow = this.ColorRow.bind(this);\r\n    this.isLoading = this.isLoading.bind(this);\r\n    this.logoutPressable = this.logoutPressable.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log('\"SettingsScreen\" component did mount')\r\n    this.syncUserSettings()\r\n  }\r\n  componentWillUnmount() {\r\n    console.log('\"SettingsScreen\" component will unmount...')\r\n  }\r\n\r\n  syncUserSettings() {\r\n    console.log('SYNC SETTINGS STATUS: INITIALIZING...')\r\n    this.setFontColor()\r\n    this.setBackgroundColor()\r\n  }\r\n\r\n  setFontColor() {\r\n    const settings = this.props.appState.user.settings\r\n    const fontColor = settings.fontColorDark ? '#000' : '#fff'\r\n    for (let h of ['h1', 'h2', 'h3', 'h4']) {\r\n      styles[h] = { ...styles[h], color: fontColor }\r\n    }\r\n  }\r\n\r\n  setBackgroundColor() {\r\n    const settings = this.props.appState.user.settings\r\n    this.setState({\r\n      selectedColor: settings.backgroundColor,\r\n    })\r\n    this.props.navigation.setParams({selectedColor: settings.backgroundColor})  // Necessary to change the tab bar color dinamically in App.js\r\n  }\r\n\r\n  SettingsScreen() {\r\n    const settings = this.props.appState.user.settings\r\n    const backgroundImage = settings.backgroundImage\r\n    const backgroundColor = this.state.selectedColor\r\n    const imgURI = settings.displayBackgroundImage ? (backgroundImage ? ( settings.enableHighResolution ? backgroundImage.urls.raw : backgroundImage.urls.regular ) : null) : null\r\n    return(\r\n      <ImageBackground\r\n      source={{uri : imgURI}}\r\n      style={[ styles.background, {backgroundColor: backgroundColor} ]}\r\n      >\r\n        <ScrollView style={styles.scrollView}>\r\n          <View style={styles.foreground}>\r\n            <View style={styles.header}>\r\n              <Text style={styles.h1}>Configurações</Text>\r\n            </View>\r\n            <this.ScreenSettings />\r\n          </View>\r\n        </ScrollView>\r\n      </ImageBackground>\r\n    )\r\n  }\r\n\r\n  ScreenSettings() {\r\n    return (\r\n      <>\r\n        <this.ChooseImageSection />\r\n        <this.DisplayBackgroundImageSection />\r\n        <this.EnableHighResolutionSection />\r\n        <this.ChangeFontColorSection />\r\n        <this.ChangeBackgroundColorSection />\r\n        <this.ColorOptions />\r\n        <this.logoutPressable />\r\n      </>\r\n    )\r\n  }\r\n\r\n  ChooseImageSection() {\r\n    const [isChooseImageButtonPressed, setIsChooseImageButtonPressed] = React.useState(false)\r\n    let fontColor = styles.h1.color\r\n    let fontColorTransp = fontColor + '8'\r\n    return(\r\n      <Pressable\r\n      onPressIn={() => blinkButton(setIsChooseImageButtonPressed)}\r\n      onPress={() => this.props.navigation.navigate('WallpaperTopics')}\r\n      style={[styles.settingsRow, {backgroundColor: isChooseImageButtonPressed ? '#0003' : null }]}\r\n      >\r\n        <View style={{flexDirection: 'row', alignItems: 'center'}}>\r\n          <Icon name='image-outline' width={30} height={30} fill={fontColor} />\r\n          <Text style={[styles.h2, {marginLeft: 10}]}>Papel de parede</Text>\r\n        </View>\r\n        \r\n        <Icon\r\n        width={relativeToScreen(30)} height={relativeToScreen(30)}\r\n        name='arrow-ios-forward-outline'\r\n        fill={ fontColor } />\r\n      </Pressable>\r\n    )\r\n  }\r\n\r\n  DisplayBackgroundImageSection() {\r\n    const [isExposeImageButtonPressed, setIsExposeImageButtonPressed] = React.useState(false)\r\n    const displayBackgroundImageValue = this.props.appState.user.settings.displayBackgroundImage\r\n    const isLoading = this.state.isDisplayBackgroundImageLoading\r\n    return(\r\n      <Pressable\r\n      onPressIn={ () => blinkButton(setIsExposeImageButtonPressed) }\r\n      style={[styles.settingsRow, {backgroundColor: isExposeImageButtonPressed ? '#0003' : null }]}\r\n      >\r\n        <View style={{flexDirection: 'row', alignItems: 'center'}}>\r\n          <Icon name='eye-outline' width={relativeToScreen(30)} height={relativeToScreen(30)} fill={styles.h1.color} />\r\n          <Text style={[styles.h2, {marginLeft: relativeToScreen(10), marginRight: relativeToScreen(20)}]}>Ver papel de parede</Text>\r\n          { isLoading ? <ActivityIndicator color='blue' /> : null }\r\n        </View>\r\n        <Switch\r\n        disabled={isLoading}\r\n        trackColor={{ false: \"#767577\", true: \"#81b0ff\" }}\r\n        thumbColor={displayBackgroundImageValue ? \"#f4f3f4\" : \"#f4f3f4\"}\r\n        ios_backgroundColor=\"#3e3e3e\"\r\n        onValueChange={() => {\r\n          blinkButton(setIsExposeImageButtonPressed)\r\n          this.onDisplayBackgroundImageSwitch(!displayBackgroundImageValue)\r\n        }}\r\n        value={displayBackgroundImageValue}\r\n        />\r\n      </Pressable>\r\n    )\r\n  }\r\n\r\n  EnableHighResolutionSection() {\r\n    const [isEnableHighResolutionButtonPressed, setIsEnableHighResolutionButtonPressed] = React.useState(false)\r\n    const enableHighResolutionValue = this.props.appState.user.settings.enableHighResolution\r\n    const isLoading = this.state.isEnableHighResolutionLoading\r\n    return(\r\n      <Pressable\r\n      onPressIn={ () => blinkButton(setIsEnableHighResolutionButtonPressed)}\r\n      style={[styles.settingsRow, {backgroundColor: isEnableHighResolutionButtonPressed ? '#0003' : null }]}\r\n      >\r\n        <View style={{flexDirection: 'row', alignItems: 'center'}}>\r\n          {/* <Icon name='camera-outline' width={30} height={30} fill={styles.h1.color} /> */}\r\n          <NativeIcon name='high-definition' size={relativeToScreen(30)} color={styles.h1.color} />\r\n          <Text style={[styles.h2, {marginLeft: relativeToScreen(10), marginRight: relativeToScreen(20)}]}>Alta definição</Text>\r\n          { isLoading ? <ActivityIndicator color='blue' /> : null }\r\n        </View>\r\n        <Switch\r\n        disabled={isLoading}\r\n        trackColor={{ false: \"#767577\", true: \"#81b0ff\" }}\r\n        thumbColor={enableHighResolutionValue ? \"#f4f3f4\" : \"#f4f3f4\"}\r\n        ios_backgroundColor=\"#3e3e3e\"\r\n        onValueChange={() => {\r\n          blinkButton(setIsEnableHighResolutionButtonPressed)\r\n          this.onEnableHighResolutionSwitch(!enableHighResolutionValue)\r\n        }}\r\n        value={enableHighResolutionValue}\r\n        />\r\n      </Pressable>    \r\n    )\r\n  }\r\n\r\n  ChangeFontColorSection() {\r\n    const [isChangeFontColorButtonPressed, setIsChangeFontColorButtonPressed] = React.useState(false)\r\n    const changeFontColorValue = this.props.appState.user.settings.fontColorDark\r\n    const isLoading = this.state.isChangeFontColorLoading\r\n    return(\r\n      <Pressable\r\n      onPressIn={ () => blinkButton(setIsChangeFontColorButtonPressed)}\r\n      style={[styles.settingsRow, {backgroundColor: isChangeFontColorButtonPressed ? '#0003' : null }]}\r\n      >\r\n        <View style={{flexDirection: 'row', alignItems: 'center'}}>\r\n          <Icon name='moon-outline' width={relativeToScreen(30)} height={relativeToScreen(30)} fill={styles.h1.color} />\r\n          <Text style={[styles.h2, {marginLeft: relativeToScreen(10), marginRight: relativeToScreen(20)}]}>Texto escuro</Text>\r\n          { isLoading ? <ActivityIndicator color='blue' /> : null }\r\n        </View>\r\n        <Switch\r\n        disabled={isLoading}\r\n        trackColor={{ false: \"#767577\", true: \"#81b0ff\" }}\r\n        thumbColor={changeFontColorValue ? \"#f4f3f4\" : \"#f4f3f4\"}\r\n        ios_backgroundColor=\"#3e3e3e\"\r\n        onValueChange={() => {\r\n          blinkButton(setIsChangeFontColorButtonPressed)\r\n          this.onChangeFontColorSwitch(!changeFontColorValue)\r\n        }}\r\n        value={changeFontColorValue}\r\n        />\r\n      </Pressable>    \r\n    )\r\n  }\r\n\r\n  ChangeBackgroundColorSection() {\r\n    const [isColorButtonPressed, setIsColorButtonPressed] = React.useState(false)\r\n    const settings = this.props.appState.user.settings\r\n    const newColorUnselected = this.state.selectedColor == settings.backgroundColor\r\n    let fontColor = styles.h1.color\r\n    let fontColorTransp = fontColor + '8'\r\n    const seeWallpaper = settings.displayBackgroundImage\r\n    return(\r\n      <Pressable\r\n      onPressIn={() => blinkButton(setIsColorButtonPressed)}\r\n      onPress={() => {\r\n        this.setState({ isBackgroundColorSettingsOpen: !this.state.isBackgroundColorSettingsOpen })\r\n        if (!newColorUnselected) this.syncUserSettings()\r\n      }}\r\n      disabled={seeWallpaper}\r\n      style={[styles.settingsRow, {backgroundColor: isColorButtonPressed ? '#0003' : null }]}\r\n      >\r\n        <View style={{flexDirection: 'row', alignItems: 'center'} }>\r\n          <Icon\r\n          name='color-palette-outline'\r\n          height={relativeToScreen(30)}\r\n          width={relativeToScreen(30)}\r\n          fill={ seeWallpaper ? fontColorTransp : fontColor }\r\n          style={{marginRight: 0}}\r\n          />\r\n          <Text style={[styles.h2, {color: seeWallpaper ? fontColorTransp : fontColor, marginLeft: relativeToScreen(10)}]}>Tema</Text>\r\n        </View>\r\n        <View style={{flexDirection: 'row', alignItems: 'center'} }>\r\n          <Icon\r\n          width={relativeToScreen(30)} height={relativeToScreen(30)}\r\n          name={this.state.isBackgroundColorSettingsOpen ? 'arrow-ios-upward-outline' : 'arrow-ios-downward-outline' }\r\n          fill={ seeWallpaper ? fontColorTransp : fontColor } />\r\n        </View>\r\n      </Pressable>    \r\n    )\r\n  }\r\n\r\n  ColorOptions() {\r\n    return(\r\n      this.state.isBackgroundColorSettingsOpen ? (\r\n        <>\r\n          <ScrollView\r\n          nestedScrollEnabled\r\n          style={styles.colorBox}\r\n          >\r\n            { colorList.map(color => {\r\n              return (\r\n                <this.ColorRow color={color} key={'color-' + color} />\r\n              )\r\n            }) }\r\n          </ScrollView>\r\n          <this.ColorControl />\r\n        </>\r\n      ) : (\r\n        null\r\n      )\r\n    )\r\n  }\r\n\r\n  ColorRow({color}) {\r\n    const [isColorRowPressed, setIsColorRowPressed] = React.useState(false)\r\n    const isLoading = this.state.isRestoreColorLoading | this.state.isSaveColorLoading\r\n    return(\r\n      <Pressable\r\n      onPressIn={ () => blinkButton(setIsColorRowPressed, 300) }\r\n      onPress={ this.onColorButtonPressFor(color) }\r\n      disabled={isLoading}\r\n      style={[styles.colorRow, {backgroundColor: isColorRowPressed ? '#0003' : null }]}>\r\n        <Text style={[\r\n          styles.h3,\r\n          this.state.selectedColor == color\r\n          ? {fontStyle: 'italic', textDecorationLine: 'underline' }\r\n          : {fontStyle: 'italic', textDecorationLine: 'none' }\r\n        ]}>{ capitalize(color) }</Text>\r\n        <View style={[ styles.colorSquare, { backgroundColor: color, borderWidth: this.state.selectedColor==color ? 3 : 0 }]} />\r\n      </Pressable>\r\n    )\r\n  }\r\n\r\n  ColorControl() {\r\n    const newColorUnselected = this.state.selectedColor == this.props.appState.user.settings.backgroundColor\r\n    const isLoading = this.state.isRestoreColorLoading | this.state.isSaveColorLoading\r\n    return(\r\n      <View style={[styles.settingsRow, {justifyContent: 'space-between'}]}>\r\n        <Pressable\r\n        disabled={isLoading | newColorUnselected}\r\n        style={{ justifyContent: 'center', alignItems: 'center', width: relativeToScreen(95) }}\r\n        // onPressIn={() => blinkButton((bool) => this.setState({isRestoreColorLoading: bool}))}\r\n        onPress={() => {\r\n          this.setState({isRestoreColorLoading: true})\r\n          this.syncUserSettings()\r\n          this.setState({isRestoreColorLoading: false})\r\n        }}\r\n        >\r\n          <Text\r\n            style={[styles.h2, { \r\n              textAlign: 'center',\r\n              color: isLoading | newColorUnselected ? styles.h1.color + '6' : styles.h1.color\r\n            }]}\r\n          >\r\n            { this.state.isRestoreColorLoading ? <ActivityIndicator color='blue' /> :  'Restaurar' }\r\n          </Text>\r\n        </Pressable>\r\n\r\n        <Pressable\r\n        disabled={isLoading | newColorUnselected}\r\n        onPress={this.onSaveColorButtonPress}\r\n        style={{ justifyContent: 'center', alignItems: 'center', width: relativeToScreen(75) }}\r\n        >\r\n          <Text style={[styles.h2, {width: relativeToScreen(65), textAlign: 'center', color: isLoading | newColorUnselected ? styles.h1.color + '6' : styles.h1.color}]}>\r\n            { this.state.isSaveColorLoading ? <ActivityIndicator color='blue' /> : 'Aplicar' }\r\n          </Text>\r\n        </Pressable>\r\n      </View>\r\n    )\r\n  }\r\n\r\n  isLoading() {\r\n    return (\r\n      this.state.isDisplayBackgroundImageLoading | \r\n      this.state.isChangeFontColorLoading |\r\n      this.state.isRestoreColorLoading |\r\n      this.state.isEnableHighResolutionLoading |\r\n      this.state.isSaveColorLoading\r\n    )\r\n  }\r\n\r\n  logoutPressable() {\r\n    const [ isLogoutButtonPressed, setIsLogoutButtonPressed ] = React.useState(false)\r\n    const isLoading = this.isLoading()\r\n    const logoutColor = isLoading ? styles.h1.color+'8' : 'red'\r\n    return(\r\n      <Pressable   // logout pressable\r\n      onPress={() => {\r\n        blinkButton(setIsLogoutButtonPressed)\r\n        this.onLogoutButtonPress()\r\n      }}\r\n      disabled={isLoading}\r\n      style={[ styles.settingsRow, {\r\n        justifyContent: 'flex-start',\r\n        marginBottom: relativeToScreen(30),\r\n        backgroundColor: isLogoutButtonPressed ? styles.h1.color+'8' : null\r\n      }]}\r\n      >\r\n        <Icon name='log-out' width={relativeToScreen(30)} height={relativeToScreen(30)} fill={logoutColor} />\r\n        <Text style={[styles.h2, { marginLeft: relativeToScreen(10), color: logoutColor }]}>Logout</Text>\r\n      </Pressable>\r\n    )\r\n  }\r\n\r\n  onColorButtonPressFor(color) {\r\n    function onColorButtonPress() {\r\n      this.setState({ selectedColor: color })\r\n      this.props.navigation.setParams({selectedColor: color}) // Necessary to change the tab bar color dinamically in App.js\r\n    }\r\n    return onColorButtonPress.bind(this);\r\n  }\r\n\r\n  async onDisplayBackgroundImageSwitch(value) {\r\n    this.setState({ isDisplayBackgroundImageLoading: true });\r\n    const newSettings = {displayBackgroundImage: value}\r\n    const postDisplayResult = await postSettings(newSettings, this.props.appState.user.username)\r\n    if (postDisplayResult.ok) {\r\n      // sync user data with app or entries component\r\n      await this.props.appState.syncUserData()\r\n    }\r\n    this.setState({ isDisplayBackgroundImageLoading: false });\r\n  }\r\n\r\n  async onChangeFontColorSwitch(value) {\r\n    this.setState({ isChangeFontColorLoading: true });\r\n    const newSettings = {fontColorDark: value}\r\n    const postDisplayResult = await postSettings(newSettings, this.props.appState.user.username)\r\n    if (postDisplayResult.ok) {\r\n      // sync user data with app or entries component\r\n      await this.props.appState.syncUserData()\r\n      // update style variable with new data\r\n      this.setFontColor()\r\n    }\r\n    this.setState({ isChangeFontColorLoading: false });\r\n  }\r\n\r\n  async onEnableHighResolutionSwitch(value)  {\r\n    this.setState({ isEnableHighResolutionLoading: true });\r\n    const newSettings = {enableHighResolution: value}\r\n    const postHighResolutionResult = await postSettings(newSettings, this.props.appState.user.username)\r\n    if (postHighResolutionResult.ok) {\r\n      // sync user data with app or entries component\r\n      await this.props.appState.syncUserData()\r\n      // update style variable with new data\r\n    }\r\n    this.setState({ isEnableHighResolutionLoading: false });\r\n  }\r\n\r\n  async onSaveColorButtonPress() {\r\n    // fetch post selected color to user settings in server\r\n    console.log('POST COLOR STATUS: Started...')\r\n    this.setState({ isSaveColorLoading: true });\r\n    const colorSetting = {\r\n      backgroundColor: this.state.selectedColor\r\n    }\r\n    const postColorResult = await postSettings(colorSetting, this.props.appState.user.username)\r\n    if (postColorResult.ok) {\r\n      if (this.props.appState.user.settings.displayBackgroundImage) {\r\n        await this.onDisplayBackgroundImageSwitch(false)\r\n      } else {\r\n        // sync user data with app or entries component\r\n        await this.props.appState.syncUserData()\r\n      }\r\n      // initialize settings\r\n      this.syncUserSettings()\r\n    }\r\n    console.log('POST COLOR STATUS: Finished.')\r\n    this.setState({ isSaveColorLoading: false });\r\n  }\r\n\r\n  async onLogoutButtonPress() {\r\n    await keepUserConnectionAlive(null); // kills user connection\r\n    // this.props.route.params.logout();\r\n    this.props.appState.logout()\r\n  }\r\n\r\n  render() {\r\n    console.log('Rendering \"SettingsScreen\" component...')\r\n    return (\r\n      <this.SettingsScreen />\r\n    );  \r\n  }\r\n}\r\n","import React, { Component, useState, useEffect } from 'react';\r\nimport { FlatList, Text, SafeAreaView, Pressable, ActivityIndicator, Dimensions, ImageBackground, Platform, StatusBar } from 'react-native';\r\nimport { Icon } from 'react-native-eva-icons';\r\nimport * as Device from 'expo-device';\r\nconst isWindows = Device.osName == 'Windows'\r\nimport { capitalize } from './subcomponents/EditEmotions';\r\n\r\nconst appServerURI = 'https://mood-tracker-server.herokuapp.com/'\r\n\r\nfunction formatTopicName(name){\r\n  return capitalize(name.split('-').join(' '))\r\n}\r\n\r\nfunction buildApiUriParams(params) {\r\n  var uriParams = []\r\n  Object.keys(params).forEach( key => uriParams.push(key+'='+params[key]) )\r\n  return '?' + uriParams.join('&')\r\n}\r\n\r\nconst styles = {\r\n  mainView: {\r\n    height: '100%',\r\n    width: '100%',\r\n    // paddingTop: StatusBar.currentHeight\r\n  },\r\n  photosView: {\r\n    height: '100%',\r\n    width: '100%' ,\r\n  },\r\n  h1: {\r\n    fontSize: 26,\r\n    alignSelf: 'center',\r\n    // borderWidth: 1\r\n  },\r\n  header: {\r\n    position: 'absolute',\r\n    top: 0,\r\n    paddingTop: StatusBar.currentHeight,\r\n    width: '100%',\r\n    height: '20%',\r\n    backgroundColor: 'rgba(255,255,255,0.5)',\r\n    justifyContent: 'space-evenly',\r\n    alignItems: 'center'\r\n  },\r\n  headerLabel: {\r\n    // borderWidth: 1,\r\n    width: '70%',\r\n    fontSize: 22,\r\n    alignSelf: 'center',\r\n    textAlign: 'center',\r\n  },\r\n  status: {\r\n    backgroundColor: 'rgb(230,230,230)',\r\n    width: '100%',\r\n    height: '20%',\r\n    borderRadius: 20,\r\n    alignItems: 'center',\r\n    justifyContent: 'center'\r\n  },\r\n  statusText: {\r\n    fontSize: 18,\r\n    color: 'black'\r\n  },\r\n  image: {\r\n    width: '100%',\r\n    height: '100%',\r\n    alignItems: 'center',\r\n    justifyContent: 'center'\r\n  },\r\n}\r\n\r\nasync function getUnsplash(endpoint, params) {\r\n  console.log('UNSPLASH GET PHOTOS STATUS: STARTED...')\r\n  const reqParams = {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify({\r\n      endpoint: endpoint,\r\n      queryParams: params,\r\n    }),\r\n  }\r\n  var result, result_json, success\r\n  try {\r\n    result = await fetch(appServerURI + 'api/unsplash', reqParams)\r\n    if (result.ok) {\r\n      console.log(`UNSPLASH PHOTOS STATUS: FETCH SUCCESSFULL...`)\r\n\r\n      // let a = 'x-ratelimit-limit'\r\n      // let b = 'x-ratelimit-remaining'\r\n      // const headers = result.headers\r\n      // var limit, remaining\r\n      // switch (Platform.OS) {\r\n      //   case 'android':\r\n      //     limit = headers.map[a]\r\n      //     remaining = headers.map[b]          \r\n      //     break;\r\n      //   case 'web':\r\n      //     limit = headers.get(a)\r\n      //     remaining = headers.get(b)\r\n      //     break\r\n      //   default:\r\n      //     limit = headers.get(a)\r\n      //     remaining = headers.get(b)\r\n      //     break\r\n      // }\r\n      // console.log(`UNSPLASH PHOTOS STATUS:\\n  x-ratelimit-limit: ${limit}\\n  x-ratelimit-remaining: ${remaining}`)\r\n\r\n      result_json = await result.json()\r\n      success = result_json.length\r\n      if (success) {\r\n        console.log(`UNSPLASH PHOTOS STATUS: JSON RESULT SUCCESSFULL. RETRIEVED ${success} PHOTOS...`)\r\n        return result_json\r\n\r\n      } else {\r\n        console.log(`UNSPLASH PHOTOS STATUS: JSON RESULT FAILED. Logging json value...`)\r\n        console.log(result_json)\r\n        return null\r\n      }\r\n    } else {\r\n      console.log(`UNSPLASH GET PHOTOS STATUS: FETCH FAILED. Status code: ${result.status}, Text: ${result.statusText}..`)\r\n    }\r\n  } catch (error) {\r\n    console.log('UNSPLASH GET PHOTOS STATUS: ERROR CATCHED. LOGGING ERROR...')\r\n    console.log(error)\r\n    return null\r\n  }\r\n}\r\n\r\nconst Item = (props) => {\r\n  const topicsScreen = props.route.name == 'WallpaperTopics'\r\n  const photoURI = topicsScreen ? props.item.cover_photo.urls.regular : props.item.urls.regular\r\n  const nextScreenName = topicsScreen ? 'Wallpapers' : 'WallpaperZoom'\r\n  \r\n  const screenHeight = props.windowHeight + (Platform.OS != 'web' ? StatusBar.currentHeight : 0)\r\n  const photoHeight = topicsScreen ? ( isWindows ? screenHeight/3  : screenHeight/4 ) : ( isWindows ? screenHeight/2 : screenHeight/2 )\r\n  const photoWidth = topicsScreen ? ( isWindows ? '33.333333%' : '50%' ) : ( isWindows ? '50%' : '50%' )\r\n  return(\r\n    <Pressable\r\n      onPress={() => props.navigation.navigate( nextScreenName , { selectedImage: props.item })}\r\n      style={[{ minHeight: 70, height: photoHeight, width: photoWidth, margin: 0}]}\r\n    >\r\n      <ImageBackground source={{ uri:  photoURI }} style={styles.image} >\r\n        <Text style={[styles.h1, {width: '80%', color: 'white', textAlign: 'center'}]}>{ topicsScreen ? formatTopicName(props.item.slug) : '' }</Text>\r\n      </ImageBackground>\r\n    </Pressable>\r\n  )\r\n};\r\n\r\nexport class WallpapersComponent extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state={\r\n      photos: null,\r\n      page: null,\r\n      windowHeight: Dimensions.get('window').height,\r\n      isPhotosLoading: false,\r\n      hideHeader: false,\r\n    };\r\n    this.initializePhotosAsync = this.initializePhotosAsync.bind(this);\r\n    this.WallpapersHeaderText = this.WallpapersHeaderText.bind(this);\r\n    this.WallpapersHeader = this.WallpapersHeader.bind(this);\r\n    this.renderItem = this.renderItem.bind(this);\r\n    this.PhotoList = this.PhotoList.bind(this);\r\n    this.ControlButtons = this.ControlButtons.bind(this);\r\n    this.loadNextPagePhotosAsync = this.loadNextPagePhotosAsync.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log('\"Wallpapers\" component did mount...')\r\n    // StatusBar.setStatusBarTranslucent(true)\r\n    this.initializePhotosAsync()\r\n  }\r\n\r\n  async initializePhotosAsync() {\r\n    this.setState({isPhotosLoading: true})\r\n    let route = this.props.route\r\n    if (route.name=='WallpaperTopics') {\r\n      let asyncResult = await getUnsplash(`topics`, {page: 1, per_page: 30, order_by: 'position'})\r\n      this.setState({photos: asyncResult}) \r\n\r\n    } else {\r\n      let endpoint = `topics/${route.params.selectedImage.id}/photos`\r\n      let asyncResult = await getUnsplash(endpoint, {page: 1, per_page: 30, order_by: 'popular', orientation: 'portrait'})\r\n      this.setState({photos: [ route.params.selectedImage.cover_photo, ...asyncResult ], page: 1}) \r\n    }\r\n    this.setState({isPhotosLoading: false}) \r\n  }  \r\n\r\n  async loadNextPagePhotosAsync() {\r\n    console.log('LOAD NEXT PHOTOS PAGE STATUS: STARTED... ')\r\n    this.setState({isPhotosLoading: true})\r\n    let endpoint = `topics/${this.props.route.params.selectedImage.id}/photos`\r\n    let asyncResult = await getUnsplash(endpoint, {page: this.state.page+1, per_page: 30, order_by: 'popular', orientation: 'portrait'})\r\n    if (asyncResult) {\r\n      console.log('LOAD NEXT PHOTOS PAGE STATUS: SUCCESSFUL! ')\r\n      this.setState((prevState) => ({\r\n          photos: [ ...prevState.photos, ...asyncResult ],\r\n          page: prevState.page+1,\r\n        }))   \r\n    } else {\r\n      console.log('LOAD NEXT PHOTOS PAGE STATUS: FAILED! ')\r\n    }\r\n      console.log('LOAD NEXT PHOTOS PAGE STATUS: FINISHED. ')\r\n      this.setState({isPhotosLoading: false})\r\n  }\r\n\r\n  renderItem = ({ item }) => (\r\n    <Item item={item} windowHeight={this.state.windowHeight} {...this.props} />\r\n  );\r\n\r\n  WallpapersHeader () {\r\n    const hideHeader = this.state.hideHeader\r\n    const topicsScreen = this.props.route.name == 'WallpaperTopics'\r\n    return(\r\n      !hideHeader ? (\r\n        <Pressable\r\n        style={[ styles.header, {height: topicsScreen ? '20%' : '23%' } ]}\r\n        onPress={() => {this.setState({ hideHeader: true }); console.log('close button clicked...')}}\r\n        >\r\n          <this.WallpapersHeaderText hideHeader={hideHeader} />\r\n        </Pressable>  \r\n      ) : (\r\n        null\r\n      )\r\n    )\r\n  }\r\n\r\n  WallpapersHeaderText () {\r\n    const topicsScreen = this.props.route.name=='WallpaperTopics'\r\n    return(\r\n      this.state.isPhotosLoading ? (\r\n        <ActivityIndicator size='large' color='black' />\r\n      ) : (\r\n        this.state.photos ? (\r\n          <>\r\n            { !topicsScreen ? <Text style={[styles.h1]}>{ formatTopicName(this.props.route.params.selectedImage.slug) }</Text> : null }\r\n            <Text\r\n            style={[styles.headerLabel, {fontSize: topicsScreen ? 26 : 22 }]}\r\n            >\r\n              { this.props.route.params.headerText }</Text>\r\n          </>\r\n        ) : (\r\n          <Text style={styles.headerLabel}>Erro ao carregar imagems...</Text>\r\n        )\r\n     )\r\n    )\r\n  }\r\n  \r\n  PhotoList = () => {\r\n  \r\n    useEffect(() => {\r\n      const subscription = Dimensions.addEventListener('change', ({ window, screen }) => {\r\n        const windowHeightDifference = Math.abs(this.state.windowHeight-window.height)\r\n        if ( windowHeightDifference > 100) {\r\n          this.setState({windowHeight: window.height})\r\n        }\r\n      });\r\n      return () => subscription?.remove();\r\n    });\r\n\r\n    return(\r\n      <FlatList\r\n        data={ this.state.photos }\r\n        renderItem={ this.renderItem }\r\n        keyExtractor={ item => item.id }\r\n        numColumns={ isWindows ? 3  : 2 }\r\n        initialNumToRender={ null }\r\n        onEndReached={ this.props.route.name == 'WallpaperTopics' ? null : this.loadNextPagePhotosAsync }\r\n        refreshing={ this.state.isPhotosLoading }\r\n        />\r\n    )\r\n  }\r\n\r\n  ControlButtons() {\r\n    const topRight = {\r\n      top: Platform.OS != 'web' ? StatusBar.currentHeight : 0,\r\n      right: 0,\r\n      margin: '1.5%',\r\n      backgroundColor: '#fff0',\r\n    }\r\n\r\n    return(\r\n      !this.state.hideHeader ? (\r\n        <Pressable\r\n        style={[{\r\n          position: 'absolute',\r\n          width: 30,\r\n          height: 30,\r\n          alignItems: 'center',\r\n          justifyContent: 'center',\r\n          borderRadius: 30/2,\r\n        },\r\n        topRight\r\n        ]}\r\n        onPress={() => this.setState({hideHeader: true})}\r\n        >\r\n          <Icon name='close' width={30} height={30} fill='#fff' />\r\n        </Pressable>\r\n      ) : (\r\n        null\r\n      )\r\n    )\r\n  }\r\n\r\n  render() {\r\n    console.log('Rendering \"Wallpapers\" component...')\r\n    const settings = this.props.appState.user.settings\r\n    return (\r\n      <SafeAreaView style={styles.mainView}>\r\n        <SafeAreaView style={[styles.photosView, {backgroundColor: settings.backgroundColor}]}>\r\n          <this.PhotoList />\r\n          <this.WallpapersHeader />\r\n          <this.ControlButtons />\r\n        </SafeAreaView>\r\n      </SafeAreaView>\r\n    );  \r\n  }\r\n\r\n}","import { createContext } from 'react';\r\n\r\nconst UserContext = createContext();\r\n\r\nexport default UserContext","import React, { useContext } from 'react';\r\nimport { View, Text, Image, ImageBackground, Pressable, ActivityIndicator, Platform, Linking } from 'react-native';\r\n// import { postDisplayBackgroundImage } from './SettingsScreen';\r\nimport { postSettings } from './SettingsScreen';\r\nimport UserContext from '../shared/UserContext';\r\n\r\nvar styles = {\r\n  fotter: {\r\n    position: 'absolute',\r\n    bottom: 0,\r\n    height: '22%',\r\n    width: '100%',\r\n    justifyContent: 'space-evenly',\r\n  },\r\n  controlView: {\r\n    // flex: 0.4,\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-evenly',\r\n    alignItems: 'center',\r\n  },\r\n  attributionView: {\r\n    // flex: 0.6,\r\n    flexDirection: 'row',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n controlButton: {\r\n    width: '35%',\r\n    height: 40,\r\n    borderWidth: 1,\r\n    borderRadius: 20,\r\n    backgroundColor: '#f4f3f4',\r\n    alignItems: 'center',\r\n    justifyContent: 'center'\r\n  },\r\n  controlButtonLabel: {\r\n    color: '#000',\r\n    fontSize: 17,\r\n    fontWeight: 'bold'\r\n  },\r\n  userProfileImage: {\r\n    width: 50,\r\n    height: 50,\r\n    borderRadius: 25\r\n  },\r\n  attributionLabel: {\r\n    color: 'white',\r\n    fontSize: 14,\r\n    fontStyle: 'italic',\r\n    paddingLeft: 10,\r\n    textAlign: 'left',\r\n    maxWidth: '78%',\r\n  },\r\n  attributionURL: {\r\n    textDecorationLine: 'underline'\r\n  },\r\n}\r\n\r\nconst openUserProfileFor = (userProfileHtmlLink) => {\r\n  return function () {\r\n    Linking.openURL( userProfileHtmlLink + '?utm_source=Mood-Tracker&utm_medium=referral');\r\n  } \r\n}\r\n\r\nconst openUnsplashURL = () => {\r\n  Linking.openURL('https://unsplash.com/?utm_source=Mood-Tracker&utm_medium=referral')\r\n}\r\n\r\nexport function WallpaperZoom(props) {\r\n\r\n  const appState = useContext(UserContext);\r\n  const settings = appState.user.settings\r\n  const [isSaveImageLoading, setIsSaveImageLoading] = React.useState(false);\r\n\r\n  async function onSaveImageButtonPress() {\r\n    // fetch post selected color to user settings in server\r\n    console.log('POST IMAGE STATUS: Started...');\r\n    setIsSaveImageLoading(true);\r\n    const imageSetting = {\r\n      backgroundImage: props.route.params.selectedImage\r\n    };\r\n\r\n    const postImageResult = await postSettings(imageSetting, appState.user.username)\r\n    if (postImageResult.ok) {\r\n      // sync user data with app or entries component\r\n      if (!settings.displayBackgroundImage) {\r\n        await postSettings({displayBackgroundImage: true}, appState.user.username)\r\n      }\r\n\r\n      await props.appState.syncUserData();\r\n      // navigate back to settings\r\n      setIsSaveImageLoading(false);\r\n      props.navigation.navigate('Settings');\r\n    } else {\r\n      setIsSaveImageLoading(false);\r\n    }\r\n    console.log('POST IMAGE STATUS: Finished.');\r\n  }\r\n\r\n  console.log('Returning \"WallpaperZoom\" component...')\r\n\r\n  const fontColorDark = settings.fontColorDark\r\n  const fontColor = fontColorDark ? '#000' : '#fff'\r\n  const altFontColor = fontColorDark ? '#fff' : '#000'\r\n  for (let label of ['attributionLabel', 'controlButtonLabel']) {\r\n    styles[label] = { ...styles[label], color: fontColor }\r\n  }\r\n  styles.controlButton = { ...styles.controlButton, backgroundColor: altFontColor + '8', borderColor: fontColor + '8' }\r\n  const selectedImage = props.route.params.selectedImage\r\n  const imgURI = settings.enableHighResolution ? selectedImage.urls.raw : selectedImage.urls.regular\r\n  return (\r\n    <ImageBackground\r\n      source={{ uri: imgURI }}\r\n      style={{ flex: 1, backgroundColor: settings.backgroundColor }}\r\n    >\r\n      <View style={styles.fotter}>\r\n        <View style={styles.controlView}>\r\n          <Pressable\r\n            onPress={() => props.navigation.goBack()}\r\n            style={styles.controlButton}\r\n          >\r\n            <Text style={styles.controlButtonLabel}>Voltar</Text>\r\n          </Pressable>\r\n          <Pressable\r\n              onPress={onSaveImageButtonPress}\r\n              style={styles.controlButton}\r\n          >\r\n            {isSaveImageLoading ? (\r\n              <ActivityIndicator color='blue' />\r\n            ) : (\r\n              <Text style={styles.controlButtonLabel}>Aplicar</Text>\r\n            )}\r\n          </Pressable>\r\n        </View>\r\n        <View style={styles.attributionView}>\r\n          <Image\r\n          source={{ uri: selectedImage.user.profile_image.large }}\r\n          style={styles.userProfileImage} />\r\n          <Text style={styles.attributionLabel}>\r\n            {'Photo by '}\r\n            <Text\r\n            onPress={openUserProfileFor(selectedImage.user.links.html)}\r\n            style={styles.attributionURL} >{ selectedImage.user.name }</Text>\r\n            {' on '}\r\n            <Text\r\n            onPress={openUnsplashURL}\r\n            style={styles.attributionURL}>{ 'Unsplash' }</Text>\r\n          </Text>\r\n        </View>\r\n      </View>\r\n    </ImageBackground>\r\n  );\r\n}\r\n","console.log('Importing victory module...')\r\nimport * as Victory from 'victory'\r\nexport default Victory","import React, { Component, useState } from 'react';\r\nimport { ImageBackground, View, Text, ScrollView, StatusBar, Pressable } from 'react-native';\r\nimport \"react-native\";\r\nimport { Icon } from 'react-native-eva-icons';\r\n// import VectorIcon from 'react-native-vector-icons/MaterialCommunityIcons';\r\nimport Victory from './victory'\r\n\r\nimport { relativeToScreen } from '../styles/loginStyles';\r\nimport { blinkButton } from './SettingsScreen';\r\nimport { Today, current, fullDateMap, formatWeek, formatMonth, formatDate, getNext, oneDigit, FullDates, intWeekDayMap, portugueseMonthSigs } from '../shared/dates';\r\n\r\nimport { moodColorsHEX } from './PostEntryComponent';\r\nimport { capitalize } from './subcomponents/EditEmotions';\r\nvar moodColorsObj = {}\r\nmoodColorsHEX.forEach((color, index) => {\r\n  moodColorsObj[index+1] = color\r\n})\r\n\r\nvar styles = {\r\n  background: {\r\n    flex: 1,\r\n    paddingTop: StatusBar.currentHeight,\r\n    paddingBottom: relativeToScreen(55),\r\n    alignItems: 'center',\r\n    justifyContent: 'space-between',\r\n  },\r\n  foreground: {\r\n    width: relativeToScreen(350),\r\n    paddingBottom: relativeToScreen(60),\r\n  },\r\n  header: {\r\n    height: relativeToScreen(120),\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  navigationRow: {\r\n    justifyContent: 'space-between',\r\n    height: relativeToScreen(60),\r\n    alignItems: 'flex-start',\r\n  },\r\n  card: {\r\n    marginBottom: '5%',\r\n    paddingVertical: relativeToScreen(5),\r\n    paddingHorizontal: relativeToScreen(10),\r\n    borderRadius: relativeToScreen(20),\r\n    backgroundColor: 'rgba(0,0,0,0.3)',\r\n  },\r\n  cardRow: {\r\n    flexDirection: 'row',\r\n    // paddingVertical: relativeToScreen(5),\r\n    alignItems: 'center',\r\n  },\r\n  cardHeader: {\r\n    height: relativeToScreen(39),\r\n    justifyContent: 'space-between',\r\n  },\r\n  periodButton: {\r\n    position: 'absolute',\r\n    // bottom: '7%',\r\n    bottom: relativeToScreen(25 + 55),\r\n    flexDirection: 'row',\r\n    alignSelf: 'center',\r\n    width: relativeToScreen(150),\r\n    height: relativeToScreen(40),\r\n    // borderWidth: 0.5,\r\n    // borderColor: '#000',\r\n    borderRadius: relativeToScreen(20),\r\n    backgroundColor: '#fff',\r\n    justifyContent: 'center',\r\n    alignItems: 'center'\r\n  },\r\n  chartView: {\r\n    marginTop: relativeToScreen(5),\r\n    marginBottom: relativeToScreen(5),\r\n    alignItems: 'center',\r\n    justifyContent: 'center'\r\n  },\r\n  controlRow: {\r\n  width: '100%',\r\n  height: relativeToScreen(30),\r\n  paddingHorizontal: relativeToScreen(5),\r\n  flexDirection: 'row',\r\n  alignItems: 'center',\r\n  justifyContent: 'space-between'\r\n  },\r\n  moodPieCard: {\r\n    width: relativeToScreen(330),\r\n    height: relativeToScreen(180),\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    paddingTop: relativeToScreen(5),\r\n    paddingBottom: relativeToScreen(10)\r\n  },\r\n  moodPieCardSection: {\r\n    height: '100%',\r\n    width: '50%',\r\n    alignItems: 'center',\r\n    justifyContent: 'center'\r\n  },\r\n  moodPieStatsView: {\r\n    width: relativeToScreen(150),\r\n    height: relativeToScreen(150),\r\n    alignItems: 'center',\r\n    justifyContent: 'space-between'\r\n  },\r\n  moodStatRow: {\r\n    width: '100%',\r\n    height: relativeToScreen(25),\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    justifyContent: 'space-evenly'\r\n  },\r\n  statsRowItem: {\r\n    width: '25%',\r\n    alignItems: 'center',\r\n    justifyContent: 'center'\r\n  },\r\n  moodCircleBadge: {\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    width: relativeToScreen(22),\r\n    height: relativeToScreen(22),\r\n    borderRadius: relativeToScreen(11)\r\n  },\r\n  h1: {\r\n    fontSize: relativeToScreen(25),\r\n    color: 'white'\r\n  },\r\n  h2: {\r\n    fontSize: relativeToScreen(20),\r\n    color: 'white',\r\n  },\r\n  h3: {\r\n    fontSize: relativeToScreen(17),\r\n    color: 'white',\r\n  },\r\n  h4: {\r\n    fontSize: relativeToScreen(15),\r\n    color: 'white',\r\n  },\r\n  h5: {\r\n    fontSize: relativeToScreen(13),\r\n    color: 'white',\r\n  },\r\n}\r\n\r\nconst moods = [1,2,3,4,5]\r\nlet moodMap = {\r\n  'Horrível': 1,\r\n  'Mal': 2,\r\n  'Regular': 3,\r\n  'Bem': 4,\r\n  'Ótimo': 5\r\n}\r\n\r\nconst periods = ['day', 'week', 'month', 'year']\r\nconst periodMap = {\r\n  'day': 'Dia',\r\n  'week': 'Semana',\r\n  'month':'Mês',\r\n  'year': 'Ano'\r\n}\r\n\r\nfunction ChartPanel({imgURI, backgroundColor, entries}) {\r\n\r\n  const currentDates = {\r\n    'day': Today(),\r\n    'week': { week: current('week'), year: current('year') },\r\n    'month': { month: current('month'), year: current('year') },\r\n    'year': current('year')\r\n  }\r\n  \r\n  const [ period, setPeriod ] = useState('day')\r\n  const [ date, setDate ] = useState(currentDates)\r\n\r\n  return(\r\n    <ImageBackground\r\n    source={{uri : imgURI}}\r\n    style={[ styles.background, {backgroundColor: backgroundColor} ]}\r\n    >\r\n      <ScrollView style={{width: '100%'}}>\r\n        <View style={[styles.foreground, {alignSelf: 'center'}]}>\r\n          <View style={styles.header}>\r\n            <Text style={styles.h1}>{'Painel'}</Text>\r\n          </View>\r\n          <NavigationRow date={date} setDate={setDate} period={period} />\r\n          <ChartCard\r\n          title={'Avaliações ' + ( period=='week' ? 'da ' : 'do ' )  + periodMap[period] }\r\n          Chart={MoodLineCard}\r\n          entries={entries}\r\n          date={date}\r\n          period={period}\r\n          initialMode={'expandir'}\r\n          modes={['expandir', 'enquadrar', 'enforcar']}\r\n          />\r\n          <ChartCard\r\n          title='Proporção das Avaliações'\r\n          Chart={MoodPieCard}\r\n          entries={entries}\r\n          date={date}\r\n          period={period}\r\n          initialMode={'expandir'}\r\n          modes={['expandir', 'enforcar', 'enquadrar']}\r\n          />\r\n        </View>\r\n      </ScrollView>\r\n      <Pressable\r\n      style={styles.periodButton}\r\n      onPress={() => setPeriod(periods[ periods[periods.length-1]==period ? 0 : periods.indexOf(period)+1 ])}\r\n      >\r\n        <Icon name='swap-outline' width={15} height={15} fill='#000' />\r\n        <Text style={[styles.h3, {color: '#000', fontWeight: 'bold'}]}>{ ' '+periodMap[period] }</Text>\r\n      </Pressable>\r\n    </ImageBackground>\r\n  )\r\n}\r\n\r\nfunction NavigationRow({date, setDate, period}) {\r\n  const formatPeriodDate = {\r\n    'day': formatDate,\r\n    'week': formatWeek,\r\n    'month': formatMonth,\r\n    'year': date => `Ano ${date}`\r\n  }\r\n  return(\r\n    <View style={[styles.cardRow, styles.navigationRow]}>\r\n      <DateNavigationButton\r\n      icon='arrow-back'\r\n      next='previous'\r\n      date={date}\r\n      setDate={setDate}\r\n      period={period}\r\n      />\r\n      <Text style={[styles.h2]}>{ formatPeriodDate[period](date[period]) }</Text>                                \r\n      <DateNavigationButton\r\n      icon='arrow-forward'\r\n      next='next'\r\n      date={date}\r\n      setDate={setDate}\r\n      period={period}\r\n      />\r\n    </View>\r\n  )\r\n}\r\n\r\nfunction DateNavigationButton({icon, next, date, setDate, period}) {\r\n  return(\r\n    <Pressable\r\n    onPress={() => setDate({\r\n      ...date,\r\n      [period]: getNext(date[period], next, period)\r\n    })}\r\n    hitSlop={relativeToScreen(15)}\r\n    >\r\n      <Icon\r\n      name={icon}\r\n      width={relativeToScreen(29)}\r\n      height={relativeToScreen(29)}\r\n      fill={styles.h1.color}\r\n      />\r\n    </Pressable>\r\n  )\r\n}\r\n\r\nfunction next(current, list) {\r\n  let index = list.indexOf(current)\r\n  return list[ index == list.length-1 ? 0 : index+1 ]\r\n}\r\n\r\nfunction datePeriodFilters(date, period) {\r\n  return {\r\n    'day': entry => entry.date==date[period],\r\n    'week': entry => fullDateMap(entry.date).week==date[period].week && fullDateMap(entry.date).year==date[period].year,\r\n    'month': entry => fullDateMap(entry.date).month==date[period].month && fullDateMap(entry.date).year==date[period].year,\r\n    'year': entry => fullDateMap(entry.date).year==date[period]\r\n  }\r\n}\r\n\r\nconst ChartCard = ({title, Chart, entries, date, period, initialMode=null, modes=[]}) => {\r\n  const filters = datePeriodFilters(date, period)\r\n  entries = entries.filter(filters[period])\r\n\r\n  const [ mode, setMode ] = useState(initialMode)\r\n  const [temporal, setTemporal] = useState('atemporal')\r\n  return(\r\n    <View style={styles.card}>\r\n      <View style={[styles.cardRow, styles.cardHeader]}>\r\n        <Text style={styles.h2}>{ title }</Text>\r\n        { temporal=='temporal' ?  <ModeSwapButton mode={mode} setMode={setMode} modes={modes} /> : null }\r\n      </View>\r\n      <View style={styles.chartView}>\r\n        <Chart entries={entries} date={date} period={period} mode={mode} temporal={temporal} setTemporal={setTemporal} />\r\n      </View>\r\n    </View>\r\n  )\r\n}\r\n\r\nfunction MoodLineCard({entries, date, period, mode, temporal, setTemporal}) {\r\n  const [interpolation, setInterpolation] = useState('catmullRom')\r\n\r\n  const data = entries.map((entry, index) => {\r\n    return({\r\n      x: index+1,\r\n      y: moodMap[entry.mood],\r\n      startTime: entry.startTime,\r\n      date: entry.date\r\n    })\r\n  })\r\n\r\n  return(\r\n    <View style={{width: '100%',  alignItems: 'center', justifyContent: 'center'}}>\r\n      <View style={{width: '100%',  alignItems: 'center', justifyContent: 'flex-start'}}>\r\n        { temporal=='temporal'\r\n          ? <MoodLineTemporal data={data} interpolation={interpolation} date={date} period={period} mode={mode} />\r\n          : <MoodLine data={data} interpolation={interpolation} date={date} period={period} /> \r\n        }\r\n      </View>\r\n      <ModeControlRow\r\n      var1={interpolation}\r\n      setVar1={setInterpolation}\r\n      var1Options={interpolations}\r\n      var2={temporal}\r\n      setVar2={setTemporal}\r\n      var2Options={['temporal', 'atemporal']}\r\n      />\r\n    </View>\r\n  )\r\n}\r\n\r\nconst interpolations = [ 'catmullRom', 'linear', 'natural', 'step', 'basis','cardinal', 'scatter' ]\r\n\r\nfunction ModeControlRow(props) {\r\n  return(\r\n    <View style={styles.controlRow}>\r\n      <ModeSwapButton mode={props.var1} setMode={props.setVar1} modes={props.var1Options} />\r\n      <ModeSwapButton mode={props.var2} setMode={props.setVar2} modes={props.var2Options} />\r\n    </View>\r\n  )\r\n}\r\n\r\nfunction ModeSwapButton({mode, setMode, modes}) {\r\n  const [ modeClicked, setModeClicked ] = useState(false)\r\n  return(\r\n    <Pressable\r\n    style={styles.cardRow}\r\n    onPress={() => {\r\n      blinkButton(setModeClicked, 200)\r\n      setMode(next(mode, modes))\r\n    }}\r\n    >\r\n      <Icon\r\n      name='swap-outline'\r\n      width={relativeToScreen(15)}\r\n      height={relativeToScreen(15)}\r\n      fill={ styles.h1.color + (modeClicked ? '6' : '')}\r\n      />\r\n      <Text style={[styles.h3, { color: styles.h1.color + (modeClicked ? '6' : '') } ]}>{ ' ' + capitalize(mode) }</Text>\r\n    </Pressable>\r\n  )\r\n}\r\n\r\nfunction stringTimeToSec(time) { // Expects 'hh:mm:ss' string format\r\n  return parseInt(time.slice(0,2))*3600 + parseInt(time.slice(3,5))*60 + parseInt(time.slice(6,8))\r\n}\r\n\r\nfunction sortData(data, by='time_s') {\r\n  return data.sort((a, b) => {\r\n    return a[by] - b[by];\r\n  })\r\n}\r\n\r\nfunction getDomain(data, by='time_s', space=0) {\r\n  if (data[0]) {\r\n    let x_min = data[0][by]\r\n    let x_max = data[data.length-1][by]\r\n    let x_range = x_max - x_min\r\n    // let x_dif = x_range / (data.length-1) * 0.5\r\n    let x_dif = x_range * space\r\n    return [ x_min - x_dif, x_max + x_dif ]\r\n  } else {\r\n    return [0,1]\r\n  }\r\n}\r\n\r\nfunction adjustedDomains(ticks, period) {\r\n  return {\r\n    'day': [0,1],\r\n    'week': [ticks[0], ticks[ticks.length-1] + (period=='year' ? 31 : 1) ],\r\n    'month': [ticks[0], ticks[ticks.length-1] + (period=='year' ? 31 : 1) ],\r\n    'year': [ticks[0], ticks[ticks.length-1] + (period=='year' ? 31 : 1) ],\r\n  }\r\n}\r\n\r\nfunction tickValueFromFullDate(fullDate, fullInitialDate) {\r\n  const date = new Date(fullDate.date)\r\n  const firstDate = new Date(fullInitialDate.date)\r\n  return (date - firstDate) / (1000*60*60*24) // Date difference in days\r\n}\r\n\r\nfunction getTickValues(date, period, mode) {\r\n  let filter = datePeriodFilters(date, period)[period]\r\n  var dates = FullDates.filter(filter)\r\n  if (period=='year') dates = dates.filter(fullDate => fullDate.day==1)\r\n  var ticks\r\n  if (period=='day'){\r\n    ticks = [] ; for (let i=0; i<24; i++) if (i%2==0 || [ 'enforcar', 'enquadrar' ].includes(mode)) ticks.push(i/24)\r\n  } else {\r\n    ticks = dates.map(fullDate => tickValueFromFullDate(fullDate, dates[0], period))\r\n    if (period=='month') ticks = ticks.filter((tick, index) => index%2==0 || [ 'enforcar', 'enquadrar' ].includes(mode) )\r\n  }\r\n  // console.log(dates)\r\n  // console.log(ticks)\r\n  // console.log(x_domain)\r\n  // console.log(data)\r\n  return ticks\r\n}\r\n\r\nfunction tickFormats(ticks) {\r\n  return {\r\n    'day' : tick => Math.round(tick*24) + 'h',\r\n    'week': tick => intWeekDayMap[tick],\r\n    'month': tick => tick+1,\r\n    'year': tick => portugueseMonthSigs[ticks.indexOf(tick)]\r\n  }\r\n}\r\n\r\nfunction appendTimeData(data, date, period) {\r\n  let datePeriodFilter = datePeriodFilters(date, period)[period]\r\n  var datePeriodDates = FullDates.filter(datePeriodFilter)\r\n  var time_s, time_d\r\n  data.forEach((entry, index) => {\r\n    // const dateDifMiliSec = (new Date(entry.date)) - (new Date(data[0].date)) // returns date difference in miliseconds\r\n    const dateDifMiliSec = (new Date(entry.date)) - (new Date(datePeriodDates[0].date)) // returns date difference in miliseconds\r\n    const dateDifDays = dateDifMiliSec / (1000*60*60*24)\r\n    time_s = stringTimeToSec(entry.startTime)\r\n    time_d = dateDifDays + time_s / (60*60*24)\r\n    data[index]['time_s'] = time_s\r\n    data[index]['time_d'] = time_d\r\n  })\r\n return data\r\n}\r\n\r\nfunction MoodLineTemporal({data, interpolation, date, period, mode}) {\r\n\r\n  data = data.filter(entry => entry.startTime)\r\n  data = appendTimeData(data, date, period)\r\n  const by = 'time_d'\r\n  data = sortData(data, by)\r\n\r\n  const xTickValues = getTickValues(date, period, mode)\r\n  var x_domains = {\r\n    'expandir': adjustedDomains(xTickValues, period)[period],\r\n    'enquadrar': getDomain(data, 'time_d', 0.1),\r\n    'enforcar': getDomain(data, 'time_d', 0),\r\n  }\r\n  const x_domain = x_domains[mode]\r\n\r\n  const x_label = {\r\n    'day': 'Horário',\r\n    'week': 'Dia da semana',\r\n    'month': 'Dia do mês',\r\n    'year': 'Mês'\r\n  }\r\n  return(\r\n    <Victory.VictoryChart \r\n    width={relativeToScreen(330)}\r\n    height={relativeToScreen(  225)}\r\n    padding={{left: relativeToScreen(40), right: relativeToScreen(20), top: relativeToScreen(0), bottom: relativeToScreen( 75 )}}\r\n    domain={{x: x_domain, y: [0.5, 5.5]}}\r\n    >\r\n      <Victory.VictoryAxis\r\n      dependentAxis\r\n      domain={[0.5, 5.5]}\r\n      tickFormat={ tick => parseInt(tick) }\r\n      style={{\r\n        axis: {stroke: \"#fff0\"},\r\n        grid: {stroke: \"#fff7\"},\r\n        tickLabels: {fontSize: relativeToScreen(17), padding: relativeToScreen(15) , fill: styles.h1.color},\r\n      }}\r\n      />\r\n      <Victory.VictoryAxis\r\n      label={ !data[0] ? 'Você não possui entradas nesse período.' : x_label[period] } \r\n      tickValues={data[0] ? xTickValues : null}\r\n      // tickValues={data.map(entry => entry[by])}\r\n      tickFormat={ data[0] ? tickFormats(xTickValues)[period] : null }\r\n      tickLabelComponent={<Victory.VictoryLabel angle={-90} dx={relativeToScreen(  -17 )} dy={relativeToScreen(-8)} />}\r\n      style={{\r\n        axis: {stroke: \"#fff0\"},\r\n        grid: {stroke: \"#fff0\"},\r\n        axisLabel: {\r\n          width: '70%',\r\n          padding: relativeToScreen( !data[0] ? 20 : (  50 ) ) ,\r\n          fontSize: styles.h3.fontSize,\r\n          fill: styles.h1.color,\r\n          // padding: 0\r\n        },\r\n        tickLabels: {fontSize: relativeToScreen(15), padding: 0, fill: data[0] ? styles.h1.color : '#0000' },\r\n        ticks: {stroke: styles.h1.color + ( !data[0] ? '0' : '' ), size: relativeToScreen(10)},\r\n      }}\r\n      />\r\n      { interpolation == 'scatter' ? null : (\r\n       <Victory.VictoryLine\r\n        data={data}\r\n        x={by} y='y'\r\n        interpolation={interpolation}\r\n        style={{\r\n          data: {\r\n            stroke: '#fff',\r\n            strokeWidth: 3,\r\n          },\r\n        }}\r\n        />\r\n      )}\r\n      <Victory.VictoryScatter\r\n      data={data}\r\n      x={by} y='y'\r\n      size={ ['month', 'year'].includes(period) ? 4.5 : 5.7 }\r\n      style={{ data: { fill: ({datum}) => moodColorsHEX[datum.y-1] } }}\r\n      />\r\n    </Victory.VictoryChart>\r\n  )\r\n}\r\n\r\nfunction MoodLine({data, date, period, interpolation}) {\r\n  data = data.filter(entry => entry.startTime)\r\n  data = data.map((entry, index) => ({ ...entry, x:index+1 }))\r\n  data = appendTimeData(data, date, period)\r\n  const by = 'time_d'\r\n  data = sortData(data, by)\r\n  return(\r\n    <Victory.VictoryChart \r\n    width={relativeToScreen(330)}\r\n    height={relativeToScreen(150)}\r\n    padding={{left: relativeToScreen(40), right: relativeToScreen(20), top: relativeToScreen(0), bottom: relativeToScreen(0)}}\r\n    domain={{x: [ 0.6, data.length + 0.4 ], y: [0.5, 5.5]}}\r\n    >\r\n      <Victory.VictoryAxis\r\n      dependentAxis\r\n      domain={[0.5, 5.5]}\r\n      tickFormat={ tick => parseInt(tick) }\r\n      style={{\r\n        axis: {stroke: \"#fff0\"},\r\n        grid: {stroke: \"#fff7\"},\r\n        tickLabels: {fontSize: relativeToScreen(17), padding: relativeToScreen(15), fill: styles.h1.color},\r\n      }}\r\n      />\r\n      { interpolation == 'scatter' ? null : (\r\n        <Victory.VictoryLine\r\n        data={data}\r\n        x='x' y='y'\r\n        interpolation={interpolation}\r\n        style={{\r\n          data: {\r\n            stroke: '#fff',\r\n            strokeWidth: 3,\r\n          },\r\n        }}\r\n        />\r\n      )}\r\n      <Victory.VictoryScatter\r\n      data={data}\r\n      size={relativeToScreen(5.7)}\r\n      style={{ data: { fill: ({datum}) => moodColorsHEX[datum.y-1] }}}\r\n      />\r\n    </Victory.VictoryChart>\r\n  )\r\n}\r\n\r\nfunction MoodPieCard({entries}) {\r\n  // const entries = entries.filter(entry => entry.date==Today())\r\n  var moodCount = { 1: 0, 2: 0, 3: 0, 4: 0, 5: 0 }\r\n  entries.forEach((entry) => {\r\n    moodCount[moodMap[entry.mood]] += 1\r\n  })\r\n  var moodPieData = []\r\n  moods.forEach(mood => {\r\n    if (moodCount[mood]) {\r\n      moodPieData.push({ x: mood, y: moodCount[mood] })\r\n    }\r\n  })\r\n  return(\r\n    <View style={styles.moodPieCard}>\r\n      <View style={styles.moodPieCardSection}>\r\n        { entries[0]\r\n          ? <MoodPie data={moodPieData} />\r\n          : <Text style={[styles.h3, {width: '85%', textAlign: 'center'}]}>Você não possui entradas nesse período.</Text>\r\n        }\r\n      </View>\r\n      <View style={styles.moodPieCardSection}>\r\n        <MoodPieStats data={moodPieData} nEntries={entries.length} />\r\n      </View>\r\n    </View>\r\n  )\r\n}\r\n\r\nfunction MoodPie({data}) {\r\n  var colorScale = []\r\n  data.forEach(row => {colorScale.push(moodColorsHEX[row.x-1])})\r\n  return(\r\n    <Victory.VictoryPie\r\n    data={data}\r\n    x='x' y='y'\r\n    width={relativeToScreen(180)}\r\n    height={relativeToScreen(130)}\r\n    padding={{left: 0, right: 0, top: 0, bottom: 0}}\r\n    innerRadius={relativeToScreen(32)}\r\n    padAngle={4}\r\n    cornerRadius={4}\r\n    colorScale={colorScale}\r\n    labels={[]}\r\n    />\r\n  )\r\n}\r\n\r\nfunction MoodPieStats({data, nEntries}) {\r\n  return(\r\n    <View style={styles.moodPieStatsView}>\r\n      { [5,4,3,2,1].map(mood => <MoodStat key={mood} mood={mood} data={data} nEntries={nEntries}/>) }\r\n    </View>\r\n  )\r\n}\r\n\r\nfunction MoodStat({mood, data, nEntries}) {\r\n  const moodCountObj = data.filter(countObj => countObj.x==mood)[0]\r\n  const moodCount = moodCountObj ? moodCountObj.y : 0\r\n  const moodProp = Math.round(100*moodCount/nEntries)\r\n  return(\r\n    <View style={styles.moodStatRow}>\r\n      <View style={styles.statsRowItem}>\r\n        <View style={[ styles.moodCircleBadge, {backgroundColor: moodColorsObj[mood]}]}>\r\n          <Text style={[styles.h4, {color: '#000'}]}>{mood}</Text>\r\n        </View>\r\n      </View>\r\n      <View style={styles.statsRowItem}>\r\n        <Text style={styles.h4}>{`${moodCount}/${nEntries}` }</Text>\r\n      </View>\r\n      <View style={styles.statsRowItem}>\r\n        <Icon name='arrow-forward-outline' width={relativeToScreen(15)} height={relativeToScreen(15)} fill={styles.h1.color} />\r\n      </View>\r\n      <View style={styles.statsRowItem}>\r\n        <Text style={styles.h4}>{ (moodProp ? moodProp : 0) + '%' }</Text>\r\n      </View>\r\n    </View>\r\n  )\r\n}\r\n\r\nexport default class Charts extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n    this.setFontColor = this.setFontColor.bind(this);\r\n    this.ChartsScreen = this.ChartsScreen.bind(this);\r\n  }\r\n\r\n  ChartsScreen() {\r\n    const settings = this.props.appState.user.settings\r\n    const backgroundImage = settings.backgroundImage\r\n    const imgURI =  settings.displayBackgroundImage\r\n    ? ( backgroundImage\r\n      ? ( settings.enableHighResolution\r\n        ? backgroundImage.urls.raw\r\n        : backgroundImage.urls.regular\r\n      ) : null\r\n    ) : null\r\n    const backgroundColor = settings.backgroundColor\r\n    var entries = this.props.appState.user.entries\r\n    return(\r\n      <ChartPanel\r\n      imgURI={imgURI}\r\n      backgroundColor={backgroundColor}\r\n      entries={entries}\r\n      />\r\n    )  \r\n  }\r\n\r\n  setFontColor(color) {\r\n    for (let h of ['h1', 'h2', 'h3', 'h4']) {\r\n      styles[h] = {\r\n        ...styles[h],\r\n        ['color']: color\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    console.log('Rendering \"Charts\" screen component...')\r\n    this.setFontColor(this.props.appState.user.settings.fontColorDark ? '#000' : '#fff')\r\n    return <this.ChartsScreen />\r\n  }\r\n}","import React, { Component, useContext } from 'react';\nimport { ImageBackground, View, Text, ActivityIndicator, Platform, Pressable } from 'react-native';\nimport { Icon } from 'react-native-eva-icons'\n// import AsyncStorage from '@react-native-async-storage/async-storage';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { Today } from './shared/dates'\nimport { NavigationContainer, DefaultTheme, DarkTheme } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\n//import { createDrawerNavigator } from '@react-navigation/drawer';\n\nimport EntrancesScreen from './components/EntrancesComponent';\nimport PostEntranceScreen from './components/PostEntryComponent';\nimport LoginScreen from './components/LoginComponent'\nimport SettingsScreen from './components/SettingsScreen';\nimport { WallpapersComponent } from './components/WallpapersComponent';\nimport { WallpaperZoom } from './components/WallpaperZoomComponent';\nimport Charts from './components/Charts'\nimport UserContext from './shared/UserContext';\n\nimport * as Linking from 'expo-linking';\nimport { relativeToScreen } from './styles/loginStyles';\nconst linking = {\n  prefixes: [Linking.createURL('/')],//, 'https://luisresende13.github.io/Mood-Tracker'],\n  config: {\n    screens: {\n      Home: {\n        screens: {\n          Entrances: 'Entrances',\n          Settings: 'Settings',\n        },\n      },\n      PostEntrance: 'PostEntrance',\n      WallpaperTopics: 'WallpaperTopics',\n      Wallpapers: 'Wallpapers',\n      WallpaperZoom: 'WallpaperZoom'\n    }\n  }\n};\nconst loginLinking = {\n  prefixes: [Linking.createURL('/')],//, 'https://luisresende13.github.io/Mood-Tracker'],\n  config: {\n    screens: {\n      Login: 'Login'\n    }\n  }\n};\nconsole.log('CREATE URL: ' + Linking.createURL('/'))\n\n// cors-midpoint uri (needed to avoid cors' allow-cross-origin error when fetching in web platforms)\nconst appServerURI = 'https://mood-tracker-server.herokuapp.com/'\n\nconst LoadingScreen = () => (\n  <ImageBackground source={require('./assets/wallpaper.png')} style={{flex: 1, alignItems: 'center', justifyContent: 'center'}}>\n    <ActivityIndicator size='large' color='#fff' />\n  </ImageBackground>\n)\n\nconst SettingsScreenProvider = (props) => {\n  const appState = useContext(UserContext)\n  return(\n    <SettingsScreen  appState={appState} {...props} />\n  )\n}\n\nconst EntrancesScreenProvider = (props) => {\n  const appState = useContext(UserContext)\n  return(\n    <EntrancesScreen  appState={appState} {...props} />\n  )\n}\n\nconst PostEntranceScreenProvider = (props) => {\n  const appState = useContext(UserContext)\n  return(\n    <PostEntranceScreen  appState={appState} {...props} />\n  )\n}\n\nconst WallpapersScreenProvider = (props) => {\n  const appState = useContext(UserContext)\n  return(\n    <WallpapersComponent  appState={appState} {...props} />\n  )\n}\n\nconst WallpaperZoomScreenProvider = (props) => {\n  const appState = useContext(UserContext)\n  return(\n    <WallpaperZoom appState={appState} {...props} />\n  )\n}\n\nconst ChartsScreenProvider = (props) => {\n  const appState = useContext(UserContext)\n  return(\n    <Charts appState={appState} {...props} />\n  )\n}\n\nconst tabBarLabelsMap = {\n  'Entrances': 'Entradas',\n  'Settings': 'Configurações',\n  'Charts': 'Painel'\n}\nconst tabBarIconsMap = {\n  'Entrances': 'inbox',\n  'Settings': 'settings-2',\n  'Charts': 'bar-chart'\n}\n\nfunction tabBarIcon(iconName) {\n  const iconFunc = ({ focused, color, size }) => {\n    let newIconName = focused\n    ? iconName\n    : iconName + '-outline';\n    return <Icon name={newIconName} width={size} height={size} fill={color}\n    style={{  borderBottomWidth: focused ? 1.5 : 0, borderColor: color}}\n    />\n  }\n  return iconFunc\n}\n\nconst tabNavigatorOptionsProvider = (settings) => {\n  const fontColor = settings.fontColorDark ? '#000' : '#fff'\n  return ({ route }) => {\n    return(\n      {\n        headerShown: false,\n        tabBarHideOnKeyboard: true,\n        tabBarLabel: tabBarLabelsMap[route.name],\n        tabBarLabelPosition: 'below-icon',\n        tabBarLabelStyle: {bottom: relativeToScreen(5)},\n        tabBarShowLabel: true,\n        tabBarIcon: tabBarIcon(tabBarIconsMap[route.name]),\n        // tabBarIconStyle: {},\n        // tabBarButton: tabBarButton,\n        tabBarActiveTintColor: fontColor,\n        tabBarInactiveTintColor: fontColor + '6',\n        tabBarActiveBackgroundColor: '#0004',\n        tabBarInactiveBackgroundColor: '#0000',\n        tabBarItemStyle: {borderRadius: 10},\n        tabBarStyle: {\n          position: 'absolute',\n          elevation: 0,\n          height: relativeToScreen(55),\n          backgroundColor: '#0000',\n          borderTopWidth: 0\n        },\n      }\n    )\n  }\n}\n\nconst Stack = createNativeStackNavigator();\nconst Tab = createBottomTabNavigator();\n\nconst HomeTab = (props) => {\n  const settings = useContext(UserContext).user.settings\n  return(\n    <Tab.Navigator\n    initialRouteName='Entrances'\n    screenOptions={tabNavigatorOptionsProvider(settings)}\n    >\n      <Tab.Screen\n      name=\"Entrances\"\n      component={EntrancesScreenProvider}\n      initialParams={{\n        selectedDate: Today(),\n        selectedEntryId: null,\n      }}\n      />\n      <Tab.Screen\n      name=\"Charts\"\n      component={ChartsScreenProvider}\n      />\n      <Tab.Screen\n      name=\"Settings\"\n      component={SettingsScreenProvider}\n      initialParams={{\n        selectedColor: settings.selectedColor,\n      }}\n      options={{\n        // tabBarIcon: tabBarIcon('settings-2')\n      }}\n      />\n    </Tab.Navigator>    \n  )\n}\n\nconst HomeStack = () => {\n  console.log('Returning \"HomeScreen\" component...')\n  const appState = useContext(UserContext)\n  return(\n    <Stack.Navigator \n    initialRouteName='Home'\n    screenOptions={{\n      headerShown: false,\n    }}\n    >\n      <Stack.Screen\n      name=\"Home\"\n      component={HomeTab}\n      initialParams={{\n        settings: appState.user.settings\n      }}\n      />\n      <Stack.Screen\n      name=\"PostEntrance\"\n      component={PostEntranceScreenProvider}\n      initialParams={{\n        currentEntry: {type: 'new', date: Today(), entry: null},\n      }}\n      />\n      <Stack.Screen\n      name=\"WallpaperTopics\"\n      component={WallpapersScreenProvider}\n      initialParams={{\n        headerText: 'Tópicos',\n      }}\n      />\n      <Stack.Screen\n      name=\"Wallpapers\"\n      component={WallpapersScreenProvider}\n      initialParams={{\n        headerText: 'Clique em uma imagem para ampliar',\n      }}\n      />\n      <Stack.Screen\n      name=\"WallpaperZoom\"\n      component={WallpaperZoomScreenProvider}\n      />\n    </Stack.Navigator>\n  )  \n}\n\nexport default class App extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      user: null,\n      isUserAuth: false,\n      isUserDataSyncing: false,\n    };\n\n    this.logout = this.logout.bind(this);\n    this.getAppState = this.getAppState.bind(this);\n    this.syncUserData = this.syncUserData.bind(this);\n    this.Login = this.Login.bind(this);\n    this.LoginContainer = this.LoginContainer.bind(this);\n    this.ContextProvider = this.ContextProvider.bind(this);\n  }\n\n  componentDidMount() {\n    console.log('App component did mount...')\n  }\n\n  logout() {\n    console.log('User logged out. Navigating to \"LoginScreen\"...')\n    this.setState({isUserAuth: false, user: null})\n  }\n\n  getAppState() {\n    return this.state\n  }\n\n  async syncUserData() {\n    console.log('SYNC USER DATA STATUS: Started...')\n    this.setState({ isUserDataSyncing: true });\n    try {\n        var UserResult = await fetch( appServerURI + 'Users/' + this.state.user.username, { method: 'GET' });\n        const userStatus =  'Status: ' + UserResult.status + ', ' + UserResult.statusText\n        if (UserResult.ok) {\n            console.log('fetch GET request for user DATA successful.')\n            console.log(userStatus)\n            console.log('SYNC USER DATA STATUS: Successful.')\n            const user = await UserResult.json();\n            this.setState({user: user})\n\n        } else {\n            console.log( new Error('\"fetch\" GET request for user DATA failed. Throwing error...') )\n            throw new Error(userStatus)\n        }\n    } catch (error) {\n            console.log('SYNC USER DATA STATUS: Error captured. Printing error...')\n            console.log(error);\n            alert('Não foi possível sincronizar as entradas. Por favor, aguarde..')\n\n    } finally {\n        this.setState({ isUserDataSyncing: false });\n        console.log('SYNC USER DATA STATUS: Finished.')\n    }    \n  }\n\n  Login() {\n    return(\n      <LoginScreen\n      user={this.state.user}\n      getAppState={this.getAppState}\n      setAppState={this.setState.bind(this)}\n      />\n    )\n  }\n\n  LoginContainer() {\n    return(\n      <NavigationContainer\n      linking={loginLinking}\n      fallback={<LoadingScreen />}\n      >\n        <Stack.Navigator \n        initialRouteName='Login'\n        screenOptions={{\n          headerShown: false,\n        }}\n        >\n          <Stack.Screen\n          name=\"Login\"\n          component={this.Login}\n          />\n        </Stack.Navigator>\n      </NavigationContainer>    \n    )\n  }\n\n  ContextProvider() {\n    return(\n      <UserContext.Provider\n      value={{\n        ...this.state,\n        logout: this.logout,\n        setAppState: this.setState.bind(this),\n        syncUserData: this.syncUserData\n      }}>\n          <NavigationContainer\n          linking={linking}\n          fallback={<LoadingScreen />}\n          >\n            <HomeStack />\n          </NavigationContainer>    \n      </UserContext.Provider>\n    )\n  }\n  render() {\n    console.log('Rendering \"App\" component...')\n    \n    return !this.state.isUserAuth ? (\n      <this.LoginContainer />\n    ) : (\n      <this.ContextProvider />\n    );  \n\n    // if (this.state.isUserAuth) {\n    //     return <this.ContextProvider />\n    // } else {\n    //     return <this.LoginContainer />\n    // }\n\n    // switch (this.state.isUserAuth) {\n    //   case true:\n    //     return <this.ContextProvider />\n    //   default:\n    //     return <this.LoginContainer />\n    // }\n  }\n}","// Emotion configs\r\nconst emotionGroupsNames = [ 'Bem & Calmo', 'Bem & Energizado', 'Mal & Calmo', 'Mal & Energizado' ]\r\nconst goodEnergizedEmotions = ['Animação', 'Concentração', 'Desinibição', 'Motivação', 'Euforia']\r\nconst goodCalmEmotions = ['Alívio', 'Calma', 'Conforto', 'Despreocupação', 'Inspiração', 'Orgulho', 'Paz', 'Relaxamento', 'Satisfação', 'Segurança', 'Criatividade']\r\nconst badEnergizedEmotions = ['Inquietação', 'Ansiedade', 'Desespero', 'Frustração', 'Insatisfação', 'Irritação', 'Medo', 'Vergonha', 'Preocupação', 'Impaciência', 'Sobrecarregado(a)', 'Tensão']\r\nconst badCalmEmotions = ['Depressão', 'Timidez', 'Cansaço', 'Tristeza','Confusão', 'Desanimo', 'Insegurança', 'Solidão', 'Tédio']\r\n// const badEnergizedEmotions = ['Agitação', 'Ansiedade', 'Tristeza', 'Decepção', 'Depressão', 'Desespero', 'Frustração', 'Insatisfação', 'Irritação', 'Medo', 'Paranoia', 'Preocupação', 'Impaciencia', 'Raiva', 'Revolta', 'Sobrecarregado(a)', 'Tensão', 'Nojo']\r\n\r\nconst emotionGroups = [ goodCalmEmotions.sort(), goodEnergizedEmotions.sort(), badCalmEmotions.sort(), badEnergizedEmotions.sort() ]\r\nconst basicEmotions = [ ...emotionGroups[0], ...emotionGroups[1], ...emotionGroups[2], ...emotionGroups[3] ]\r\n\r\nconst emotionTypes = ['Positiva', 'Negativa']\r\nconst emotionEnergy = ['Calmo(a)', 'Energizado(a)']\r\n\r\nvar defaultEmotions = []\r\nvar type, energy\r\n\r\nfor (let emotion of basicEmotions) {\r\n    type = emotionGroups[0].includes(emotion) || emotionGroups[1].includes(emotion) ? emotionTypes[0] : emotionTypes[1]\r\n    energy = emotionGroups[0].includes(emotion) || emotionGroups[2].includes(emotion) ? emotionEnergy[0] : emotionEnergy[1]\r\n    defaultEmotions.push({name: emotion, type: type, energy: energy})\r\n}\r\n\r\n// console.log(defaultEmotions);\r\n\r\nmodule.exports = defaultEmotions;"],"sourceRoot":""}