{"version":3,"sources":["assets/wallpaper.jpg","styles/entrancesStyles.js","components/subcomponents/UserEntryCards.js","shared/dateRange.js","components/EntrancesComponent.js","styles/postEntryStyles.js","components/subcomponents/GoogleMapsAPI.js","components/subcomponents/OpenWeatherMapAPI.js","components/PostEntryComponent.js","styles/loginStyles.js","components/LoginComponent.js","App.js"],"names":["module","exports","styles","mainView","flex","postButton","position","height","width","borderRadius","bottom","alignSelf","backgroundColor","justifyContent","postButtonLabel","scrollView","section","paddingVertical","borderBottomWidth","borderColor","sectionTitle","fontSize","color","fontWeight","card","marginTop","paddingHorizontal","cardRow","flexDirection","alignItems","moodBadge","textAlign","emotionBadge","marginRight","textBadge","paddingTop","paddingBottom","lineHeight","textAlignVertical","text","spaceBetween","icon","entryIcon","paddingRight","borderWidth","editButtonsView","editButton","editButtonLabel","corsURI","Platform","OS","appServerURI","moodColors","MoodHeader","entry","View","style","Text","mood","star","name","fill","weather","Image","source","uri","main","temp","toString","slice","startTime","Address","useState","isCollapsed","setIsCollapsed","address","numberOfLines","onPress","top","Emotions","emotions","length","flexWrap","PaddingBottom","map","emotion","index","Jornal","jornal","left","EmptyCard","props","textStyle","Pressable","navigation","navigate","currentEntry","CardsLoadingMessage","UserEntryCards","state","date","userEntries","selectedEntryId","isEntriesSyncing","isDeleteLoading","newPost","EntryCard","bind","onEntryCardPress","EditEntryButtons","editUserEntry","deleteUserEntry","syncUserEntries","console","log","this","setInterval","updateIfNewPost","forgetNewPost","isButtonPressed","setIsButtonPressed","onEditButtonPress","editButtonLoading","entryId","buttonLabel","disabled","onPressIn","onPressOut","setState","_id","selDateEntries","filter","a","async","UsersResult","ok","status","fetch","userInfo","username","method","usersStatus","statusText","Error","json","users","user","email","reverse","entriesSynced","UserEntryCardsList","Component","dateRange","monthDict","englishMonthSigs","portugueseMonthSigs","englishWeekDayMap","Today","now","Date","split","join","getNextDate","next","nextDate","indexOf","formatDate","selDate","ymd","yesterday","englishWeekDay","weekDay","prefix","i","oneDigit","stringNumber","EntrancesScreen","time","selectedDate","entriesLoading","onNextButtonPress","setSelectedDate","setParams","isToday","ImageBackground","require","ScrollView","route","params","login","msgBox","msg","StatusBar","currentHeight","entrances","content","flexGrow","contentRow","padding","entryTitle","paddingLeft","postButtonView","moodButtonView","moodButton","jornalText","saveButton","borderTopLeftRadius","borderTopRightRadius","saveButtonLabel","marginVertical","marginHorizontal","entryCardEmotionBadge","datetimeTitle","GoogleMapsAPI","GoogleMapsJavascriptAPIkey","GoogleMapsGeocodingAPIKey","OpenWeatherMapAPI","KEY","Location","moods","moodColorsRGBA","moodIcons","emotionGroupsNames","emotionGroups","sort","basicEmotions","isSelectedEmotions","monthSigs","months","monthNameMap","monthSig","getTime","formatPostEntryDatetimeTitle","m","PostEntranceScreen","endTime","selectedMood","jornalEntry","selectedEntry","isMoodUnmarked","isLoading","isFetchingLocationOrWeather","editCheck","locationServiceEnabled","userCoordinates","loginMsg","onComponentDidMount","fillEntryIfEdit","onSaveButtonPress","EmotionButtons","MoodButtons","postEntryHeader","onEmotionButtonPress","onMoodButtonPress","inputCardBody","setSelectedEntry","InputCard","JornalInput","postNewEntryAsync","isSelectedEmotionsNew","oldEntry","checkIfLocationEnabled","getCurrentLocation","goBack","item","selectMood","alpha","selected","unmarked","selColor","size","selectEmotion","title","TextInput","multiline","scrollEnabled","placeholder","placeholderTextColor","onChangeText","value","setSelected","sectionName","cardBodyStyle","inputs","setTimeout","newEntry","error","setLoginMsg","isDataLoading","ActivityIndicator","info","editMode","postUserEntryResult","postUserEntryOpts","headers","body","JSON","stringify","coords","lat","latitude","lng","longitude","then","res","resStatus","weatherInfo","coord","clouds","wind","visibility","enabled","LocationServiceEnabled","alert","response","addressObj","street","streetNumber","district","subregion","region","isoCountryCode","fetchWeather","minHeight","titleView","titleIcon","marginLeft","cardHeader","cardTitle","cardSection","loadingIcon","inputField","button","falseParams","appendValueToUri","validateEmail","emailStatus","apiResp","apiRespJson","formatCheck","smtpCheck","LoginScreen","textContentType","autoComplete","importantForAutofill","secureTextEntry","submitButton","LoginIcon","password","isUserAuth","onSignIn","onSignUp","animation","textField","setField","sign","signIn","errMsg","isInputEmpty","UsersStatus","Users","authUser","postUserResult","emailValidation","reqStatus","passwordCheck","postUserOpts","entries","postUserStatus","successMsg","Stack","createNativeStackNavigator","HomeScreen","Navigator","initialRouteName","screenOptions","headerShown","Screen","component","options","initialParams","App","NavigationContainer"],"mappings":"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AAKxD,MAAM+C,SAASS,SAAO,GAC9ElC,QAAQC,IAAI,kDACZD,QAAQC,IAAI2B,GAEZ1B,KAAKa,SAAS,CAAC3B,YAAa6C,EAAI,QAAYE,UAAWC,eAAe,IACtEpC,QAAQC,IAAI,oCAjBxB,8BAoBYD,QAAQC,IAAK,IAAI6B,MAAM,mEACjB,IAAIA,MAAMF,GArB5B,0DAyBY5B,QAAQC,IAAI,0DACZD,QAAQC,IAAR,MA1BZ,yBA6BQC,KAAKa,SAAS,CAAEzB,kBAAkB,IAClCU,QAAQC,IAAI,kCA9BpB,sF,oBAkCA,WAEI,OADAD,QAAQC,IAAI,gDACLC,KAAKmC,yB,GArLwBC,aCka7BC,EApiBG,CACd,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,c,+aCjhBJ,IAAMC,EAAY,CAAC,IAAO,KAAM,IAAO,KAAM,IAAO,KAAM,IAAO,KAAM,IAAO,KAAM,IAAO,KAAM,IAAO,KAAM,IAAO,KAAM,IAAO,KAAM,IAAO,KAAM,IAAO,KAAM,IAAO,MACnKC,EAAmB,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OACjGC,EAAsB,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OACpGC,EAAoB,CAAC,IAAO,MAAO,IAAO,MAAO,IAAO,MAAO,IAAO,MAAO,IAAO,MAAO,IAAO,MAAO,IAAO,OAGtH,SAASC,KACL,IAAMC,EAAMC,OAAO3F,WAAW4F,MAAM,KAEpC,MADc,CAAEF,EAAI,GAAIL,EAAUK,EAAI,IAAKA,EAAI,IAAKG,KAAK,KAG7D,SAASC,GAAY9D,GAAoB,IAAd+D,EAAa,uDAAR,OACtBC,EAAWZ,EAAUA,EAAUa,QAAQjE,IAAe,YAAN+D,GAAoB,EAAI,IAC9E,OAAOC,EASX,SAASE,GAAWC,GAEhB,IAAIC,EAAMD,EAAQP,MAAM,KAClBS,EAAYP,GAAYL,KAAS,YACjCa,EAAiB,IAAIX,KAAKS,EAAI,GAAIA,EAAI,GAAIA,EAAI,IAAIpG,WAAW4F,MAAM,KAAK,GACxEW,EAAUf,EAAkBc,GAC9BE,EAAS,GAEYA,EAArBL,IAAYV,KAAkB,SACzBU,IAAYE,EAAoB,UAC3BE,EAAU,KAExB,IAAK,IAAIE,EAAE,EAAGA,EAAE,GAAIA,IAChB,GAAIpB,EAAWC,EAAiBmB,KAAQL,EAAI,GACxC,OAAOI,EAASE,GAASN,EAAI,IAAM,QAAOb,EAAoBkB,GAI1E,SAASC,GAASC,GACd,MAAuB,KAAnBA,EAAa,GAAkBA,EAAa1G,MAAM,EAAG0G,EAAa9F,QAC1D8F,E,IAGKC,G,gCAEjB,WAAYrF,GAAQ,IAAD,sBACf,cAAMA,IACDQ,MAAQ,CACTE,YAAa,GACbD,KAAMyD,KACNoB,KAnCIlB,OAAO3F,WAAW4F,MAAM,KACnB,GAmCTkB,aAAcrB,KACdsB,gBAAgB,EAChB9B,eAAe,GAEnB,EAAK+B,kBAAoB,EAAKA,kBAAkBzE,KAAvB,QACzB,EAAKW,cAAgB,EAAKA,cAAcX,KAAnB,QAXN,E,6CAcnB,WACIM,QAAQC,IAAI,6C,+BAGhB,WAAgC,IAAdiD,EAAa,uDAAR,OACnB,SAASkB,IACLlE,KAAKa,SAAU,CAACkD,aAAchB,GAAY/C,KAAKhB,MAAM+E,aAAcf,KAEvE,OAAOkB,EAAgB1E,KAAKQ,Q,2BAGhC,WACI,SAASG,IACLH,KAAKxB,MAAMG,WAAWwF,UAAU,CAAC7E,SAAS,IAC1CU,KAAKa,SAAS,CACVkD,aAAcrB,OAGtB,OAAOvC,EAAcX,KAAKQ,Q,oBAG9B,WAAU,IAAD,OAELF,QAAQC,IAAI,iCACZ,IAAMqE,EAAUpE,KAAKhB,MAAM+E,eAAiB/D,KAAKhB,MAAMC,KAEvD,OACI,eAACoF,EAAA,EAAD,CAAiBxH,OAAQyH,EAAQ,KAA4BjI,MAAO,CAACtD,EAAOC,UAA5E,UAEI,cAACuL,EAAA,EAAD,CAAYlI,MAAOtD,EAAOa,WAA1B,SAEQ,eAACwC,EAAA,EAAD,CAAMC,MAAOtD,EAAOc,QAApB,UACI,eAACuC,EAAA,EAAD,CAAMC,MAAO,CAACtD,EAAOyB,QAAS,CAACd,eAAgB,kBAA/C,UACI,cAACgF,EAAA,EAAD,CAAWhB,QAAUsC,KAAKiE,kBAAkB,YAA5C,SACI,cAAC,OAAD,CAAMxH,KAAK,aAAapD,MAAO,GAAID,OAAQ,GAAIsD,KAAK,YAExD,eAACJ,EAAA,EAAD,CAAMD,MAAOtD,EAAOkB,aAApB,cAAqC,0BAAuBkJ,GAAWnD,KAAKhB,MAAM+E,cAAlF,OACGK,EAKC,cAAChI,EAAA,EAAD,CAAMC,MAAO,CAACjD,OAAQ,GAAIC,MAAO,MAJjC,cAACqF,EAAA,EAAD,CAAWhB,QAAUsC,KAAKiE,kBAAkB,QAA5C,SACI,cAAC,OAAD,CAAMxH,KAAK,gBAAgBpD,MAAO,GAAID,OAAQ,GAAIsD,KAAK,eAOnE,cAAC,EAAD,CACAiC,WAAcqB,KAAKxB,MAAMG,WACzB4C,SAAUvB,KAAKxB,MAAMgG,MAAMC,OAAOlD,SAClCjC,QAASU,KAAKxB,MAAMgG,MAAMC,OAAOnF,QACjCa,cAAeH,KAAKG,gBACpBlB,KAAMe,KAAKhB,MAAM+E,oBAM7B,cAACrF,EAAA,EAAD,CAAWhB,QAAS,WAAQ,EAAKc,MAAMG,WAAWC,SAAU,eAAgB,CAACC,aAAc,SAAaxC,MAAO,CAACtD,EAAOG,YAAvH,SACQ,cAAC,OAAD,CAAMuD,KAAK,cAAcpD,MAAO,GAAID,OAAQ,GAAIsD,KAAK,QAAQL,MAAOtD,EAAOY,2B,GA1EtDyI,a,gDCkH9BrJ,GA7KA,CACb2L,MAAO,CACLC,OAAQ,CACNxL,SAAU,WACVI,OAAQ,MACRF,MAAO,IACPG,UAAW,SAEXJ,OAAQ,GACRM,eAAgB,SAChBD,gBAAiB,gBACjBgC,YAAa,EACbzB,YAAa,iBAEf4K,IAAK,CACDhK,UAAW,SACXT,MAAO,UAIbnB,SAAU,CACRC,KAAM,EACNqB,UAAWuK,IAAUC,eAEvBC,UAAW,CACTzK,UAAWuK,IAAUC,cACrBrJ,YAAa,EACbxC,KAAK,EACLS,eAAgB,gBAChBgB,WAAY,cAEdd,WAAY,CAEVP,MAAO,OACPG,UAAW,UAEbwL,QAAS,CACPC,SAAU,EACVhK,cAAe,KACfV,kBAAmB,KACnBf,UAAW,UACXQ,YAAa,SAEfH,QAAS,CACPR,MAAO,IACPS,gBAAiB,MACjBC,kBAAmB,EACnBC,YAAa,wBACbR,UAAW,UAEb0L,WAAY,CACVzK,cAAe,SACf0K,QAAS,GACT7K,UAAW,GACXmB,YAAa,EACbzB,YAAa,yBACbV,aAAc,GACdG,gBAAiB,0BAGnB2L,WAAY,CACVtL,gBAAiB,EACjBuL,YAAa,EACbnL,SAAU,GACVC,MAAO,SAEToB,UAAW,CACTC,aAAc,GAEhB8J,eAAgB,CACdlM,OAAQ,GACRC,MAAO,GACPC,aAAc,GACdE,UAAW,SACXE,eAAgB,SAChBgB,WAAY,SACZjB,gBAAiB,SAEnBE,gBAAiB,CACfO,SAAU,GACVE,WAAY,QAEdmL,eAAgB,CACdlM,MAAO,GACPD,OAAQ,GACRsB,WAAY,SACZhB,eAAgB,SAChB+B,YAAa,GAEf+J,WAAY,CACVnM,MAAO,GACPD,OAAQ,GACRsB,WAAY,SACZhB,eAAgB,UAElBuF,KAAM,CACJ9F,SAAU,WACVmF,KAAM,MACNxE,gBAAiB,EACjBS,kBAAmB,GACnBL,SAAU,GACVV,UAAW,SACXC,gBAAiB,QACjBH,aAAc,IAEhBmM,WAAY,CACV3L,gBAAiB,EACjBS,kBAAmB,GACnBtB,KAAM,EACNkC,kBAAmB,MACnB9B,MAAO,OACPC,aAAc,GACda,MAAO,QACPD,SAAU,IAEZwL,WAAY,CACVtM,OAAQ,GACRC,MAAO,OACPsM,oBAAqB,GACrBC,qBAAsB,GACtBlM,eAAgB,SAChBgB,WAAY,SACZjB,gBAAiB,SAEnBoM,gBAAiB,CACfzL,WAAW,OACXF,SAAU,IAEZG,KAAM,CACJC,UAAW,KACXR,gBAAiB,EACjBS,kBAAmB,GACnBjB,aAAc,GACdG,gBAAiB,mBAEnBe,QAAS,CACLC,cAAe,MACfX,gBAAiB,EACjBY,WAAY,UAEhBC,UAAW,CACPlB,gBAAiB,QACjBH,aAAc,GACdQ,gBAAiB,EACjBT,MAAO,IACPa,SAAU,GACVU,UAAW,UAEfC,aAAc,CACVpB,gBAAiB,kBACjBH,aAAc,GACdQ,gBAAiB,EACjBS,kBAAmB,KACnBL,SAAU,GACVU,UAAW,SACXkL,eAAgB,EAChBC,iBAAkB,GAEtBC,sBAAuB,CACrBvM,gBAAiB,YACjBH,aAAc,GACdQ,gBAAiB,EACjBS,kBAAmB,KACnBO,YAAa,EACbZ,SAAU,GACVU,UAAW,UAEbqL,cAAe,CACb/L,SAAU,GACVY,YAAa,I,mBCvKFoL,GALO,CAClBC,2BAA4B,0CAC5BC,0BAA2B,2CCChBC,GAHW,CACtBC,IAAK,oC,+zDCUTC,KAAyBL,GAAcE,2BA8BvC,IA1BA,IA0BA,GA1BMvK,GAAyB,OAAfC,IAASC,GAAc,+CAAiD,GAIlF4G,IAAM,IAAIC,MAAO3F,WAAW4F,MAAM,KAIlC2D,IAHW7D,GAAI,GAAWA,GAAI,GAAWA,GAAI,GAAaA,GAAI,GAAGzF,MAAM,EAAG,GAGlE,CAAC,cAAY,MAAO,UAAW,MAAO,aAE9CuJ,GAAiB,CAAC,uBAAwB,uBAAwB,yBAA0B,wBAAyB,sBAErHC,GAAY,CAAC,gBAAiB,eAAgB,mBAAoB,iBAAkB,oBAGpFC,GAAqB,CAAE,cAAe,mBAAoB,cAAe,oBAOzEC,GAAgB,CALG,CAAC,YAAU,QAAS,WAAY,uBAAkB,mBAAc,UAAW,MAAO,cAAe,mBAAc,eAAa,gBAK5GC,OANX,CAAC,iBAAY,qBAAgB,oBAAe,kBAAa,WAMhBA,OAH/C,CAAC,eAAa,UAAW,aAAW,WAAW,cAAY,WAAY,WAAY,iBAAe,YAAU,aAAW,YAGhDA,OAJlE,CAAC,oBAAe,YAAa,YAAa,mBAAc,qBAAgB,kBAAa,OAAQ,oBAAe,iBAAe,oBAAqB,aAIjDA,QACtHC,GAAa,eAAQF,GAAc,IAAtB,KAA6BA,GAAc,IAA3C,KAAkDA,GAAc,IAAhE,KAAuEA,GAAc,KAEpGG,GAAqB,GACzB,MAAqBD,MAArB,eAAmC,CAAC,IAA1B5I,GAAyB,SAC/B6I,GAAmB7I,KAAW,EAIlC,IAAM8I,GAAY,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OACnFC,GAAS,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAE5EC,GAAe,CACjB,KAAM,UACN,KAAM,YACN,KAAM,WACN,KAAM,QACN,KAAM,OACN,KAAM,QACN,KAAM,QACN,KAAM,SACN,KAAM,WACN,GAAM,UACN,GAAM,WACN,GAAM,YAUV,SAASxE,KACL,IANqByE,EAMfxE,EAAMC,OAAO3F,WAAW4F,MAAM,KAEpC,MADc,CAAEF,EAAI,IAPCwE,EAOmBxE,EAAI,GAN1BsE,GAAOD,GAAU9D,QAAQiE,KAMMxE,EAAI,IAAKG,KAAK,KAInE,SAASsE,KAIL,OAFYxE,OAAO3F,WAAW4F,MAAM,KACnB,GASrB,SAASwE,GAA6BpI,EAAM6E,GACxC,IANcF,EAMRP,EAAMpE,EAAK4D,MAAM,KACjByE,EAAIJ,GAAc7D,EAAI,IAC5B,OAPuB,MADTO,EAQGP,EAAI,IAPJ,GAAkBO,EAAa1G,MAAM,EAAG0G,EAAa9F,QAC1D8F,GAMgB,IAAM0D,EAAI,IAAMjE,EAAI,GAAK,MAAQS,EAAK5G,MAAM,EAAE,G,IASzDqK,G,iCAEjB,WAAY/I,GAAQ,IAAD,sBACf,cAAMA,IAEDQ,MAAQ,CAETC,KAAMyD,KACNvF,UAAWiK,KACXI,QAAS,KACThL,MAAM,EACNiL,aAAc,GACd5J,SAAU,GACV6J,YAAa,GACblK,QAAS,KACTb,QAAS,KAETgL,cAAe,kBACfC,gBAAgB,EAChBb,mBAAoBA,GACpBc,WAAW,EACXC,6BAA6B,EAC7BC,WAAW,EAEXC,uBAAwB,KACxBC,gBAAiB,KAEjBC,SAAU,IAGd,EAAKC,oBAAsB,EAAKA,oBAAoB3I,KAAzB,QAC3B,EAAK4I,gBAAkB,EAAKA,gBAAgB5I,KAArB,QACvB,EAAK6I,kBAAoB,EAAKA,kBAAkB7I,KAAvB,QACzB,EAAKkG,WAAa,EAAKA,WAAWlG,KAAhB,QAClB,EAAK8I,eAAiB,EAAKA,eAAe9I,KAApB,QACtB,EAAK+I,YAAc,EAAKA,YAAY/I,KAAjB,QACnB,EAAKgJ,gBAAkB,EAAKA,gBAAgBhJ,KAArB,QACvB,EAAKiJ,qBAAuB,EAAKA,qBAAqBjJ,KAA1B,QAC5B,EAAKkJ,kBAAoB,EAAKA,kBAAkBlJ,KAAvB,QACzB,EAAKmJ,cAAgB,EAAKA,cAAcnJ,KAAnB,QACrB,EAAKoJ,iBAAmB,EAAKA,iBAAiBpJ,KAAtB,QACxB,EAAKqJ,UAAY,EAAKA,UAAUrJ,KAAf,QACjB,EAAKsJ,YAAc,EAAKA,YAAYtJ,KAAjB,QACnB,EAAKuJ,kBAAoB,EAAKA,kBAAkBvJ,KAAvB,QAzCV,E,6CA4CnB,WACIQ,KAAKmI,wB,iCAGT,WACIrI,QAAQC,IAAI,mCACZC,KAAKoI,oB,6BAGT,WACI,GAA6C,QAAzCpI,KAAKxB,MAAMgG,MAAMC,OAAO5F,aAAwB,CAEhD,GAAImB,KAAKhB,MAAM+I,UAEf,YADAjI,QAAQC,IAAI,2CAIZ,IAAMlB,EAAemB,KAAKxB,MAAMgG,MAAMC,OAAO5F,aAC7CiB,QAAQC,IAAI,iDAAmDlB,EAAaiC,KAG5E,IADA,IACA,EADIkI,EAAwB,GAC5B,KAAqBlC,MAArB,aAAmC,CAAC,IAA1B5I,EAAyB,SACgB,GAA3CW,EAAahB,SAASqF,QAAQhF,GAC9B8K,EAAsB9K,IAAW,EAEjC8K,EAAsB9K,IAAW,EAIzC,IAAM+K,EAAW,CACb9L,UAAW0B,EAAa1B,UACxBqK,QAAS3I,EAAa2I,QACtBvI,KAAMJ,EAAaI,KACnBzC,KAAMqC,EAAarC,KACnBoL,gBAAgB,EAChBH,aAAc5I,EAAatC,KAC3BwK,mBAAoBiC,EACpBtB,YAAa7I,EAAaR,OAC1Bb,QAASqB,EAAarB,QACtBb,QAASkC,EAAalC,QAEtBoL,WAAW,GAEf/H,KAAKa,SAASoI,GACdnJ,QAAQC,IAAI,4CAGZD,QAAQC,IAAI,qEACZC,KAAKa,SAAS,CAACiH,6BAA6B,IAC5C9H,KAAKkJ,yBACLlJ,KAAKmJ,uB,6BAIb,WAAmB,IAAD,OACd,OACI,eAAC/M,EAAA,EAAD,CAAMC,MAAO,CAACtD,GAAOyB,QAAS,CAACd,eAAgB,kBAA/C,UACI,cAACgF,EAAA,EAAD,CAAWhB,QAAS,WAAO,EAAKc,MAAMG,WAAWyK,UAAY/M,MAAOtD,GAAOG,WAA3E,SACI,cAAC,OAAD,CAAMuD,KAAK,aAAaC,KAAK,QAAQtD,OAAQ,GAAIC,MAAO,OAE5D,eAAC+C,EAAA,EAAD,CAAMC,MAAO,CAACtD,GAAOiN,sBAAuB,CAACvL,cAAe,MAAOC,WAAY,WAA/E,UACI,eAAC4B,EAAA,EAAD,CAAMD,MAAOtD,GAAOkN,cAApB,cAAsCoB,GAA6BrH,KAAKhB,MAAMC,KAAMe,KAAKhB,MAAM7B,WAA/F,OACA,cAAC,OAAD,CAAMV,KAAK,OAAOC,KAAK,mBAAmBtD,OAAQ,GAAIC,MAAO,QAEjE,cAACqF,EAAA,EAAD,CAAWhB,QAAS,WAAO,EAAKmD,SAAS,CAACrE,MAAO,EAAKwC,MAAMxC,QAAUH,MAAOtD,GAAOG,WAApF,SACI,cAAC,OAAD,CAAMuD,KAAMuD,KAAKhB,MAAMxC,KAAO,OAAS,eAAgBE,KAAK,wBAAwBtD,OAAQ,GAAIC,MAAO,Y,+BAMvH,SAAkBgQ,GACd,SAASC,IACDtJ,KAAKhB,MAAMyI,cAAc4B,EACzBrJ,KAAKa,SAAS,CAAC4G,aAAc,KAAMG,gBAAgB,IAEnD5H,KAAKa,SAAS,CAAC4G,aAAc4B,EAAMzB,gBAAgB,IAI3D,OADA0B,EAAaA,EAAW9J,KAAKQ,Q,yBAIjC,WAAe,IAAD,OAEV,OAAOwG,GAAMvI,KAAI,SAACoL,EAAMlL,GAEpB,IAhNcoL,EAgNRC,EAAW,EAAKxK,MAAMyI,cAAgB4B,EACtCI,EAAW,EAAKzK,MAAM4I,eACtB8B,EAAWjD,GAAetI,GAChC,OACI,cAAC/B,EAAA,EAAD,CAA0BC,MAAOtD,GAAOyM,WAAxC,SACI,cAAC,KAAD,CACA/I,KAAMiK,GAAUvI,GAChBwL,KAAMF,EAAW,GAAMD,EAAW,GAAK,GACvCrP,MAAQsP,GAAuBD,EAAZE,GAxNbH,EAwNgE,GAxNtD,CAAC,qBAAqBA,EAAtB,yBAAqDA,EAArD,2BAAsFA,EAAtF,0BAAsHA,EAAtH,uBAAmJA,EAAnJ,MAwN2DpL,GAC3ET,QAAS,EAAKgL,kBAAkBW,MALzB,QAAQlL,Q,kCAY/B,SAAqBD,GACjB,SAAS0L,IACL5J,KAAKa,SAAS,CACVkG,mBAAmB,SACZ/G,KAAKhB,MAAM+H,oBADA,UAEb7I,GAAW8B,KAAKhB,MAAM+H,mBAAmB7I,OAKtD,OADA0L,EAAgBA,EAAcpK,KAAKQ,Q,4BAIvC,SAAenC,GAAW,IAAD,OACrB,OACIA,EAASI,KAAK,SAAAC,GAAO,OACjB,cAACQ,EAAA,EAAD,CAEAmL,MAAO3L,EACP7B,MAAQ,GACRqB,QAAS,EAAK+K,qBAAqBvK,GAJnC,SAMI,cAAC5B,EAAA,EAAD,CAAMD,MAAO,CAACtD,GAAO8B,aAAc,CAACpB,gBAAiB,EAAKuF,MAAM+H,mBAAmB7I,GAAW,YAAc,cAA5G,SAA6HA,KAL5H,WAAaA,Q,yBAW9B,WAAe,IAAD,OACV,OACI,cAAC4L,GAAA,EAAD,CACAC,WAAS,EACTC,eAAa,EACbC,YAAY,kBACZC,qBAAqB,wBACrBC,aAAc,SAAA/O,GAAI,OAAI,EAAKyF,SAAS,CAAC6G,YAAatM,KAClDgP,MAAOpK,KAAKhB,MAAM0I,YAClBrL,MAAOtD,GAAO0M,e,8BAMtB,SAAkBtJ,GACd,SAASkO,IACLrK,KAAKa,SAAU,CAAC8G,cAAgB3H,KAAKhB,MAAM2I,gBAAkBxL,EAAQ,KAAOA,IAGhF,OADAkO,EAAcA,EAAY7K,KAAKQ,Q,2BAInC,SAAcsK,EAAaC,EAAeC,GACtC,OAAIxK,KAAKhB,MAAM2I,gBAAkB2C,EACV,iBAAfA,EACO1D,GAAc3I,KAAI,SAACJ,EAAUM,GAAX,OACrB,eAAC/B,EAAA,EAAD,CAAqCC,MAAO,CAAChD,MAAO,OAAQqB,WAAY,SAAUoL,eAAgB,IAAlG,UACI,cAACxJ,EAAA,EAAD,CAAMD,MAAO,CAACnC,SAAU,GAAIC,MAAO,QAAS2L,eAAgB,GAA5D,SAAiEa,GAAmBxI,KACpF,cAAC/B,EAAA,EAAD,CAAkBC,MAAO,CAACtD,GAAOyB,QAAS+P,GAA1C,SACKC,EAAO3M,IADDM,KAFJ,iBAAmBA,MAS9B,cAAC/B,EAAA,EAAD,CAAMC,MAAO,CAACtD,GAAOyB,QAAS+P,GAA9B,SACKC,IAMT,+B,uBAKZ,SAAUF,EAAahP,EAAMiP,EAAeC,GAExC,MAAoB,WAAhBF,EAEI,eAAC5L,EAAA,EAAD,CAAWrC,MAAO,CAACtD,GAAOsB,MAAOqD,QAASsC,KAAK4I,iBAAiB0B,GAAhE,UACI,eAAClO,EAAA,EAAD,CAAMC,MAAOtD,GAAOyB,QAApB,UACI,cAAC,OAAD,CAAMiC,KAAMnB,EAAMoB,KAAK,yBAAyBtD,OAAQ,GAAIC,MAAO,GAAIgD,MAAOtD,GAAOwC,YACrF,eAACe,EAAA,EAAD,CAAMD,MAAOtD,GAAOqM,WAApB,cAAkCkF,EAAlC,UAEHtK,KAAK2I,cAAc2B,EAAYA,EAAaC,EAAcA,EAAeC,EAAOA,MAKrF,eAACpO,EAAA,EAAD,CAAMC,MAAO,CAACtD,GAAOsB,MAArB,UACI,eAACqE,EAAA,EAAD,CAAWrC,MAAOtD,GAAOyB,QAASkD,QAASsC,KAAK4I,iBAAiB0B,GAAjE,UACI,cAAC,OAAD,CAAM7N,KAAMnB,EAAMoB,KAAK,yBAAyBtD,OAAQ,GAAIC,MAAO,GAAIgD,MAAOtD,GAAOwC,YACrF,eAACe,EAAA,EAAD,CAAMD,MAAOtD,GAAOqM,WAApB,cAAkCkF,EAAlC,UAEHtK,KAAK2I,cAAc2B,EAAYA,EAAaC,EAAcA,EAAeC,EAAOA,Q,sBAMjG,WACI,OACE,cAACpO,EAAA,EAAD,CAAMC,MAAO,CAACtD,GAAO2L,MAAMC,OAAQ3E,KAAKhB,MAAMkJ,SAAW,GAAK,CAACzO,gBAAiB,cAAeO,YAAa,gBAA5G,SACE,cAACsC,EAAA,EAAD,CAAMD,MAAOtD,GAAO2L,MAAME,IAA1B,SAAgC5E,KAAKhB,MAAMkJ,e,yBAKnD,SAAYtD,GAAM,IAAD,OACb5E,KAAKa,SAAS,CAACqH,SAAUtD,IACzB6F,YAAY,kBAAM,EAAK5J,SAAS,CAACqH,SAAU,OAAO,O,+BAGtD,WAAsB,IAAD,OACjB,GAAKlI,KAAKhB,MAAMyI,aAMZ,IAEiD,QAAzCzH,KAAKxB,MAAMgG,MAAMC,OAAO5F,cACxBmB,KAAKa,SAAS,CACV2G,QAASJ,KACTnI,KAAMyD,OAId,IAAMgI,EAAW,CACbvN,UAAW6C,KAAKhB,MAAM7B,UACtBqK,QAASxH,KAAKhB,MAAMwI,QACpBvI,KAAMe,KAAKhB,MAAMC,KACjBzC,KAAMwD,KAAKhB,MAAMxC,KACjBD,KAAMyD,KAAKhB,MAAMyI,aACjB5J,SAAUiJ,GAAc9F,QAAQ,SAAA9C,GAAO,OAAI,EAAKc,MAAM+H,mBAAmB7I,MACzEG,OAAQ2B,KAAKhB,MAAM0I,YACnBlK,QAASwC,KAAKhB,MAAMxB,QACpBb,QAASqD,KAAKhB,MAAMrC,SAExBqD,KAAK+I,kBAAkB2B,GAEzB,MAAOC,GAEL3K,KAAK4K,YAAY,8DACjB9K,QAAQC,IAAI,8DACZD,QAAQC,IAAI4K,QA9BhB3K,KAAK4K,YAAY,gDACjB5K,KAAKa,SAAS,CAAC8G,cAAe,sB,wBAkCtC,WACI,IAAMkD,EAAgB7K,KAAKhB,MAAM8I,4BACjC,OACI,cAACpJ,EAAA,EAAD,CACAhB,QAASsC,KAAKqI,kBACd3H,SAAUmK,EACVxO,MAAOtD,GAAO2M,WAHd,SAKKmF,EACG,cAACC,GAAA,EAAD,CAAmBnB,KAAK,QAAQxP,MAAM,YAEtC,cAACmC,EAAA,EAAD,CAAMD,MAAOtD,GAAO8M,gBAApB,0B,+BAMhB,SAAwB6E,GAAxB,qBAAAzJ,EAAAC,OAAA,uDACIlB,KAAKa,SAAS,CAAEgH,WAAW,IACvBkD,EAAO/K,KAAKxB,MAAMgG,MAAMC,OAAOlD,SAC7ByJ,EAAoD,QAAzChL,KAAKxB,MAAMgG,MAAMC,OAAO5F,aAH7C,SAKYoM,EAAsB,CAAC7J,IAAI,EAAOC,OAAQ,MAAOM,WAAY,oBAC3DuJ,EAAoB,CACtBzJ,OAAQuJ,EAAU,MAAQ,OAC1BG,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAWZ,IAXlC,WAAAzJ,EAAA,MAaoCK,MAAOzF,sDAAoCkP,EAAKvJ,SAAW,YAAcwJ,EAAW,IAAIhL,KAAKxB,MAAMgG,MAAMC,OAAO5F,aAAaiC,IAAM,IAAKoK,IAb5K,YAaQD,EAbR,QAgBgC7J,GAhBhC,iBAiBYtB,QAAQC,IAAI,iCACZD,QAAQC,IAAI,WAAakL,EAAoB5J,OAAS,KAAO4J,EAAoBtJ,YAlB7F,8BAsBY7B,QAAQC,IAAI,gDACN,IAAI6B,MAAM,WAAaqJ,EAAoB5J,OAAS,KAAO4J,EAAoBtJ,YAvBjG,0DA2BQ7B,QAAQC,IAAI,mBACZD,QAAQC,IAAR,MA5BR,yBA+BQC,KAAKa,SAAS,CAAEgH,WAAW,IACvBoD,EAAoB7J,IAAIpB,KAAKxB,MAAMG,WAAWC,SAAS,YAAa,CAACU,SAAS,IAhC1F,sF,0BAoCA,qCAAA2B,EAAAC,OAAA,6DAIYlB,KAAKhB,MAAMiJ,gBAJvB,wBAMYnI,QAAQC,IAAI,qCACNwL,EAASvL,KAAKhB,MAAMiJ,gBACpBuD,EAAMD,EAAOE,SACbC,EAAMH,EAAOI,UAT/B,WAAA1K,EAAA,MAWkBK,MAAM,uDAC+CkK,EADhD,QAC2DE,EAD3D,UACwErF,GAAkBC,IAD1F,iBAGVsF,MAAK,SAAAC,GACF,IAAMC,EAAY,WAAaD,EAAIxK,OAAS,kBAAoBwK,EAAIlK,WACpE,GAAKkK,EAAIzK,GAGL,OAAOyK,EAAIhK,OAFX,MAAM,IAAID,MAAMkK,MAKvBF,MAAK,SAAAjP,GACFmD,QAAQC,IAAI,qCAGZ,IAAMgM,EAAc,CAChBR,OAAQ5O,EAAQqP,MAChBvP,KAAME,EAAQF,KACdE,QAASA,EAAQA,QAAQ,GACzBI,KAAMJ,EAAQI,KACdkP,OAAQtP,EAAQsP,OAChBC,KAAMvP,EAAQuP,KACdC,WAAYxP,EAAQwP,YAGxB,EAAKtL,SAAS,CAAClE,QAASoP,QApCxC,+BAwCYjM,QAAQC,IAAI,uEAxCxB,0DA4CQD,QAAQC,IAAI,iDACZD,QAAQC,IAAR,MA7CR,yBAgDQD,QAAQC,IAAI,mCACZC,KAAKa,SAAS,CAACiH,6BAA6B,IAjDpD,sF,oCAsDA,0BAAA7G,EAAAC,OAAA,mDAEUlB,KAAKhB,MAAMgJ,uBAFrB,iCAIYlI,QAAQC,IAAI,qEAJxB,WAAAkB,EAAA,MAKgCsF,QALhC,QAKgB6F,EALhB,SAWgBtM,QAAQC,IAAI,kEACZC,KAAKa,SAAS,CAACwL,uBAAwBD,MAJvCtM,QAAQC,IAAI,4EACZuM,MAAM,wEATtB,gDAgBYxM,QAAQC,IAAI,+GAhBxB,yBAmBYD,QAAQC,IAAI,wCAnBxB,6CAuBYD,QAAQC,IAAI,2EAvBxB,wE,gCA6BA,oCAAAkB,EAAAC,OAAA,gEAGQpB,QAAQC,IAAI,+DAHpB,WAAAkB,EAAA,MAI+BsF,QAJ/B,uBAOuB,YAPvB,EAIclF,QAIFvB,QAAQC,IAAI,2DACZuM,MAAM,mEAGNxM,QAAQC,IAAI,uDAGhBD,QAAQC,IAAI,uEAfpB,YAAAkB,EAAA,MAgB+BsF,QAhB/B,sBAgBcgF,EAhBd,EAgBcA,QAhBd,wBAmBoBE,EAAwBF,EAAxBE,SAAUE,EAAcJ,EAAdI,UAClB3L,KAAKa,SAAS,CAACoH,gBAAiBsD,IAChCzL,QAAQC,IAAR,yEAAqF0L,EAArF,eAA4GE,GAC5G7L,QAAQC,IAAI,mEAtBxB,YAAAkB,EAAA,MAuBiCsF,KAA6B,CAAEkF,WAAUE,eAvB1E,SAuBgBY,EAvBhB,SA0BgBvM,KAAKa,SAAS,CAAErD,SArdVgP,EAqdoCD,EAAS,GApd5DC,EAAWC,OAAS,KAAOD,EAAWE,aAAe,MAAQF,EAAWG,SAAW,KAAOH,EAAWI,UAAY,KAAOJ,EAAWK,OAAS,KAAOL,EAAWM,eAAiB,OAqdtKhN,QAAQC,IAAI,0FAGZD,QAAQC,IAAI,sFACZD,QAAQC,IAAIwM,IA/B5B,wBAmCYzM,QAAQC,IAAR,6GAnCZ,0DAuCQD,QAAQC,IAAI,uEACZD,QAAQC,IAAR,MAxCR,yBA2CQD,QAAQC,IAAI,0FACZC,KAAK+M,eA5Cb,+CA3bJ,IAA0BP,IA2btB,oC,oBAgDA,WAEI,OADA1M,QAAQC,IAAI,oCAER,eAACsE,EAAA,EAAD,CAAiBxH,OAAQyH,EAAQ,KAA4BjI,MAAOtD,GAAOC,SAA3E,UAEI,cAACuL,EAAA,EAAD,CAAYlI,MAAOtD,GAAOa,WAA1B,SACI,eAACwC,EAAA,EAAD,CAAMC,MAAOtD,GAAOc,QAApB,UACSmG,KAAKwI,kBACLxI,KAAK6I,UAAU,kBAAa,eAAgB,CAACnP,eAAgB,iBAAkBsG,KAAKuI,eACpFvI,KAAK6I,UAAU,gBAAW,2BAA4B,CAAC9K,SAAU,OAAQrE,eAAgB,UAAWsG,KAAKsI,gBACzGtI,KAAK6I,UAAU,SAAU,OAAQ,CAACpO,cAAe,SAAUuS,UAAW,KAAMhN,KAAK8I,oBAI9F,mBAAMpD,WAAN,IAEC1F,KAAKkI,kB,GArf0B9F,aCDjCrJ,GApGF,CACT2L,MAAO,CACH1L,SAAU,CACNC,KAAM,EACNS,eAAgB,SAChBgB,WAAY,UAGhBuS,UAAW,CACPxS,cAAe,MACff,eAAgB,SAChBgB,WAAY,SACZsS,UAAW,IAEfnD,MAAO,CACH3P,SAAU,GACVE,WAAY,OACZD,MAAO,QACPX,UAAW,UAEf0T,UAAW,CACP7T,MAAO,GACPD,OAAQ,GACR+T,WAAY,EACZnS,WAAY,GAEhBX,KAAM,CACFjB,OAAQ,MACR4T,UAAW,IACX3T,MAAO,IACPkB,kBAAmB,GACnBT,gBAAiB,GACjB2B,YAAa,EACbnC,aAAc,GACdG,gBAAiB,SAErB2T,WAAY,CACRhU,OAAQ,MACRC,MAAO,QAEXgU,UAAW,CACPlU,SAAU,WACVwE,IAAK,MACLW,KAAM,KACNpE,SAAU,GACVE,WAAY,OACZD,MAAO,SAEXmT,YAAa,CACTlU,OAAQ,MACRM,eAAgB,eAChBgB,WAAY,UAEhB6S,YAAa,CACT/T,UAAW,UAEfgU,WAAY,CACRR,UAAW,GACX3T,MAAO,OACPgM,YAAa,GACbnL,SAAU,GACVuB,YAAa,EACbnC,aAAc,EACdG,gBAAiB,SAErBgU,OAAQ,CACJrU,OAAQ,GACRC,MAAO,OACPuB,UAAW,SACXF,WAAY,SACZhB,eAAgB,SAChB+B,YAAa,EACbnC,aAAc,EACdU,YAAa,QACbP,gBAAiB,aAErBgH,YAAa,CACTvG,SAAU,GACVE,WAAY,OACZD,MAAO,SAEXiB,KAAM,CACFlB,SAAU,GACVU,UAAW,UAEf+J,OAAQ,CACJtL,MAAO,IACPD,OAAQ,GACRM,eAAgB,SAChBD,gBAAiB,gBACjBgC,YAAa,EACbzB,YAAa,iBAEjB4K,IAAK,CACDhK,UAAW,SACXT,MAAO,W,+zDCrFnB,IAAM0B,GAAyB,OAAfC,IAASC,GAAc,+CAAiD,GASlF2R,GAAc,CAAC,cAAe,gBAAiB,YAAa,mBAClE,SAASC,GAAiB7Q,EAAK2H,EAAQ2F,GACrC,eAAkB3F,KAAlB,aAA0B,CACxB3H,GAAO,IADiB,QACH,IAAMsN,EAE7B,OAAOtN,EAGT,SAAe8Q,GAAc5L,GAA7B,qBAAAf,EAAAC,OAAA,uDAEEpB,QAAQC,IAAI,iEAFd,SAOIjD,EAAM6Q,GADF7Q,EAfyB,yGAeMkF,EACP0L,GAAa,KACrCG,EAAc,CAACzM,IAAI,EAAOC,OAAQ,4BAR1C,WAAAJ,EAAA,MAS0BK,MAAOxE,EAAM,CAAE2E,OAAQ,SATjD,YASUqM,EATV,QAWgB1M,GAXhB,wBAaMtB,QAAQC,IAAI,4DAblB,YAAAkB,EAAA,MAcgC6M,EAAQjM,QAdxC,cAgBoC,UAFxBkM,EAdZ,QAgBuBC,YACfH,EAAYxM,OAAS,qBACY,SAAvB0M,EAAYE,UACtBJ,EAAYxM,OAAS,uBAErBwM,EAAc,CAACzM,IAAI,EAAMC,OAAQ,oBArBzC,kBAwBawM,GAxBb,cA2BM/N,QAAQC,IAAI,0EACN,IAAI6B,MAAM,WAAakM,EAAQzM,OAAS,kBAAoByM,EAAQnM,YA5BhF,yBAgCI7B,QAAQC,IAAI,2CAhChB,kF,IA6UemO,G,iCApRb,WAAY1P,GAAQ,IAAD,sBACjB,cAAMA,IA0DR0P,YAAc,WACZ,OACE,eAAC7J,EAAA,EAAD,CAAiBxH,OAAQyH,EAAQ,KAA4BjI,MAAO,CAACtD,GAAO2L,MAAM1L,SAAU,CAACU,eAAgB,iBAA7G,UAEE,cAAC0C,EAAA,EAAD,CAAMC,MAAOtD,GAAO2L,MAAMuI,UAA1B,SAEE,cAAC3Q,EAAA,EAAD,CAAMD,MAAOtD,GAAO2L,MAAMmF,MAA1B,4BAIF,eAACzN,EAAA,EAAD,CAAMC,MAAOtD,GAAO2L,MAAMrK,KAA1B,UACE,cAAC+B,EAAA,EAAD,CAAMC,MAAOtD,GAAO2L,MAAM0I,WAA1B,SACE,cAAC9Q,EAAA,EAAD,CAAMD,MAAOtD,GAAO2L,MAAM2I,UAA1B,sBAEF,eAACjR,EAAA,EAAD,CAAMC,MAAOtD,GAAO2L,MAAM4I,YAA1B,UACE,cAACxD,GAAA,EAAD,CACAG,YAAY,QACZkE,gBAAgB,eAChB9R,MAAOtD,GAAO2L,MAAM8I,WACpBrD,aAAc,EAAKA,aAAa,SAChCiE,aAAa,QACbC,qBAAqB,QAGrB,cAACvE,GAAA,EAAD,CACAG,YAAY,QACZkE,gBAAgB,WAChBG,iBAAiB,EACjBjS,MAAOtD,GAAO2L,MAAM8I,WACpBrD,aAAc,EAAKA,aAAa,YAChCiE,aAAa,WACbC,qBAAqB,WAGvB,eAACjS,EAAA,EAAD,CAAMC,MAAOtD,GAAO2L,MAAM4I,YAA1B,UACG,EAAKiB,aAAa,UAClB,EAAKA,aAAa,aAErB,cAACnS,EAAA,EAAD,CAAMC,MAAO,CAACtD,GAAO2L,MAAM4I,aAA3B,SACG,EAAKkB,iBAIT,EAAKtG,eAnGV,EAAKlJ,MAAQ,CACXuC,SAAU,CACRkN,SAAU,GACVzM,MAAO,GACPR,SAAU,IAEZ0G,SAAU,GACVwG,YAAY,EACZ7D,eAAe,GAEjB,EAAKV,aAAe,EAAKA,aAAa3K,KAAlB,QACpB,EAAK+O,aAAe,EAAKA,aAAa/O,KAAlB,QACpB,EAAK0I,SAAW,EAAKA,SAAS1I,KAAd,QAChB,EAAKoL,YAAc,EAAKA,YAAYpL,KAAjB,QACnB,EAAKmP,SAAW,EAAKA,SAASnP,KAAd,QAChB,EAAKoP,SAAW,EAAKA,SAASpP,KAAd,QAlBC,E,qCAqBnB,WACE,OAAIQ,KAAKhB,MAAM6L,cACN,cAACC,GAAA,EAAD,CAAmB3Q,MAAM,YAEzB,cAAC,OAAD,CAAMsC,KAAK,iBAAiBoS,UAAU,QAAQnS,KAAK,OAAOrD,MAAO,GAAID,OAAQ,O,yBAIxF,SAAYwL,GAAM,IAAD,OACf5E,KAAKa,SAAS,CAACqH,SAAUtD,IACzB6F,YAAY,kBAAM,EAAK5J,SAAS,CAACqH,SAAU,OAAO,O,sBAGpD,WACI,OACE,cAAC9L,EAAA,EAAD,CAAMC,MAAO,CAACtD,GAAO2L,MAAMC,OAAQ3E,KAAKhB,MAAMkJ,SAAW,GAAK,CAACzO,gBAAiB,cAAeO,YAAa,gBAA5G,SACE,cAACsC,EAAA,EAAD,CAAMD,MAAOtD,GAAO2L,MAAME,IAA1B,SAAgC5E,KAAKhB,MAAMkJ,e,0BAKnD,SAAa4G,GACX,SAASC,EAAS3T,GAChB4E,KAAKa,SAAU,CAAEU,SAAS,SAAMvB,KAAKhB,MAAMuC,UAAlB,UAA6BuN,EAAa1T,MAGrE,OADA2T,EAAWA,EAASvP,KAAKQ,Q,0BAI3B,SAAagP,GACX,IAAMC,EAAiB,UAARD,EACf,OACE,cAACtQ,EAAA,EAAD,CAAWgC,SAAUV,KAAKhB,MAAM6L,cAAenN,QAASuR,EAASjP,KAAK2O,SAAW3O,KAAK4O,SAAUvS,MAAO,CAACtD,GAAO2L,MAAM+I,QAArH,SACE,cAACnR,EAAA,EAAD,CAAMD,MAAOtD,GAAO2L,MAAMjE,YAA1B,SAAyCwO,EAAS,SAAW,kB,0BAsDnE,WACE,GAAKjP,KAAKhB,MAAMuC,SAASS,MAKlB,IAAKhC,KAAKhB,MAAMuC,SAASkN,SAKzB,OAAO,EADZ,OAFAzO,KAAK4K,YADU,qBAEf9K,QAAQC,IAAI,qCACL,EARP,IAAMmP,EAAS,kCAGf,OAFAlP,KAAK4K,YAAYsE,GACjBpP,QAAQC,IAAI,kBAAoBmP,IACzB,I,sBASX,oCAAAjO,EAAAC,OAAA,mDAEEpB,QAAQC,IAAI,6BACRgL,EAAO/K,KAAKhB,MAAMuC,SACtBvB,KAAKa,SAAS,CAAEgK,eAAe,IAJjC,UAQQ7K,KAAKmP,eARb,mEAAAlO,EAAA,MAU4BK,MAAOzF,qDAAkC,CAAE4F,OAAQ,SAV/E,UAUQN,EAVR,OAWUiO,EAAc,WAAajO,EAAYE,OAAzB,kBAA2DF,EAAYQ,YACvFR,EAAYC,GAZpB,iBAaMtB,QAAQC,IAAI,0DACZD,QAAQC,IAAIqP,GAdlB,8BAgBMtP,QAAQC,IAAI,iFACZD,QAAQC,IAAIsL,KAAKC,UAAUnK,IAC3BrB,QAAQC,IAAI,qBACN,IAAI6B,MAAMwN,GAnBtB,2BAAAnO,EAAA,MAsBwBE,EAAYU,QAtBpC,QAsBUwN,EAtBV,QAuBUtN,EAAOsN,EAAMrO,QAAO,SAACe,GAAD,OAAUA,EAAKC,QAAU+I,EAAK/I,SAAO,IAIzDD,EAAK0M,WAAa1D,EAAK0D,UACnBlN,EAD6B,SACbwJ,GADa,IACPvJ,SAAUuJ,EAAK/I,MAAMa,MAAM,KAAK,KAC5D7C,KAAKa,SAAU,CAAC6N,YAAY,EAAMnN,aACf,+BACnBvB,KAAK4K,YADc,gCAEnB9K,QAAQC,IAAI,6BAGG,mBACfC,KAAK4K,YADU,oBAEf9K,QAAQC,IAAI,qCAIC,2BACfC,KAAK4K,YADU,4BAEf9K,QAAQC,IAAI,4CA3ClB,kDA+CmB,uCACfC,KAAK4K,YADU,wCAEf9K,QAAQC,IAAI,kFACZD,QAAQC,IAAI,oDACZD,QAAQC,IAAR,MAnDJ,yBAsDIC,KAAKa,SAAS,CAAEgK,eAAe,IAC/B/K,QAAQC,IAAI,6BACRC,KAAKhB,MAAM0P,YAAY1O,KAAKxB,MAAM8Q,SAAStP,KAAKhB,MAAMuC,UAxD9D,sF,sBA4DA,8CAAAN,EAAAC,OAAA,mDAEEpB,QAAQC,IAAI,6BACRgL,EAAO/K,KAAKhB,MAAMuC,SACtBvB,KAAKa,SAAS,CAAEgK,eAAe,IAJjC,SAQQ0E,EAAiB,CAACnO,IAAI,IACtBpB,KAAKmP,eATb,mEAAAlO,EAAA,MAYkC2M,GAAc7C,EAAK/I,QAZrD,UAYUwN,EAZV,OAaI1P,QAAQC,IAAI,mBAAqByP,EAAgBnO,QAC5CmO,EAAgBpO,GAdzB,wBAeQpB,KAAK4K,YAAY4E,EAAgBnO,QAfzC,8CAAAJ,EAAA,MAoB4BK,MAAOzF,qDAAkC,CAAE4F,OAAQ,SApB/E,WAoBQN,EApBR,OAqBUsO,EAAY,WAAatO,EAAYE,OAAS,KAAOF,EAAYQ,YACnER,EAAYC,GAtBpB,iBAuBMtB,QAAQC,IAAI,0DACZD,QAAQC,IAAI0P,GAxBlB,8BA0BM3P,QAAQC,IAAI,wEACN,IAAI6B,MAAM6N,GA3BtB,2BAAAxO,EAAA,MA8BwBE,EAAYU,QA9BpC,WA8BUwN,EA9BV,OA+BiBA,EAAMrO,QAAO,SAACe,GAAD,OAAUA,EAAKC,QAAU+I,EAAK/I,SAAO,GA/BnE,oBArMwByM,EAwOqB1D,EAAK0D,SAvOlD3O,QAAQC,IAAI,sCAuOA2P,EArOSjB,EAAS3Q,OAAS,EAK/B,CAACsD,IAAI,EAAMC,OAAQ,oBAFnB,CAACD,IAAI,EAAOC,OAAQ,mDAmOHD,GApCzB,wBAqCQtB,QAAQC,IAAI,mBAAqB2P,EAAcrO,QAC/CrB,KAAK4K,YAAY8E,EAAcrO,QAtCvC,kCA2CM0J,EAAKvJ,SAAWuJ,EAAK/I,MAAMa,MAAM,KAAK,GAChC8M,EAAe,CACnBlO,OAAQ,OACR0J,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAL,IAAkBsE,QAAS,IAAO7E,KAjDhD,YAAA9J,EAAA,MAoD6BK,MAAOzF,sDAAqCkP,EAAKvJ,SAAUmO,IApDxF,WAoDMJ,EApDN,OAqDYM,EAAiB,WAAaN,EAAelO,OAAS,KAAOkO,EAAe5N,YAE9E4N,EAAenO,GAvDzB,iBAwDc0O,EAAa,kCACnB9P,KAAK4K,YAAYkF,GACjBhQ,QAAQC,IAAI,0DACZD,QAAQC,IAAI8P,GACZ/P,QAAQC,IAAI,mBAAqB+P,GA5DzC,8BA+DQhQ,QAAQC,IAAI,wEACN,IAAI6B,MAAMiO,GAhExB,gCAoEYX,EAAS,0BACflP,KAAK4K,YAAYsE,GACjBpP,QAAQC,IAAI,mBAAqBmP,GAtEvC,0DA0EmB,uCACflP,KAAK4K,YADU,wCAEf9K,QAAQC,IAAI,sDACZD,QAAQC,IAAR,MA7EJ,yBAgFIC,KAAKa,SAAS,CAAEgK,eAAe,IAC/B/K,QAAQC,IAAI,8BACRwP,EAAenO,IAAKpB,KAAK2O,WAlFjC,+CArMF,IAA0BF,IAqMxB,oC,oBAsFA,WAGE,OADA3O,QAAQC,IAAI,wCACLC,KAAKkO,kB,GAjRU9L,a,gbCtE1B,IAAM2N,GAAQC,cAGRC,GAAa,SAACzR,GAGlB,OADAsB,QAAQC,IAAI,uCAEV,eAACgQ,GAAMG,UAAP,CACAC,iBAAiB,YACjBC,cAAe,CACbC,aAAa,GAHf,UAME,cAACN,GAAMO,OAAP,CACA7T,KAAK,YACL8T,UAAW1M,GACX2M,QAAS,CAAC3G,MAAO,iBACjB4G,cAAe,CAAClP,SAAU/C,EAAM+C,YAGhC,cAACwO,GAAMO,OAAP,CACA7T,KAAK,eACL8T,UAAWhJ,GACXiJ,QAAS,CAAC3G,MAAO,yBACjB4G,cAAe,CAAClP,SAAU/C,EAAM+C,gBAkCjBmP,G,iCAEnB,WAAYlS,GAAQ,IAAD,sBACjB,cAAMA,IAEDQ,MAAQ,CACX0P,YAAY,EACZnN,SAAU,MAEZ,EAAK+N,SAAW,EAAKA,SAAS9P,KAAd,QAPC,E,oCAUnB,SAAS+B,GACPzB,QAAQC,IAAI,yDACZC,KAAKa,SAAU,CAAC6N,YAAY,EAAMnN,e,oBAGpC,WAEE,OAAKvB,KAAKhB,MAAM0P,WAMZ,cAACiC,EAAA,EAAD,UACE,cAAC,GAAD,CAAYpP,SAAUvB,KAAKhB,MAAMuC,aAN9B,cAAC,GAAD,CAAa+N,SAAUtP,KAAKsP,e,GApBRlN,c","file":"static/js/app.9b538110.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/wallpaper.9987c866.jpg\";","import { StatusBar } from 'expo-status-bar';\r\n\r\n//import StatusBar from 'react-native'\r\n// import { Platform } from 'react-native';\r\n\r\n// import { Dimensions } from 'react-native';\r\n// var windowWidth = Dimensions.get('window').width;\r\n// var windowHeight = Dimensions.get('window').height;\r\n\r\n// import DeviceInfo from 'react-native-device-info';\r\n// import AsyncStorage from '@react-native-community/async-storage';\r\n\r\n// // how can i do some code that will gives me if its \"Handset\"=> Smartphone , \r\n// //if its \"unknown\"=> Laptop/Computer \r\n// //and it will be saved as well in my async-storage.\r\n\r\n// //this some example that i wanna get it works well coz now its not work good\r\n\r\n// const funct1=  (type) => {\r\n// let type = DeviceInfo.getDeviceType();\r\n\r\n// if type==='Handset'{\r\n//   AsyncStorage.setItem('PLATFORM-TYPE', 'Smartphone');\r\n// }\r\n// if type==='unknown'{\r\n//   AsyncStorage.setItem('PLATFORM-TYPE', 'Laptop/Computer');\r\n// }\r\n// };\r\n\r\nconst styles = {\r\n    mainView: {\r\n        flex: 1,                 \r\n        // marginTop: StatusBar.currentHeight,\r\n    },\r\n    postButton: {\r\n        position: 'absolute',\r\n        height: 60,\r\n        width: 60,\r\n        borderRadius: 30,\r\n        bottom: '2%',\r\n        alignSelf: 'center',\r\n        backgroundColor: 'rgba(0,0,0,1)',\r\n        justifyContent: 'center',  \r\n    },\r\n    postButtonLabel: {\r\n        alignSelf: 'center',\r\n    },\r\n    scrollView: {\r\n        // paddingHorizontal: Platform.OS != 'web' ? '5%' : '5%',\r\n        height: '100%',\r\n        width: '100%',\r\n        // alignSelf: 'center',\r\n    },\r\n    section: {\r\n        width: 350,\r\n        paddingVertical: '16%',\r\n        borderBottomWidth: 1,\r\n        borderColor: 'rgba(155,155,155,0.3)',\r\n        alignSelf: 'center',\r\n    },\r\n    sectionTitle: {\r\n        paddingVertical: 7.5,\r\n        fontSize: 18,\r\n        color: 'white',\r\n        fontWeight: '400',\r\n    },\r\n    card: {\r\n        marginTop: '5%',\r\n        paddingVertical: 5,\r\n        paddingHorizontal: 10,\r\n        borderRadius: 20,\r\n        backgroundColor: 'rgba(0,0,0,0.2)',\r\n    },\r\n    cardRow: {\r\n        flexDirection: 'row',\r\n        paddingVertical: 5,\r\n        alignItems: 'center',\r\n    },\r\n    moodBadge: {\r\n        // fontFamily: 'sans-serif',\r\n        backgroundColor: 'green',\r\n        borderRadius: 30,\r\n        paddingVertical: 6,\r\n        width: 130,\r\n        fontSize: 15,\r\n        textAlign: 'center',\r\n    },\r\n    emotionBadge: {\r\n        // fontFamily: 'sans-serif',\r\n        backgroundColor: 'aliceblue',\r\n        borderRadius: 18,\r\n        paddingVertical: 6,\r\n        paddingHorizontal: 12.5,\r\n        marginRight: 6,\r\n        fontSize: 14,\r\n        textAlign: 'center',\r\n    },\r\n    textBadge: {\r\n        backgroundColor: 'aliceblue',\r\n        borderRadius: 17,\r\n        paddingTop: 5,\r\n        paddingBottom: 8,\r\n        paddingHorizontal: 11,\r\n        width: '100%',\r\n        fontSize: 15,\r\n        lineHeight: 22,\r\n        textAlign: 'left',\r\n        textAlignVertical: 'top',\r\n},\r\n    text: {\r\n        // fontFamily: 'sans-serif',\r\n        fontSize: 14,\r\n        color: 'white'\r\n    },\r\n    spaceBetween: {\r\n        justifyContent: 'space-between',\r\n    },\r\n    icon: {\r\n        paddingHorizontal: 12,\r\n    },\r\n    entryIcon: {\r\n        paddingRight: 0,\r\n        borderWidth: 1,\r\n    },\r\n    editButtonsView: {\r\n        flexDirection: 'row',\r\n        height: 55,\r\n        paddingBottom: 5,\r\n        alignItems: 'flex-end',\r\n        justifyContent: 'space-between'\r\n    },\r\n    editButton: {\r\n        height: 37,\r\n        width: 102,\r\n        borderWidth: 1,\r\n        borderColor: 'aliceblue',\r\n        borderRadius: 19,\r\n        alignItems: 'center',\r\n        justifyContent: 'center'\r\n    },\r\n    editButtonLabel: {\r\n        fontSize: 15,\r\n        fontWeight: '400',\r\n        color: 'white',\r\n    },\r\n};\r\n\r\nexport default styles;","// Module import\r\nimport React, { Component, useState } from 'react';\r\nimport { Platform, View, Text, Pressable, Image } from 'react-native';\r\nimport { Icon } from 'react-native-eva-icons'\r\n\r\n// Local import\r\nimport styles from '../../styles/entrancesStyles'\r\n\r\n// cors-midpoint uri (needed to avoid cors' allow-cross-origin error when fetching in web platforms)\r\nconst corsURI = Platform.OS == 'web' ? 'https://morning-journey-78874.herokuapp.com/' : ''\r\nconst appServerURI = 'https://mood-tracker-server.herokuapp.com/'\r\n\r\n// OpenWeatherMap API weather icons URI:\r\nfunction openWeatherMapIconsURI (icon) {\r\n    if (Platform.OS === 'android') {\r\n        return `http://openweathermap.org/img/wn/${icon}@2x.png`\r\n\r\n    } else if (Platform.OS === 'web') {\r\n        return `https://openweathermap.org/img/wn/${icon}@2x.png`\r\n    }\r\n}\r\n\r\n// Defining mood colors schema\r\n// const moodColors = ['#ff3333', '#0099cc', '#add8e6', '#ffff33', '#00cc00']\r\nconst moodColors = {'Horrível': '#ff3333', 'Mal': '#0099cc', 'Regular': '#add8e6', 'Bem': '#ffff33', 'Ótimo': '#00cc00'};\r\n\r\n\r\n\r\nfunction MoodHeader({entry}) {\r\n    return(\r\n        <View style={ [styles.cardRow, styles.spaceBetween] }>\r\n            <View style={ [{flexDirection: 'row', alignItems: 'center'} ] }>\r\n                <Text style={[styles.moodBadge, {backgroundColor: moodColors[entry.mood]}]}>{entry.mood}</Text>\r\n                    { entry.star ? (\r\n                    <View style={{height: 30, width: 42, alignItems: 'flex-end', justifyContent: 'center'}}>\r\n                        <Icon name='star' fill='gold' width={28} height={28} style={{}} />\r\n                    </View>\r\n                    ) : <></> }                    \r\n                    { entry.weather ? (\r\n                        <View style={{height: 30, width: 50, alignItems: 'flex-end', justifyContent: 'center'}}>\r\n                            <Image source={{uri: openWeatherMapIconsURI(entry.weather.weather.icon)}} style={{width: 40, height: 40}} />\r\n                        </View>\r\n                    ) : <></> }                    \r\n                    { entry.weather ? (\r\n                        <View style={{height: 30, width: 40, alignItems: 'flex-end', justifyContent: 'center'}}>\r\n                            <Text style={{fontSize: 14, fontWeight: '500', color:'#fffd'}}> { entry.weather.main.temp.toString().slice(0,2) + '°C' } </Text>\r\n                        </View>\r\n                    ) : <></> }                \r\n                \r\n            </View>\r\n            <View style={[styles.cardRow]}>\r\n                <Icon name='edit' height={18} width={18} fill='rgba(255,255,255,0.75)' style={{marginRight: 6}} />\r\n                <Text style={styles.text}>{entry.startTime.slice(0,5)}</Text>\r\n            </View>\r\n        </View>\r\n\r\n    )\r\n}\r\n\r\nfunction Address ({entry}) {\r\n\r\n    const [isCollapsed, setIsCollapsed] = useState( 1 );\r\n    if (entry.address) {\r\n        return(\r\n            <View style={styles.cardRow}>\r\n                <Text numberOfLines={ isCollapsed } onPress={ () => { setIsCollapsed( isCollapsed ? 0 : 1 ) }} style={styles.text}>\r\n                    <Icon name='pin' height={17} width={17} fill='rgba(255,255,255,0.75)' style={{marginRight: 5, top: 2}} />\r\n                    {entry.address}\r\n                </Text>\r\n            </View>        \r\n        )\r\n    } else {\r\n        return <></>\r\n    }\r\n}\r\n\r\nfunction Emotions ({entry}) {\r\n    if (entry.emotions.length>0) {\r\n        return (\r\n            <View style={[styles.cardRow, {flexWrap: 'wrap', justifyContent: 'flex-start', paddingTop: 2, PaddingBottom: 0}]}>\r\n                { entry.emotions.map((emotion, index) => {\r\n                    return(\r\n                        <View key={'emotion-' + emotion} style={{paddingVertical: 5, paddingHorizontal: 2}}>\r\n                            <Text style={[styles.emotionBadge]}>{emotion}</Text>\r\n                        </View>\r\n                    )\r\n                })}\r\n            </View>\r\n        )\r\n    } else {\r\n        return (\r\n            <></>\r\n        )\r\n    }\r\n}\r\n\r\nfunction Jornal({ entry }) {\r\n    if (entry.jornal) {\r\n        return(\r\n            <View style={styles.cardRow}>\r\n                <Text style={styles.textBadge}>\r\n                    <Icon name='book-open' height={20} width={20} fill='rgba(0,0,0,0.25)' style={{top: 4, left: 1, marginRight: 6}} />\r\n                    {entry.jornal}\r\n                </Text>\r\n            </View>\r\n        )\r\n    } else {\r\n        return <></>\r\n    }\r\n}\r\n\r\nfunction EmptyCard(props) {\r\n    const textStyle = {fontSize: 16, color: 'white', marginTop: 7}\r\n    return (\r\n        <Pressable onPress={ () => props.navigation.navigate( 'PostEntrance', {currentEntry: 'new'} ) } style={[styles.card, {alignItems: 'center', justifyContent: 'center', fontSize: 16, height: 145}]}>\r\n            <Icon name='inbox' fill='rgba(255,255,255,0.3)' width={25} height={25} />\r\n            <Text style={textStyle}> Nenhuma entrada encontrada. </Text>\r\n            <Text style={textStyle}> Pressione aqui para adicionar uma a este dia! </Text>\r\n        </Pressable>\r\n    );\r\n}\r\n\r\nfunction CardsLoadingMessage() {\r\n    return(\r\n        <View style={[styles.card, {alignItems: 'center', justifyContent: 'center', height: 145}]}>\r\n            <Icon name='sync-outline' fill='rgba(0,0,0,0.3)' width={25} height={25} />\r\n        </View>\r\n    )\r\n}\r\n\r\nexport default class UserEntryCards extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            date: this.props.date,\r\n            userEntries: [],\r\n            selectedEntryId: null,\r\n            isEntriesSyncing: false,\r\n            isDeleteLoading: false,\r\n            newPost: this.props.newPost,\r\n        };\r\n        this.EntryCard = this.EntryCard.bind(this);\r\n        this.onEntryCardPress = this.onEntryCardPress.bind(this);\r\n        this.EditEntryButtons = this.EditEntryButtons.bind(this);\r\n        this.editUserEntry = this.editUserEntry.bind(this);\r\n        this.deleteUserEntry = this.deleteUserEntry.bind(this);\r\n        this.syncUserEntries = this.syncUserEntries.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log('\"Subcomponent UserEntryCards did mount...\"')\r\n        this.syncUserEntries()\r\n        setInterval( () => { this.updateIfNewPost() }, 1000 * 2 )\r\n        setInterval( () => { console.log('Default auto syncing started...'); this.syncUserEntries() }, 1000 * 10 )\r\n        \r\n    }\r\n\r\n    updateIfNewPost () {\r\n        if (this.props.newPost) {\r\n            console.log('JUST POSTED WARNING: POSTED. Selecting current date ...');\r\n            this.props.forgetNewPost();\r\n            this.syncUserEntries();\r\n        }\r\n    }\r\n\r\n    EditEntryButtons(props) {\r\n        const buttonLabels = ['Editar', 'Excluir']\r\n        const [isButtonPressed, setIsButtonPressed] = useState({\r\n            'Editar': false,\r\n            'Excluir': false,\r\n            'Mover': false,\r\n        })\r\n        const onEditButtonPress = {'Excluir': this.deleteUserEntry, 'Editar': this.editUserEntry, 'Mover': () => {console.log('Mover entrada...')}}\r\n        const editButtonLoading = {'Excluir': this.state.isDeleteLoading, 'Editar': false, 'Mover': false}\r\n\r\n        if (this.state.selectedEntryId == props.entryId) {\r\n            return(\r\n                <View style={styles.editButtonsView}>\r\n                    {buttonLabels.map( (buttonLabel, index) => (\r\n                        <Pressable\r\n                        key={`èdit-${buttonLabel}-${props.entryId}`}\r\n                        style={[styles.editButton,  {backgroundColor: isButtonPressed[buttonLabel] ? (buttonLabel=='Excluir' ? '#000f' : '#fff2'): '#0000', borderColor: buttonLabel=='Excluir' ? 'red' : 'white' }]}\r\n                        disabled={ editButtonLoading[buttonLabel] | this.state.isEntriesSyncing }\r\n                        onPress={ onEditButtonPress[buttonLabel] }\r\n                        onPressIn={() => setIsButtonPressed({ ...isButtonPressed, [buttonLabel]: !isButtonPressed[buttonLabel] })}\r\n                        onPressOut={() => setIsButtonPressed({ ...isButtonPressed, [buttonLabel]: !isButtonPressed[buttonLabel] })}\r\n                        >\r\n                            <Text style={[styles.editButtonLabel, {color: buttonLabel=='Excluir' ? 'red' : 'white' }]}>{buttonLabel}</Text>                    \r\n                        </Pressable>\r\n                    ))}\r\n            </View>\r\n            )\r\n        } else {\r\n            return null\r\n        }\r\n    }\r\n\r\n    onEntryCardPress(entryId) {\r\n        function setSelectedEntryId() {\r\n            this.setState({ selectedEntryId: this.state.selectedEntryId === entryId ? null : entryId })\r\n        }\r\n        return setSelectedEntryId.bind(this);\r\n    }\r\n\r\n    EntryCard({ entry }) {\r\n        return (\r\n            <Pressable onPress={this.onEntryCardPress(entry._id)} style={styles.card}>\r\n                <MoodHeader entry={entry} />\r\n                <Emotions entry={entry} />\r\n                <Address entry={entry} />\r\n                <Jornal entry={entry} />\r\n\r\n                <this.EditEntryButtons entryId={entry._id}/>\r\n\r\n            </Pressable>\r\n        );\r\n    }    \r\n\r\n    UserEntryCardsList() {\r\n        const selDateEntries = this.state.userEntries.filter( (entry) => entry.date === this.props.date )\r\n\r\n        if (selDateEntries.length) {\r\n            return selDateEntries.map( entry => <this.EntryCard key={'entry-card-'+entry.startTime} entry={entry} />)\r\n        \r\n        } else if (this.state.isEntriesSyncing) {    \r\n            return <CardsLoadingMessage />\r\n\r\n        } else {\r\n            return <EmptyCard navigation={this.props.navigation} />\r\n        }\r\n    }\r\n\r\n    editUserEntry() {\r\n        const currentEntry = this.state.userEntries.filter( (entry) => entry._id == this.state.selectedEntryId )[0]\r\n        this.props.navigation.navigate('PostEntrance', {currentEntry: currentEntry })\r\n    }\r\n\r\n    async deleteUserEntry() {\r\n\r\n        console.log('DELETE USER ENTRY STATUS: Started...')\r\n        this.setState({ isDeleteLoading: true });\r\n\r\n        // prompt()\r\n\r\n        try {\r\n            var UsersResult = {ok: false, status: 999}\r\n            UsersResult = await fetch( corsURI + appServerURI + 'Users/' + this.props.userInfo.username + '/entries/' + this.state.selectedEntryId, { method: 'DELETE' });\r\n            // var UsersResult = await fetch( 'https://localhost:3000/' + 'Users/' + this.props.userInfo.username + '/entries/' + this.state.selectedEntryId, { method: 'DELETE' });\r\n            const usersStatus =  'Status: ' + UsersResult.status + ', ' + UsersResult.statusText\r\n\r\n            if (UsersResult.ok) {\r\n                // const users = await UsersResult.json();\r\n                console.log('fetch DELETE request for user entry successful.')\r\n                console.log(usersStatus)\r\n\r\n                console.log('DELETE USER ENTRY STATUS: Successful.')\r\n\r\n            } else {\r\n                console.log( new Error('\"fetch\" DELETE request for user entry failed. Throwing error...') )\r\n                throw new Error(usersStatus)\r\n            }\r\n    \r\n        } catch (error) {\r\n                console.log('DELETE USER ENTRY STATUS: Error captured. Printing error...')\r\n                console.log(error);\r\n\r\n        } finally {\r\n            this.setState({ isDeleteLoading: false });\r\n            console.log('DELETE USER ENTRY STATUS: FINISHED. Proceeding to sync user entries...')\r\n            if (UsersResult.ok) {this.syncUserEntries()}\r\n        }    \r\n\r\n    }\r\n\r\n    async syncUserEntries() {\r\n\r\n        console.log('SYNC ENTRIES STATUS: Started...')\r\n        this.setState({ isEntriesSyncing: true });\r\n    \r\n        try {\r\n\r\n            var UsersResult = await fetch( corsURI + appServerURI + 'Users', { method: 'GET' });\r\n            const usersStatus =  'Status: ' + UsersResult.status + ', ' + UsersResult.statusText\r\n\r\n            if (UsersResult.ok) {\r\n                const users = await UsersResult.json();\r\n                const user = users.filter((user) => user.email === this.props.userInfo.email)[0]\r\n                console.log('fetch GET request for user entries successful.')\r\n                console.log(usersStatus)\r\n\r\n                this.setState({userEntries: user['entries'].reverse(), entriesSynced: true})  \r\n                console.log('SYNC ENTRIES STATUS: Successful.')\r\n\r\n            } else {\r\n                console.log( new Error('\"fetch\" GET request for user entries failed. Throwing error...') )\r\n                throw new Error(usersStatus)\r\n            }\r\n    \r\n        } catch (error) {\r\n                console.log('SYNC ENTRIES STATUS: Error captured. Printing error...')\r\n                console.log(error);\r\n\r\n        } finally {\r\n            this.setState({ isEntriesSyncing: false });\r\n            console.log('SYNC ENTRIES STATUS: Finished.')\r\n        }    \r\n    }\r\n\r\n    render() {\r\n        console.log('\"Rendering \"UserEntryCards\" subcomponent...\"')\r\n        return this.UserEntryCardsList()\r\n    }\r\n}","const dateRange = [\r\n    \"2021-01-01\",\r\n    \"2021-01-02\",\r\n    \"2021-01-03\",\r\n    \"2021-01-04\",\r\n    \"2021-01-05\",\r\n    \"2021-01-06\",\r\n    \"2021-01-07\",\r\n    \"2021-01-08\",\r\n    \"2021-01-09\",\r\n    \"2021-01-10\",\r\n    \"2021-01-11\",\r\n    \"2021-01-12\",\r\n    \"2021-01-13\",\r\n    \"2021-01-14\",\r\n    \"2021-01-15\",\r\n    \"2021-01-16\",\r\n    \"2021-01-17\",\r\n    \"2021-01-18\",\r\n    \"2021-01-19\",\r\n    \"2021-01-20\",\r\n    \"2021-01-21\",\r\n    \"2021-01-22\",\r\n    \"2021-01-23\",\r\n    \"2021-01-24\",\r\n    \"2021-01-25\",\r\n    \"2021-01-26\",\r\n    \"2021-01-27\",\r\n    \"2021-01-28\",\r\n    \"2021-01-29\",\r\n    \"2021-01-30\",\r\n    \"2021-01-31\",\r\n    \"2021-02-01\",\r\n    \"2021-02-02\",\r\n    \"2021-02-03\",\r\n    \"2021-02-04\",\r\n    \"2021-02-05\",\r\n    \"2021-02-06\",\r\n    \"2021-02-07\",\r\n    \"2021-02-08\",\r\n    \"2021-02-09\",\r\n    \"2021-02-10\",\r\n    \"2021-02-11\",\r\n    \"2021-02-12\",\r\n    \"2021-02-13\",\r\n    \"2021-02-14\",\r\n    \"2021-02-15\",\r\n    \"2021-02-16\",\r\n    \"2021-02-17\",\r\n    \"2021-02-18\",\r\n    \"2021-02-19\",\r\n    \"2021-02-20\",\r\n    \"2021-02-21\",\r\n    \"2021-02-22\",\r\n    \"2021-02-23\",\r\n    \"2021-02-24\",\r\n    \"2021-02-25\",\r\n    \"2021-02-26\",\r\n    \"2021-02-27\",\r\n    \"2021-02-28\",\r\n    \"2021-03-01\",\r\n    \"2021-03-02\",\r\n    \"2021-03-03\",\r\n    \"2021-03-04\",\r\n    \"2021-03-05\",\r\n    \"2021-03-06\",\r\n    \"2021-03-07\",\r\n    \"2021-03-08\",\r\n    \"2021-03-09\",\r\n    \"2021-03-10\",\r\n    \"2021-03-11\",\r\n    \"2021-03-12\",\r\n    \"2021-03-13\",\r\n    \"2021-03-14\",\r\n    \"2021-03-15\",\r\n    \"2021-03-16\",\r\n    \"2021-03-17\",\r\n    \"2021-03-18\",\r\n    \"2021-03-19\",\r\n    \"2021-03-20\",\r\n    \"2021-03-21\",\r\n    \"2021-03-22\",\r\n    \"2021-03-23\",\r\n    \"2021-03-24\",\r\n    \"2021-03-25\",\r\n    \"2021-03-26\",\r\n    \"2021-03-27\",\r\n    \"2021-03-28\",\r\n    \"2021-03-29\",\r\n    \"2021-03-30\",\r\n    \"2021-03-31\",\r\n    \"2021-04-01\",\r\n    \"2021-04-02\",\r\n    \"2021-04-03\",\r\n    \"2021-04-04\",\r\n    \"2021-04-05\",\r\n    \"2021-04-06\",\r\n    \"2021-04-07\",\r\n    \"2021-04-08\",\r\n    \"2021-04-09\",\r\n    \"2021-04-10\",\r\n    \"2021-04-11\",\r\n    \"2021-04-12\",\r\n    \"2021-04-13\",\r\n    \"2021-04-14\",\r\n    \"2021-04-15\",\r\n    \"2021-04-16\",\r\n    \"2021-04-17\",\r\n    \"2021-04-18\",\r\n    \"2021-04-19\",\r\n    \"2021-04-20\",\r\n    \"2021-04-21\",\r\n    \"2021-04-22\",\r\n    \"2021-04-23\",\r\n    \"2021-04-24\",\r\n    \"2021-04-25\",\r\n    \"2021-04-26\",\r\n    \"2021-04-27\",\r\n    \"2021-04-28\",\r\n    \"2021-04-29\",\r\n    \"2021-04-30\",\r\n    \"2021-05-01\",\r\n    \"2021-05-02\",\r\n    \"2021-05-03\",\r\n    \"2021-05-04\",\r\n    \"2021-05-05\",\r\n    \"2021-05-06\",\r\n    \"2021-05-07\",\r\n    \"2021-05-08\",\r\n    \"2021-05-09\",\r\n    \"2021-05-10\",\r\n    \"2021-05-11\",\r\n    \"2021-05-12\",\r\n    \"2021-05-13\",\r\n    \"2021-05-14\",\r\n    \"2021-05-15\",\r\n    \"2021-05-16\",\r\n    \"2021-05-17\",\r\n    \"2021-05-18\",\r\n    \"2021-05-19\",\r\n    \"2021-05-20\",\r\n    \"2021-05-21\",\r\n    \"2021-05-22\",\r\n    \"2021-05-23\",\r\n    \"2021-05-24\",\r\n    \"2021-05-25\",\r\n    \"2021-05-26\",\r\n    \"2021-05-27\",\r\n    \"2021-05-28\",\r\n    \"2021-05-29\",\r\n    \"2021-05-30\",\r\n    \"2021-05-31\",\r\n    \"2021-06-01\",\r\n    \"2021-06-02\",\r\n    \"2021-06-03\",\r\n    \"2021-06-04\",\r\n    \"2021-06-05\",\r\n    \"2021-06-06\",\r\n    \"2021-06-07\",\r\n    \"2021-06-08\",\r\n    \"2021-06-09\",\r\n    \"2021-06-10\",\r\n    \"2021-06-11\",\r\n    \"2021-06-12\",\r\n    \"2021-06-13\",\r\n    \"2021-06-14\",\r\n    \"2021-06-15\",\r\n    \"2021-06-16\",\r\n    \"2021-06-17\",\r\n    \"2021-06-18\",\r\n    \"2021-06-19\",\r\n    \"2021-06-20\",\r\n    \"2021-06-21\",\r\n    \"2021-06-22\",\r\n    \"2021-06-23\",\r\n    \"2021-06-24\",\r\n    \"2021-06-25\",\r\n    \"2021-06-26\",\r\n    \"2021-06-27\",\r\n    \"2021-06-28\",\r\n    \"2021-06-29\",\r\n    \"2021-06-30\",\r\n    \"2021-07-01\",\r\n    \"2021-07-02\",\r\n    \"2021-07-03\",\r\n    \"2021-07-04\",\r\n    \"2021-07-05\",\r\n    \"2021-07-06\",\r\n    \"2021-07-07\",\r\n    \"2021-07-08\",\r\n    \"2021-07-09\",\r\n    \"2021-07-10\",\r\n    \"2021-07-11\",\r\n    \"2021-07-12\",\r\n    \"2021-07-13\",\r\n    \"2021-07-14\",\r\n    \"2021-07-15\",\r\n    \"2021-07-16\",\r\n    \"2021-07-17\",\r\n    \"2021-07-18\",\r\n    \"2021-07-19\",\r\n    \"2021-07-20\",\r\n    \"2021-07-21\",\r\n    \"2021-07-22\",\r\n    \"2021-07-23\",\r\n    \"2021-07-24\",\r\n    \"2021-07-25\",\r\n    \"2021-07-26\",\r\n    \"2021-07-27\",\r\n    \"2021-07-28\",\r\n    \"2021-07-29\",\r\n    \"2021-07-30\",\r\n    \"2021-07-31\",\r\n    \"2021-08-01\",\r\n    \"2021-08-02\",\r\n    \"2021-08-03\",\r\n    \"2021-08-04\",\r\n    \"2021-08-05\",\r\n    \"2021-08-06\",\r\n    \"2021-08-07\",\r\n    \"2021-08-08\",\r\n    \"2021-08-09\",\r\n    \"2021-08-10\",\r\n    \"2021-08-11\",\r\n    \"2021-08-12\",\r\n    \"2021-08-13\",\r\n    \"2021-08-14\",\r\n    \"2021-08-15\",\r\n    \"2021-08-16\",\r\n    \"2021-08-17\",\r\n    \"2021-08-18\",\r\n    \"2021-08-19\",\r\n    \"2021-08-20\",\r\n    \"2021-08-21\",\r\n    \"2021-08-22\",\r\n    \"2021-08-23\",\r\n    \"2021-08-24\",\r\n    \"2021-08-25\",\r\n    \"2021-08-26\",\r\n    \"2021-08-27\",\r\n    \"2021-08-28\",\r\n    \"2021-08-29\",\r\n    \"2021-08-30\",\r\n    \"2021-08-31\",\r\n    \"2021-09-01\",\r\n    \"2021-09-02\",\r\n    \"2021-09-03\",\r\n    \"2021-09-04\",\r\n    \"2021-09-05\",\r\n    \"2021-09-06\",\r\n    \"2021-09-07\",\r\n    \"2021-09-08\",\r\n    \"2021-09-09\",\r\n    \"2021-09-10\",\r\n    \"2021-09-11\",\r\n    \"2021-09-12\",\r\n    \"2021-09-13\",\r\n    \"2021-09-14\",\r\n    \"2021-09-15\",\r\n    \"2021-09-16\",\r\n    \"2021-09-17\",\r\n    \"2021-09-18\",\r\n    \"2021-09-19\",\r\n    \"2021-09-20\",\r\n    \"2021-09-21\",\r\n    \"2021-09-22\",\r\n    \"2021-09-23\",\r\n    \"2021-09-24\",\r\n    \"2021-09-25\",\r\n    \"2021-09-26\",\r\n    \"2021-09-27\",\r\n    \"2021-09-28\",\r\n    \"2021-09-29\",\r\n    \"2021-09-30\",\r\n    \"2021-10-01\",\r\n    \"2021-10-02\",\r\n    \"2021-10-03\",\r\n    \"2021-10-04\",\r\n    \"2021-10-05\",\r\n    \"2021-10-06\",\r\n    \"2021-10-07\",\r\n    \"2021-10-08\",\r\n    \"2021-10-09\",\r\n    \"2021-10-10\",\r\n    \"2021-10-11\",\r\n    \"2021-10-12\",\r\n    \"2021-10-13\",\r\n    \"2021-10-14\",\r\n    \"2021-10-15\",\r\n    \"2021-10-16\",\r\n    \"2021-10-17\",\r\n    \"2021-10-18\",\r\n    \"2021-10-19\",\r\n    \"2021-10-20\",\r\n    \"2021-10-21\",\r\n    \"2021-10-22\",\r\n    \"2021-10-23\",\r\n    \"2021-10-24\",\r\n    \"2021-10-25\",\r\n    \"2021-10-26\",\r\n    \"2021-10-27\",\r\n    \"2021-10-28\",\r\n    \"2021-10-29\",\r\n    \"2021-10-30\",\r\n    \"2021-10-31\",\r\n    \"2021-11-01\",\r\n    \"2021-11-02\",\r\n    \"2021-11-03\",\r\n    \"2021-11-04\",\r\n    \"2021-11-05\",\r\n    \"2021-11-06\",\r\n    \"2021-11-07\",\r\n    \"2021-11-08\",\r\n    \"2021-11-09\",\r\n    \"2021-11-10\",\r\n    \"2021-11-11\",\r\n    \"2021-11-12\",\r\n    \"2021-11-13\",\r\n    \"2021-11-14\",\r\n    \"2021-11-15\",\r\n    \"2021-11-16\",\r\n    \"2021-11-17\",\r\n    \"2021-11-18\",\r\n    \"2021-11-19\",\r\n    \"2021-11-20\",\r\n    \"2021-11-21\",\r\n    \"2021-11-22\",\r\n    \"2021-11-23\",\r\n    \"2021-11-24\",\r\n    \"2021-11-25\",\r\n    \"2021-11-26\",\r\n    \"2021-11-27\",\r\n    \"2021-11-28\",\r\n    \"2021-11-29\",\r\n    \"2021-11-30\",\r\n    \"2021-12-01\",\r\n    \"2021-12-02\",\r\n    \"2021-12-03\",\r\n    \"2021-12-04\",\r\n    \"2021-12-05\",\r\n    \"2021-12-06\",\r\n    \"2021-12-07\",\r\n    \"2021-12-08\",\r\n    \"2021-12-09\",\r\n    \"2021-12-10\",\r\n    \"2021-12-11\",\r\n    \"2021-12-12\",\r\n    \"2021-12-13\",\r\n    \"2021-12-14\",\r\n    \"2021-12-15\",\r\n    \"2021-12-16\",\r\n    \"2021-12-17\",\r\n    \"2021-12-18\",\r\n    \"2021-12-19\",\r\n    \"2021-12-20\",\r\n    \"2021-12-21\",\r\n    \"2021-12-22\",\r\n    \"2021-12-23\",\r\n    \"2021-12-24\",\r\n    \"2021-12-25\",\r\n    \"2021-12-26\",\r\n    \"2021-12-27\",\r\n    \"2021-12-28\",\r\n    \"2021-12-29\",\r\n    \"2021-12-30\",\r\n    \"2021-12-31\",\r\n    \"2022-01-01\",\r\n    \"2022-01-02\",\r\n    \"2022-01-03\",\r\n    \"2022-01-04\",\r\n    \"2022-01-05\",\r\n    \"2022-01-06\",\r\n    \"2022-01-07\",\r\n    \"2022-01-08\",\r\n    \"2022-01-09\",\r\n    \"2022-01-10\",\r\n    \"2022-01-11\",\r\n    \"2022-01-12\",\r\n    \"2022-01-13\",\r\n    \"2022-01-14\",\r\n    \"2022-01-15\",\r\n    \"2022-01-16\",\r\n    \"2022-01-17\",\r\n    \"2022-01-18\",\r\n    \"2022-01-19\",\r\n    \"2022-01-20\",\r\n    \"2022-01-21\",\r\n    \"2022-01-22\",\r\n    \"2022-01-23\",\r\n    \"2022-01-24\",\r\n    \"2022-01-25\",\r\n    \"2022-01-26\",\r\n    \"2022-01-27\",\r\n    \"2022-01-28\",\r\n    \"2022-01-29\",\r\n    \"2022-01-30\",\r\n    \"2022-01-31\",\r\n    \"2022-02-01\",\r\n    \"2022-02-02\",\r\n    \"2022-02-03\",\r\n    \"2022-02-04\",\r\n    \"2022-02-05\",\r\n    \"2022-02-06\",\r\n    \"2022-02-07\",\r\n    \"2022-02-08\",\r\n    \"2022-02-09\",\r\n    \"2022-02-10\",\r\n    \"2022-02-11\",\r\n    \"2022-02-12\",\r\n    \"2022-02-13\",\r\n    \"2022-02-14\",\r\n    \"2022-02-15\",\r\n    \"2022-02-16\",\r\n    \"2022-02-17\",\r\n    \"2022-02-18\",\r\n    \"2022-02-19\",\r\n    \"2022-02-20\",\r\n    \"2022-02-21\",\r\n    \"2022-02-22\",\r\n    \"2022-02-23\",\r\n    \"2022-02-24\",\r\n    \"2022-02-25\",\r\n    \"2022-02-26\",\r\n    \"2022-02-27\",\r\n    \"2022-02-28\",\r\n    \"2022-03-01\",\r\n    \"2022-03-02\",\r\n    \"2022-03-03\",\r\n    \"2022-03-04\",\r\n    \"2022-03-05\",\r\n    \"2022-03-06\",\r\n    \"2022-03-07\",\r\n    \"2022-03-08\",\r\n    \"2022-03-09\",\r\n    \"2022-03-10\",\r\n    \"2022-03-11\",\r\n    \"2022-03-12\",\r\n    \"2022-03-13\",\r\n    \"2022-03-14\",\r\n    \"2022-03-15\",\r\n    \"2022-03-16\",\r\n    \"2022-03-17\",\r\n    \"2022-03-18\",\r\n    \"2022-03-19\",\r\n    \"2022-03-20\",\r\n    \"2022-03-21\",\r\n    \"2022-03-22\",\r\n    \"2022-03-23\",\r\n    \"2022-03-24\",\r\n    \"2022-03-25\",\r\n    \"2022-03-26\",\r\n    \"2022-03-27\",\r\n    \"2022-03-28\",\r\n    \"2022-03-29\",\r\n    \"2022-03-30\",\r\n    \"2022-03-31\",\r\n    \"2022-04-01\",\r\n    \"2022-04-02\",\r\n    \"2022-04-03\",\r\n    \"2022-04-04\",\r\n    \"2022-04-05\",\r\n    \"2022-04-06\",\r\n    \"2022-04-07\",\r\n    \"2022-04-08\",\r\n    \"2022-04-09\",\r\n    \"2022-04-10\",\r\n    \"2022-04-11\",\r\n    \"2022-04-12\",\r\n    \"2022-04-13\",\r\n    \"2022-04-14\",\r\n    \"2022-04-15\",\r\n    \"2022-04-16\",\r\n    \"2022-04-17\",\r\n    \"2022-04-18\",\r\n    \"2022-04-19\",\r\n    \"2022-04-20\",\r\n    \"2022-04-21\",\r\n    \"2022-04-22\",\r\n    \"2022-04-23\",\r\n    \"2022-04-24\",\r\n    \"2022-04-25\",\r\n    \"2022-04-26\",\r\n    \"2022-04-27\",\r\n    \"2022-04-28\",\r\n    \"2022-04-29\",\r\n    \"2022-04-30\",\r\n    \"2022-05-01\",\r\n    \"2022-05-02\",\r\n    \"2022-05-03\",\r\n    \"2022-05-04\",\r\n    \"2022-05-05\",\r\n    \"2022-05-06\",\r\n    \"2022-05-07\",\r\n    \"2022-05-08\",\r\n    \"2022-05-09\",\r\n    \"2022-05-10\",\r\n    \"2022-05-11\",\r\n    \"2022-05-12\",\r\n    \"2022-05-13\",\r\n    \"2022-05-14\",\r\n    \"2022-05-15\",\r\n    \"2022-05-16\",\r\n    \"2022-05-17\",\r\n    \"2022-05-18\",\r\n    \"2022-05-19\",\r\n    \"2022-05-20\",\r\n    \"2022-05-21\",\r\n    \"2022-05-22\",\r\n    \"2022-05-23\",\r\n    \"2022-05-24\",\r\n    \"2022-05-25\",\r\n    \"2022-05-26\",\r\n    \"2022-05-27\",\r\n    \"2022-05-28\",\r\n    \"2022-05-29\",\r\n    \"2022-05-30\",\r\n    \"2022-05-31\",\r\n    \"2022-06-01\",\r\n    \"2022-06-02\",\r\n    \"2022-06-03\",\r\n    \"2022-06-04\",\r\n    \"2022-06-05\",\r\n    \"2022-06-06\",\r\n    \"2022-06-07\",\r\n    \"2022-06-08\",\r\n    \"2022-06-09\",\r\n    \"2022-06-10\",\r\n    \"2022-06-11\",\r\n    \"2022-06-12\",\r\n    \"2022-06-13\",\r\n    \"2022-06-14\",\r\n    \"2022-06-15\",\r\n    \"2022-06-16\",\r\n    \"2022-06-17\",\r\n    \"2022-06-18\",\r\n    \"2022-06-19\",\r\n    \"2022-06-20\",\r\n    \"2022-06-21\",\r\n    \"2022-06-22\",\r\n    \"2022-06-23\",\r\n    \"2022-06-24\",\r\n    \"2022-06-25\",\r\n    \"2022-06-26\",\r\n    \"2022-06-27\",\r\n    \"2022-06-28\",\r\n    \"2022-06-29\",\r\n    \"2022-06-30\"\r\n]\r\nexport default dateRange;","// Module imports\r\nimport React, { Component } from 'react';\r\nimport { View, Text, ImageBackground, Pressable, ScrollView } from 'react-native';\r\nimport { Icon } from 'react-native-eva-icons'\r\n\r\n// Component imports\r\nimport UserEntryCards from './subcomponents/UserEntryCards';\r\n\r\n// Local imports\r\nimport dateRange from '../shared/dateRange';\r\nimport styles from '../styles/entrancesStyles';\r\n\r\n// cors-midpoint uri (needed to avoid cors' allow-cross-origin error when fetching)\r\n// const corsURI = 'https://morning-journey-78874.herokuapp.com/';\r\n// const appServerURI = 'https://mood-tracker-server.herokuapp.com/'\r\n\r\n// Defining pertinent constants\r\nconst monthDict = {'Jan': '01', 'Feb': '02', 'Mar': '03', 'Apr': '04', 'May': '05', 'Jun': '06', 'Jul': '07', 'Ago': '08', 'Sep': '09', 'Oct': '10', 'Nov': '11', 'Dec': '12'}\r\nconst englishMonthSigs = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Ago', 'Sep', 'Oct', 'Nov', 'Dec']\r\nconst portugueseMonthSigs = ['Jan', 'Fev', 'Mar', 'Abr', 'Mai', 'Jun', 'Jul', 'Ago', 'Set', 'Out', 'Nov', 'Dez']\r\nconst englishWeekDayMap = {'Mon': 'Seg', 'Tue': 'Ter', 'Wed': 'Qua', 'Thu': 'Qui', 'Fri': 'Sex', 'Sat': 'Sab', 'Sun': 'Dom'}\r\n\r\n// Defining pertinent functions\r\nfunction Today() {\r\n    const now = Date().toString().split(' ')\r\n    const today = [ now[3], monthDict[now[1]], now[2] ].join('-')\r\n    return today\r\n}\r\nfunction getNextDate(date, next='next') {\r\n    const nextDate = dateRange[dateRange.indexOf(date) + (next=='previous' ? -1 : 1)]\r\n    return nextDate\r\n}\r\nfunction getTime() {\r\n    //Wed,Jan,26,2022,15:12:37,GMT-0300,(Horário,Padrão,de,Brasília)\r\n    const now = Date().toString().split(' ')\r\n    const time = now[4]\r\n    // const time = new Date().toLocaleTimeString()\r\n    return time\r\n}\r\nfunction formatDate(selDate) {\r\n    \r\n    var ymd = selDate.split('-')\r\n    const yesterday = getNextDate(Today(), 'previous')\r\n    const englishWeekDay = new Date(ymd[0], ymd[1], ymd[2]).toString().split(' ')[0]\r\n    const weekDay = englishWeekDayMap[englishWeekDay]\r\n    var prefix = ''\r\n\r\n    if (selDate === Today()) prefix = 'Hoje, '\r\n    else if (selDate === yesterday) prefix = 'Ontem, '\r\n    else prefix = weekDay + ', '\r\n    \r\n    for (var i=0; i<12; i++) {\r\n        if (monthDict[ englishMonthSigs[i] ] == ymd[1]) {\r\n            return prefix + oneDigit(ymd[2]) + '° ' + portugueseMonthSigs[i]\r\n        }\r\n    }\r\n}\r\nfunction oneDigit(stringNumber) {\r\n    if (stringNumber[0] == '0') return stringNumber.slice(1, stringNumber.length)\r\n    else return stringNumber\r\n}\r\n\r\nexport default class EntrancesScreen extends Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            userEntries: [],\r\n            date: Today(),\r\n            time: getTime(),\r\n            selectedDate: Today(),\r\n            entriesLoading: false,\r\n            entriesSynced: false,\r\n        };\r\n        this.onNextButtonPress = this.onNextButtonPress.bind(this);\r\n        this.forgetNewPost = this.forgetNewPost.bind(this);         \r\n    }\r\n    \r\n    componentDidMount() {\r\n        console.log('\"Entries\" screen component did mount...')      \r\n    }\r\n\r\n    onNextButtonPress(next='next') { \r\n        function setSelectedDate() {\r\n            this.setState( {selectedDate: getNextDate(this.state.selectedDate, next)} ) \r\n        }\r\n        return setSelectedDate.bind(this);\r\n    }\r\n\r\n    forgetNewPost() {\r\n        function forgetNewPost() {\r\n            this.props.navigation.setParams({newPost: false});\r\n            this.setState({\r\n                selectedDate: Today(),\r\n            });\r\n        }\r\n        return forgetNewPost.bind(this);\r\n    }\r\n\r\n    render() {\r\n\r\n        console.log('Rendering \"Entries\" screen...')\r\n        const isToday = this.state.selectedDate === this.state.date\r\n\r\n        return(\r\n            <ImageBackground source={require('../assets/wallpaper.jpg')} style={[styles.mainView]}>\r\n                \r\n                <ScrollView style={styles.scrollView}>\r\n\r\n                        <View style={styles.section}>        \r\n                            <View style={[styles.cardRow, {justifyContent: 'space-between'}]}>\r\n                                <Pressable onPress={ this.onNextButtonPress('previous') }>\r\n                                    <Icon name='arrow-back' width={35} height={35} fill='white' />\r\n                                </Pressable>\r\n                                <Text style={styles.sectionTitle}> { 'Suas entradas  •  ' + formatDate(this.state.selectedDate) } </Text>                                \r\n                                { !isToday ? (\r\n                                    <Pressable onPress={ this.onNextButtonPress('next') }>\r\n                                        <Icon name='arrow-forward' width={35} height={35} fill='white' />\r\n                                    </Pressable>   \r\n                                ) : (\r\n                                    <View style={{height: 35, width: 35}}></View>\r\n                                )}\r\n                            </View>\r\n\r\n                            <UserEntryCards\r\n                            navigation = {this.props.navigation}\r\n                            userInfo={this.props.route.params.userInfo}\r\n                            newPost={this.props.route.params.newPost}\r\n                            forgetNewPost={this.forgetNewPost()}\r\n                            date={this.state.selectedDate}\r\n                            />\r\n                        </View>\r\n\r\n                </ScrollView>\r\n\r\n                <Pressable onPress={() => { this.props.navigation.navigate( 'PostEntrance', {currentEntry: 'new'} )} }  style={[styles.postButton]}>\r\n                        <Icon name='plus-circle' width={72} height={72} fill='white' style={styles.postButtonLabel}/>\r\n                </Pressable>\r\n  \r\n            </ImageBackground>\r\n            )\r\n\r\n    }\r\n  }\r\n","import { StatusBar } from 'expo-status-bar';\r\n// import { Platform } from 'react-native';\r\n\r\nconst styles = {\r\n  login: {\r\n    msgBox: {\r\n      position: 'absolute',\r\n      bottom: '10%',\r\n      width: 300,\r\n      alignSelf: 'center',\r\n      // width: 350,\r\n      height: 36,\r\n      justifyContent: 'center',\r\n      backgroundColor: 'rgb(30,30,30)',\r\n      borderWidth: 1,\r\n      borderColor: 'rgb(40,40,40)',\r\n    },\r\n    msg: {\r\n        textAlign: 'center',\r\n        color: 'white',\r\n        // paddingHorizontal: 15,\r\n    },\r\n  },\r\n  mainView: {\r\n    flex: 1,                 \r\n    marginTop: StatusBar.currentHeight,\r\n  },\r\n  entrances: {\r\n    marginTop: StatusBar.currentHeight,\r\n    borderWidth: 0,\r\n    flex:1,\r\n    justifyContent: 'space-between',\r\n    alignItems: 'flex-start',\r\n  },\r\n  scrollView: {\r\n    // paddingHorizontal: Platform.OS != 'web' ? '5%' : '5%',\r\n    width: '100%',\r\n    alignSelf: 'center',\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    paddingBottom: '0%',\r\n    paddingHorizontal: '5%',\r\n    alignSelf: 'stretch',\r\n    borderColor: 'black',\r\n  },\r\n  section: {\r\n    width: 350,\r\n    paddingVertical: '16%',\r\n    borderBottomWidth: 1,\r\n    borderColor: 'rgba(155,155,155,0.3)',\r\n    alignSelf: 'center',\r\n  },\r\n  contentRow: {\r\n    flexDirection: 'column',\r\n    padding: 10,\r\n    marginTop: 22,\r\n    borderWidth: 1,\r\n    borderColor: 'rgba(155,155,155, 0.4)',\r\n    borderRadius: 30,\r\n    backgroundColor: 'rgba(255,255,255, 0.3)',\r\n\r\n  },\r\n  entryTitle: {\r\n    paddingVertical: 3,\r\n    paddingLeft: 4,\r\n    fontSize: 19,\r\n    color: 'white',\r\n  },\r\n  entryIcon: {\r\n    paddingRight: 0,\r\n  },\r\n  postButtonView: {\r\n    height: 60,\r\n    width: 60,\r\n    borderRadius: 30,\r\n    alignSelf: 'center',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundColor: 'white',\r\n  },\r\n  postButtonLabel: {\r\n    fontSize: 45,\r\n    fontWeight: 'bold',\r\n  },\r\n  moodButtonView: {\r\n    width: 65,\r\n    height: 65,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    borderWidth: 1,\r\n  },\r\n  moodButton: {\r\n    width: 65,\r\n    height: 65,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  date: {\r\n    position: 'relative',\r\n    left: '60%',\r\n    paddingVertical: 8,\r\n    paddingHorizontal: 10,\r\n    fontSize: 15,\r\n    alignSelf: 'center',\r\n    backgroundColor: 'white',\r\n    borderRadius: 20\r\n  },\r\n  jornalText: {\r\n    paddingVertical: 5,\r\n    paddingHorizontal: 12,\r\n    flex: 1,\r\n    textAlignVertical: 'top',\r\n    width: '100%',\r\n    borderRadius: 20,\r\n    color: 'white',\r\n    fontSize: 16,\r\n  },\r\n  saveButton: {\r\n    height: 50,\r\n    width: '100%',\r\n    borderTopLeftRadius: 30,\r\n    borderTopRightRadius: 30,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundColor: 'white'\r\n  },\r\n  saveButtonLabel: {\r\n    fontWeight:'bold',\r\n    fontSize: 19\r\n  },\r\n  card: {\r\n    marginTop: '5%',\r\n    paddingVertical: 5,\r\n    paddingHorizontal: 10,\r\n    borderRadius: 20,\r\n    backgroundColor: 'rgba(0,0,0,0.2)',\r\n  },\r\n  cardRow: {\r\n      flexDirection: 'row',\r\n      paddingVertical: 5,\r\n      alignItems: 'center',\r\n  },\r\n  moodBadge: {\r\n      backgroundColor: 'green',\r\n      borderRadius: 30,\r\n      paddingVertical: 6,\r\n      width: 130,\r\n      fontSize: 16,\r\n      textAlign: 'center',\r\n  },\r\n  emotionBadge: {\r\n      backgroundColor: 'rgba(1,1,1,0.5)',\r\n      borderRadius: 30,\r\n      paddingVertical: 6,\r\n      paddingHorizontal: 12.5,\r\n      fontSize: 15,\r\n      textAlign: 'center',\r\n      marginVertical: 5,\r\n      marginHorizontal: 5\r\n  },\r\n  entryCardEmotionBadge: {\r\n    backgroundColor: 'aliceblue',\r\n    borderRadius: 30,\r\n    paddingVertical: 7,\r\n    paddingHorizontal: 12.5,\r\n    marginRight: 6,\r\n    fontSize: 15,\r\n    textAlign: 'center',\r\n  },\r\n  datetimeTitle: {\r\n    fontSize: 16,\r\n    marginRight: 3,\r\n  },\r\n}\r\n\r\nexport default styles;","const GoogleMapsAPI = {\r\n    GoogleMapsJavascriptAPIkey: \"AIzaSyBVWbOwPAMRyz2bS6rYHrDftVeihQ8WMCo\",\r\n    GoogleMapsGeocodingAPIKey: \"AIzaSyB6O-DpvulBC0rom1mGy-mBcstIbPlDPHA\",\r\n}\r\n\r\nexport default GoogleMapsAPI","const OpenWeatherMapAPI = {\r\n    KEY: \"de9e6896f84109d7920528172207411a\",\r\n}\r\nexport default OpenWeatherMapAPI\r\n","import React, { Component } from 'react';\r\nimport { View, Text, ImageBackground, Pressable, ScrollView, Platform, TextInput, ActivityIndicator } from 'react-native';\r\n\r\nimport { Icon } from 'react-native-eva-icons'\r\nimport VectorIcon from 'react-native-vector-icons/MaterialCommunityIcons';\r\n\r\nimport styles from '../styles/postEntryStyles'\r\n\r\n// Geocoding and weather dependencies and APIs\r\nimport * as Location from 'expo-location';\r\nimport GoogleMapsAPI from './subcomponents/GoogleMapsAPI'\r\nLocation.setGoogleApiKey(GoogleMapsAPI.GoogleMapsGeocodingAPIKey)\r\nimport OpenWeatherMapAPI from './subcomponents/OpenWeatherMapAPI';\r\n\r\n// cors-midpoint uri (needed to avoid cors' allow-cross-origin error when fetching in web platforms)\r\nconst corsURI = Platform.OS == 'web' ? 'https://morning-journey-78874.herokuapp.com/' : ''\r\nconst appServerURI = 'https://mood-tracker-server.herokuapp.com/'\r\n\r\n// Date() => wed jan 91 2022 07:46:57 ...\r\nconst now = new Date().toString().split(' ')\r\nconst datetime = now[2] + ' ' + now[1] + ' ' + now[3] + ' - ' + now[4].slice(0, 5)\r\n\r\n// Mood configs\r\nconst moods = ['Horrível', 'Mal', 'Regular', 'Bem', 'Ótimo']\r\nconst moodColorsHEX = ['#ff3333', '#0099cc', '#add8e6', '#ffff33', '#00cc00']\r\nconst moodColorsRGBA = ['rgba(255, 51, 51, 1)', 'rgba(0, 153, 204, 1)', 'rgba(173, 216, 230, 1)', 'rgba(255, 255, 51, 1)', 'rgba(0, 204, 0, 1)']\r\nconst moodColorsTransp = (alpha) => [`rgba(255, 51, 51, ${alpha})`, `rgba(0, 153, 204, ${alpha})`, `rgba(173, 216, 230, ${alpha})`, `rgba(255, 255, 51, ${alpha})`, `rgba(0, 204, 0, ${alpha})`]\r\nconst moodIcons = ['emoticon-dead', 'emoticon-sad', 'emoticon-neutral', 'emoticon-happy', 'emoticon-excited']\r\n\r\n// Emotion configs\r\nconst emotionGroupsNames = [ 'Bem & Calmo', 'Bem & Energizado', 'Mal & Calmo', 'Mal e Energizado' ]\r\nconst goodEnergizedEmotions = ['Animação', 'Concentração', 'Desinibição', 'Motivação', 'Euforia']\r\nconst goodCalmEmotions = ['Alívio', 'Calma', 'Conforto', 'Despreocupação', 'Inspiração', 'Orgulho', 'Paz', 'Relaxamento', 'Satisfação', 'Segurança', 'Criatividade']\r\nconst badEnergizedEmotions = ['Inquietação', 'Ansiedade', 'Desespero', 'Frustração', 'Insatisfação', 'Irritação', 'Medo', 'Preocupação', 'Impaciência', 'Sobrecarregado(a)', 'Tensão']\r\nconst badCalmEmotions = ['Depressão', 'Timidez', 'Cansaço', 'Tristeza','Confusão', 'Desanimo', 'Vergonha', 'Insegurança', 'Apátia', 'Solidão', 'Tédio']\r\n// const badEnergizedEmotions = ['Agitação', 'Ansiedade', 'Tristeza', 'Decepção', 'Depressão', 'Desespero', 'Frustração', 'Insatisfação', 'Irritação', 'Medo', 'Paranoia', 'Preocupação', 'Impaciencia', 'Raiva', 'Revolta', 'Sobrecarregado(a)', 'Tensão', 'Nojo']\r\n\r\nconst emotionGroups = [ goodCalmEmotions.sort(), goodEnergizedEmotions.sort(), badCalmEmotions.sort(), badEnergizedEmotions.sort() ]\r\nconst basicEmotions = [ ...emotionGroups[0], ...emotionGroups[1], ...emotionGroups[2], ...emotionGroups[3] ]\r\n\r\nvar isSelectedEmotions = {}\r\nfor ( let emotion of basicEmotions){\r\n    isSelectedEmotions[emotion] = false\r\n}\r\n\r\n// Date config\r\nconst monthSigs = ['Jan', 'Feb', 'Mar', 'Apr', 'Jun', 'Jul', 'Ago', 'Sep', 'Oct', 'Nov', 'Dec']\r\nconst months = ['01', '02', '03', '04', '05', '06', '07', '08', '09', '10', '11', '12']\r\n\r\nconst monthNameMap = {\r\n    '01': 'Janeiro',\r\n    '02': 'Fevereiro',\r\n    '03': 'Março',\r\n    '04': 'Abril',\r\n    '05': 'Maio',\r\n    '06': 'Junho',\r\n    '07': 'Julho',\r\n    '08': 'Agosto',\r\n    '09': 'Setembro',\r\n    '10': 'Outubro',\r\n    '11': 'Novembro',\r\n    '12': 'Dezembro',\r\n}\r\n\r\n// Functions\r\n\r\nfunction convertMonthSig(monthSig) {\r\n    const thisMonth = months[monthSigs.indexOf(monthSig)]\r\n    return thisMonth\r\n}\r\n\r\nfunction Today() {\r\n    const now = Date().toString().split(' ')\r\n    const today = [ now[3], convertMonthSig(now[1]), now[2] ].join('-')\r\n    return today\r\n}\r\n\r\nfunction getTime() {\r\n    //Wed,Jan,26,2022,15:12:37,GMT-0300,(Horário,Padrão,de,Brasília)\r\n    const now = Date().toString().split(' ')\r\n    const time = now[4]\r\n    return time\r\n}\r\n\r\nfunction oneDigit(stringNumber) {\r\n    if (stringNumber[0] == '0') return stringNumber.slice(1, stringNumber.length)\r\n    else return stringNumber\r\n}\r\n\r\nfunction formatPostEntryDatetimeTitle(date, time) {\r\n    const ymd = date.split('-')\r\n    const m = monthNameMap[ ymd[1] ]\r\n    return oneDigit( ymd[2] ) + ' ' + m + ' ' + ymd[0] + ' - ' + time.slice(0,5)\r\n}\r\n\r\nfunction formattedAddress(addressObj) {\r\n    return addressObj.street + ', ' + addressObj.streetNumber + ' - ' + addressObj.district + ', ' + addressObj.subregion + '. ' + addressObj.region + ', ' + addressObj.isoCountryCode + '.'\r\n}\r\n\r\n// Default export: PostEntranceScreen class component\r\n\r\nexport default class PostEntranceScreen extends Component {\r\n  \r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            \r\n            date: Today(),\r\n            startTime: getTime(),\r\n            endTime: null,\r\n            star: false,\r\n            selectedMood: '',\r\n            emotions: [],\r\n            jornalEntry: '',    \r\n            address: null,\r\n            weather: null,\r\n\r\n            selectedEntry: 'Avaliação',\r\n            isMoodUnmarked: true,\r\n            isSelectedEmotions: isSelectedEmotions,\r\n            isLoading: false,\r\n            isFetchingLocationOrWeather: false,\r\n            editCheck: false,\r\n\r\n            locationServiceEnabled: null,\r\n            userCoordinates: null,\r\n\r\n            loginMsg: '',\r\n        };\r\n\r\n        this.onComponentDidMount = this.onComponentDidMount.bind(this);\r\n        this.fillEntryIfEdit = this.fillEntryIfEdit.bind(this);\r\n        this.onSaveButtonPress = this.onSaveButtonPress.bind(this);\r\n        this.saveButton = this.saveButton.bind(this);\r\n        this.EmotionButtons = this.EmotionButtons.bind(this);\r\n        this.MoodButtons = this.MoodButtons.bind(this);\r\n        this.postEntryHeader = this.postEntryHeader.bind(this);\r\n        this.onEmotionButtonPress = this.onEmotionButtonPress.bind(this);\r\n        this.onMoodButtonPress = this.onMoodButtonPress.bind(this);\r\n        this.inputCardBody = this.inputCardBody.bind(this);\r\n        this.setSelectedEntry = this.setSelectedEntry.bind(this);\r\n        this.InputCard = this.InputCard.bind(this);\r\n        this.JornalInput = this.JornalInput.bind(this);\r\n        this.postNewEntryAsync = this.postNewEntryAsync.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.onComponentDidMount()\r\n    }\r\n    \r\n    onComponentDidMount() {\r\n        console.log('\"PostEntryComponent\" did mount.')\r\n        this.fillEntryIfEdit()\r\n    }\r\n\r\n    fillEntryIfEdit() {\r\n        if (this.props.route.params.currentEntry !== 'new') {\r\n\r\n            if (this.state.editCheck) {\r\n            console.log('EDIT MODE SKIPPED. ALREADY INITIALIZED.')\r\n            return\r\n            }\r\n\r\n            const currentEntry = this.props.route.params.currentEntry\r\n            console.log('INITIALIZING EDIT MODE! FILLING ENTRY FOR ID: ' + currentEntry._id)\r\n\r\n            var isSelectedEmotionsNew = {}\r\n            for ( let emotion of basicEmotions){\r\n                if (currentEntry.emotions.indexOf(emotion) != -1) {\r\n                    isSelectedEmotionsNew[emotion] = true\r\n                } else {\r\n                    isSelectedEmotionsNew[emotion] = false\r\n                }\r\n            }            \r\n\r\n            const oldEntry = {\r\n                startTime: currentEntry.startTime,\r\n                endTime: currentEntry.endTime,\r\n                date: currentEntry.date,\r\n                star: currentEntry.star,\r\n                isMoodUnmarked: false,\r\n                selectedMood: currentEntry.mood,\r\n                isSelectedEmotions: isSelectedEmotionsNew,\r\n                jornalEntry: currentEntry.jornal,\r\n                address: currentEntry.address,\r\n                weather: currentEntry.weather,\r\n                \r\n                editCheck: true,\r\n            }\r\n            this.setState(oldEntry)\r\n            console.log('EDIT MODE INITIALIZED SUCCESSFULLY!')\r\n\r\n        } else {\r\n            console.log('INITIATING NEW BLANK ENTRY! FETCHING LOCATION AND WEATHER DATA...')\r\n            this.setState({isFetchingLocationOrWeather: true})\r\n            this.checkIfLocationEnabled();\r\n            this.getCurrentLocation();\r\n            }\r\n    }\r\n\r\n    postEntryHeader() {\r\n        return(\r\n            <View style={[styles.cardRow, {justifyContent: 'space-between'}]}>\r\n                <Pressable onPress={() => {this.props.navigation.goBack()}}  style={styles.postButton}>\r\n                    <Icon name='arrow-back' fill='white' height={30} width={30}/>\r\n                </Pressable>\r\n                <View style={[styles.entryCardEmotionBadge, {flexDirection: 'row', alignItems: 'center'}]}>\r\n                    <Text style={styles.datetimeTitle}> { formatPostEntryDatetimeTitle(this.state.date, this.state.startTime) } </Text>\r\n                    <Icon name='edit' fill='rgba(75,75,75,1)' height={20} width={20}/>\r\n                </View>\r\n                <Pressable onPress={() => {this.setState({star: !this.state.star})}}  style={styles.postButton}>\r\n                    <Icon name={this.state.star ? 'star' : 'star-outline'} fill='rgba(245,245,245,0.7)' height={30} width={30}/>\r\n                </Pressable>\r\n            </View>\r\n        )\r\n    }\r\n\r\n    onMoodButtonPress(item) {\r\n        function selectMood() {\r\n            if (this.state.selectedMood==item) {\r\n                this.setState({selectedMood: null, isMoodUnmarked: true})\r\n            } else {\r\n                this.setState({selectedMood: item, isMoodUnmarked: false})\r\n            }\r\n        }\r\n        selectMood = selectMood.bind(this);\r\n        return selectMood\r\n    }\r\n\r\n    MoodButtons() {\r\n        \r\n        return moods.map((item, index) => {\r\n       \r\n            const selected = this.state.selectedMood == item\r\n            const unmarked = this.state.isMoodUnmarked\r\n            const selColor = moodColorsRGBA[index]\r\n            return(\r\n                <View key={'mood '+index} style={styles.moodButton} >\r\n                    <VectorIcon\r\n                    name={moodIcons[index]}\r\n                    size={unmarked ? 52 : (selected ? 57 : 50) }\r\n                    color={ unmarked ? selColor : (selected ? selColor : moodColorsTransp(0.5)[index]) }\r\n                    onPress={this.onMoodButtonPress(item)}\r\n                    />\r\n                </View>\r\n            )\r\n        })\r\n    }\r\n\r\n    onEmotionButtonPress(emotion) { \r\n        function selectEmotion () {\r\n            this.setState({\r\n                isSelectedEmotions: {\r\n                    ...this.state.isSelectedEmotions,\r\n                    [emotion]: !this.state.isSelectedEmotions[emotion]\r\n                }\r\n            })\r\n        }\r\n        selectEmotion = selectEmotion.bind(this);\r\n        return selectEmotion\r\n    }\r\n\r\n    EmotionButtons(emotions) {\r\n        return(\r\n            emotions.map( emotion => (\r\n                <Pressable\r\n                key={'emotion-' + emotion}\r\n                title={emotion}\r\n                style={ {} }\r\n                onPress={this.onEmotionButtonPress(emotion)}\r\n                >\r\n                    <Text style={[styles.emotionBadge, {backgroundColor: this.state.isSelectedEmotions[emotion] ? 'lightblue' : 'aliceblue' }]}>{emotion}</Text>\r\n                </Pressable>\r\n            ))\r\n        )\r\n    }\r\n\r\n    JornalInput() {\r\n        return(\r\n            <TextInput\r\n            multiline\r\n            scrollEnabled\r\n            placeholder='Escreva aqui...'\r\n            placeholderTextColor='rgba(255,255,255,0.6)'\r\n            onChangeText={text => this.setState({jornalEntry: text})}\r\n            value={this.state.jornalEntry}\r\n            style={styles.jornalText}\r\n            >\r\n            </TextInput>\r\n        )\r\n    }\r\n\r\n    setSelectedEntry (entry) {\r\n        function setSelected() {\r\n            this.setState( {selectedEntry:  this.state.selectedEntry === entry ? null : entry  } )\r\n        }\r\n        setSelected = setSelected.bind(this);\r\n        return setSelected\r\n    }\r\n\r\n    inputCardBody(sectionName, cardBodyStyle, inputs) {\r\n        if (this.state.selectedEntry === sectionName) {\r\n            if (sectionName == 'Emoções') {\r\n                return emotionGroups.map((emotions, index) => (\r\n                    <View key={'emotion-group-' + index} style={{width: '100%', alignItems: 'center', marginVertical: 10}}>\r\n                        <Text style={{fontSize: 15, color: 'white', marginVertical: 8}}>{emotionGroupsNames[index]}</Text>\r\n                        <View key={index} style={[styles.cardRow, cardBodyStyle]}>\r\n                            {inputs(emotions)}\r\n                        </View>\r\n                    </View>\r\n                ))\r\n            } else {\r\n                return(\r\n                    <View style={[styles.cardRow, cardBodyStyle]}>\r\n                        {inputs}\r\n                    </View>\r\n                )    \r\n            }\r\n        } else {\r\n            return(\r\n                <></>\r\n            )\r\n        }\r\n    }\r\n\r\n    InputCard(sectionName, icon, cardBodyStyle, inputs) {\r\n\r\n        if (sectionName !== 'Jornal') {\r\n            return(\r\n                <Pressable style={[styles.card]} onPress={this.setSelectedEntry(sectionName)} >\r\n                    <View style={styles.cardRow}  >\r\n                        <Icon name={icon} fill='rgba(255,255,255,0.75)' height={28} width={28} style={styles.entryIcon} />\r\n                        <Text style={styles.entryTitle}> {sectionName} </Text>\r\n                    </View>    \r\n                    {this.inputCardBody(sectionName=sectionName, cardBodyStyle=cardBodyStyle, inputs=inputs)}  \r\n                </Pressable>   \r\n            )\r\n        } else {\r\n            return(\r\n                <View style={[styles.card]} >\r\n                    <Pressable style={styles.cardRow} onPress={this.setSelectedEntry(sectionName)} >\r\n                        <Icon name={icon} fill='rgba(255,255,255,0.75)' height={28} width={28} style={styles.entryIcon} />\r\n                        <Text style={styles.entryTitle}> {sectionName} </Text>\r\n                    </Pressable>    \r\n                    {this.inputCardBody(sectionName=sectionName, cardBodyStyle=cardBodyStyle, inputs=inputs)}  \r\n                </View>   \r\n            )\r\n        }\r\n    }\r\n\r\n    loginMsg() {\r\n        return(\r\n          <View style={[styles.login.msgBox, this.state.loginMsg ? {} : {backgroundColor: 'transparent', borderColor: 'transparent'} ]}>\r\n            <Text style={styles.login.msg}>{this.state.loginMsg}</Text>\r\n          </View>\r\n        )\r\n    }\r\n\r\n    setLoginMsg(msg) {\r\n        this.setState({loginMsg: msg})\r\n        setTimeout( () => this.setState({loginMsg: ''}) , 1000 * 5 )\r\n    }    \r\n\r\n    onSaveButtonPress () {\r\n        if (!this.state.selectedMood) {\r\n            // alert('Necessário adicionar uma avaliação.')\r\n            this.setLoginMsg('Adicione uma avaliação para continuar.')\r\n            this.setState({selectedEntry: 'Avaliação'})\r\n\r\n        } else {\r\n            try {\r\n\r\n                if (this.props.route.params.currentEntry === 'new') {\r\n                    this.setState({\r\n                        endTime: getTime(),\r\n                        date: Today(),\r\n                    })\r\n                }\r\n\r\n                const newEntry = {\r\n                    startTime: this.state.startTime,\r\n                    endTime: this.state.endTime,\r\n                    date: this.state.date,\r\n                    star: this.state.star,\r\n                    mood: this.state.selectedMood,\r\n                    emotions: basicEmotions.filter( emotion => this.state.isSelectedEmotions[emotion] ),\r\n                    jornal: this.state.jornalEntry,\r\n                    address: this.state.address,\r\n                    weather: this.state.weather,\r\n                }\r\n                this.postNewEntryAsync(newEntry)\r\n\r\n            } catch (error) {\r\n                // alert('Não foi possível postar sua entrada. Tente novamente...')\r\n                this.setLoginMsg('Não foi possível fazer a entrada. Tente novamente...')\r\n                console.log('Error when attempting to post user entry. Logging error...')\r\n                console.log(error)\r\n            }\r\n        }\r\n    }\r\n\r\n    saveButton() {\r\n        const isDataLoading = this.state.isFetchingLocationOrWeather\r\n        return(\r\n            <Pressable\r\n            onPress={this.onSaveButtonPress}\r\n            disabled={isDataLoading}\r\n            style={styles.saveButton}\r\n            >\r\n                {isDataLoading ? (\r\n                    <ActivityIndicator size='small' color='#000000' /> // <Icon name={'sync-outline'} fill='black' width={28} height={28} />\r\n                ) : (\r\n                    <Text style={styles.saveButtonLabel}> Salvar </Text>\r\n                )}\r\n            </Pressable>\r\n        )\r\n    }\r\n\r\n    async postNewEntryAsync(newEntry) {\r\n        this.setState({ isLoading: true });\r\n        var info = this.props.route.params.userInfo;\r\n        const editMode = this.props.route.params.currentEntry !== 'new'\r\n        try {\r\n            var postUserEntryResult = {ok: false, status: '999', statusText: 'Not fetched yet.'}\r\n            const postUserEntryOpts = { \r\n                method: editMode? 'PUT' : 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify( newEntry ),\r\n            }\r\n            postUserEntryResult = await fetch( corsURI + appServerURI + 'Users/' + info.username + '/entries' + (editMode ? '/'+this.props.route.params.currentEntry._id : ''), postUserEntryOpts);\r\n            // var postUserEntryResult = await fetch('http://localhost:3000/Users/' + info.username + '/entries', postUserEntryOpts);\r\n\r\n            if (postUserEntryResult.ok) {\r\n                console.log('fetch POST request successful')\r\n                console.log('Status: ' + postUserEntryResult.status + ', ' + postUserEntryResult.statusText)\r\n                    \r\n\r\n            } else {\r\n                console.log('fetch POST request failed. Throwing error...')\r\n                throw new Error('Status: ' + postUserEntryResult.status + ', ' + postUserEntryResult.statusText)\r\n            }\r\n\r\n        } catch (error) {\r\n            console.log('Erro capturado:')\r\n            console.log(error);\r\n\r\n        } finally {\r\n            this.setState({ isLoading: false });\r\n            if (postUserEntryResult.ok) this.props.navigation.navigate('Entrances', {newPost: true} )\r\n        }\r\n    }\r\n\r\n    async fetchWeather() {\r\n\r\n        try {\r\n\r\n            if (this.state.userCoordinates) {\r\n\r\n                console.log('FETCH WEATHER STATUS: STARTED...!')\r\n                const coords = this.state.userCoordinates\r\n                const lat = coords.latitude\r\n                const lng = coords.longitude\r\n                \r\n                await fetch(\r\n                    `https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lng}&APPID=${OpenWeatherMapAPI.KEY}&units=metric`\r\n                )\r\n                .then(res => {\r\n                    const resStatus = 'Status: ' + res.status + ', Status Text: ' + res.statusText\r\n                    if (!res.ok) \r\n                        throw new Error(resStatus)\r\n                    else {\r\n                        return res.json()\r\n                    }\r\n                })\r\n                .then(weather => {\r\n                    console.log('FETCH WEATHER STATUS: SUCCESSFUL!')\r\n                    // console.log(weather);\r\n\r\n                    const weatherInfo = {\r\n                        coords: weather.coord,\r\n                        name: weather.name,\r\n                        weather: weather.weather[0],\r\n                        main: weather.main,\r\n                        clouds: weather.clouds,\r\n                        wind: weather.wind,\r\n                        visibility: weather.visibility,\r\n                    }\r\n\r\n                    this.setState({weather: weatherInfo})\r\n                });\r\n        \r\n            } else {\r\n                console.log('FETCH WEATHER STATUS: UNABLE TO START! USER POSITION NOT AVAILABLE.')\r\n            }\r\n\r\n        } catch(error) {\r\n            console.log('FETCH WEATHER STATUS: ERROR! LOGGING ERROR...')\r\n            console.log(error)\r\n\r\n        } finally {\r\n            console.log('FETCH WEATHER STATUS: FINISHED!')    \r\n            this.setState({isFetchingLocationOrWeather: false})\r\n        }\r\n    }\r\n\r\n    // Check if device has location services enabled\r\n    async checkIfLocationEnabled () {\r\n\r\n        if ( !this.state.locationServiceEnabled ) {\r\n            try{\r\n                console.log('GEOCODING PROCESS (CHECK): CHECKING IF USER HAS SERVICES ENABLED.' )\r\n                let enabled = await Location.hasServicesEnabledAsync();\r\n            \r\n                if (!enabled) {\r\n                    console.log('GEOCODING PROCESS (CHECK): CHECKED! USER DOES NOT HAVE SERVICES ENABLED.' )\r\n                    alert('Location Service not enabled. Please enable your location services.')\r\n                } else {\r\n                    console.log('GEOCODING PROCESS (CHECK): CHECKED! USER HAS SERVICES ENABLED.')\r\n                    this.setState({LocationServiceEnabled: enabled});\r\n                }\r\n\r\n            } catch(error) {\r\n                console.log(\"GEOCODING PROCESS (CHECK): ERROR IN SERVICES PERMISSION CHECK! COULD'NT CHECK IF USER HAS SERVICES ENABLED.\")\r\n            \r\n            } finally {\r\n                console.log(\"GEOCODING PROCESS (CHECK): FINISHED!\")\r\n            }\r\n        \r\n        } else {\r\n                console.log(\"GEOCODING PROCESS (CHECK): SKIPPING! USER ALREADY HAS SERVICES ENABLED.\")\r\n        } \r\n\r\n    };\r\n\r\n    // Check for permission, get current user position and use reverse geocoding for user coordinates\r\n    async getCurrentLocation() {\r\n\r\n        try {\r\n            console.log('GEOCODING PROCESS (PERMISSION): REQUEST PERMISSION ASYNC...')\r\n            let { status } = await Location.requestForegroundPermissionsAsync()\r\n            // let { status } = await Location.requestBackgroundPermissionsAsync()\r\n        \r\n            if (status !== 'granted') {\r\n                console.log('GEOCODING PROCESS (PERMISSION): PERMISSION NOT GRANTED!')\r\n                alert('Permission not granted. Allow the app to use location service.');\r\n\r\n            } else {\r\n                console.log('GEOCODING PROCESS (PERMISSION): PERMISSION GRANTED!')\r\n            }\r\n        \r\n            console.log('GEOCODING PROCESS (REQUEST): GETTING CURRENT USER POSITION ASYNC...')\r\n            let { coords } = await Location.getCurrentPositionAsync();\r\n            \r\n            if (coords) {   \r\n                const { latitude, longitude } = coords;\r\n                this.setState({userCoordinates: coords})\r\n                console.log(`GEOCODING PROCESS (REQUEST): CURRENT USER POSITION FOUND... Latitude: ${latitude}, Logitude: ${longitude}`)\r\n                console.log('GEOCODING PROCESS (REVERSE GEOCODING): REVERSE GEOCODE ASYNC...')  \r\n                let response = await Location.reverseGeocodeAsync({ latitude, longitude });\r\n        \r\n                if (response) {\r\n                    this.setState({ address: formattedAddress(response[0]) })\r\n                    console.log('GEOCODING PROCESS (REVERSE GEOCODING): REVERSE GEOCODE SUCCESSFUL! UPDATING STATE...')  \r\n\r\n                } else {\r\n                    console.log('GEOCODING PROCESS (REVERSE GEOCODING): REVERSE GEOCODE FAILED! LOGGING RESPONSE...')  \r\n                    console.log(response)\r\n                }\r\n        \r\n            } else {\r\n                console.log(`GEOCODING PROCESS (REVERSE GEOCODING): USER POSITION NOT FOUND! UNABLE TO PROCEED TO REVERSE GEOCODING...`)\r\n            }\r\n\r\n        } catch (error) {\r\n            console.log('GEOCODING PROCESS: ERROR IN USER POSITION REQUEST! LOGGING ERROR...')\r\n            console.log(error)\r\n        \r\n        } finally {\r\n            console.log('GEOCODING PROCESS: USER POSITION REQUEST FINISHED. PROCEEDING TO FETCH WEATHER DATA...')\r\n            this.fetchWeather()\r\n        }\r\n    };\r\n\r\n    render() {\r\n        console.log('Rendering \"Post Entry\" screen...')\r\n        return(\r\n            <ImageBackground source={require('../assets/wallpaper.jpg')} style={styles.mainView}>\r\n\r\n                <ScrollView style={styles.scrollView}>\r\n                    <View style={styles.section}>\r\n                            {this.postEntryHeader()}\r\n                            {this.InputCard('Avaliação', 'smiling-face', {justifyContent: 'space-between'}, this.MoodButtons())}\r\n                            {this.InputCard('Emoções', 'checkmark-square-outline', {flexWrap: 'wrap', justifyContent: 'center'}, this.EmotionButtons)}\r\n                            {this.InputCard('Jornal', 'book', {flexDirection: 'column', minHeight: 130}, this.JornalInput())}\r\n                    </View>\r\n                </ScrollView>  \r\n\r\n                <this.saveButton />\r\n\r\n                {this.loginMsg()}\r\n\r\n            </ImageBackground>\r\n        )    \r\n    }\r\n}","var styles = {\r\n    login: {\r\n        mainView: {\r\n            flex: 1,\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n            // paddingHorizontal: Platform.OS != 'web' ? '5%' : '5%',\r\n        },\r\n        titleView: {\r\n            flexDirection: 'row',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n            minHeight: 60,\r\n        },\r\n        title: {\r\n            fontSize: 30,\r\n            fontWeight: 'bold',\r\n            color: 'white',\r\n            alignSelf: 'center',\r\n        },\r\n        titleIcon: {\r\n            width: 30,\r\n            height: 30,\r\n            marginLeft: 6,\r\n            paddingTop: 3,\r\n        },\r\n        card: {\r\n            height: '55%',\r\n            minHeight: 390,\r\n            width: 350,\r\n            paddingHorizontal: 10,\r\n            paddingVertical: 10,\r\n            borderWidth: 1,\r\n            borderRadius: 10,\r\n            backgroundColor: 'azure',\r\n        },\r\n        cardHeader: {\r\n            height: '25%',\r\n            width: '100%',\r\n        },\r\n        cardTitle: {\r\n            position: 'relative',\r\n            top: '30%',\r\n            left: '5%',\r\n            fontSize: 24,\r\n            fontWeight: 'bold',\r\n            color: 'black',\r\n        },\r\n        cardSection: {\r\n            height: '25%',\r\n            justifyContent: 'space-evenly',\r\n            alignItems: 'center',\r\n        },\r\n        loadingIcon: {\r\n            alignSelf: 'center'\r\n        },\r\n        inputField: {\r\n            minHeight: 40,\r\n            width: '100%',\r\n            paddingLeft: 10,\r\n            fontSize: 14,\r\n            borderWidth: 1,\r\n            borderRadius: 5,\r\n            backgroundColor: 'white'\r\n        },\r\n        button: {\r\n            height: 40,\r\n            width: '100%',\r\n            textAlign: 'center',\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n            borderWidth: 1,\r\n            borderRadius: 5,\r\n            borderColor: 'white',\r\n            backgroundColor: 'lightblue',        \r\n        },\r\n        buttonLabel: {\r\n            fontSize: 15,\r\n            fontWeight: 'bold',\r\n            color: 'black',\r\n        },\r\n        text: {\r\n            fontSize: 15,\r\n            textAlign: 'center',\r\n        },\r\n        msgBox: {\r\n            width: 300,\r\n            height: 36,\r\n            justifyContent: 'center',\r\n            backgroundColor: 'rgb(30,30,30)',\r\n            borderWidth: 1,\r\n            borderColor: 'rgb(40,40,40)',\r\n        },\r\n        msg: {\r\n            textAlign: 'center',\r\n            color: 'white',\r\n            // paddingHorizontal: 20,\r\n        },\r\n    }\r\n};\r\nexport default styles;","// import Icon from 'react-native-vector-icons/FontAwesome';\r\n// import { Ionicons } from '@expo/vector-icons';\r\nimport { Icon } from 'react-native-eva-icons'\r\n// import { WiDaySunny } from \"weather-icons-react\";\r\n\r\nimport React, { Component } from 'react';\r\nimport { View, Text, ImageBackground, TextInput, Pressable, Platform, ActivityIndicator } from 'react-native';\r\nimport styles from '../styles/loginStyles'\r\n\r\n// App server connection settings\r\nconst corsURI = Platform.OS == 'web' ? 'https://morning-journey-78874.herokuapp.com/' : ''\r\nconst appServerURI = 'https://mood-tracker-server.herokuapp.com/'\r\n\r\n// Email Validation settings\r\n\r\n// const Verifier = require('email-verifier')\r\nconst emailVerification_APIKEY = \"at_TPKXmSQnStekLzTbstLO9GyHvd7or\"\r\n// let verifier = new Verifier(emailVerification_APIKEY);\r\nconst emailVerification_APIURI = (emailAddress) => `https://emailverification.whoisxmlapi.com/api/v2?apiKey=${emailVerification_APIKEY}&emailAddress=${emailAddress}`\r\nconst falseParams = ['validateDNS', 'checkCatchAll', 'checkFree', 'checkDisposable']\r\nfunction appendValueToUri(uri, params, value) {\r\n  for (let param of params) {\r\n    uri += '&' + param + '=' + value\r\n  }\r\n  return uri\r\n}\r\n\r\nasync function validateEmail(email) {\r\n\r\n  console.log('EMAIL VERIFICATION STATUS: Fetching email verification api...')\r\n\r\n  try {\r\n\r\n    var uri = emailVerification_APIURI(email)\r\n    uri = appendValueToUri(uri, falseParams, '0')\r\n    var emailStatus = {ok: false, status: 'Email não verificado.'}\r\n    const apiResp = await fetch( uri , { method: 'GET' } )\r\n  \r\n    if (apiResp.ok) {\r\n  \r\n      console.log('EMAIL VERIFICATION STATUS: Api fetch request successful.')\r\n      const apiRespJson = await apiResp.json()\r\n  \r\n      if ( apiRespJson.formatCheck=='false' ) {\r\n        emailStatus.status = 'Email inválido.'\r\n      } else if ( apiRespJson.smtpCheck=='false' ) {\r\n        emailStatus.status = 'Email não existe.'\r\n      } else {\r\n        emailStatus = {ok: true, status: 'Email válido.'}\r\n      }\r\n      \r\n      return emailStatus\r\n  \r\n    } else {\r\n      console.log('EMAIL VERIFICATION STATUS: Api fetch request failed. Throwing error...')\r\n      throw new Error('Status: ' + apiResp.status + ', Status Text: ' + apiResp.statusText)\r\n    }  \r\n\r\n  } finally {\r\n    console.log('EMAIL VERIFICATION STATUS: Concluído')\r\n\r\n  }\r\n  // Use the email verification api using its module...\r\n  // verifier.verify(email, (err, data) => {\r\n  //   if (err) throw err;\r\n  //   console.log(data);\r\n  // });\r\n}\r\n\r\nfunction validatePassword(password) {\r\n  console.log('VALIDATING PASSWORD FOR SIGNUP...')\r\n\r\n  const hasMinLength = password.length > 6\r\n  var res\r\n  if (!hasMinLength) {\r\n    res = {ok: false, status: 'A senha deve ter no mínimo 6 caractéres.'}\r\n  } else {\r\n    res = {ok: true, status: 'Senha válida.'}\r\n  }\r\n  return res\r\n}\r\n\r\nclass LoginScreen extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      userInfo: {\r\n        password: '',\r\n        email: '',\r\n        username: '',\r\n      },\r\n      loginMsg: '',\r\n      isUserAuth: false,\r\n      isDataLoading: false,\r\n    }\r\n    this.onChangeText = this.onChangeText.bind(this);\r\n    this.submitButton = this.submitButton.bind(this);\r\n    this.loginMsg = this.loginMsg.bind(this);\r\n    this.setLoginMsg = this.setLoginMsg.bind(this);\r\n    this.onSignIn = this.onSignIn.bind(this);\r\n    this.onSignUp = this.onSignUp.bind(this);\r\n  }\r\n\r\n  LoginIcon() {  \r\n    if (this.state.isDataLoading) {\r\n      return <ActivityIndicator color='#000000' />\r\n    } else {\r\n      return <Icon name='log-in-outline' animation='pulse' fill='#000' width={30} height={30} />\r\n    }\r\n  }\r\n\r\n  setLoginMsg(msg) {\r\n    this.setState({loginMsg: msg})\r\n    setTimeout( () => this.setState({loginMsg: ''}) , 1000 * 5 )\r\n  }\r\n\r\n  loginMsg() {\r\n      return(\r\n        <View style={[styles.login.msgBox, this.state.loginMsg ? {} : {backgroundColor: 'transparent', borderColor: 'transparent'} ]}>\r\n          <Text style={styles.login.msg}>{this.state.loginMsg}</Text>\r\n        </View>\r\n      )\r\n  }\r\n\r\n  onChangeText(textField) {\r\n    function setField(text) {\r\n      this.setState( { userInfo: { ...this.state.userInfo, [textField] : text}} )\r\n    }\r\n    setField = setField.bind(this);\r\n    return setField\r\n  }\r\n\r\n  submitButton(sign) {\r\n    const signIn = sign == 'signin'\r\n    return(\r\n      <Pressable disabled={this.state.isDataLoading} onPress={signIn ? this.onSignIn : this.onSignUp} style={[styles.login.button]}>\r\n        <Text style={styles.login.buttonLabel}>{ signIn ? 'Entrar' : 'Cadastrar' }</Text>\r\n      </Pressable>\r\n    )\r\n  }\r\n\r\n  LoginScreen = () => {\r\n    return(\r\n      <ImageBackground source={require('../assets/wallpaper.jpg')} style={[styles.login.mainView ,{justifyContent: 'space-evenly'}]}>\r\n        \r\n        <View style={styles.login.titleView}>\r\n          {/* <View style={styles.login.titleIcon}></View> */}\r\n          <Text style={styles.login.title}>Mood Tracker</Text>\r\n          {/* <Icon name='clock' width={25} height={25} fill='white' animation='pulse' style={styles.login.titleIcon} /> */}\r\n        </View>\r\n\r\n        <View style={styles.login.card}>\r\n          <View style={styles.login.cardHeader} >\r\n            <Text style={styles.login.cardTitle}>Entrar</Text>\r\n          </View>\r\n          <View style={styles.login.cardSection}>\r\n            <TextInput\r\n            placeholder='Email'\r\n            textContentType='emailAddress'\r\n            style={styles.login.inputField}\r\n            onChangeText={this.onChangeText('email')}\r\n            autoComplete='email'\r\n            importantForAutofill='yes'\r\n            >\r\n            </TextInput>\r\n            <TextInput\r\n            placeholder='Senha'\r\n            textContentType='password'\r\n            secureTextEntry={true}\r\n            style={styles.login.inputField}\r\n            onChangeText={this.onChangeText('password')}\r\n            autoComplete='password'\r\n            importantForAutofill='yes'\r\n            ></TextInput>\r\n          </View>\r\n          <View style={styles.login.cardSection}>\r\n            {this.submitButton('signin')}\r\n            {this.submitButton('signup')}\r\n          </View>\r\n          <View style={[styles.login.cardSection]}>\r\n            {this.LoginIcon()}\r\n          </View>\r\n        </View>\r\n\r\n        {this.loginMsg()}\r\n\r\n      </ImageBackground>\r\n    )\r\n  }\r\n\r\n  isInputEmpty() {\r\n    if (!this.state.userInfo.email) {\r\n      const errMsg = 'Insira um endereço de email.'\r\n      this.setLoginMsg(errMsg)\r\n      console.log('SIGNIN STATUS: ' + errMsg)\r\n      return true\r\n    } else if (!this.state.userInfo.password) {\r\n      const errMsg = 'Insira uma senha.'\r\n      this.setLoginMsg(errMsg)\r\n      console.log('SIGNIN STATUS: ' + errMsg)\r\n      return true\r\n    } else return false\r\n  }\r\n\r\n  async onSignIn() {\r\n\r\n    console.log('SIGNIN STATUS: Started...')\r\n    var info = this.state.userInfo;\r\n    this.setState({ isDataLoading: true });\r\n\r\n    try {\r\n\r\n      if (this.isInputEmpty()) return\r\n\r\n      var UsersResult = await fetch( corsURI + appServerURI + 'Users', { method: 'GET' });\r\n      const UsersStatus = 'Status: ' + UsersResult.status + ', ' + 'Status Text: ' + UsersResult.statusText\r\n      if (UsersResult.ok) {\r\n        console.log('fetch GET request for users data at signin successful.');\r\n        console.log(UsersStatus)\r\n      } else {\r\n        console.log('fetch GET request for users data at signin failed. Printing fetch response...')\r\n        console.log(JSON.stringify(UsersResult))\r\n        console.log('Throwing error...')\r\n        throw new Error(UsersStatus)\r\n      }\r\n\r\n      const Users = await UsersResult.json();\r\n      const user = Users.filter((user) => user.email === info.email)[0]\r\n      \r\n      if ( user ) {          \r\n        \r\n        if (user.password === info.password) {\r\n          const userInfo = { ...info, username: info.email.split('@')[0]}\r\n          this.setState( {isUserAuth: true, userInfo} )\r\n          const successMsg = 'Login realizado com sucesso!'\r\n          this.setLoginMsg(successMsg)\r\n          console.log('SIGNIN STATUS: Sucesso.')\r\n\r\n        } else {\r\n          const errMsg = 'Senha incorreta.'\r\n          this.setLoginMsg(errMsg)\r\n          console.log('SIGNIN STATUS: ' + errMsg);\r\n        }\r\n\r\n      } else {\r\n        const errMsg = 'Email não cadastrado!'\r\n        this.setLoginMsg(errMsg)\r\n        console.log('SIGNIN STATUS: ' + errMsg)\r\n      }\r\n\r\n    } catch (error) {\r\n      const errMsg = 'Erro no servidor! Tente novamente...'\r\n      this.setLoginMsg(errMsg)\r\n      console.log('Error catched in fetch GET request for users data at signin. Printing Error...')\r\n      console.log('SIGNIN STATUS:' + 'Erro capturado. Imprimindo erro...')\r\n      console.log(error);\r\n\r\n    } finally {\r\n      this.setState({ isDataLoading: false });\r\n      console.log('SIGNIN STATUS: Concluido.')\r\n      if (this.state.isUserAuth) this.props.authUser(this.state.userInfo)        // Father class component method that authenticates the user and redirects to entrances screen.\r\n    }\r\n  }\r\n\r\n  async onSignUp() {\r\n\r\n    console.log('SIGNUP STATUS: started...')\r\n    var info = this.state.userInfo;\r\n    this.setState({ isDataLoading: true });\r\n    \r\n    try {\r\n\r\n      var postUserResult = {ok: false}\r\n      if (this.isInputEmpty()) return\r\n\r\n      // Validating email and password\r\n      const emailValidation = await validateEmail(info.email)\r\n      console.log('SING UP STATUS: ' + emailValidation.status)\r\n      if (!emailValidation.ok) {\r\n          this.setLoginMsg(emailValidation.status)\r\n          return\r\n      }\r\n\r\n      // Checking if email is already registerd\r\n      var UsersResult = await fetch( corsURI + appServerURI + 'Users', { method: 'GET' } );  \r\n      const reqStatus = 'Status: ' + UsersResult.status + ', ' + UsersResult.statusText\r\n      if (UsersResult.ok) {\r\n        console.log('fetch GET request for users data at signup successful.')\r\n        console.log(reqStatus)\r\n      } else {\r\n        console.log('fetch GET request for users data at signup failed. Throwing error...')\r\n        throw new Error(reqStatus)\r\n      }\r\n\r\n      const Users = await UsersResult.json();\r\n      const User = Users.filter((user) => user.email === info.email)[0]\r\n      if ( !User ) {\r\n\r\n        // Validating Password\r\n        const passwordCheck = validatePassword(info.password)\r\n        if (!passwordCheck.ok) {\r\n          console.log('SING UP STATUS: ' + passwordCheck.status)\r\n          this.setLoginMsg(passwordCheck.status)\r\n          return\r\n      }\r\n\r\n        // Registering new user by posting user identification to database\r\n        info.username = info.email.split('@')[0]\r\n        const postUserOpts = { \r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify( { entries: [], ...info } )\r\n        }\r\n        \r\n        postUserResult = await fetch( corsURI + appServerURI +  'Users/' + info.username, postUserOpts );\r\n        const postUserStatus = 'Status: ' + postUserResult.status + ', ' + postUserResult.statusText\r\n\r\n        if (postUserResult.ok) {\r\n          const successMsg = 'Cadastro realizado com sucesso!'\r\n          this.setLoginMsg(successMsg)\r\n          console.log('fetch POST request for user data at signup successful.')\r\n          console.log(postUserStatus)\r\n          console.log('SING UP STATUS: ' + successMsg)\r\n\r\n        } else {\r\n          console.log('fetch POST request for user data at signup failed. Throwing error...')\r\n          throw new Error(postUserStatus)\r\n        }\r\n\r\n      } else {\r\n        const errMsg = 'Email já cadastrado.'\r\n        this.setLoginMsg(errMsg)\r\n        console.log('SING UP STATUS: ' + errMsg)\r\n      }\r\n\r\n    } catch (error) {\r\n      const errMsg = 'Erro no servidor, tente novamente...'\r\n      this.setLoginMsg(errMsg)\r\n      console.log('SING UP STATUS: Erro capturado. Imprimindo erro...')\r\n      console.log(error);\r\n\r\n    } finally {\r\n      this.setState({ isDataLoading: false })\r\n      console.log('SING UP STATUS: Concluido.')\r\n      if (postUserResult.ok)  this.onSignIn()\r\n    }\r\n  }\r\n\r\n  render() {\r\n\r\n    console.log('Rendering \"LoginComponent\" screen...')\r\n    return this.LoginScreen()\r\n  \r\n  }\r\n}\r\n\r\nexport default LoginScreen;","import React, { Component } from 'react';\nimport { Text, ImageBackground} from 'react-native';\n\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\n// import { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\n//import { createDrawerNavigator } from '@react-navigation/drawer';\n\nimport EntrancesScreen from './components/EntrancesComponent';\nimport PostEntranceScreen from './components/PostEntryComponent';\nimport LoginScreen from './components/LoginComponent'\n\nconst Stack = createNativeStackNavigator();\n// const Tab = createBottomTabNavigator();\n\nconst HomeScreen = (props) => {\n\n  console.log('Returning \"HomeScreen\" Component...')\n  return(\n    <Stack.Navigator \n    initialRouteName='Entrances'\n    screenOptions={{\n      headerShown: false,\n    }}\n    >\n      <Stack.Screen\n      name=\"Entrances\"\n      component={EntrancesScreen}\n      options={{title: 'Suas entradas'}}\n      initialParams={{userInfo: props.userInfo}}\n      // initialParams={{userInfo: props.route.params.userInfo}}\n      />\n      <Stack.Screen\n      name=\"PostEntrance\"\n      component={PostEntranceScreen}\n      options={{title: 'Adicione uma  entrada'}}\n      initialParams={{userInfo: props.userInfo}}\n      // initialParams={{userInfo: props.route.params.userInfo}}\n      />\n    </Stack.Navigator>\n  )  \n}\n\n// function SettingsScreen() {\n//   return(\n//     <ImageBackground source={require('./assets/wallpaper.jpg')} style={{width: '100%', height: '100%'}}>\n//       <Text>Settings</Text>\n//     </ImageBackground>\n//   )\n// }\n\n// const mainScreenOptions = ({ route }) => ({\n//   headerShown: false,\n//   tabBarActiveTintColor: 'tomato',\n//   tabBarInactiveTintColor: 'gray',\n//   tabBarHideOnKeyboard: true,\n//   tabBarIcon: ({ focused, color, size }) => {\n//     let iconName;\n//     if (route.name === 'Home') {\n//       iconName = focused\n//         ? 'home'\n//         : 'home-outline';\n//     } else if (route.name === 'Settings') {\n//       iconName = focused ? 'settings' : 'settings-outline';\n//     }\n//     // You can return any component that you like here!\n//     return <Icon name={iconName} width={size} height={size} fill='rgb(35,35,35)'></Icon>\n//   },\n// })\n\nexport default class App extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isUserAuth: false,\n      userInfo: null,\n    };\n    this.authUser = this.authUser.bind(this);\n  }\n\n  authUser(userInfo) {\n    console.log('User authenticated. Navigating to \"Entries\" screen...')\n    this.setState( {isUserAuth: true, userInfo} )\n  }\n\n  render() {\n\n    if (!this.state.isUserAuth) {\n      return <LoginScreen authUser={this.authUser} />\n\n    } else {\n      return (\n\n        <NavigationContainer>\n          <HomeScreen userInfo={this.state.userInfo} />\n        </NavigationContainer>\n\n        // <NavigationContainer>\n        //   <Tab.Navigator\n        //     screenOptions={mainScreenOptions}\n        //   >\n        //     <Tab.Screen name=\"Home\" component={HomeScreen} initialParams={{userInfo: this.state.userInfo}}/>\n        //     <Tab.Screen name=\"Settings\" component={SettingsScreen} initialParams={{userInfo: this.state.userInfo}} />\n        //   </Tab.Navigator>    \n        // </NavigationContainer>\n\n      );  \n    }\n  }\n}"],"sourceRoot":""}