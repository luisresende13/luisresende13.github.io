{"version":3,"sources":["styles/entrancesStyles.js","components/subcomponents/UserEntryCards.js","shared/dateRange.js","components/EntrancesComponent.js","styles/postEntryStyles.js","components/subcomponents/EditEmotions.js","components/subcomponents/GoogleMapsAPI.js","components/subcomponents/OpenWeatherMapAPI.js","components/PostEntryComponent.js","styles/loginStyles.js","components/LoginComponent.js","components/SettingsScreen.js","shared/UserContext.js","components/WallpapersComponent.js","components/WallpaperZoomComponent.js","App.js","shared/emotionsConfig.js"],"names":["styles","mainView","flex","postButton","position","height","width","borderRadius","bottom","alignSelf","backgroundColor","justifyContent","postButtonLabel","scrollView","section","paddingVertical","borderBottomWidth","borderColor","sectionTitle","fontSize","color","fontWeight","card","marginTop","paddingHorizontal","cardRow","flexDirection","alignItems","moodBadge","textAlign","emotionBadge","marginRight","textBadge","paddingTop","paddingBottom","lineHeight","textAlignVertical","text","spaceBetween","icon","entryIcon","paddingRight","borderWidth","editButtonsView","editButton","editButtonLabel","msgBox","msg","theme","altTheme","corsURI","Platform","OS","moodColors","monthDict","MoodHeader","entry","View","style","Text","mood","star","name","fill","weather","Image","source","uri","main","temp","toString","slice","startTime","Address","useState","isCollapsed","setIsCollapsed","address","numberOfLines","onPress","top","Emotions","emotions","length","flexWrap","PaddingBottom","map","emotion","index","Jornal","jornal","left","EmptyCard","props","navigateParams","currentEntry","type","date","now","Date","split","join","Today","parentState","setMainScreenState","getMainScreenState","textStyle","Pressable","parentProps","navigation","navigate","CardsLoadingMessage","UserEntryCards","state","EntryCard","bind","EditEntryButtons","editUserEntry","deleteUserEntry","setFontColor","console","log","this","selectedEntryId","_id","entryId","selDateEntries","user","entries","filter","reverse","isUserDataSyncing","onButtonPress","isButtonPressed","setIsButtonPressed","highlightButtonFor","label","isLoading","isDeleteLoading","buttonLabel","disabled","onPressIn","ActivityIndicator","selectedEntry","a","async","isDeleteEntryLoading","UsersResult","ok","status","fetch","username","method","usersStatus","statusText","Error","setAlertMsg","syncUserData","fontColorDark","settings","fontColor","altFontColor","UserEntryCardsList","Component","dateRange","englishMonthSigs","portugueseMonthSigs","englishWeekDayMap","getNextDate","next","nextDate","indexOf","formatDate","selDate","ymd","yesterday","englishWeekDay","weekDay","prefix","i","oneDigit","stringNumber","EntrancesScreen","DateNavigationButton","onNextButtonPress","hitSlop","time","selectedDate","alertMsg","locationPermission","setSelectedDate","setState","setTimeout","appState","backgroundImage","imgURI","displayBackgroundImage","enableHighResolution","urls","raw","regular","ImageBackground","ScrollView","route","params","size","login","StatusBar","currentHeight","entrances","content","flexGrow","contentRow","padding","entryTitle","paddingLeft","postButtonView","moodButtonView","moodButton","jornalText","saveButton","borderTopLeftRadius","borderTopRightRadius","saveButtonLabel","marginVertical","marginHorizontal","entryCardEmotionBadge","datetimeTitle","capitalize","multipleWordString","words","trim","CapitalizedWords","forEach","element","push","toUpperCase","EditEmotions","showEditMenu","showExpandMenuButton","mode","newEmotionName","selectedEmotionType","selectedEmotionEnergy","initialEmotionLayout","EditEmotionsMenu","EditEmotionsSection","onSaveEmotionButtonPress","emotionLayoutMap","inputSectionStyle","marginBottom","inputStyle","tagStyle","createEmotionViewStyle","borderTopWidth","borderTopColor","isDeleteEmotionLoading","isSaveEmotionLoading","isPostEntryLoading","isUpdateUserDataLoading","isNewEmotionFormComplete","TextInput","placeholder","placeholderTextColor","onChangeText","value","typeSelected","setParentState","deleteEmotionMode","layout","isLayoutSelected","selectedEmotionLayout","onSaveEmotionLayoutButtonPress","hidden","anyOpen","marginLeft","Object","keys","isSelectedEmotions","includes","newEmotion","energy","postEmotionResult","postUserEntryOpts","headers","body","JSON","stringify","postEmotionStatus","updateUserData","isSaveEmotionLayoutLoading","postEmotionLayoutResult","postEmotionLayoutOpts","postEmotionLayoutStatus","GoogleMapsAPI","GoogleMapsJavascriptAPIkey","GoogleMapsGeocodingAPIKey","OpenWeatherMapAPI","KEY","Location","moods","moodColorsRGBA","moodIcons","emotionGroupsNames","emotionTypes","emotionEnergy","buildIsSelectedEmotions","monthSigs","months","monthNameMap","monthSig","getTime","formatPostEntryDatetimeTitle","m","PostEntranceScreen","endTime","createdAt","lastEdited","selectedMood","jornalEntry","location","isMoodUnmarked","isFetchingLocationOrWeather","userCoordinates","loginMsg","initializeEntry","onSaveButtonPress","setLoginMsg","EmotionButtons","MoodButtons","postEntryHeader","onEmotionButtonPress","onMoodButtonPress","inputCardBody","setSelectedEntry","InputCard","JornalInput","postNewEntryAsync","deleteEmotion","onEmotionButtonLongPress","goBack","item","alpha","selected","selColor","selectMood","objList","objKey","obj","sortedKeys","sort","newObjList","key","sortObjListByKey","title","onLongPress","suppressHighlighting","selectable","selectEmotion","multiline","scrollEnabled","sectionName","cardBodyStyle","cardBodyContent","userEmotionGroups","emotionLabels","mapEmotions","setSelected","checkIfLocationEnabled","getCurrentLocation","fetchWeather","currentEmotions","isSelectedEmotionsNew","oldEmotions","newEmotionsSelected","isDataLoading","newEntryPost","newEntry","editMode","postUserEntryResult","postUserEntryStatus","coords","lat","latitude","lng","longitude","then","res","resStatus","json","weatherInfo","coord","clouds","wind","visibility","response","addressObj","street","streetNumber","district","subregion","region","isoCountryCode","minHeight","titleView","titleIcon","cardHeader","cardTitle","cardSection","loadingIcon","inputField","button","userScheme","require","falseParams","appendValueToUri","validateEmail","email","emailStatus","apiResp","apiRespJson","formatCheck","smtpCheck","registerLocallyIfUserIsNewToDevice","AsyncStorage","getItem","localAuthInfo","parse","users","localUser","updatedLocalAuthInfo","password","setItem","keepUserConnectionAlive","id","keepConnected","userId","updatedAuthInfo","LoginScreen","userInfo","isUserAuth","textContentType","autoComplete","importantForAutofill","secureTextEntry","submitButton","Switch","trackColor","false","true","thumbColor","ios_backgroundColor","onValueChange","LoginIcon","onSignIn","onSignUp","restoreUserToken","animation","textField","setField","sign","signIn","errMsg","NetInfo","DEVICE_IP_ADDRESS","details","ipAddress","Device","initialLocalAuthInfo","IP_ADDRESS","deviceBrand","deviceManufacturer","deviceModelName","deviceModelId","deviceOsName","deviceOsVersion","deviceName","deviceType","info","isInputEmpty","UsersStatus","Users","setAppState","postUserResult","emailValidation","reqStatus","passwordCheck","postUserOpts","postUserStatus","successMsg","colorList","background","foreground","header","settingsRow","colorBox","colorRow","colorSquare","logout","h1","h2","h3","h4","blinkButton","setPressed","timeSpan","postSettings","postSettingsResult","postSettingsOpts","postSettingsStatus","alert","SettingsScreen","isBackgroundColorSettingsOpen","selectedColor","isDisplayBackgroundImageLoading","isChangeFontColorLoading","isEnableHighResolutionLoading","isRestoreColorLoading","isSaveColorLoading","syncUserSettings","setBackgroundColor","ScreenSettings","ChooseImageSection","DisplayBackgroundImageSection","ChangeFontColorSection","EnableHighResolutionSection","ChangeBackgroundColorSection","ColorOptions","ColorControl","onLogoutButtonPress","onColorButtonPressFor","onSaveColorButtonPress","onChangeFontColorSwitch","ColorRow","logoutPressable","h","setParams","React","isChooseImageButtonPressed","setIsChooseImageButtonPressed","isExposeImageButtonPressed","setIsExposeImageButtonPressed","displayBackgroundImageValue","onDisplayBackgroundImageSwitch","isEnableHighResolutionButtonPressed","setIsEnableHighResolutionButtonPressed","enableHighResolutionValue","onEnableHighResolutionSwitch","isChangeFontColorButtonPressed","setIsChangeFontColorButtonPressed","changeFontColorValue","isColorButtonPressed","setIsColorButtonPressed","newColorUnselected","nestedScrollEnabled","isColorRowPressed","setIsColorRowPressed","fontStyle","textDecorationLine","isLogoutButtonPressed","setIsLogoutButtonPressed","logoutColor","newSettings","colorSetting","UserContext","createContext","isWindows","formatTopicName","buildApiUriParams","uriParams","photosView","headerLabel","image","getUnsplash","endpoint","reqParams","client_id","url","result","b","limit","remaining","get","result_json","success","Item","topicsScreen","photoURI","cover_photo","nextScreenName","screenHeight","windowHeight","photoHeight","photoWidth","selectedImage","margin","slug","ControlButton","iconName","additionalStyle","WallpapersComponent","renderItem","PhotoList","useEffect","subscription","Dimensions","addEventListener","window","screen","Math","abs","remove","FlatList","data","photos","keyExtractor","numColumns","initialNumToRender","onEndReached","loadNextPagePhotosAsync","refreshing","isPhotosLoading","page","hideHeader","initializePhotosAsync","WallpapersHeaderText","WallpapersHeader","ControlButtons","per_page","order_by","asyncResult","orientation","prevState","headerText","centerBottom","topRight","right","SafeAreaView","fotter","controlView","attributionView","controlButton","controlButtonLabel","userProfileImage","attributionLabel","maxWidth","attributionURL","openUnsplashURL","Linking","openURL","WallpaperZoom","useContext","isSaveImageLoading","setIsSaveImageLoading","imageSetting","profile_image","large","links","html","SettingsScreenProvider","EntrancesScreenProvider","PostEntranceScreenProvider","WallpapersScreenProvider","Stack","createNativeStackNavigator","Tab","createBottomTabNavigator","tabBarIcon","focused","newIconName","HomeTab","Navigator","initialRouteName","screenOptions","headerShown","tabBarShowLabel","tabBarHideOnKeyboard","tabBarBackground","LinearGradient","colors","start","end","Screen","component","initialParams","getAppState","options","HomeStack","photoList","App","UserResult","userStatus","Provider","NavigationContainer","emotionGroups","defaultEmotions","module","exports"],"mappings":"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ACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,c,gbCjhBJ,IAAM9G,GAAY,CAAC,IAAO,KAAM,IAAO,KAAM,IAAO,KAAM,IAAO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","file":"static/js/app.5b3f5747.chunk.js","sourcesContent":["// import { StatusBar } from 'expo-status-bar';\r\n\r\nvar styles = {\r\n    mainView: {\r\n        flex: 1,                 \r\n        // marginTop: StatusBar.currentHeight,\r\n    },\r\n    postButton: {\r\n        position: 'absolute',\r\n        height: 60,\r\n        width: 60,\r\n        borderRadius: 30,\r\n        bottom: '2%',\r\n        alignSelf: 'center',\r\n        backgroundColor: 'rgba(0,0,0,1)',\r\n        justifyContent: 'center',  \r\n    },\r\n    postButtonLabel: {\r\n        alignSelf: 'center',\r\n    },\r\n    scrollView: {\r\n        // paddingHorizontal: Platform.OS != 'web' ? '5%' : '5%',\r\n        flex: 1,\r\n    },\r\n    section: {\r\n        width: 350,\r\n        paddingVertical: '16%',\r\n        borderBottomWidth: 1,\r\n        borderColor: 'rgba(155,155,155,0.3)',\r\n        alignSelf: 'center',\r\n    },\r\n    sectionTitle: {\r\n        paddingVertical: 7.5,\r\n        fontSize: 19,\r\n        color: 'white',\r\n        fontWeight: '400',\r\n    },\r\n    card: {\r\n        marginTop: '5%',\r\n        paddingVertical: 5,\r\n        paddingHorizontal: 10,\r\n        borderRadius: 20,\r\n        backgroundColor: 'rgba(0,0,0,0.3)',\r\n    },\r\n    cardRow: {\r\n        flexDirection: 'row',\r\n        paddingVertical: 5,\r\n        alignItems: 'center',\r\n    },\r\n    moodBadge: {\r\n        // fontFamily: 'sans-serif',\r\n        backgroundColor: 'green',\r\n        borderRadius: 30,\r\n        paddingVertical: 4,\r\n        width: 130,\r\n        fontSize: 15,\r\n        textAlign: 'center',\r\n    },\r\n    emotionBadge: {\r\n        // fontFamily: 'sans-serif',\r\n        backgroundColor: '#f4f3f4',\r\n        borderRadius: 18,\r\n        paddingVertical: 5,\r\n        paddingHorizontal: 12.5,\r\n        marginRight: 6,\r\n        fontSize: 14,\r\n        textAlign: 'center',\r\n    },\r\n    textBadge: {\r\n        backgroundColor: 'aliceblue',\r\n        borderRadius: 17,\r\n        paddingTop: 5,\r\n        paddingBottom: 8,\r\n        paddingHorizontal: 11,\r\n        width: '100%',\r\n        fontSize: 15,\r\n        lineHeight: 22,\r\n        textAlign: 'left',\r\n        textAlignVertical: 'top',\r\n},\r\n    text: {\r\n        // fontFamily: 'sans-serif',\r\n        fontSize: 14,\r\n        color: 'white'\r\n    },\r\n    spaceBetween: {\r\n        justifyContent: 'space-between',\r\n    },\r\n    icon: {\r\n        paddingHorizontal: 12,\r\n    },\r\n    entryIcon: {\r\n        paddingRight: 0,\r\n        borderWidth: 1,\r\n    },\r\n    editButtonsView: {\r\n        flexDirection: 'row',\r\n        height: 50,\r\n        paddingBottom: 5,\r\n        alignItems: 'flex-end',\r\n        justifyContent: 'space-between'\r\n    },\r\n    editButton: {\r\n        height: 34,\r\n        width: 102,\r\n        borderWidth: 1,\r\n        borderColor: 'aliceblue',\r\n        borderRadius: 17,\r\n        alignItems: 'center',\r\n        justifyContent: 'center'\r\n    },\r\n    editButtonLabel: {\r\n        fontSize: 15,\r\n        fontWeight: '400',\r\n        color: 'white',\r\n    },\r\n    msgBox: {\r\n        position: 'absolute',\r\n        alignSelf: 'center',\r\n        bottom: 110,\r\n        width: 300,\r\n        paddingVertical: 5,\r\n        paddingHorizontal: 3,\r\n        // height: 36,\r\n        justifyContent: 'center',\r\n        backgroundColor: 'rgb(30,30,30)',\r\n        borderWidth: 1,\r\n        borderColor: 'rgb(40,40,40)',\r\n        \r\n    },\r\n    msg: {\r\n        textAlign: 'center',\r\n        color: 'white',\r\n        // paddingHorizontal: 20,\r\n    },\r\n};\r\n\r\nexport default styles;","// Module import\r\nimport React, { Component, useState } from 'react';\r\nimport { Platform, View, Text, Pressable, Image, ActivityIndicator } from 'react-native';\r\nimport { Icon } from 'react-native-eva-icons'\r\n\r\n// Local import\r\nimport styles from '../../styles/entrancesStyles'\r\nstyles.theme = {}; styles.altTheme = {}; \r\n\r\n// cors-midpoint uri (needed to avoid cors' allow-cross-origin error when fetching in web platforms)\r\nconst corsURI = Platform.OS == 'web' ? 'https://morning-journey-78874.herokuapp.com/' : ''\r\nconst appServerURI = 'https://mood-tracker-server.herokuapp.com/'\r\n\r\n// OpenWeatherMap API weather icons URI:\r\nfunction openWeatherMapIconsURI (icon) {\r\n    if (Platform.OS === 'android') {\r\n        return `http://openweathermap.org/img/wn/${icon}@2x.png`\r\n\r\n    } else if (Platform.OS === 'web') {\r\n        return `https://openweathermap.org/img/wn/${icon}@2x.png`\r\n    }\r\n}\r\n\r\n// Defining mood colors schema\r\n// const moodColors = ['#ff3333', '#0099cc', '#add8e6', '#ffff33', '#00cc00']\r\nconst moodColors = {'Horrível': '#ff3333', 'Mal': '#0099cc', 'Regular': '#add8e6', 'Bem': '#ffff33', 'Ótimo': '#00cc00'};\r\n\r\nconst monthDict = {'Jan': '01', 'Feb': '02', 'Mar': '03', 'Apr': '04', 'May': '05', 'Jun': '06', 'Jul': '07', 'Ago': '08', 'Sep': '09', 'Oct': '10', 'Nov': '11', 'Dec': '12'}\r\nfunction Today() {\r\n    const now = Date().toString().split(' ')\r\n    const today = [ now[3], monthDict[now[1]], now[2] ].join('-')\r\n    return today\r\n}\r\n\r\nfunction MoodHeader({entry}) {\r\n    return(\r\n        <View style={ [styles.cardRow, styles.spaceBetween] }>\r\n            <View style={ [{flexDirection: 'row', alignItems: 'center'} ] }>\r\n                <Text style={[styles.moodBadge, {backgroundColor: moodColors[entry.mood]}]}>{entry.mood}</Text>\r\n                    { entry.star ? (\r\n                    <View style={{height: 30, width: 42, alignItems: 'flex-end', justifyContent: 'center'}}>\r\n                        <Icon name='star' fill='gold' width={28} height={28} />\r\n                    </View>\r\n                    ) : <></> }                    \r\n                    { entry.weather ? (\r\n                        <View style={{height: 30, width: 50, alignItems: 'flex-end', justifyContent: 'center'}}>\r\n                            <Image source={{uri: openWeatherMapIconsURI(entry.weather.weather.icon)}} style={{width: 40, height: 40}} />\r\n                        </View>\r\n                    ) : <></> }                    \r\n                    { entry.weather ? (\r\n                        <View style={{height: 30, width: 40, alignItems: 'flex-end', justifyContent: 'center'}}>\r\n                            <Text style={[styles.theme, {fontSize: 14}]}> { entry.weather.main.temp.toString().slice(0,2) + '°C' } </Text>\r\n                        </View>\r\n                    ) : <></> }                \r\n                \r\n            </View>\r\n            <View style={[styles.cardRow]}>\r\n                <Icon name='edit' height={18} width={18} fill='rgba(255,255,255,0.75)' style={{marginRight: 6}} />\r\n                <Text style={styles.text}>{entry.startTime.slice(0,5)}</Text>\r\n            </View>\r\n        </View>\r\n\r\n    )\r\n}\r\n\r\nfunction Address ({entry}) {\r\n    const [isCollapsed, setIsCollapsed] = useState( 1 );\r\n    if (entry.address) {\r\n        return(\r\n            <View style={styles.cardRow}>\r\n                <Text numberOfLines={ isCollapsed } onPress={ () => { setIsCollapsed( isCollapsed ? 0 : 1 ) }} style={styles.text}>\r\n                    <Icon name='pin' height={17} width={17} fill='rgba(255,255,255,0.75)' style={{position: 'relative', marginRight: 5, top: 2}} />\r\n                    {entry.address}\r\n                </Text>\r\n            </View>        \r\n        )\r\n    } else {\r\n        return <></>\r\n    }\r\n}\r\n\r\nfunction Emotions ({entry}) {\r\n    if (entry.emotions.length>0) {\r\n        return (\r\n            <View style={[styles.cardRow, {flexWrap: 'wrap', justifyContent: 'flex-start', paddingTop: 2, PaddingBottom: 0}]}>\r\n                { entry.emotions.map((emotion, index) => {\r\n                    if (emotion.name) {\r\n                        emotion = emotion.name\r\n                    }\r\n                    return(\r\n                        <View key={'emotion-' + emotion} style={{paddingVertical: 5, paddingHorizontal: 2}}>\r\n                            <Text style={[styles.emotionBadge]}>{emotion}</Text>\r\n                        </View>\r\n                    )\r\n                })}\r\n            </View>\r\n        )\r\n    } else {\r\n        return (\r\n            <></>\r\n        )\r\n    }\r\n}\r\n\r\nfunction Jornal({ entry }) {\r\n    if (entry.jornal) {\r\n        return(\r\n            <View style={styles.cardRow}>\r\n                <Text style={styles.textBadge}>\r\n                    <Icon name='book-open' height={20} width={20} fill='rgba(0,0,0,0.25)' style={{position: 'relative', top: 4, left: 1, marginRight: 6}} />\r\n                    {entry.jornal}\r\n                </Text>\r\n            </View>\r\n        )\r\n    } else {\r\n        return <></>\r\n    }\r\n}\r\n\r\nfunction EmptyCard(props) {\r\n    const today = props.date == Today()\r\n    const navigateParams = {\r\n        currentEntry: {\r\n            type: today ? 'new' : 'custom-date',\r\n            date: props.parentState.date,\r\n            entry: null\r\n        },\r\n        setMainScreenState: props.setMainScreenState,\r\n        getMainScreenState: props.getMainScreenState,\r\n\r\n    }\r\n    const textStyle = [{fontSize: 16, marginTop: 7}, styles.theme]\r\n    return (\r\n        <Pressable\r\n        onPress={ () => props.parentProps.navigation.navigate('PostEntrance', navigateParams) }\r\n        style={[styles.card, {alignItems: 'center', justifyContent: 'center', fontSize: 16, height: 145}]}\r\n        >\r\n            <Icon name='inbox' fill='rgba(255,255,255,0.3)' width={25} height={25} />\r\n            <Text style={textStyle}> Nenhuma entrada encontrada. </Text>\r\n            <Text style={textStyle}> Pressione aqui para adicionar uma a este dia! </Text>\r\n        </Pressable>\r\n    );\r\n}\r\n\r\nfunction CardsLoadingMessage() {\r\n    return(\r\n        <View style={[styles.card, {alignItems: 'center', justifyContent: 'center', height: 85}]}>\r\n            <Icon name='sync-outline' fill='rgba(255,255,255,1)' width={25} height={25} />\r\n            <Text style={[styles.theme, {marginTop: 10, fontSize: 16}]}>Sincronizando entradas...</Text>\r\n        </View>\r\n    )\r\n}\r\n\r\nexport default class UserEntryCards extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n        \r\n        this.EntryCard = this.EntryCard.bind(this);\r\n        this.EditEntryButtons = this.EditEntryButtons.bind(this);\r\n        this.editUserEntry = this.editUserEntry.bind(this);\r\n        this.deleteUserEntry = this.deleteUserEntry.bind(this);\r\n        this.setFontColor = this.setFontColor.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log('Subcomponent \"UserEntryCards\" did mount...')\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        console.log('\"UserEntryCards\" sub-component will unmount...')\r\n      }\r\n    \r\n    EntryCard({ entry }) {\r\n        function onEntryCardPress() {\r\n            this.props.setMainScreenState({ selectedEntryId: this.props.parentState.selectedEntryId === entry._id ? null : entry._id })\r\n        }\r\n        return (\r\n        <Pressable\r\n        onPress={onEntryCardPress.bind(this)}\r\n        style={[styles.card]}>\r\n            <MoodHeader entry={entry} />\r\n            <Emotions entry={entry} />\r\n            <Address entry={entry} />\r\n            <Jornal entry={entry} />\r\n            <this.EditEntryButtons entryId={entry._id} />\r\n        </Pressable>\r\n        );\r\n    }    \r\n\r\n    UserEntryCardsList() {\r\n        const selDateEntries = this.props.parentState.user.entries.filter( (entry) => entry.date === this.props.parentState.date ).reverse()\r\n        if (selDateEntries.length) {\r\n            return(\r\n                <>\r\n                    { selDateEntries.map( entry => <this.EntryCard key={'entry-card-'+entry.startTime} entry={entry} />) }\r\n                    {/* { this.props.parentState.isUserDataSyncing ? <CardsLoadingMessage /> : null } */}\r\n                </>\r\n            )\r\n        } else if (this.props.parentState.isUserDataSyncing ) {\r\n            return <CardsLoadingMessage />\r\n            \r\n        } else {\r\n            return <EmptyCard {...this.props} />\r\n        }\r\n    }\r\n\r\n    EditEntryButtons(props) {\r\n        const buttonLabels = ['Editar', 'Excluir']\r\n        const onButtonPress = { 'Editar': this.editUserEntry, 'Excluir': this.deleteUserEntry }\r\n\r\n        const [isButtonPressed, setIsButtonPressed] = useState({\r\n            'Editar': false,\r\n            'Excluir': false,\r\n        })\r\n\r\n        function highlightButtonFor(label) {\r\n            function highlightButton() {\r\n                setIsButtonPressed({ ...isButtonPressed, [label]: !isButtonPressed[label] })\r\n            }\r\n            return highlightButton.bind(this);\r\n        }\r\n\r\n        const isLoading = this.props.parentState.isDeleteLoading | this.props.parentState.isUserDataSyncing\r\n        const buttonLabel = (label) => <Text style={[styles.editButtonLabel, {color: label=='Excluir' ? 'red' : styles.theme.color }]}>{label}</Text>\r\n        if (this.props.parentState.selectedEntryId == props.entryId) {\r\n            return(\r\n                <View style={styles.editButtonsView}>\r\n                    { buttonLabels.map( (label) => (\r\n                        <Pressable\r\n                        key={`edit-${label}-${props.entryId}`}\r\n                        style={[ styles.editButton, {\r\n                            backgroundColor: isButtonPressed[label] ? styles.theme.color + '4' : '#0000',\r\n                            borderColor: label=='Excluir' ? 'red' : styles.theme.color\r\n                        }]}\r\n                        disabled={ isLoading }\r\n                        onPress={() => {highlightButtonFor(label)(); onButtonPress[label]() }}\r\n                        onPressIn={highlightButtonFor(label)}\r\n                        >\r\n                            { label=='Excluir' ? (\r\n                                this.props.parentState.isDeleteLoading ? <ActivityIndicator color='red' /> : buttonLabel(label)\r\n                                \r\n                            ) : buttonLabel(label) }\r\n                                                \r\n                        </Pressable>\r\n                    )) }\r\n            </View>\r\n            )\r\n        } else {\r\n            return null\r\n        }\r\n    }\r\n\r\n    editUserEntry() {\r\n        const selectedEntry = this.props.parentState.user.entries.filter( (entry) => entry._id == this.props.parentState.selectedEntryId )[0]\r\n        const navigateParams = {\r\n            currentEntry: {\r\n                type: 'edit',\r\n                date: selectedEntry.date,\r\n                entry: selectedEntry\r\n            },\r\n            setMainScreenState: this.props.setMainScreenState,\r\n            getMainScreenState: this.props.getMainScreenState,\r\n    \r\n        }\r\n        this.props.parentProps.navigation.navigate('PostEntrance', navigateParams)\r\n    }\r\n\r\n    async deleteUserEntry() {\r\n\r\n        console.log('DELETE USER ENTRY STATUS: Started...')\r\n        this.props.setMainScreenState({ isDeleteEntryLoading: true });\r\n        // prompt()\r\n\r\n        try {\r\n            var UsersResult = {ok: false, status: 999}\r\n            UsersResult = await fetch( corsURI + appServerURI + 'Users/' + this.props.parentState.user.username + '/entries/' + this.props.parentState.selectedEntryId, { method: 'DELETE' });\r\n            // var UsersResult = await fetch( 'https://localhost:3000/' + 'Users/' + this.props.parentState.user.username + '/entries/' + this.props.parentState.selectedEntryId, { method: 'DELETE' });\r\n            const usersStatus =  'Status ' + UsersResult.status + ', ' + UsersResult.statusText\r\n\r\n            if (UsersResult.ok) {\r\n                // const users = await UsersResult.json();\r\n                console.log('fetch DELETE request for user entry successful.')\r\n                console.log(usersStatus)\r\n                console.log('DELETE USER ENTRY STATUS: Successful.')\r\n\r\n            } else {\r\n                console.log( new Error('\"fetch\" DELETE request for user entry failed. Throwing error...') )\r\n                throw new Error(usersStatus)\r\n            }\r\n    \r\n        } catch (error) {\r\n                console.log('DELETE USER ENTRY STATUS: Error captured. Printing error...')\r\n                console.log(error);\r\n                this.props.setAlertMsg('Não foi possível deletar a entrada. Tente novamente.')\r\n\r\n        } finally {\r\n            this.props.setMainScreenState({ isDeleteEntryLoading: false });\r\n            this.props.setMainScreenState({ selectedEntryId: null })\r\n            console.log('DELETE USER ENTRY STATUS: FINISHED.' + UsersResult.ok ? 'Proceeding to sync user entries...' : 'Delete failed, skipping sync of user entries...')\r\n            if (UsersResult.ok) {this.props.syncUserData()}\r\n        }    \r\n    }\r\n\r\n    setFontColor() {\r\n        const fontColorDark = this.props.parentState.user.settings.fontColorDark\r\n        const fontColor = fontColorDark ? '#000' : '#fff'\r\n        const altFontColor = fontColorDark ? '#fff' : '#000'\r\n        for (let style of ['theme', 'text']) {\r\n            styles[style] = { ...styles[style], color: fontColor }\r\n        }\r\n        styles.altTheme.color = altFontColor\r\n        styles.altTheme.backgroundColor = altFontColor\r\n    }\r\n\r\n    render() {\r\n        console.log('\"Rendering \"UserEntryCards\" sub-component...\"')\r\n        this.setFontColor()\r\n        return this.UserEntryCardsList()\r\n    }\r\n}","const dateRange = [\r\n    \"2021-01-01\",\r\n    \"2021-01-02\",\r\n    \"2021-01-03\",\r\n    \"2021-01-04\",\r\n    \"2021-01-05\",\r\n    \"2021-01-06\",\r\n    \"2021-01-07\",\r\n    \"2021-01-08\",\r\n    \"2021-01-09\",\r\n    \"2021-01-10\",\r\n    \"2021-01-11\",\r\n    \"2021-01-12\",\r\n    \"2021-01-13\",\r\n    \"2021-01-14\",\r\n    \"2021-01-15\",\r\n    \"2021-01-16\",\r\n    \"2021-01-17\",\r\n    \"2021-01-18\",\r\n    \"2021-01-19\",\r\n    \"2021-01-20\",\r\n    \"2021-01-21\",\r\n    \"2021-01-22\",\r\n    \"2021-01-23\",\r\n    \"2021-01-24\",\r\n    \"2021-01-25\",\r\n    \"2021-01-26\",\r\n    \"2021-01-27\",\r\n    \"2021-01-28\",\r\n    \"2021-01-29\",\r\n    \"2021-01-30\",\r\n    \"2021-01-31\",\r\n    \"2021-02-01\",\r\n    \"2021-02-02\",\r\n    \"2021-02-03\",\r\n    \"2021-02-04\",\r\n    \"2021-02-05\",\r\n    \"2021-02-06\",\r\n    \"2021-02-07\",\r\n    \"2021-02-08\",\r\n    \"2021-02-09\",\r\n    \"2021-02-10\",\r\n    \"2021-02-11\",\r\n    \"2021-02-12\",\r\n    \"2021-02-13\",\r\n    \"2021-02-14\",\r\n    \"2021-02-15\",\r\n    \"2021-02-16\",\r\n    \"2021-02-17\",\r\n    \"2021-02-18\",\r\n    \"2021-02-19\",\r\n    \"2021-02-20\",\r\n    \"2021-02-21\",\r\n    \"2021-02-22\",\r\n    \"2021-02-23\",\r\n    \"2021-02-24\",\r\n    \"2021-02-25\",\r\n    \"2021-02-26\",\r\n    \"2021-02-27\",\r\n    \"2021-02-28\",\r\n    \"2021-03-01\",\r\n    \"2021-03-02\",\r\n    \"2021-03-03\",\r\n    \"2021-03-04\",\r\n    \"2021-03-05\",\r\n    \"2021-03-06\",\r\n    \"2021-03-07\",\r\n    \"2021-03-08\",\r\n    \"2021-03-09\",\r\n    \"2021-03-10\",\r\n    \"2021-03-11\",\r\n    \"2021-03-12\",\r\n    \"2021-03-13\",\r\n    \"2021-03-14\",\r\n    \"2021-03-15\",\r\n    \"2021-03-16\",\r\n    \"2021-03-17\",\r\n    \"2021-03-18\",\r\n    \"2021-03-19\",\r\n    \"2021-03-20\",\r\n    \"2021-03-21\",\r\n    \"2021-03-22\",\r\n    \"2021-03-23\",\r\n    \"2021-03-24\",\r\n    \"2021-03-25\",\r\n    \"2021-03-26\",\r\n    \"2021-03-27\",\r\n    \"2021-03-28\",\r\n    \"2021-03-29\",\r\n    \"2021-03-30\",\r\n    \"2021-03-31\",\r\n    \"2021-04-01\",\r\n    \"2021-04-02\",\r\n    \"2021-04-03\",\r\n    \"2021-04-04\",\r\n    \"2021-04-05\",\r\n    \"2021-04-06\",\r\n    \"2021-04-07\",\r\n    \"2021-04-08\",\r\n    \"2021-04-09\",\r\n    \"2021-04-10\",\r\n    \"2021-04-11\",\r\n    \"2021-04-12\",\r\n    \"2021-04-13\",\r\n    \"2021-04-14\",\r\n    \"2021-04-15\",\r\n    \"2021-04-16\",\r\n    \"2021-04-17\",\r\n    \"2021-04-18\",\r\n    \"2021-04-19\",\r\n    \"2021-04-20\",\r\n    \"2021-04-21\",\r\n    \"2021-04-22\",\r\n    \"2021-04-23\",\r\n    \"2021-04-24\",\r\n    \"2021-04-25\",\r\n    \"2021-04-26\",\r\n    \"2021-04-27\",\r\n    \"2021-04-28\",\r\n    \"2021-04-29\",\r\n    \"2021-04-30\",\r\n    \"2021-05-01\",\r\n    \"2021-05-02\",\r\n    \"2021-05-03\",\r\n    \"2021-05-04\",\r\n    \"2021-05-05\",\r\n    \"2021-05-06\",\r\n    \"2021-05-07\",\r\n    \"2021-05-08\",\r\n    \"2021-05-09\",\r\n    \"2021-05-10\",\r\n    \"2021-05-11\",\r\n    \"2021-05-12\",\r\n    \"2021-05-13\",\r\n    \"2021-05-14\",\r\n    \"2021-05-15\",\r\n    \"2021-05-16\",\r\n    \"2021-05-17\",\r\n    \"2021-05-18\",\r\n    \"2021-05-19\",\r\n    \"2021-05-20\",\r\n    \"2021-05-21\",\r\n    \"2021-05-22\",\r\n    \"2021-05-23\",\r\n    \"2021-05-24\",\r\n    \"2021-05-25\",\r\n    \"2021-05-26\",\r\n    \"2021-05-27\",\r\n    \"2021-05-28\",\r\n    \"2021-05-29\",\r\n    \"2021-05-30\",\r\n    \"2021-05-31\",\r\n    \"2021-06-01\",\r\n    \"2021-06-02\",\r\n    \"2021-06-03\",\r\n    \"2021-06-04\",\r\n    \"2021-06-05\",\r\n    \"2021-06-06\",\r\n    \"2021-06-07\",\r\n    \"2021-06-08\",\r\n    \"2021-06-09\",\r\n    \"2021-06-10\",\r\n    \"2021-06-11\",\r\n    \"2021-06-12\",\r\n    \"2021-06-13\",\r\n    \"2021-06-14\",\r\n    \"2021-06-15\",\r\n    \"2021-06-16\",\r\n    \"2021-06-17\",\r\n    \"2021-06-18\",\r\n    \"2021-06-19\",\r\n    \"2021-06-20\",\r\n    \"2021-06-21\",\r\n    \"2021-06-22\",\r\n    \"2021-06-23\",\r\n    \"2021-06-24\",\r\n    \"2021-06-25\",\r\n    \"2021-06-26\",\r\n    \"2021-06-27\",\r\n    \"2021-06-28\",\r\n    \"2021-06-29\",\r\n    \"2021-06-30\",\r\n    \"2021-07-01\",\r\n    \"2021-07-02\",\r\n    \"2021-07-03\",\r\n    \"2021-07-04\",\r\n    \"2021-07-05\",\r\n    \"2021-07-06\",\r\n    \"2021-07-07\",\r\n    \"2021-07-08\",\r\n    \"2021-07-09\",\r\n    \"2021-07-10\",\r\n    \"2021-07-11\",\r\n    \"2021-07-12\",\r\n    \"2021-07-13\",\r\n    \"2021-07-14\",\r\n    \"2021-07-15\",\r\n    \"2021-07-16\",\r\n    \"2021-07-17\",\r\n    \"2021-07-18\",\r\n    \"2021-07-19\",\r\n    \"2021-07-20\",\r\n    \"2021-07-21\",\r\n    \"2021-07-22\",\r\n    \"2021-07-23\",\r\n    \"2021-07-24\",\r\n    \"2021-07-25\",\r\n    \"2021-07-26\",\r\n    \"2021-07-27\",\r\n    \"2021-07-28\",\r\n    \"2021-07-29\",\r\n    \"2021-07-30\",\r\n    \"2021-07-31\",\r\n    \"2021-08-01\",\r\n    \"2021-08-02\",\r\n    \"2021-08-03\",\r\n    \"2021-08-04\",\r\n    \"2021-08-05\",\r\n    \"2021-08-06\",\r\n    \"2021-08-07\",\r\n    \"2021-08-08\",\r\n    \"2021-08-09\",\r\n    \"2021-08-10\",\r\n    \"2021-08-11\",\r\n    \"2021-08-12\",\r\n    \"2021-08-13\",\r\n    \"2021-08-14\",\r\n    \"2021-08-15\",\r\n    \"2021-08-16\",\r\n    \"2021-08-17\",\r\n    \"2021-08-18\",\r\n    \"2021-08-19\",\r\n    \"2021-08-20\",\r\n    \"2021-08-21\",\r\n    \"2021-08-22\",\r\n    \"2021-08-23\",\r\n    \"2021-08-24\",\r\n    \"2021-08-25\",\r\n    \"2021-08-26\",\r\n    \"2021-08-27\",\r\n    \"2021-08-28\",\r\n    \"2021-08-29\",\r\n    \"2021-08-30\",\r\n    \"2021-08-31\",\r\n    \"2021-09-01\",\r\n    \"2021-09-02\",\r\n    \"2021-09-03\",\r\n    \"2021-09-04\",\r\n    \"2021-09-05\",\r\n    \"2021-09-06\",\r\n    \"2021-09-07\",\r\n    \"2021-09-08\",\r\n    \"2021-09-09\",\r\n    \"2021-09-10\",\r\n    \"2021-09-11\",\r\n    \"2021-09-12\",\r\n    \"2021-09-13\",\r\n    \"2021-09-14\",\r\n    \"2021-09-15\",\r\n    \"2021-09-16\",\r\n    \"2021-09-17\",\r\n    \"2021-09-18\",\r\n    \"2021-09-19\",\r\n    \"2021-09-20\",\r\n    \"2021-09-21\",\r\n    \"2021-09-22\",\r\n    \"2021-09-23\",\r\n    \"2021-09-24\",\r\n    \"2021-09-25\",\r\n    \"2021-09-26\",\r\n    \"2021-09-27\",\r\n    \"2021-09-28\",\r\n    \"2021-09-29\",\r\n    \"2021-09-30\",\r\n    \"2021-10-01\",\r\n    \"2021-10-02\",\r\n    \"2021-10-03\",\r\n    \"2021-10-04\",\r\n    \"2021-10-05\",\r\n    \"2021-10-06\",\r\n    \"2021-10-07\",\r\n    \"2021-10-08\",\r\n    \"2021-10-09\",\r\n    \"2021-10-10\",\r\n    \"2021-10-11\",\r\n    \"2021-10-12\",\r\n    \"2021-10-13\",\r\n    \"2021-10-14\",\r\n    \"2021-10-15\",\r\n    \"2021-10-16\",\r\n    \"2021-10-17\",\r\n    \"2021-10-18\",\r\n    \"2021-10-19\",\r\n    \"2021-10-20\",\r\n    \"2021-10-21\",\r\n    \"2021-10-22\",\r\n    \"2021-10-23\",\r\n    \"2021-10-24\",\r\n    \"2021-10-25\",\r\n    \"2021-10-26\",\r\n    \"2021-10-27\",\r\n    \"2021-10-28\",\r\n    \"2021-10-29\",\r\n    \"2021-10-30\",\r\n    \"2021-10-31\",\r\n    \"2021-11-01\",\r\n    \"2021-11-02\",\r\n    \"2021-11-03\",\r\n    \"2021-11-04\",\r\n    \"2021-11-05\",\r\n    \"2021-11-06\",\r\n    \"2021-11-07\",\r\n    \"2021-11-08\",\r\n    \"2021-11-09\",\r\n    \"2021-11-10\",\r\n    \"2021-11-11\",\r\n    \"2021-11-12\",\r\n    \"2021-11-13\",\r\n    \"2021-11-14\",\r\n    \"2021-11-15\",\r\n    \"2021-11-16\",\r\n    \"2021-11-17\",\r\n    \"2021-11-18\",\r\n    \"2021-11-19\",\r\n    \"2021-11-20\",\r\n    \"2021-11-21\",\r\n    \"2021-11-22\",\r\n    \"2021-11-23\",\r\n    \"2021-11-24\",\r\n    \"2021-11-25\",\r\n    \"2021-11-26\",\r\n    \"2021-11-27\",\r\n    \"2021-11-28\",\r\n    \"2021-11-29\",\r\n    \"2021-11-30\",\r\n    \"2021-12-01\",\r\n    \"2021-12-02\",\r\n    \"2021-12-03\",\r\n    \"2021-12-04\",\r\n    \"2021-12-05\",\r\n    \"2021-12-06\",\r\n    \"2021-12-07\",\r\n    \"2021-12-08\",\r\n    \"2021-12-09\",\r\n    \"2021-12-10\",\r\n    \"2021-12-11\",\r\n    \"2021-12-12\",\r\n    \"2021-12-13\",\r\n    \"2021-12-14\",\r\n    \"2021-12-15\",\r\n    \"2021-12-16\",\r\n    \"2021-12-17\",\r\n    \"2021-12-18\",\r\n    \"2021-12-19\",\r\n    \"2021-12-20\",\r\n    \"2021-12-21\",\r\n    \"2021-12-22\",\r\n    \"2021-12-23\",\r\n    \"2021-12-24\",\r\n    \"2021-12-25\",\r\n    \"2021-12-26\",\r\n    \"2021-12-27\",\r\n    \"2021-12-28\",\r\n    \"2021-12-29\",\r\n    \"2021-12-30\",\r\n    \"2021-12-31\",\r\n    \"2022-01-01\",\r\n    \"2022-01-02\",\r\n    \"2022-01-03\",\r\n    \"2022-01-04\",\r\n    \"2022-01-05\",\r\n    \"2022-01-06\",\r\n    \"2022-01-07\",\r\n    \"2022-01-08\",\r\n    \"2022-01-09\",\r\n    \"2022-01-10\",\r\n    \"2022-01-11\",\r\n    \"2022-01-12\",\r\n    \"2022-01-13\",\r\n    \"2022-01-14\",\r\n    \"2022-01-15\",\r\n    \"2022-01-16\",\r\n    \"2022-01-17\",\r\n    \"2022-01-18\",\r\n    \"2022-01-19\",\r\n    \"2022-01-20\",\r\n    \"2022-01-21\",\r\n    \"2022-01-22\",\r\n    \"2022-01-23\",\r\n    \"2022-01-24\",\r\n    \"2022-01-25\",\r\n    \"2022-01-26\",\r\n    \"2022-01-27\",\r\n    \"2022-01-28\",\r\n    \"2022-01-29\",\r\n    \"2022-01-30\",\r\n    \"2022-01-31\",\r\n    \"2022-02-01\",\r\n    \"2022-02-02\",\r\n    \"2022-02-03\",\r\n    \"2022-02-04\",\r\n    \"2022-02-05\",\r\n    \"2022-02-06\",\r\n    \"2022-02-07\",\r\n    \"2022-02-08\",\r\n    \"2022-02-09\",\r\n    \"2022-02-10\",\r\n    \"2022-02-11\",\r\n    \"2022-02-12\",\r\n    \"2022-02-13\",\r\n    \"2022-02-14\",\r\n    \"2022-02-15\",\r\n    \"2022-02-16\",\r\n    \"2022-02-17\",\r\n    \"2022-02-18\",\r\n    \"2022-02-19\",\r\n    \"2022-02-20\",\r\n    \"2022-02-21\",\r\n    \"2022-02-22\",\r\n    \"2022-02-23\",\r\n    \"2022-02-24\",\r\n    \"2022-02-25\",\r\n    \"2022-02-26\",\r\n    \"2022-02-27\",\r\n    \"2022-02-28\",\r\n    \"2022-03-01\",\r\n    \"2022-03-02\",\r\n    \"2022-03-03\",\r\n    \"2022-03-04\",\r\n    \"2022-03-05\",\r\n    \"2022-03-06\",\r\n    \"2022-03-07\",\r\n    \"2022-03-08\",\r\n    \"2022-03-09\",\r\n    \"2022-03-10\",\r\n    \"2022-03-11\",\r\n    \"2022-03-12\",\r\n    \"2022-03-13\",\r\n    \"2022-03-14\",\r\n    \"2022-03-15\",\r\n    \"2022-03-16\",\r\n    \"2022-03-17\",\r\n    \"2022-03-18\",\r\n    \"2022-03-19\",\r\n    \"2022-03-20\",\r\n    \"2022-03-21\",\r\n    \"2022-03-22\",\r\n    \"2022-03-23\",\r\n    \"2022-03-24\",\r\n    \"2022-03-25\",\r\n    \"2022-03-26\",\r\n    \"2022-03-27\",\r\n    \"2022-03-28\",\r\n    \"2022-03-29\",\r\n    \"2022-03-30\",\r\n    \"2022-03-31\",\r\n    \"2022-04-01\",\r\n    \"2022-04-02\",\r\n    \"2022-04-03\",\r\n    \"2022-04-04\",\r\n    \"2022-04-05\",\r\n    \"2022-04-06\",\r\n    \"2022-04-07\",\r\n    \"2022-04-08\",\r\n    \"2022-04-09\",\r\n    \"2022-04-10\",\r\n    \"2022-04-11\",\r\n    \"2022-04-12\",\r\n    \"2022-04-13\",\r\n    \"2022-04-14\",\r\n    \"2022-04-15\",\r\n    \"2022-04-16\",\r\n    \"2022-04-17\",\r\n    \"2022-04-18\",\r\n    \"2022-04-19\",\r\n    \"2022-04-20\",\r\n    \"2022-04-21\",\r\n    \"2022-04-22\",\r\n    \"2022-04-23\",\r\n    \"2022-04-24\",\r\n    \"2022-04-25\",\r\n    \"2022-04-26\",\r\n    \"2022-04-27\",\r\n    \"2022-04-28\",\r\n    \"2022-04-29\",\r\n    \"2022-04-30\",\r\n    \"2022-05-01\",\r\n    \"2022-05-02\",\r\n    \"2022-05-03\",\r\n    \"2022-05-04\",\r\n    \"2022-05-05\",\r\n    \"2022-05-06\",\r\n    \"2022-05-07\",\r\n    \"2022-05-08\",\r\n    \"2022-05-09\",\r\n    \"2022-05-10\",\r\n    \"2022-05-11\",\r\n    \"2022-05-12\",\r\n    \"2022-05-13\",\r\n    \"2022-05-14\",\r\n    \"2022-05-15\",\r\n    \"2022-05-16\",\r\n    \"2022-05-17\",\r\n    \"2022-05-18\",\r\n    \"2022-05-19\",\r\n    \"2022-05-20\",\r\n    \"2022-05-21\",\r\n    \"2022-05-22\",\r\n    \"2022-05-23\",\r\n    \"2022-05-24\",\r\n    \"2022-05-25\",\r\n    \"2022-05-26\",\r\n    \"2022-05-27\",\r\n    \"2022-05-28\",\r\n    \"2022-05-29\",\r\n    \"2022-05-30\",\r\n    \"2022-05-31\",\r\n    \"2022-06-01\",\r\n    \"2022-06-02\",\r\n    \"2022-06-03\",\r\n    \"2022-06-04\",\r\n    \"2022-06-05\",\r\n    \"2022-06-06\",\r\n    \"2022-06-07\",\r\n    \"2022-06-08\",\r\n    \"2022-06-09\",\r\n    \"2022-06-10\",\r\n    \"2022-06-11\",\r\n    \"2022-06-12\",\r\n    \"2022-06-13\",\r\n    \"2022-06-14\",\r\n    \"2022-06-15\",\r\n    \"2022-06-16\",\r\n    \"2022-06-17\",\r\n    \"2022-06-18\",\r\n    \"2022-06-19\",\r\n    \"2022-06-20\",\r\n    \"2022-06-21\",\r\n    \"2022-06-22\",\r\n    \"2022-06-23\",\r\n    \"2022-06-24\",\r\n    \"2022-06-25\",\r\n    \"2022-06-26\",\r\n    \"2022-06-27\",\r\n    \"2022-06-28\",\r\n    \"2022-06-29\",\r\n    \"2022-06-30\"\r\n]\r\nexport default dateRange;","// Module imports\r\nimport React, { Component } from 'react';\r\nimport { View, Text, ImageBackground, Pressable, ScrollView, ActivityIndicator, Platform } from 'react-native';\r\nimport { Icon } from 'react-native-eva-icons'\r\n\r\n// Component imports\r\nimport UserEntryCards from './subcomponents/UserEntryCards';\r\n\r\n// Local imports\r\nimport dateRange from '../shared/dateRange';\r\nimport styles  from '../styles/entrancesStyles';\r\n\r\n// cors-midpoint uri (needed to avoid cors' allow-cross-origin error when fetching in web platforms)\r\n// const corsURI = Platform.OS == 'web' ? 'https://morning-journey-78874.herokuapp.com/' : ''\r\n// const appServerURI = 'https://mood-tracker-server.herokuapp.com/'\r\n\r\n// Defining pertinent constants\r\nconst monthDict = {'Jan': '01', 'Feb': '02', 'Mar': '03', 'Apr': '04', 'May': '05', 'Jun': '06', 'Jul': '07', 'Ago': '08', 'Sep': '09', 'Oct': '10', 'Nov': '11', 'Dec': '12'}\r\nconst englishMonthSigs = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Ago', 'Sep', 'Oct', 'Nov', 'Dec']\r\nconst portugueseMonthSigs = ['Jan', 'Fev', 'Mar', 'Abr', 'Mai', 'Jun', 'Jul', 'Ago', 'Set', 'Out', 'Nov', 'Dez']\r\nconst englishWeekDayMap = {'Mon': 'Seg', 'Tue': 'Ter', 'Wed': 'Qua', 'Thu': 'Qui', 'Fri': 'Sex', 'Sat': 'Sab', 'Sun': 'Dom'}\r\n\r\n// Defining pertinent functions\r\nfunction Today() {\r\n    const now = Date().toString().split(' ')\r\n    const today = [ now[3], monthDict[now[1]], now[2] ].join('-')\r\n    return today\r\n}\r\nfunction getNextDate(date, next='next') {\r\n    const nextDate = dateRange[dateRange.indexOf(date) + (next=='previous' ? -1 : 1)]\r\n    return nextDate\r\n}\r\nfunction getTime() {\r\n    //Wed,Jan,26,2022,15:12:37,GMT-0300,(Horário,Padrão,de,Brasília)\r\n    const now = Date().toString().split(' ')\r\n    const time = now[4]\r\n    return time\r\n}\r\nfunction formatDate(selDate) {\r\n    \r\n    var ymd = selDate.split('-')\r\n    const yesterday = getNextDate(Today(), 'previous')\r\n    const englishWeekDay = new Date(ymd[0], ymd[1], ymd[2]).toString().split(' ')[0]\r\n    const weekDay = englishWeekDayMap[englishWeekDay]\r\n    var prefix = ''\r\n\r\n    if (selDate === Today()) prefix = 'Hoje, '\r\n    else if (selDate === yesterday) prefix = 'Ontem, '\r\n    else prefix = weekDay + ', '\r\n    \r\n    for (var i=0; i<12; i++) {\r\n        if (monthDict[ englishMonthSigs[i] ] == ymd[1]) {\r\n            return prefix + oneDigit(ymd[2]) + '° ' + portugueseMonthSigs[i]\r\n        }\r\n    }\r\n}\r\nfunction oneDigit(stringNumber) {\r\n    if (stringNumber[0] == '0') return stringNumber.slice(1, stringNumber.length)\r\n    else return stringNumber\r\n}\r\n\r\nexport default class EntrancesScreen extends Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            \r\n            // user: this.props.route.params.user,\r\n            date: Today(),\r\n            time: getTime(),\r\n            selectedDate: Today(),\r\n            // isUserDataSynced: true,\r\n            // isUserDataSyncing: false,\r\n            isDeleteEntryLoading: false,\r\n            alertMsg: '',\r\n            locationPermission: null,\r\n        };\r\n        this.onNextButtonPress = this.onNextButtonPress.bind(this);\r\n        this.setFontColor = this.setFontColor.bind(this);\r\n        this.setAlertMsg = this. setAlertMsg.bind(this);\r\n        // this.syncUserData = this.syncUserData.bind(this);\r\n        this.getMainScreenState = this.getMainScreenState.bind(this);\r\n        \r\n    }\r\n    \r\n    componentDidMount() {\r\n        console.log('\"Entries\" screen component did mount...')\r\n        // this.setFontColor()\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        console.log('\"EntriesScreen\" component will unmount...')\r\n    }\r\n\r\n    getMainScreenState() {\r\n        return this.state\r\n    }\r\n\r\n    onNextButtonPress(next='next') {\r\n        function setSelectedDate() {\r\n            this.setState({\r\n                selectedEntryId: null,\r\n                selectedDate: getNextDate(this.state.selectedDate, next),\r\n            })\r\n        }\r\n        return setSelectedDate.bind(this);\r\n    }\r\n\r\n    setAlertMsg(msg) {\r\n        this.setState({alertMsg: msg})\r\n        setTimeout( () => this.setState({alertMsg: ''}) , 1000 * 5 )\r\n    }\r\n    \r\n    alertMsg() {\r\n        return(\r\n            <View style={[styles.msgBox, this.state.alertMsg ? {} : {height: 0, backgroundColor: 'transparent', borderColor: 'transparent'} ]}>\r\n                <Text style={styles.msg}>{this.state.alertMsg}</Text>\r\n            </View>\r\n        )\r\n    }\r\n\r\n    DateNavigationButton = ({next}) => {\r\n        return(\r\n            <Pressable onPress={this.onNextButtonPress(next)} hitSlop={15} >\r\n                <Icon name={ next=='next' ? 'arrow-forward' : 'arrow-back'} width={29} height={29} fill={styles.theme.color} />\r\n            </Pressable>\r\n        )\r\n    }\r\n\r\n    setFontColor() {\r\n        const fontColor = this.props.appState.user.settings.fontColorDark ? '#000' : '#fff'\r\n        styles.theme = {color: fontColor}\r\n    }\r\n\r\n    render() {\r\n        console.log('Rendering \"EntriesScreen\" component...')\r\n\r\n        this.setFontColor()\r\n        // const today = this.state.selectedDate === Today()\r\n        const navigateParams = {\r\n            currentEntry: {type: 'new', date: Today(), entry: null},\r\n            setMainScreenState: this.setState.bind(this),\r\n            getMainScreenState: this.getMainScreenState,\r\n        }\r\n        const isLoading = this.props.appState.isUserDataSyncing | this.state.isDeleteEntryLoading\r\n        const settings = this.props.appState.user.settings\r\n        const backgroundImage = settings.backgroundImage\r\n        const imgURI =  settings.displayBackgroundImage ? (backgroundImage ? ( settings.enableHighResolution ? backgroundImage.urls.raw : backgroundImage.urls.regular ) : null ) : null\r\n        const backgroundColor = settings.backgroundColor\r\n\r\n        return(\r\n            <ImageBackground source={{uri: imgURI}} style={[styles.mainView, {backgroundColor: backgroundColor}]}>\r\n                \r\n                <ScrollView style={styles.scrollView}>\r\n                    <View style={styles.section}>\r\n                        <View style={[styles.cardRow, {justifyContent: 'space-between'}]}>\r\n                            <this.DateNavigationButton icon='arrow-back' next='previous' />\r\n                            <Text style={[styles.sectionTitle, styles.theme]}> {'Suas entradas  •  ' + formatDate(this.state.selectedDate)} </Text>                                \r\n                            <this.DateNavigationButton icon='arrow-forward' next='next' />\r\n                        </View>\r\n                        <UserEntryCards\r\n                        parentState={{\r\n                            date: this.state.selectedDate,\r\n                            selectedEntryId: this.state.selectedEntryId,\r\n                            user: this.props.appState.user,\r\n                            // isUserDataSynced: this.props.appState.isUserDataSynced,\r\n                            isUserDataSyncing: this.props.appState.isUserDataSyncing,\r\n                            isDeleteEntryLoading: this.state.isDeleteEntryLoading,\r\n                        }}\r\n                        parentProps={{\r\n                            navigation: this.props.navigation\r\n                        }}\r\n                        syncUserData={this.props.route.params.syncUserData}\r\n                        setMainScreenState ={this.setState.bind(this)}\r\n                        getMainScreenState={this.getMainScreenState}\r\n                        setAlertMsg = {this.setAlertMsg}\r\n                        />\r\n                    </View>\r\n                </ScrollView>\r\n\r\n                <Pressable\r\n                onPress={() => {this.props.navigation.navigate( 'PostEntrance', navigateParams )}}\r\n                style={[styles.postButton, {backgroundColor: isLoading ? 'white' : 'black'}]}\r\n                disabled={isLoading}\r\n                >\r\n                { this.props.appState.isUserDataSyncing ? (\r\n                        <ActivityIndicator color='black' size={'large'} />\r\n                ) : (\r\n                    this.state.isDeleteEntryLoading ? (\r\n                        <ActivityIndicator color='red' size={'large'} />\r\n                    ) : (\r\n                        <Icon name='plus-circle' width={72} height={72} fill='#f4f3f4' style={styles.postButtonLabel}/>\r\n                    )\r\n                )}\r\n                </Pressable>\r\n\r\n                {this.alertMsg()}\r\n  \r\n            </ImageBackground>\r\n            )\r\n    }\r\n  }\r\n","import { StatusBar } from 'expo-status-bar';\r\n// import { Platform } from 'react-native';\r\n\r\nconst styles = {\r\n  login: {\r\n    msgBox: {\r\n      position: 'absolute',\r\n      bottom: '10%',\r\n      width: 300,\r\n      paddingHorizontal: 3,\r\n      paddingVertical: 5,\r\n      alignSelf: 'center',\r\n      // width: 350,\r\n      // height: 36,\r\n      justifyContent: 'center',\r\n      backgroundColor: 'rgb(30,30,30)',\r\n      borderWidth: 1,\r\n      borderColor: 'rgb(40,40,40)',\r\n    },\r\n    msg: {\r\n        textAlign: 'center',\r\n        color: 'white',\r\n        // paddingHorizontal: 15,\r\n    },\r\n  },\r\n  mainView: {\r\n    flex: 1,                 \r\n    marginTop: StatusBar.currentHeight,\r\n  },\r\n  entrances: {\r\n    marginTop: StatusBar.currentHeight,\r\n    borderWidth: 0,\r\n    flex:1,\r\n    justifyContent: 'space-between',\r\n    alignItems: 'flex-start',\r\n  },\r\n  scrollView: {\r\n    // paddingHorizontal: Platform.OS != 'web' ? '5%' : '5%',\r\n    width: '100%',\r\n    alignSelf: 'center',\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    paddingBottom: '0%',\r\n    paddingHorizontal: '5%',\r\n    alignSelf: 'stretch',\r\n    borderColor: 'black',\r\n  },\r\n  section: {\r\n    width: 350,\r\n    paddingVertical: '16%',\r\n    borderBottomWidth: 1,\r\n    borderColor: 'rgba(155,155,155,0.3)',\r\n    alignSelf: 'center',\r\n  },\r\n  contentRow: {\r\n    flexDirection: 'column',\r\n    padding: 10,\r\n    marginTop: 22,\r\n    borderWidth: 1,\r\n    borderColor: 'rgba(155,155,155, 0.4)',\r\n    borderRadius: 30,\r\n    backgroundColor: 'rgba(255,255,255, 0.3)',\r\n\r\n  },\r\n  entryTitle: {\r\n    paddingVertical: 3,\r\n    paddingLeft: 4,\r\n    fontSize: 19,\r\n    color: 'white',\r\n  },\r\n  entryIcon: {\r\n    paddingRight: 0,\r\n  },\r\n  postButtonView: {\r\n    height: 60,\r\n    width: 60,\r\n    borderRadius: 30,\r\n    alignSelf: 'center',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundColor: 'white',\r\n  },\r\n  postButtonLabel: {\r\n    fontSize: 45,\r\n    fontWeight: 'bold',\r\n  },\r\n  moodButtonView: {\r\n    width: 65,\r\n    height: 65,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    borderWidth: 1,\r\n  },\r\n  moodButton: {\r\n    width: 65,\r\n    height: 65,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  date: {\r\n    position: 'relative',\r\n    left: '60%',\r\n    paddingVertical: 8,\r\n    paddingHorizontal: 10,\r\n    fontSize: 15,\r\n    alignSelf: 'center',\r\n    backgroundColor: 'white',\r\n    borderRadius: 20\r\n  },\r\n  jornalText: {\r\n    paddingVertical: 5,\r\n    paddingHorizontal: 12,\r\n    flex: 1,\r\n    textAlignVertical: 'top',\r\n    width: '100%',\r\n    borderRadius: 20,\r\n    color: 'white',\r\n    fontSize: 16,\r\n  },\r\n  saveButton: {\r\n    height: 50,\r\n    width: '100%',\r\n    borderTopLeftRadius: 30,\r\n    borderTopRightRadius: 30,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundColor: 'white'\r\n  },\r\n  saveButtonLabel: {\r\n    fontWeight:'bold',\r\n    fontSize: 19\r\n  },\r\n  card: {\r\n    marginTop: '5%',\r\n    paddingVertical: 5,\r\n    paddingHorizontal: 10,\r\n    borderRadius: 20,\r\n    backgroundColor: 'rgba(0,0,0,0.2)',\r\n  },\r\n  cardRow: {\r\n      flexDirection: 'row',\r\n      paddingVertical: 5,\r\n      alignItems: 'center',\r\n  },\r\n  moodBadge: {\r\n      backgroundColor: 'green',\r\n      borderRadius: 30,\r\n      paddingVertical: 6,\r\n      width: 130,\r\n      fontSize: 16,\r\n      textAlign: 'center',\r\n  },\r\n  emotionBadge: {\r\n      backgroundColor: 'rgba(1,1,1,0.5)',\r\n      borderRadius: 30,\r\n      paddingVertical: 6,\r\n      paddingHorizontal: 12.5,\r\n      fontSize: 15,\r\n      textAlign: 'center',\r\n      marginVertical: 5,\r\n      marginHorizontal: 5\r\n  },\r\n  entryCardEmotionBadge: {\r\n    backgroundColor: 'aliceblue',\r\n    borderRadius: 30,\r\n    paddingVertical: 7,\r\n    paddingHorizontal: 12.5,\r\n    marginRight: 6,\r\n    fontSize: 15,\r\n    textAlign: 'center',\r\n  },\r\n  datetimeTitle: {\r\n    fontSize: 16,\r\n    marginRight: 3,\r\n  },\r\n  editButtonsView: {\r\n    flexDirection: 'row',\r\n    height: 55,\r\n    paddingVertical: 5,\r\n    alignItems: 'flex-end',\r\n    justifyContent: 'space-between'\r\n  },\r\n  editButton: {\r\n    height: 34,\r\n    width: 102,\r\n    borderWidth: 1,\r\n    borderColor: 'aliceblue',\r\n    borderRadius: 17,\r\n    alignItems: 'center',\r\n    justifyContent: 'center'\r\n  },\r\n  editButtonLabel: {\r\n      fontSize: 15,\r\n      fontWeight: '400',\r\n      color: 'white',\r\n  },\r\n}\r\n\r\nexport default styles;","import React, { Component, useState } from 'react';\r\nimport { View, Text,  Pressable, TextInput, ActivityIndicator, Platform } from 'react-native';\r\nimport { Icon } from 'react-native-eva-icons'\r\n// import VectorIcon from 'react-native-vector-icons/MaterialCommunityIcons';\r\nimport styles from '../../styles/postEntryStyles'\r\n\r\n// cors-midpoint uri (needed to avoid cors' allow-cross-origin error when fetching in web platforms)\r\nconst corsURI = Platform.OS == 'web' ? 'https://morning-journey-78874.herokuapp.com/' : ''\r\nconst appServerURI = 'https://mood-tracker-server.herokuapp.com/'\r\n\r\nexport function capitalize(multipleWordString) {\r\n    var words = multipleWordString.trim().split(' ');\r\n    var CapitalizedWords = [];\r\n    words.forEach(element => {\r\n    CapitalizedWords.push(element[0].toUpperCase() + element.slice(1, element.length));\r\n    });\r\n    return CapitalizedWords.join(' ');\r\n}\r\n\r\nexport default class EditEmotions extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showEditMenu: false,\r\n            showExpandMenuButton: true,\r\n            mode: 'hidden',\r\n            newEmotionName: '',\r\n            selectedEmotionType: null,\r\n            selectedEmotionEnergy: null,\r\n            initialEmotionLayout: null,\r\n        }\r\n        this.EditEmotionsMenu = this.EditEmotionsMenu.bind(this);\r\n        this.EditEmotionsSection = this.EditEmotionsSection.bind(this);\r\n        this.onSaveEmotionButtonPress = this.onSaveEmotionButtonPress.bind(this);\r\n    }\r\n\r\n    EditEmotionsSection() {\r\n\r\n        const emotionTypes = ['Positiva', 'Negativa']\r\n        const emotionEnergy = ['Calmo(a)', 'Energizado(a)']\r\n        const emotionLayoutMap = {\r\n            'Positiva ou Negativa': 'type',\r\n            'Calmo(a) ou Energizado(a)': 'energy',\r\n            'Grade': 'grid',\r\n            'Espalhado': 'spread'\r\n        }\r\n\r\n        const inputSectionStyle = {marginTop: 0, marginTop: 0   , alignItems: 'center'}\r\n        const textStyle = {color: styles.theme.color, fontSize: 16, alignSelf: 'center', marginBottom: 8}\r\n        const inputStyle = {width: '70%', height: 35, borderRadius: 16.5, color: styles.theme.color, backgroundColor: styles.altTheme.color+'8', fontSize: 15, textAlign: 'center' }\r\n        const tagStyle = {width: '45%', height: 28, borderRadius: 13.5,  marginBottom: 7, color: 'white', alignItems: 'center', justifyContent: 'center'}\r\n        const createEmotionViewStyle = {height: 420, marginTop: 10, paddingTop: 10, justifyContent: 'space-evenly', borderTopWidth: 1, borderTopColor: 'rgba(255,255,255,0.2)'}\r\n\r\n        const [isButtonPressed, setIsButtonPressed] = useState({\r\n            'Salvar': false,\r\n            'Voltar': false,\r\n            'Terminar': false,\r\n            'Salvar-Layout': false,\r\n            'Voltar-Layout': false\r\n        })\r\n        function highlightButtonFor(label) {\r\n            function highlightButton() {\r\n                setIsButtonPressed({ ...isButtonPressed, [label]: !isButtonPressed[label] })\r\n            }\r\n            return highlightButton.bind(this);\r\n        }\r\n\r\n        const isLoading = (\r\n            this.props.isDeleteEmotionLoading |\r\n            this.props.isSaveEmotionLoading |\r\n            this.props.isPostEntryLoading |\r\n            this.props.appState.isUserDataSyncing |\r\n            this.props.isUpdateUserDataLoading\r\n        )\r\n\r\n        const isNewEmotionFormComplete = !this.state.newEmotionName | !this.state.selectedEmotionType | !this.state.selectedEmotionEnergy\r\n\r\n        switch (this.state.mode) {\r\n\r\n            case 'hidden':\r\n                return null\r\n\r\n            case 'create':\r\n                return(\r\n                    <View style={createEmotionViewStyle}>\r\n                        <Text style={[ styles.theme, {fontSize: 22, alignSelf: 'center'}]}>Criar emoção</Text>\r\n                        <View style={inputSectionStyle}>\r\n                            <Text style={textStyle}>Nome</Text>\r\n                            <TextInput\r\n                            placeholder='Nome da emoção...'\r\n                            placeholderTextColor={styles.theme.color+'8'}\r\n                            style={inputStyle}\r\n                            onChangeText={text => this.setState({newEmotionName: text})}\r\n                            value={this.state.newEmotionName}\r\n                            />\r\n                        </View>\r\n                        <View style={inputSectionStyle}>\r\n                            <Text style={textStyle}>Tipo</Text>\r\n                            { emotionTypes.map((type) => {\r\n                                const typeSelected = this.state.selectedEmotionType === type\r\n                                return(\r\n                                    <Pressable\r\n                                    key={'emotion-'+type}\r\n                                    onPress={() => this.setState({selectedEmotionType: typeSelected ? null : type })}\r\n                                    style={[tagStyle, { backgroundColor: styles.altTheme.color + (typeSelected ? 'd' : '6') }]}>\r\n                                        <Text style={[{fontSize: 15}, styles.theme]}>{type}</Text>\r\n                                    </Pressable>\r\n                                )\r\n                            }) }\r\n                        </View>\r\n                        <View style={inputSectionStyle}>\r\n                            <Text style={textStyle}>Energia</Text>\r\n                            { emotionEnergy.map((type) => {\r\n                                const typeSelected = this.state.selectedEmotionEnergy === type\r\n                                return(\r\n                                    <Pressable\r\n                                    key={'emotion-'+type}\r\n                                    onPress={() => this.setState({selectedEmotionEnergy: typeSelected ? null : type })}\r\n                                    style={[tagStyle, { backgroundColor: styles.altTheme.color + (typeSelected ? 'd' : '6') }]}>\r\n                                        <Text style={[{fontSize: 15}, styles.theme]}>{type}</Text>\r\n                                    </Pressable>\r\n                                )\r\n                            }) }\r\n                        </View>\r\n                        <View style={[inputSectionStyle, {flexDirection: 'row', justifyContent: 'space-evenly'}]}>\r\n                            <Pressable\r\n                            onPress={() => {\r\n                                highlightButtonFor('Salvar')()\r\n                                this.onSaveEmotionButtonPress()\r\n                                setIsButtonPressed({'Salvar': false})\r\n                            }}\r\n                            onPressIn={highlightButtonFor('Salvar')}\r\n                            disabled={isLoading | isNewEmotionFormComplete}\r\n                            style={[styles.editButton, {\r\n                                alignSelf: 'center',\r\n                                backgroundColor: isButtonPressed['Salvar'] ? styles.theme.color+'5' : '#0000',\r\n                                borderColor: isLoading | isNewEmotionFormComplete ? styles.theme.color+'5' : styles.theme.color,\r\n                                }]}>\r\n                                <Text style={[ styles.editButtonLabel, {\r\n                                    color: isLoading | isNewEmotionFormComplete ? styles.theme.color+'5' : styles.theme.color\r\n                                }]}\r\n                                >\r\n                                {'Salvar'}\r\n                                </Text>\r\n                            </Pressable>\r\n                            <Pressable\r\n                            onPress={() => {\r\n                                highlightButtonFor('Voltar')()\r\n                                this.setState({showEditMenu: true, showExpandMenuButton: true, mode: 'hidden'})\r\n                                setIsButtonPressed({'Voltar': false})\r\n                            }}\r\n                            onPressIn={highlightButtonFor('Voltar')}\r\n                            disabled={isLoading}\r\n                            style={[styles.editButton, {\r\n                                alignSelf: 'center',\r\n                                backgroundColor: isButtonPressed['Voltar'] ? styles.theme.color+'5' : '#0000',\r\n                                borderColor: isLoading ? styles.theme.color+'5' : styles.theme.color,\r\n                                }]}>\r\n                                <Text style={[styles.editButtonLabel, {color: isLoading ? styles.theme.color+'5' : styles.theme.color}]}>Voltar</Text>\r\n                            </Pressable>\r\n                        </View>\r\n                    </View>\r\n                )\r\n\r\n            case 'delete':\r\n                return(\r\n                    <View style={[createEmotionViewStyle, {height: 180}]}>\r\n                        <Text style={{color: styles.theme.color, fontSize: 22, alignSelf: 'center'}}>Excluir emoções</Text>\r\n                        <Text style={{color: styles.theme.color, fontSize: 16, textAlign: 'center'}}>Pressione e segure para excluir uma emoção.</Text>\r\n                        <View style={[styles.cardRow, {justifyContent: 'space-evenly'}]}>\r\n                            <Pressable\r\n                            onPress={() => {\r\n                                highlightButtonFor('Terminar')();\r\n                                this.props.setParentState({deleteEmotionMode: false});\r\n                                this.setState({showEditMenu: true, showExpandMenuButton: true, mode: 'hidden'});\r\n                                setIsButtonPressed({'Terminar': false})\r\n                            }}\r\n                            onPressIn={highlightButtonFor('Terminar')}\r\n                            disabled={isLoading}\r\n                            style={[styles.editButton, {\r\n                                alignSelf: 'center',\r\n                                borderColor: isLoading ? styles.theme.color+'5' : styles.theme.color,\r\n                                backgroundColor: isButtonPressed['Terminar'] ? styles.theme.color+'5' : '#0000'\r\n                            }]}\r\n                            >\r\n                                <Text style={[styles.editButtonLabel, {color: isLoading ? styles.theme.color+'5' : styles.theme.color}]}>Terminar</Text>\r\n                            </Pressable>\r\n                        </View>\r\n                    </View>\r\n                )\r\n\r\n            case 'layout':\r\n                return(\r\n                    <View style={[createEmotionViewStyle, {height: 320}]}>\r\n                        <View style={inputSectionStyle}>\r\n                            <Text style={{color: styles.theme.color, fontSize: 22, alignSelf: 'center', paddingBottom: 25}}>Escolha o layout</Text>\r\n                            { ['Positiva ou Negativa', 'Calmo(a) ou Energizado(a)', 'Grade', 'Espalhado'].map((layout) => {\r\n                                const isLayoutSelected = this.props.selectedEmotionLayout === emotionLayoutMap[layout]\r\n                                return(\r\n                                    <Pressable\r\n                                    key={'emotion-'+layout}\r\n                                    onPress={() => this.props.setParentState({selectedEmotionLayout: emotionLayoutMap[layout] })}\r\n                                    style={[tagStyle, {width: 230, height: 30, borderRadius: 15, marginBottom: 10, backgroundColor: isLayoutSelected ? styles.altTheme.color+'d' : styles.altTheme.color+'5'}]}>\r\n                                        <Text style={[{fontSize: 15, color: styles.theme.color}]}>{layout}</Text>\r\n                                    </Pressable>\r\n                                )\r\n                            }) }\r\n                        </View>\r\n                        <View style={[inputSectionStyle, {flexDirection: 'row', justifyContent: 'space-evenly'}]}>\r\n                            <Pressable\r\n                            onPress={() => {\r\n                                highlightButtonFor('Salvar-Layout')()\r\n                                this.onSaveEmotionLayoutButtonPress()\r\n                                setIsButtonPressed({'Salvar-Layout': false})\r\n                            }}\r\n                            onPressIn={highlightButtonFor('Salvar-Layout')}\r\n                            disabled={ isLoading }\r\n                            style={[styles.editButton, {\r\n                                alignSelf: 'center',\r\n                                backgroundColor: isButtonPressed['Salvar-Layout'] ? styles.theme.color+'5' : '#0000',\r\n                                borderColor: isLoading ? styles.theme.color+'5' : styles.theme.color,\r\n                                }]}>\r\n                                <Text style={[styles.editButtonLabel, {color: isLoading ? styles.theme.color+'5' : styles.theme.color}]}>Salvar</Text>\r\n                            </Pressable>\r\n                            <Pressable\r\n                            onPress={() => {\r\n                                highlightButtonFor('Voltar-Layout')()\r\n                                this.props.setParentState({selectedEmotionLayout: this.state.initialEmotionLayout})\r\n                                this.setState({showEditMenu: true, showExpandMenuButton: true, mode: 'hidden', initialEmotionLayout: null})\r\n                                setIsButtonPressed({'Voltar-Layout': false})\r\n                            }}\r\n                            onPressIn={highlightButtonFor('Voltar-Layout')}\r\n                            disabled={isLoading}\r\n                            style={[styles.editButton, {\r\n                                alignSelf: 'center',\r\n                                borderColor: isLoading ? styles.theme.color+'5' : styles.theme.color,\r\n                                backgroundColor: isButtonPressed['Voltar-Layout'] ? styles.theme.color+'5' : '#0000'\r\n                                }]}>\r\n                                <Text style={[styles.editButtonLabel, {color: isLoading ? styles.theme.color+'5' : styles.theme.color}]}>Voltar</Text>\r\n                            </Pressable>\r\n                        </View>\r\n                    </View>\r\n                )\r\n\r\n            default:\r\n                return null\r\n        }\r\n    }\r\n\r\n    EditEmotionsMenu() {\r\n\r\n        const buttonLabels = ['Criar', 'Excluir', 'Layout']\r\n        const onButtonPress = { \r\n            'Criar': () => this.setState({showEditMenu: false, showExpandMenuButton: false, mode: 'create'}),\r\n            'Excluir': () => {\r\n                this.props.setParentState({deleteEmotionMode: !this.props.deleteEmotionMode})\r\n                this.setState({showEditMenu: false , showExpandMenuButton: false, mode: 'delete'})\r\n            },\r\n            'Layout': () => this.setState({showEditMenu: false, showExpandMenuButton: false, mode: 'layout', initialEmotionLayout: this.props.selectedEmotionLayout})\r\n        }\r\n        const [isButtonPressed, setIsButtonPressed] = useState({\r\n            'Criar': false,\r\n            'Excluir': false,\r\n            'Layout': false,\r\n        })\r\n        function highlightButtonFor(label) {\r\n            function highlightButton() {\r\n                setIsButtonPressed({ ...isButtonPressed, [label]: !isButtonPressed[label] })\r\n            }\r\n            return highlightButton.bind(this);\r\n        }\r\n\r\n        const showEditMenu =  this.state.showEditMenu\r\n        const showExpandMenuButton = this.state.showExpandMenuButton\r\n        const hidden = this.state.mode == 'hidden'\r\n        const anyOpen = showEditMenu || !hidden\r\n\r\n        const isLoading = (\r\n            this.props.isPostEntryLoading |\r\n            this.props.appState.isUserDataSyncing |\r\n            this.props.isUpdateUserDataLoading |\r\n            this.props.isDeleteEmotionLoading |\r\n            this.props.isSaveEmotionLoading\r\n        )\r\n\r\n        return(\r\n            <>\r\n                { showExpandMenuButton ? (\r\n                    <View style={[styles.cardRow, {height: 60, marginTop: 10, paddingTop: 10, justifyContent: showEditMenu ? 'space-between' : 'center', borderTopWidth: 1, borderTopColor: 'rgba(255,255,255,0.2)'}]}>\r\n                        { showEditMenu ? ( \r\n                            buttonLabels.map((label) => (\r\n                                <Pressable\r\n                                key={`emotion-${label}`}\r\n                                style={[styles.editButton,  {\r\n                                    backgroundColor: isButtonPressed[label] ? styles.theme.color+'5' : '#0000',\r\n                                    borderColor: isLoading ? styles.theme.color+'5' : styles.theme.color,\r\n                                    width: 75\r\n                                }]}\r\n                                disabled={ isLoading }\r\n                                onPress={() => {\r\n                                    highlightButtonFor(label)(); onButtonPress[label]()\r\n                                    setIsButtonPressed({ [label]: false })\r\n                                } }\r\n                                onPressIn={highlightButtonFor(label)}\r\n                                >\r\n                                    <Text style={[styles.editButtonLabel, {color: isLoading ? styles.theme.color+'5' : styles.theme.color}]}>{label}</Text>                    \r\n                                </Pressable>\r\n                            ))\r\n                        ) : null }\r\n                        <Pressable\r\n                        onPress={() => this.setState({ showEditMenu:  !showEditMenu })}\r\n                        // disabled={isLoading}\r\n                        style={{flexDirection: 'row', alignItems: 'center', justifyContent: 'center', paddingVertical: 5, width: 75}}>\r\n                            <Icon name={ !showEditMenu ? 'more-horizontal-outline' : 'arrow-back-outline' } fill={styles.theme.color} width={20} height={20} />\r\n                            <Text style={{color: styles.theme.color, fontSize: 15, marginLeft: 0}}> {anyOpen ? 'menos' : 'mais'}</Text>\r\n                        </Pressable>\r\n                    </View> \r\n                ) :  null  }\r\n            </>\r\n\r\n        )\r\n    }\r\n\r\n    async onSaveEmotionButtonPress() {\r\n\r\n        const newEmotionAlreadyExists = Object.keys(this.props.isSelectedEmotions).includes(capitalize(this.state.newEmotionName))\r\n        if (newEmotionAlreadyExists) {\r\n            this.props.setAlertMsg('Essa emoção já foi criada, escolha outro nome para continuar.')\r\n            return\r\n        }\r\n\r\n        try {\r\n            this.props.setParentState({ isSaveEmotionLoading: true });\r\n            var user = this.props.appState.user;\r\n            const newEmotion = {\r\n                name: capitalize(this.state.newEmotionName),\r\n                type: this.state.selectedEmotionType,\r\n                energy: this.state.selectedEmotionEnergy,\r\n            }\r\n\r\n            console.log('POST EMOTION STATUS: Started...')\r\n            var postEmotionResult = {ok: false, status: '999', statusText: 'Post not fetched yet.'}\r\n            const postUserEntryOpts = { \r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify( newEmotion ),\r\n            }\r\n            // var postUserEntryResult = await fetch('http://localhost:3000/Users/' + info.username + '/emotions', postUserEntryOpts);\r\n            postEmotionResult = await fetch( corsURI + appServerURI + 'Users/' + user.username + '/emotions', postUserEntryOpts);\r\n            const postEmotionStatus = 'Status: ' + postEmotionResult.status + ', ' + postEmotionResult.statusText\r\n\r\n            if (postEmotionResult.ok) {\r\n                console.log('POST EMOTION STATUS: Successful.')\r\n                console.log(postEmotionStatus)\r\n                this.setState({\r\n                    showEditMenu: true,\r\n                    showExpandMenuButton: true,\r\n                    mode: 'hidden',\r\n                    newEmotionName: '',\r\n                    selectedEmotionType: null,\r\n                    selectedEmotionEnergy: null,        \r\n                })\r\n                    \r\n            } else {\r\n                console.log('POST EMOTION STATUS: Failed. Throwing error...')\r\n                throw new Error(postEmotionStatus)\r\n            }\r\n\r\n        } catch (error) {\r\n            this.props.setAlertMsg('Erro no servidor. Tente novamente...')\r\n            console.log('Erro capturado:')\r\n            console.log(error);\r\n\r\n        } finally {\r\n            console.log('POST EMOTION STATUS: Finished.')\r\n            this.props.setParentState({ isSaveEmotionLoading: false });\r\n            if (postEmotionResult.ok) {\r\n                await this.props.route.params.syncUserData();\r\n                this.props.updateUserData();\r\n            }\r\n        } \r\n    }\r\n    \r\n    async onSaveEmotionLayoutButtonPress() {\r\n\r\n        try {\r\n            this.props.setParentState({ isSaveEmotionLayoutLoading: true });\r\n            var user = this.props.appState.user;\r\n            \r\n            console.log('POST EMOTION LAYOUT STATUS: Started...')\r\n            var postEmotionLayoutResult = {ok: false, status: '999', statusText: 'Post not fetched yet.'}\r\n            const postEmotionLayoutOpts = { \r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify( {layout: this.props.selectedEmotionLayout} ),\r\n            }\r\n            postEmotionLayoutResult = await fetch( corsURI + appServerURI + 'Users/' + user.username + '/layout', postEmotionLayoutOpts);\r\n            // var postUserEntryResult = await fetch('http://localhost:3000/Users/' + info.username + '/emotions', postEmotionLayoutOpts);\r\n            const postEmotionLayoutStatus = 'Status: ' + postEmotionLayoutResult.status + ', ' + postEmotionLayoutResult.statusText\r\n\r\n            if (postEmotionLayoutResult.ok) {\r\n                console.log('POST EMOTION LAYOUT STATUS: Successful.')\r\n                console.log(postEmotionLayoutStatus)\r\n                this.setState({\r\n                    showEditMenu: true,\r\n                    showExpandMenuButton: true,\r\n                    mode: 'hidden',\r\n                    initialEmotionLayout: null,\r\n                })\r\n                    \r\n            } else {\r\n                console.log('POST EMOTION LAYOUT STATUS: Failed. Throwing error...')\r\n                throw new Error(postEmotionLayoutStatus)\r\n            }\r\n\r\n        } catch (error) {\r\n            this.props.setAlertMsg('Erro no servidor. Tente novamente...')\r\n            console.log('Erro capturado:')\r\n            console.log(error);\r\n\r\n        } finally {\r\n            console.log('POST EMOTION LAYOUT STATUS: Finished.')\r\n            this.props.setParentState({ isSaveEmotionLayoutLoading: false });\r\n            if (postEmotionLayoutResult.ok) {\r\n                await this.props.route.params.syncUserData();\r\n                this.props.updateUserData();\r\n            }\r\n        } \r\n    }\r\n\r\n    setFontColor() {\r\n        const fontColorDark = this.props.appState.user.settings.fontColorDark\r\n        const fontColor = fontColorDark ? '#000' : '#fff'\r\n        const altFontColor = fontColorDark ? '#fff' : '#000'\r\n        for (let style of ['theme', ]) {\r\n            styles[style] = { ...styles[style], color: fontColor }\r\n        }\r\n        styles.altTheme.color = altFontColor\r\n        // styles.altTheme.backgroundColor = altFontColor\r\n    }    \r\n\r\n    render() {\r\n        return(\r\n            <>\r\n                <this.EditEmotionsSection />\r\n                <this.EditEmotionsMenu />\r\n            </>\r\n        )\r\n    }\r\n\r\n}","const GoogleMapsAPI = {\r\n    GoogleMapsJavascriptAPIkey: \"AIzaSyBVWbOwPAMRyz2bS6rYHrDftVeihQ8WMCo\",\r\n    GoogleMapsGeocodingAPIKey: \"AIzaSyB6O-DpvulBC0rom1mGy-mBcstIbPlDPHA\",\r\n}\r\n\r\nexport default GoogleMapsAPI","const OpenWeatherMapAPI = {\r\n    KEY: \"de9e6896f84109d7920528172207411a\",\r\n}\r\nexport default OpenWeatherMapAPI\r\n","import React, { Component } from 'react';\r\nimport { View, Text, ImageBackground, Pressable, ScrollView, Platform, TextInput, ActivityIndicator } from 'react-native';\r\n\r\nimport { Icon } from 'react-native-eva-icons'\r\nimport VectorIcon from 'react-native-vector-icons/MaterialCommunityIcons';\r\nimport EditEmotions from './subcomponents/EditEmotions'\r\nimport styles from '../styles/postEntryStyles'\r\nstyles.theme = {}; styles.altTheme = {};\r\n// Geocoding and weather dependencies and APIs\r\nimport * as Location from 'expo-location';\r\nimport GoogleMapsAPI from './subcomponents/GoogleMapsAPI'\r\nLocation.setGoogleApiKey(GoogleMapsAPI.GoogleMapsGeocodingAPIKey)\r\nimport OpenWeatherMapAPI from './subcomponents/OpenWeatherMapAPI';\r\n\r\n// cors-midpoint uri (needed to avoid cors' allow-cross-origin error when fetching in web platforms)\r\nconst corsURI = Platform.OS == 'web' ? 'https://morning-journey-78874.herokuapp.com/' : ''\r\nconst appServerURI = 'https://mood-tracker-server.herokuapp.com/'\r\n\r\n// Date() => wed jan 91 2022 07:46:57 ...\r\nconst now = new Date().toString().split(' ')\r\nconst datetime = now[2] + ' ' + now[1] + ' ' + now[3] + ' - ' + now[4].slice(0, 5)\r\n\r\n// Mood configs\r\nconst moods = ['Horrível', 'Mal', 'Regular', 'Bem', 'Ótimo']\r\nconst moodColorsHEX = ['#ff3333', '#0099cc', '#add8e6', '#ffff33', '#00cc00']\r\nconst moodColorsRGBA = ['rgba(255, 51, 51, 1)', 'rgba(0, 153, 204, 1)', 'rgba(173, 216, 230, 1)', 'rgba(255, 255, 51, 1)', 'rgba(0, 204, 0, 1)']\r\nconst moodColorsTransp = (alpha) => [`rgba(255, 51, 51, ${alpha})`, `rgba(0, 153, 204, ${alpha})`, `rgba(173, 216, 230, ${alpha})`, `rgba(255, 255, 51, ${alpha})`, `rgba(0, 204, 0, ${alpha})`]\r\nconst moodIcons = ['emoticon-dead', 'emoticon-sad', 'emoticon-neutral', 'emoticon-happy', 'emoticon-excited']\r\n\r\n// Emotion configs\r\nconst emotionGroupsNames = [ 'Bem & Calmo(a)', 'Bem & Energizado(a)', 'Mal & Calmo(a)', 'Mal & Energizado(a)' ]\r\nconst emotionTypes = ['Positiva', 'Negativa']\r\nconst emotionEnergy = ['Calmo(a)', 'Energizado(a)']\r\n\r\nfunction buildIsSelectedEmotions(emotions) {\r\n    var isSelectedEmotions = {}\r\n    for ( let emotion of emotions) {\r\n        isSelectedEmotions[emotion.name] = false\r\n    }\r\n    return isSelectedEmotions\r\n}\r\n\r\n// Date config\r\nconst monthSigs = ['Jan', 'Feb', 'Mar', 'Apr', 'Jun', 'Jul', 'Ago', 'Sep', 'Oct', 'Nov', 'Dec']\r\nconst months = ['01', '02', '03', '04', '05', '06', '07', '08', '09', '10', '11', '12']\r\n\r\nconst monthNameMap = {\r\n    '01': 'Janeiro',\r\n    '02': 'Fevereiro',\r\n    '03': 'Março',\r\n    '04': 'Abril',\r\n    '05': 'Maio',\r\n    '06': 'Junho',\r\n    '07': 'Julho',\r\n    '08': 'Agosto',\r\n    '09': 'Setembro',\r\n    '10': 'Outubro',\r\n    '11': 'Novembro',\r\n    '12': 'Dezembro',\r\n}\r\n\r\n// Functions\r\n\r\nfunction convertMonthSig(monthSig) {\r\n    const thisMonth = months[monthSigs.indexOf(monthSig)]\r\n    return thisMonth\r\n}\r\n\r\nfunction Today() {\r\n    const now = Date().toString().split(' ')\r\n    const today = [ now[3], convertMonthSig(now[1]), now[2] ].join('-')\r\n    return today\r\n}\r\n\r\nfunction getTime() {\r\n    //Wed,Jan,26,2022,15:12:37,GMT-0300,(Horário,Padrão,de,Brasília)\r\n    const now = Date().toString().split(' ')\r\n    const time = now[4]\r\n    return time\r\n}\r\n\r\nfunction oneDigit(stringNumber) {\r\n    if (stringNumber[0] == '0') return stringNumber.slice(1, stringNumber.length)\r\n    else return stringNumber\r\n}\r\n\r\nfunction formatPostEntryDatetimeTitle(date, time) {\r\n    const ymd = date.split('-')\r\n    const m = monthNameMap[ ymd[1] ]\r\n    return oneDigit( ymd[2] ) + ' ' + m + ' ' + ymd[0] + (time ? ' - ' : '') + time.slice(0,5)\r\n}\r\n\r\nfunction formattedAddress(addressObj) {\r\n    return addressObj.street + ', ' + addressObj.streetNumber + ' - ' + addressObj.district + ', ' + addressObj.subregion + '. ' + addressObj.region + ', ' + addressObj.isoCountryCode + '.'\r\n}\r\n\r\nfunction mapEmotions(emotions, layout='grid') {\r\n    var userEmotionGroups = layout=='grid' ? [[],[],[],[]] : ( layout=='spread' ? [[]] : [[],[]] )\r\n    var emotionLabels = layout=='grid' ? emotionGroupsNames : ( layout=='type' ? emotionTypes : (layout=='spread' ? [''] : emotionEnergy ) )\r\n    for (let emotion of emotions) {\r\n        if (layout=='grid') {\r\n            if (emotion.type=='Positiva') {\r\n                if (emotion.energy=='Calmo(a)')\r\n                    userEmotionGroups[0] = [ ...userEmotionGroups[0], emotion]\r\n                else if (emotion.energy=='Energizado(a)')\r\n                    userEmotionGroups[1] = [ ...userEmotionGroups[1], emotion]\r\n            } else if (emotion.type=='Negativa') {\r\n                if (emotion.energy=='Calmo(a)')\r\n                    userEmotionGroups[2] = [ ...userEmotionGroups[2], emotion]\r\n                else if (emotion.energy=='Energizado(a)')\r\n                    userEmotionGroups[3] = [ ...userEmotionGroups[3], emotion]\r\n            }\r\n        } else if (layout=='type') {\r\n            if (emotion.type=='Positiva')\r\n                userEmotionGroups[0] = [ ...userEmotionGroups[0], emotion]\r\n            else if (emotion.type=='Negativa')\r\n                userEmotionGroups[1] = [ ...userEmotionGroups[1], emotion]\r\n        } else if (layout=='energy') {\r\n            if (emotion.energy=='Calmo(a)')\r\n                userEmotionGroups[0] = [ ...userEmotionGroups[0], emotion]\r\n            else if (emotion.energy=='Energizado(a)')\r\n                userEmotionGroups[1] = [ ...userEmotionGroups[1], emotion]\r\n        } else if (layout=='spread') {\r\n            userEmotionGroups[0] = [ ...userEmotionGroups[0], emotion]\r\n        }\r\n    }\r\n    return [userEmotionGroups, emotionLabels]\r\n}\r\n\r\nfunction sortObjListByKey(objList, objKey) {\r\n    const keys = objList.map(obj => obj[objKey])\r\n    const sortedKeys = [...keys].sort()\r\n    var newObjList = []\r\n    sortedKeys.forEach(key => {\r\n        newObjList.push( objList[keys.indexOf(key)] )\r\n    })\r\n    return newObjList\r\n}\r\n\r\nexport default class PostEntranceScreen extends Component {\r\n  \r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            user: this.props.appState.user,\r\n\r\n            date: '',\r\n            startTime: '',\r\n            endTime: '',\r\n            createdAt: '',\r\n            lastEdited: [],\r\n\r\n            star: false,\r\n            selectedMood: '',\r\n            emotions: [],\r\n            jornalEntry: '',    \r\n            address: '',\r\n            location: null,\r\n            weather: null,\r\n\r\n            selectedEntry: 'Avaliação',\r\n            isMoodUnmarked: true,\r\n            isSelectedEmotions: buildIsSelectedEmotions(this.props.appState.user.emotions),\r\n            selectedEmotionLayout: this.props.appState.user.layout,\r\n            isFetchingLocationOrWeather: false,\r\n            isPostEntryLoading: false,\r\n            isDeleteEmotionLoading: false,\r\n            isSaveEmotionLoading: false,\r\n            deleteEmotionMode: false,\r\n            isUpdateUserDataLoading: false,\r\n\r\n            userCoordinates: null,\r\n            loginMsg: '',\r\n        };\r\n\r\n        this.initializeEntry = this.initializeEntry.bind(this);\r\n        this.onSaveButtonPress = this.onSaveButtonPress.bind(this);\r\n        this.saveButton = this.saveButton.bind(this);\r\n        this.setLoginMsg = this.setLoginMsg.bind(this);\r\n        this.EmotionButtons = this.EmotionButtons.bind(this);\r\n        this.MoodButtons = this.MoodButtons.bind(this);\r\n        this.postEntryHeader = this.postEntryHeader.bind(this);\r\n        this.onEmotionButtonPress = this.onEmotionButtonPress.bind(this);\r\n        this.onMoodButtonPress = this.onMoodButtonPress.bind(this);\r\n        this.inputCardBody = this.inputCardBody.bind(this);\r\n        this.setSelectedEntry = this.setSelectedEntry.bind(this);\r\n        this.InputCard = this.InputCard.bind(this);\r\n        this.JornalInput = this.JornalInput.bind(this);\r\n        this.postNewEntryAsync = this.postNewEntryAsync.bind(this);\r\n        this.updateUserData = this.updateUserData.bind(this);\r\n        this.deleteEmotion = this.deleteEmotion.bind(this);\r\n        this.onEmotionButtonLongPress = this.onEmotionButtonLongPress.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log('\"PostEntry\" component did mount.')\r\n        this.initializeEntry()\r\n    }\r\n\r\n    postEntryHeader() {\r\n        return(\r\n            <View style={[styles.cardRow, {justifyContent: 'space-between'}]}>\r\n                <Pressable onPress={() => {this.props.navigation.goBack()}} hitSlop={10} style={styles.postButton}>\r\n                    <Icon name='arrow-back' fill={styles.theme.color+'b'} height={29} width={29}/>\r\n                </Pressable>\r\n                <View style={[styles.entryCardEmotionBadge, {flexDirection: 'row', alignItems: 'center'}]}>\r\n                    <Text style={styles.datetimeTitle}> { formatPostEntryDatetimeTitle(this.props.route.params.currentEntry.date, this.state.startTime) } </Text>\r\n                    <Icon name='edit' fill='rgba(75,75,75,1)' height={20} width={20}/>\r\n                </View>\r\n                <Pressable onPress={() => {this.setState({star: !this.state.star})}}  hitSlop={10} style={styles.postButton}>\r\n                    <Icon name={this.state.star ? 'star' : 'star-outline'} fill={this.state.star ? 'gold' : styles.theme.color+'b' } height={30} width={30}/>\r\n                </Pressable>\r\n            </View>\r\n        )\r\n    }\r\n\r\n    MoodButtons() {\r\n        return moods.map((item, index) => {\r\n            const selected = this.state.selectedMood == item\r\n            const isMoodUnmarked = this.state.isMoodUnmarked\r\n            const selColor = moodColorsRGBA[index]\r\n            return(\r\n                <View key={'mood '+index} style={styles.moodButton}>\r\n                    <VectorIcon\r\n                    name={moodIcons[index]}\r\n                    size={isMoodUnmarked ? 52 : (selected ? 57 : 50) }\r\n                    color={ isMoodUnmarked ? selColor : (selected ? selColor : moodColorsTransp(0.5)[index]) }\r\n                    onPress={this.onMoodButtonPress(item)}\r\n                    />\r\n                </View>\r\n            )\r\n        })\r\n    }\r\n\r\n    onMoodButtonPress(item) {\r\n        function selectMood() {\r\n            if (this.state.selectedMood==item) {\r\n                this.setState({selectedMood: null, isMoodUnmarked: true})\r\n            } else {\r\n                this.setState({selectedMood: item, isMoodUnmarked: false})\r\n            }\r\n        }\r\n        selectMood = selectMood.bind(this);\r\n        return selectMood\r\n    }\r\n\r\n    EmotionButtons(emotions) {\r\n        return(\r\n            sortObjListByKey(emotions, 'name').map( emotion => (\r\n                <Pressable\r\n                key={'emotion-' + emotion.name}\r\n                title={emotion.name}\r\n                onPress={this.onEmotionButtonPress(emotion.name)}\r\n                onLongPress={this.onEmotionButtonLongPress(emotion.name)}\r\n                suppressHighlighting={true}\r\n                selectable={false}\r\n                >\r\n                    <Text onLongPress={null} style={[styles.emotionBadge, {backgroundColor: this.state.isSelectedEmotions[emotion.name] ? 'lightblue' : 'aliceblue' }]}>{emotion.name}</Text>\r\n                </Pressable>\r\n            ))\r\n        )\r\n    }\r\n\r\n    onEmotionButtonPress(emotion) {\r\n        function selectEmotion () {\r\n            this.setState({\r\n                isSelectedEmotions: {\r\n                    ...this.state.isSelectedEmotions,\r\n                    [emotion]: !this.state.isSelectedEmotions[emotion]\r\n                }\r\n            })    \r\n        }\r\n        selectEmotion = selectEmotion.bind(this);\r\n        return selectEmotion\r\n    }\r\n\r\n    onEmotionButtonLongPress(emotion) { \r\n        function selectEmotion () {\r\n            if (this.state.deleteEmotionMode) {\r\n                this.deleteEmotion(emotion)\r\n            }\r\n        }\r\n        selectEmotion = selectEmotion.bind(this);\r\n        return selectEmotion\r\n    }\r\n\r\n    JornalInput() {\r\n        return(\r\n            <TextInput\r\n            multiline\r\n            scrollEnabled\r\n            placeholder='Escreva aqui...'\r\n            placeholderTextColor='rgba(255,255,255,0.6)'\r\n            onChangeText={text => this.setState({jornalEntry: text})}\r\n            value={this.state.jornalEntry}\r\n            style={[styles.jornalText, styles.theme]}\r\n            >\r\n            </TextInput>\r\n        )\r\n    }\r\n\r\n    inputCardBody(sectionName, cardBodyStyle, cardBodyContent) {\r\n        if (this.state.selectedEntry === sectionName) {\r\n            if (sectionName == 'Emoções') {\r\n                const [userEmotionGroups, emotionLabels] = mapEmotions(this.props.appState.user.emotions, this.state.selectedEmotionLayout)\r\n                return(\r\n                    <>\r\n                        { userEmotionGroups.map((emotions, index) => (\r\n                            <View key={'emotion-group-' + index} style={{width: '100%', alignItems: 'center', marginVertical: 10}}>\r\n                                { emotionLabels[index] ? <Text style={{fontSize: 15, color: 'white', marginVertical: 8}}>{emotionLabels[index]}</Text> : null }\r\n                                <View key={index} style={[styles.cardRow, cardBodyStyle]}>\r\n                                    {cardBodyContent(emotions)}\r\n                                </View>\r\n                            </View>\r\n                        )) }\r\n                        <EditEmotions\r\n                        {...this.props}\r\n                        {...this.state}\r\n                        setParentState={this.setState.bind(this)}\r\n                        updateUserData={this.updateUserData}\r\n                        setAlertMsg={this.setLoginMsg}\r\n                        />\r\n                    </>\r\n\r\n                )\r\n            } else {\r\n                return(\r\n                    <View style={[styles.cardRow, cardBodyStyle]}>\r\n                        {cardBodyContent}\r\n                    </View>\r\n                )    \r\n            }\r\n        } else {\r\n            return(\r\n                <></>\r\n            )\r\n        }\r\n    }\r\n\r\n    InputCard(sectionName, icon, cardBodyStyle, cardBodyContent) {\r\n        return(\r\n            <View style={[styles.card]} >\r\n                <Pressable style={styles.cardRow} onPress={this.setSelectedEntry(sectionName)} >\r\n                    <Icon name={icon} fill={styles.theme.color+'c'} height={28} width={28} style={styles.entryIcon} />\r\n                    <Text style={styles.entryTitle}> {sectionName} </Text>\r\n                </Pressable>    \r\n                {this.inputCardBody(sectionName, cardBodyStyle, cardBodyContent)}  \r\n            </View>   \r\n        )\r\n    }\r\n\r\n    setSelectedEntry (entry) {\r\n        function setSelected() {\r\n            this.setState( {selectedEntry:  this.state.selectedEntry === entry ? null : entry  } )\r\n        }\r\n        setSelected = setSelected.bind(this);\r\n        return setSelected\r\n    }\r\n\r\n    loginMsg() {\r\n        return(\r\n          <View style={[styles.login.msgBox, this.state.loginMsg ? {} : {height: 0, backgroundColor: 'transparent', borderColor: 'transparent'} ]}>\r\n            <Text style={styles.login.msg}>{this.state.loginMsg}</Text>\r\n          </View>\r\n        )\r\n    }\r\n\r\n    setLoginMsg(msg) {\r\n        this.setState({loginMsg: msg})\r\n        setTimeout( () => this.setState({loginMsg: ''}) , 1000 * 5 )\r\n    }    \r\n\r\n    async initializeEntry() {\r\n        const currentEntry = this.props.route.params.currentEntry\r\n        const user = this.props.appState.user\r\n        switch (currentEntry.type) {\r\n            case 'new':\r\n                console.log('POST ENTRY STATUS: INITIATING BLANK NEW ENTRY! FETCHING LOCATION AND WEATHER DATA...')\r\n                this.setState({\r\n                    date: currentEntry.date,\r\n                    startTime: getTime(),\r\n                    endTime: '',\r\n                    isFetchingLocationOrWeather: true\r\n                })\r\n                await this.checkIfLocationEnabled();\r\n                await this.getCurrentLocation();                    \r\n                await this.fetchWeather()\r\n                this.setState({isFetchingLocationOrWeather: false})\r\n            break;\r\n        \r\n            case 'custom-date':\r\n                console.log('POST ENTRY STATUS: INITIALIZING CUSTOM DATE ENTRY! SETTING DATE TO: ' + currentEntry.date)\r\n                this.setState({\r\n                    date: currentEntry.date,\r\n                    startTime: '',\r\n                    endTime: '',\r\n                })\r\n                break\r\n\r\n            case 'edit':\r\n                const entry = currentEntry.entry\r\n                const currentEmotions = entry.emotions.map(emotion => emotion.name)\r\n                var isSelectedEmotionsNew = {}\r\n                for ( let emotion of user.emotions ) {\r\n                    isSelectedEmotionsNew[emotion.name] = currentEmotions.includes(emotion.name)\r\n                }\r\n\r\n                this.setState({\r\n                    date: entry.date,\r\n                    startTime: entry.startTime,\r\n                    endTime: entry.endTime,\r\n                    createdAt: entry.createdAt,\r\n                    lastEdited: entry.lastEdited,\r\n                    star: entry.star,\r\n                    selectedMood: entry.mood,\r\n                    isSelectedEmotions: isSelectedEmotionsNew,\r\n                    jornalEntry: entry.jornal,\r\n                    address: entry.address,\r\n                    location: entry.location,\r\n                    weather: entry.weather,\r\n                    isMoodUnmarked: false,\r\n                })\r\n                break\r\n    \r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    updateUserData() {\r\n        console.log('UPDATING USER DATA IN \"PostEntryComponent\"...')\r\n        this.setState({isUpdateUserDataLoading: true})\r\n        const user = this.props.appState.user\r\n\r\n        const oldEmotions = Object.keys(this.state.isSelectedEmotions)\r\n        const currentEmotions = user.emotions.map(emotion => emotion.name)\r\n        const newEmotions = currentEmotions.filter(emotion => oldEmotions.includes(emotion))\r\n\r\n        const newEmotionsSelected = buildIsSelectedEmotions(newEmotions)\r\n        oldEmotions.forEach(emotion => { \r\n            if (currentEmotions.includes(emotion)) \r\n                newEmotionsSelected[emotion] = this.state.isSelectedEmotions[emotion]\r\n        })\r\n\r\n        this.setState({\r\n            // user: user,\r\n            isSelectedEmotions: newEmotionsSelected,\r\n            isUpdateUserDataLoading: false\r\n        })\r\n    }\r\n\r\n    saveButton() {\r\n        const isDataLoading = (\r\n            this.state.isFetchingLocationOrWeather |\r\n            this.state.isPostEntryLoading |\r\n            this.state.isSaveEmotionLoading |\r\n            this.state.isDeleteEmotionLoading |\r\n            this.props.appState.isUserDataSyncing |\r\n            this.state.isUpdateUserDataLoading\r\n        )\r\n        var color;\r\n        switch (true) {\r\n            case this.state.isFetchingLocationOrWeather:\r\n                color = 'brown'\r\n                break;\r\n        \r\n            case this.state.isPostEntryLoading:\r\n                color = 'black'\r\n                break;\r\n            case this.state.isSaveEmotionLoading:\r\n                color = 'green'\r\n                break;\r\n            case this.state.isDeleteEmotionLoading:\r\n                color = 'red'\r\n                break;\r\n            case this.props.appState.isUserDataSyncing:\r\n                color = 'blue'\r\n                break;\r\n            case this.state.isUpdateUserDataLoading:\r\n                color = 'green'\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        return(\r\n            <Pressable\r\n            onPress={this.onSaveButtonPress}\r\n            disabled={isDataLoading}\r\n            style={styles.saveButton}\r\n            >\r\n                { isDataLoading ? (\r\n                    <ActivityIndicator size='small' color={color} />\r\n                ) : (\r\n                    <Text style={styles.saveButtonLabel}> Salvar </Text>\r\n                ) }\r\n            </Pressable>\r\n        )\r\n    }\r\n\r\n    onSaveButtonPress() {\r\n        if (!this.state.selectedMood) {\r\n            this.setLoginMsg('Adicione uma avaliação para continuar.')\r\n            this.setState({selectedEntry: 'Avaliação'})\r\n            return\r\n        }\r\n        const currentEntry = this.props.route.params.currentEntry\r\n        var lastEdited = getTime()\r\n        var createdAt, endTime\r\n        switch (currentEntry.type) {\r\n            case 'new':\r\n                endTime = lastEdited\r\n                createdAt = lastEdited\r\n                break;\r\n            case 'custom-date':\r\n                endTime = this.state.endTime // Returns empty string ''.\r\n                createdAt = lastEdited\r\n                break\r\n            case 'edit':\r\n                endTime = this.state.endTime\r\n                createdAt = this.state.createdAt\r\n                break\r\n            default:\r\n                break;\r\n        }\r\n        const newEntryPost = {\r\n            date: this.state.date,\r\n            startTime: this.state.startTime,\r\n            endTime: endTime,\r\n            createdAt: createdAt,\r\n            lastEdited: [ ...this.state.lastEdited, {date: Today(), time: lastEdited}],\r\n            star: this.state.star,\r\n            mood: this.state.selectedMood,\r\n            emotions: this.props.appState.user.emotions.filter( emotion => this.state.isSelectedEmotions[emotion.name] ),\r\n            jornal: this.state.jornalEntry,\r\n            address: this.state.address,\r\n            location: this.state.location,\r\n            weather: this.state.weather,\r\n        }\r\n        this.postNewEntryAsync(newEntryPost)\r\n    }\r\n    \r\n    async postNewEntryAsync(newEntry) {\r\n        this.setState({ isPostEntryLoading: true });\r\n        var user = this.props.appState.user;\r\n        const currentEntry = this.props.route.params.currentEntry\r\n        const editMode = currentEntry.type === 'edit';\r\n        try {\r\n            console.log('POST ENTRY STATUS: Started...')\r\n            var postUserEntryResult = {ok: false, status: '999', statusText: 'Post not fetched yet.'}\r\n            const postUserEntryOpts = { \r\n                method: editMode? 'PUT' : 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify( newEntry ),\r\n            }\r\n            // var postUserEntryResult = await fetch('http://localhost:3000/Users/' + info.username + '/entries', postUserEntryOpts);\r\n            postUserEntryResult = await fetch( corsURI + appServerURI + 'Users/' + user.username + '/entries' + (editMode ? '/'+currentEntry.entry._id : ''), postUserEntryOpts);\r\n            const postUserEntryStatus = 'Status: ' + postUserEntryResult.status + ', ' + postUserEntryResult.statusText\r\n\r\n            if (postUserEntryResult.ok) {\r\n                console.log('POST ENTRY STATUS: Successful.')\r\n                console.log(postUserEntryStatus)\r\n                    \r\n            } else {\r\n                console.log('POST ENTRY STATUS: Failed. Throwing error...')\r\n                throw new Error(postUserEntryStatus)\r\n            }\r\n\r\n        } catch (error) {\r\n            this.setLoginMsg('Erro no servidor. Tente novamente...')\r\n            console.log('Erro capturado:')\r\n            console.log(error);\r\n\r\n        } finally {\r\n            console.log('POST ENTRY STATUS: Finished.')\r\n            this.setState({ isPostEntryLoading: false });\r\n            if (postUserEntryResult.ok) {\r\n                console.log('proceding to SYNC USER DATA IN RESPONSE TO SUCCESSFUL USER ENTRY POST... ')\r\n                this.props.route.params.syncUserData()\r\n                this.props.route.params.setMainScreenState({\r\n                    selectedEntryId: null,\r\n                    selectedDate: currentEntry.type == 'new' ? Today() : this.props.route.params.getMainScreenState().selectedDate,\r\n                })\r\n                this.props.navigation.navigate('Entrances', {} )\r\n            }\r\n        }\r\n    }\r\n\r\n    async deleteEmotion(emotion) {\r\n        this.setState({ isDeleteEmotionLoading: true });\r\n        var user = this.props.appState.user;\r\n        try {\r\n            console.log('DELETE EMOTION STATUS: Started...')\r\n            var postEmotionResult = {ok: false, status: '999', statusText: 'Post not fetched yet.'}\r\n            const postUserEntryOpts = { \r\n                method: 'DELETE',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n            }\r\n            // var postUserEntryResult = await fetch('http://localhost:3000/Users/' + info.username + '/emotions', postUserEntryOpts);\r\n            postEmotionResult = await fetch( corsURI + appServerURI + 'Users/' + user.username + '/emotions/' + emotion, postUserEntryOpts);\r\n            const postEmotionStatus = 'Status: ' + postEmotionResult.status + ', ' + postEmotionResult.statusText\r\n\r\n            if (postEmotionResult.ok) {\r\n                console.log('DELETE EMOTION STATUS: Successful.')\r\n                console.log(postEmotionStatus)\r\n                    \r\n            } else {\r\n                console.log('DELETE EMOTION STATUS: Failed. Throwing error...')\r\n                throw new Error(postEmotionStatus)\r\n            }\r\n\r\n        } catch (error) {\r\n            this.setLoginMsg('Erro no servidor. Tente novamente...')\r\n            console.log('Erro capturado:')\r\n            console.log(error);\r\n\r\n        } finally {\r\n            console.log('DELETE EMOTION STATUS: Finished.')\r\n            this.setState({ isDeleteEmotionLoading: false });\r\n            if (postEmotionResult.ok) {\r\n                // this.setState({isUserDataSyncing: true})\r\n                await this.props.route.params.syncUserData();\r\n                // this.setState({isUserDataSyncing: false})\r\n                this.updateUserData();\r\n            }\r\n        }\r\n \r\n    }\r\n\r\n    async fetchWeather() {\r\n\r\n        try {\r\n            if (this.state.userCoordinates) {\r\n\r\n                console.log('FETCH WEATHER STATUS: STARTED...!')\r\n                const coords = this.state.userCoordinates\r\n                const lat = coords.latitude\r\n                const lng = coords.longitude\r\n                \r\n                await fetch(\r\n                    `https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lng}&APPID=${OpenWeatherMapAPI.KEY}&units=metric`\r\n                )\r\n                .then(res => {\r\n                    const resStatus = 'Status: ' + res.status + ', Status Text: ' + res.statusText\r\n                    if (!res.ok) \r\n                        throw new Error(resStatus)\r\n                    else {\r\n                        return res.json()\r\n                    }\r\n                })\r\n                .then(weather => {\r\n                    console.log('FETCH WEATHER STATUS: SUCCESSFUL!')\r\n                    // console.log(weather);\r\n\r\n                    const weatherInfo = {\r\n                        coords: weather.coord,\r\n                        name: weather.name,\r\n                        weather: weather.weather[0],\r\n                        main: weather.main,\r\n                        clouds: weather.clouds,\r\n                        wind: weather.wind,\r\n                        visibility: weather.visibility,\r\n                    }\r\n\r\n                    this.setState({weather: weatherInfo})\r\n                });\r\n        \r\n            } else {\r\n            // this.setLoginMsg('Não foi possível obter as condições do tempo. Tente reabrir essa tela...')\r\n            console.log('FETCH WEATHER STATUS: UNABLE TO START! USER POSITION NOT AVAILABLE.')\r\n            }\r\n\r\n        } catch (error) {\r\n            this.setLoginMsg('Não foi possível obter as condições do tempo. Tente reabrir essa tela...')\r\n            console.log('FETCH WEATHER STATUS: ERROR! LOGGING ERROR...')\r\n            console.log(error)\r\n\r\n        } finally {\r\n            console.log('FETCH WEATHER STATUS: FINISHED!')    \r\n        }\r\n    }\r\n\r\n    // Check if device has location services enabled\r\n    async checkIfLocationEnabled () {\r\n\r\n        try{\r\n            console.log('GEOCODING PROCESS (CHECK): CHECKING IF USER HAS SERVICES ENABLED.' )\r\n            let enabled = await Location.hasServicesEnabledAsync();            \r\n\r\n            if (!enabled) {\r\n                console.log('GEOCODING PROCESS (CHECK): CHECKED! USER DOES NOT HAVE SERVICES ENABLED.' )\r\n                this.setLoginMsg('Não foi possível obter sua localização. Habilite o serviço de localização para associar um endereço a essa entrada...')\r\n            } else {\r\n                console.log('GEOCODING PROCESS (CHECK): CHECKED! USER HAS SERVICES ENABLED.')\r\n            }\r\n\r\n        } catch(error) {\r\n            this.setLoginMsg('Não foi possível conferir se o serviço de localização está ativado. Tente reabrir essa tela...')\r\n            console.log(\"GEOCODING PROCESS (CHECK): ERROR IN SERVICES PERMISSION CHECK! COULD'NT CHECK IF USER HAS SERVICES ENABLED.\")\r\n        \r\n        } finally {\r\n            console.log(\"GEOCODING PROCESS (CHECK): FINISHED!\")\r\n        }\r\n    };\r\n\r\n    // Check for permission, get current user position and use reverse geocoding for user coordinates\r\n    async getCurrentLocation() {\r\n\r\n        try {\r\n\r\n            if (this.props.route.params.getMainScreenState().locationPermission === 'granted') {\r\n                console.log('GEOCODING PROCESS (PERMISSION): PERMISSION ALREADY GRANTED. SKIPPING REQUEST...')\r\n            } else {\r\n                console.log('GEOCODING PROCESS (PERMISSION): REQUESTING PERMISSION ASYNC...')\r\n                let { status } = await Location.requestForegroundPermissionsAsync()\r\n                // let { status } = await Location.requestBackgroundPermissionsAsync()        \r\n                this.props.route.params.setMainScreenState({locationPermission: status})\r\n    \r\n                if (status !== 'granted') {\r\n                    console.log('GEOCODING PROCESS (PERMISSION): PERMISSION NOT GRANTED!')\r\n                    this.setLoginMsg('Permissão de localização não concedida. Permita que o app use os serviços de localização para associar um endereço a essa entrada...')\r\n                    return \r\n    \r\n                } else {\r\n                    console.log('GEOCODING PROCESS (PERMISSION): PERMISSION GRANTED!')\r\n                }\r\n            }\r\n\r\n            console.log('GEOCODING PROCESS (REQUEST): GETTING CURRENT USER POSITION ASYNC...')\r\n            let { coords } = await Location.getCurrentPositionAsync();\r\n            \r\n            if (coords) {   \r\n                const { latitude, longitude } = coords;\r\n                this.setState({userCoordinates: coords})\r\n                console.log(`GEOCODING PROCESS (REQUEST): CURRENT USER POSITION FOUND... Latitude: ${latitude}, Logitude: ${longitude}`)\r\n                console.log('GEOCODING PROCESS (REVERSE GEOCODING): REVERSE GEOCODE ASYNC...')  \r\n                let response = await Location.reverseGeocodeAsync({ latitude, longitude });\r\n        \r\n                if (response) {\r\n                    this.setState({ address: formattedAddress(response[0]), location: { position: coords, address: response[0] } })\r\n                    console.log('GEOCODING PROCESS (REVERSE GEOCODING): REVERSE GEOCODE SUCCESSFUL! UPDATING STATE...')  \r\n\r\n                } else {\r\n                    console.log('GEOCODING PROCESS (REVERSE GEOCODING): REVERSE GEOCODE FAILED! LOGGING RESPONSE...')  \r\n                    console.log(response)\r\n                }\r\n        \r\n            } else {\r\n                console.log(`GEOCODING PROCESS (REVERSE GEOCODING): USER POSITION NOT FOUND! UNABLE TO PROCEED TO REVERSE GEOCODING...`)\r\n            }\r\n\r\n        } catch (error) {\r\n            this.setLoginMsg('Não foi possível obter a localização atual. Tente reabrir essa tela...')\r\n            console.log('GEOCODING PROCESS: ERROR IN USER POSITION REQUEST! LOGGING ERROR...')\r\n            console.log(error)\r\n        \r\n        } finally {\r\n            console.log('GEOCODING PROCESS: USER POSITION REQUEST FINISHED. PROCEEDING TO FETCH WEATHER DATA...')\r\n        }\r\n    };\r\n\r\n    setFontColor() {\r\n        const fontColorDark = this.props.appState.user.settings.fontColorDark\r\n        const fontColor = fontColorDark ? '#000' : '#fff'\r\n        const altFontColor = fontColorDark ? '#fff' : '#000'\r\n        for (let style of ['theme', 'entryTitle']) {\r\n            styles[style] = { ...styles[style], color: fontColor }\r\n        }\r\n        styles.altTheme.color = altFontColor\r\n        styles.altTheme.backgroundColor = altFontColor\r\n    }    \r\n\r\n    render() {\r\n        console.log('Rendering \"PostEntry\" component...')\r\n        this.setFontColor()\r\n        const settings = this.props.appState.user.settings\r\n        const backgroundImage = settings.backgroundImage\r\n        const imgURI =  settings.displayBackgroundImage ? (backgroundImage ? ( settings.enableHighResolution ? backgroundImage.urls.raw : backgroundImage.urls.regular ) : null ) : null\r\n        const backgroundColor = settings.backgroundColor\r\n\r\n        return(\r\n            <ImageBackground source={{'uri' : imgURI}} style={[styles.mainView, {backgroundColor: backgroundColor}]}>\r\n                <ScrollView style={styles.scrollView}>\r\n                    <View style={styles.section}>\r\n                            {this.postEntryHeader()}\r\n                            {this.InputCard('Avaliação', 'smiling-face', {justifyContent: 'space-between'}, this.MoodButtons())}\r\n                            {this.InputCard('Emoções', 'checkmark-square-outline', {flexWrap: 'wrap', justifyContent: 'center'}, this.EmotionButtons)}\r\n                            {this.InputCard('Jornal', 'book', {flexDirection: 'column', minHeight: 130}, this.JornalInput())}\r\n                    </View>\r\n                </ScrollView>  \r\n                <this.saveButton />\r\n                {this.loginMsg()}\r\n            </ImageBackground>\r\n        )    \r\n    }\r\n}","import { StatusBar } from 'expo-status-bar';\r\nvar styles = {\r\n    login: {\r\n        mainView: {\r\n            flex: 1,\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n            // paddingHorizontal: Platform.OS != 'web' ? '5%' : '5%',\r\n        },\r\n        titleView: {\r\n            flexDirection: 'row',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n            minHeight: 50,\r\n            marginTop: 30,\r\n        },\r\n        title: {\r\n            fontSize: 30,\r\n            fontWeight: 'bold',\r\n            color: 'white',\r\n            alignSelf: 'center',\r\n        },\r\n        titleIcon: {\r\n            width: 30,\r\n            height: 30,\r\n            marginLeft: 6,\r\n            paddingTop: 3,\r\n        },\r\n        card: {\r\n            height: 440,\r\n            minHeight: 430,\r\n            width: 350,\r\n            paddingHorizontal: 10,\r\n            paddingVertical: 10,\r\n            borderWidth: 4,\r\n            borderRadius: 10,\r\n            borderColor: 'rgba(0,0,0,0.1)',\r\n            justifyContent: 'space-between',\r\n            backgroundColor: 'azure',\r\n        },\r\n        cardHeader: {\r\n            height: 90,\r\n            width: '100%',\r\n            justifyContent: 'center'\r\n            // borderWidth: 1\r\n        },\r\n        cardTitle: {\r\n            position: 'relative',\r\n            left: 5,\r\n            fontSize: 24,\r\n            fontWeight: 'bold',\r\n            color: 'black',\r\n        },\r\n        cardSection: {\r\n            height: 85,\r\n            justifyContent: 'space-between',\r\n            alignItems: 'center',\r\n            // borderWidth: 1\r\n        },\r\n        loadingIcon: {\r\n            alignSelf: 'center'\r\n        },\r\n        inputField: {\r\n            minHeight: 40,\r\n            width: '100%',\r\n            paddingLeft: 10,\r\n            fontSize: 14,\r\n            borderWidth: 1,\r\n            borderRadius: 5,\r\n            borderColor: 'rgba(0,0,0,0.1)',\r\n            backgroundColor: 'white'\r\n        },\r\n        button: {\r\n            height: 40,\r\n            width: '100%',\r\n            textAlign: 'center',\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n            borderWidth: 1,\r\n            borderRadius: 5,\r\n            borderColor: 'rgba(0,0,0,0)',\r\n            backgroundColor: 'lightblue',        \r\n        },\r\n        buttonLabel: {\r\n            fontSize: 15,\r\n            fontWeight: 'bold',\r\n            color: 'black',\r\n        },\r\n        text: {\r\n            fontSize: 15,\r\n            textAlign: 'center',\r\n        },\r\n        msgBox: {\r\n            width: 300,\r\n            paddingVertical: 5,\r\n            paddingHorizontal: 3,\r\n            justifyContent: 'center',\r\n            backgroundColor: 'rgb(30,30,30)',\r\n            borderWidth: 1,\r\n            borderColor: 'rgb(40,40,40)',\r\n            \r\n        },\r\n        msg: {\r\n            textAlign: 'center',\r\n            color: 'white',\r\n            // paddingHorizontal: 20,\r\n        },\r\n    }\r\n};\r\nexport default styles;","import { Icon } from 'react-native-eva-icons'\r\n\r\nimport React, { Component } from 'react';\r\nimport { View, Text, ImageBackground, TextInput, Pressable, Platform, ActivityIndicator, Switch, Alert } from 'react-native';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport NetInfo from \"@react-native-community/netinfo\";\r\nimport * as Device from 'expo-device';\r\n\r\nimport styles from '../styles/loginStyles'\r\nconst defaultEmotions = require('../shared/emotionsConfig')\r\nconst userScheme = {\r\n  emotions: defaultEmotions,\r\n  entries: [],\r\n  layout: 'grid',\r\n  settings: {\r\n    backgroundColor: 'lightblue',\r\n    backgroundImage: null,\r\n    displayBackgroundImage: false,\r\n    enableHighResolution: false,\r\n    fontColorDark: false,\r\n  }\r\n}\r\n\r\n// App server connection settings\r\nconst corsURI = Platform.OS == 'web' ? 'https://morning-journey-78874.herokuapp.com/' : ''\r\nconst appServerURI = 'https://mood-tracker-server.herokuapp.com/'\r\n\r\n// Email Validation settings\r\n\r\n// const Verifier = require('email-verifier')\r\nconst emailVerification_APIKEY = \"at_TPKXmSQnStekLzTbstLO9GyHvd7or\"\r\n// let verifier = new Verifier(emailVerification_APIKEY);\r\nconst emailVerification_APIURI = (emailAddress) => `https://emailverification.whoisxmlapi.com/api/v2?apiKey=${emailVerification_APIKEY}&emailAddress=${emailAddress}`\r\nconst falseParams = ['validateDNS', 'checkCatchAll', 'checkFree', 'checkDisposable']\r\n\r\nfunction appendValueToUri(uri, params, value) {\r\n  for (let param of params) {\r\n    uri += '&' + param + '=' + value\r\n  }\r\n  return uri\r\n}\r\n\r\nasync function validateEmail(email) {\r\n  console.log('EMAIL VERIFICATION STATUS: Fetching email verification api...')\r\n  try {\r\n    var uri = emailVerification_APIURI(email)\r\n    uri = appendValueToUri(uri, falseParams, '0')\r\n    var emailStatus = {ok: false, status: 'Email não verificado.'}\r\n    const apiResp = await fetch( uri , { method: 'GET' } )\r\n  \r\n    if (apiResp.ok) {\r\n  \r\n      console.log('EMAIL VERIFICATION STATUS: Api fetch request successful.')\r\n      const apiRespJson = await apiResp.json()\r\n  \r\n      if ( apiRespJson.formatCheck=='false' ) {\r\n        emailStatus.status = 'Email inválido.'\r\n      } else if ( apiRespJson.smtpCheck=='false' ) {\r\n        emailStatus.status = 'Email não existe.'\r\n      } else {\r\n        emailStatus = {ok: true, status: 'Email válido.'}\r\n      }\r\n      \r\n      return emailStatus\r\n  \r\n    } else {\r\n      console.log('EMAIL VERIFICATION STATUS: Api fetch request failed. Throwing error...')\r\n      throw new Error('Status: ' + apiResp.status + ', Status Text: ' + apiResp.statusText)\r\n    }  \r\n\r\n  } finally {\r\n    console.log('EMAIL VERIFICATION STATUS: Concluído')\r\n  }\r\n}\r\n\r\nfunction validatePassword(password) {\r\n  console.log('VALIDATING PASSWORD FOR SIGNUP...')\r\n  const hasMinLength = password.length > 6\r\n  var res\r\n  if (!hasMinLength) {\r\n    res = {ok: false, status: 'A senha deve ter no mínimo 6 caractéres.'}\r\n  } else {\r\n    res = {ok: true, status: 'Senha válida.'}\r\n  }\r\n  return res\r\n}\r\n\r\nasync function fetchUsers() {\r\n  var UsersResponse = await fetch( corsURI + appServerURI + 'Users', { method: 'GET' });\r\n  const UsersStatus = 'Status: ' + UsersResponse.status + ', ' + 'Status Text: ' + UsersResponse.statusText\r\n  if (UsersResponse.ok) {\r\n    console.log('fetch GET request for users data at signin successful.');\r\n    console.log(UsersStatus)\r\n\r\n    const Users = await UsersResponse.json();\r\n    return Users\r\n  } else {\r\n    console.log('fetch GET request for users data at signin failed. Printing fetch response...')\r\n    console.log(JSON.stringify(UsersResponse))\r\n    console.log('Returning null...')\r\n    return null\r\n  }\r\n}\r\n\r\nasync function registerLocallyIfUserIsNewToDevice(user) {\r\n  var localAuthInfo = await AsyncStorage.getItem('LocalAuthenticationInfo')\r\n  localAuthInfo = JSON.parse(localAuthInfo)  \r\n  if ( !localAuthInfo.users.filter(localUser => localUser._id == user._id)[0] ) {\r\n    console.log('SIGNIN STATUS: Primeiro login do usuário nesse aparelho. Imprimindo informações atuais e adicionando informações do usuário no armazenamento local...')\r\n    console.log(localAuthInfo)\r\n    const updatedLocalAuthInfo = {\r\n      ...localAuthInfo,\r\n      users: [ \r\n        ...localAuthInfo.users,\r\n        {\r\n          _id: user._id,\r\n          username: user.username,\r\n          email: user.email,\r\n          password: user.password,\r\n        }\r\n      ]\r\n    }\r\n    await AsyncStorage.setItem('LocalAuthenticationInfo', JSON.stringify(updatedLocalAuthInfo))\r\n    console.log('SIGNIN STATUS: Informações do usuário adicionadas no aparelho. Imprimindo informações locais de autenticação atualizadas...')\r\n    console.log(JSON.stringify(updatedLocalAuthInfo))\r\n  } else {\r\n    console.log('SIGNIN STATUS: Informações do usuário já registradas nesse aparelho. Pulando registro do usuário no armazenamento local...')\r\n  } \r\n}\r\n\r\nexport async function keepUserConnectionAlive(id) {\r\n  var localAuthInfo = await AsyncStorage.getItem('LocalAuthenticationInfo')\r\n  localAuthInfo = JSON.parse(localAuthInfo)\r\n\r\n  if ( localAuthInfo.keepConnected.userId != id ) {\r\n    console.log(`SIGNIN STATUS: Usuário optou por ${id ? 'manter conexão ativa. Configurando conexão ativa para o usuário...' : 'desativar conexão ativa. Desativando...' }`)\r\n    const updatedLocalAuthInfo = {\r\n      ...localAuthInfo,\r\n      keepConnected: {\r\n        status: id ? true : false,\r\n        userId: id\r\n      }\r\n    }\r\n    await AsyncStorage.setItem('LocalAuthenticationInfo', JSON.stringify(updatedLocalAuthInfo))\r\n    console.log('SIGNIN STATUS: Conexão ativa configurada! Imprimindo nova configuração de autenticação local...')\r\n    const updatedAuthInfo = await AsyncStorage.getItem('LocalAuthenticationInfo')\r\n    console.log(JSON.parse(updatedAuthInfo))  \r\n  } else {\r\n    console.log('SIGNIN STATUS: Fazendo login via conexã ativa. Pulando configuração de conexão ativa para o usuário...')\r\n  }\r\n\r\n}\r\n\r\nclass LoginScreen extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      userInfo: {\r\n        password: '',\r\n        email: '',\r\n        username: '',\r\n      },\r\n      keepConnected: true,\r\n      loginMsg: '',\r\n      isUserAuth: false,\r\n      isDataLoading: false,\r\n    }\r\n    this.onChangeText = this.onChangeText.bind(this);\r\n    this.submitButton = this.submitButton.bind(this);\r\n    this.loginMsg = this.loginMsg.bind(this);\r\n    this.setLoginMsg = this.setLoginMsg.bind(this);\r\n    this.onSignIn = this.onSignIn.bind(this);\r\n    this.onSignUp = this.onSignUp.bind(this);\r\n    this.LoginScreen = this.LoginScreen.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log('\"LoginScreen\" component did mount...')\r\n    this.restoreUserToken()\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    console.log('\"LoginScreen\" component will unmount...')\r\n  }\r\n\r\n  LoginIcon() {  \r\n    if (this.state.isDataLoading) {\r\n      return <ActivityIndicator color='#000000' />\r\n    } else {\r\n      return <Icon name='log-in-outline' animation='pulse' fill='#000' width={30} height={30} />\r\n    }\r\n  }\r\n\r\n  setLoginMsg(msg) {\r\n    this.setState({loginMsg: msg})\r\n    setTimeout( () => this.setState({loginMsg: ''}) , 1000 * 5 )\r\n  }\r\n\r\n  loginMsg() {\r\n      return(\r\n        <View style={[styles.login.msgBox, this.state.loginMsg ? {} : {backgroundColor: 'transparent', borderColor: 'transparent'} ]}>\r\n          <Text style={styles.login.msg}>{this.state.loginMsg}</Text>\r\n        </View>\r\n      )\r\n  }\r\n\r\n  onChangeText(textField) {\r\n    function setField(text) {\r\n      this.setState( { userInfo: { ...this.state.userInfo, [textField] : text}} )\r\n    }\r\n    setField = setField.bind(this);\r\n    return setField\r\n  }\r\n\r\n  submitButton(sign) {\r\n    const signIn = sign == 'signin'\r\n    return(\r\n      <Pressable\r\n      disabled={this.state.isDataLoading}\r\n      onPress={signIn ? this.onSignIn : this.onSignUp}\r\n      style={[styles.login.button]}\r\n      >\r\n        <Text style={styles.login.buttonLabel}>{ signIn ? 'Entrar' : 'Cadastrar' }</Text>\r\n      </Pressable>\r\n    )\r\n  }\r\n\r\n  LoginScreen = () => {\r\n    const settings = this.state.userInfo.settings\r\n    var imgURI, backgroundColor, backgroundImage\r\n    if (this.state.isUserAuth) {\r\n      backgroundColor = settings.backgroundColor\r\n      backgroundImage = settings.backgroundImage\r\n      if (backgroundImage) {\r\n        imgURI = ( settings.enableHighResolution ? backgroundImage.urls.raw : backgroundImage.urls.regular )\r\n      } else {\r\n        imgURI = null\r\n      }\r\n    } else {\r\n      imgURI = null\r\n      backgroundColor = 'lightblue'     \r\n    }\r\n\r\n    return(\r\n      <ImageBackground source={{uri: imgURI}} style={[styles.login.mainView ,{backgroundColor: backgroundColor, justifyContent: 'space-evenly'}]}>\r\n        \r\n        <View style={styles.login.titleView}>\r\n          <Text style={styles.login.title}>Mood Tracker</Text>\r\n        </View>\r\n\r\n        <View style={styles.login.card}>\r\n          <View style={styles.login.cardHeader} >\r\n            <Text style={styles.login.cardTitle}>Entrar</Text>\r\n          </View>\r\n          <View style={styles.login.cardSection}>\r\n            <TextInput\r\n            placeholder='Email'\r\n            textContentType='emailAddress'\r\n            style={styles.login.inputField}\r\n            onChangeText={this.onChangeText('email')}\r\n            autoComplete='email'\r\n            importantForAutofill='yes'\r\n            >\r\n            </TextInput>\r\n            <TextInput\r\n            placeholder='Senha'\r\n            textContentType='password'\r\n            secureTextEntry={true}\r\n            style={styles.login.inputField}\r\n            onChangeText={this.onChangeText('password')}\r\n            autoComplete='password'\r\n            importantForAutofill='yes'\r\n            >\r\n            </TextInput>\r\n          </View>\r\n          <View style={[styles.login.cardSection, {height: 138}]}>\r\n            {this.submitButton('signin')}\r\n            {this.submitButton('signup')}\r\n            <View style={{flexDirection: 'row', height: 48, alignSelf: 'stretch', alignItems: 'center', justifyContent: 'flex-end'}}>\r\n              <Text style={{marginRight: Platform.OS=='web' ? 10 : null }}>Manter-me conectado</Text>\r\n              <Switch\r\n                disabled={this.state.isDataLoading}\r\n                trackColor={{ false: \"#767577\", true: \"#81b0ff\" }}\r\n                thumbColor={this.state.keepConnected ? \"#f4f3f4\" : \"#f4f3f4\"}\r\n                ios_backgroundColor=\"#3e3e3e\" \r\n                onValueChange={() => this.setState({keepConnected: !this.state.keepConnected})}\r\n                value={this.state.keepConnected}\r\n              />\r\n            </View>\r\n          </View>\r\n          <View style={[styles.login.cardSection, {height: 80, justifyContent: 'center'}]}>\r\n            {this.LoginIcon()}\r\n          </View>\r\n        </View>\r\n\r\n        {this.loginMsg()}\r\n\r\n      </ImageBackground>\r\n    )\r\n  }\r\n\r\n  isInputEmpty() {\r\n    if (!this.state.userInfo.email) {\r\n      const errMsg = 'Insira um endereço de email.'\r\n      this.setLoginMsg(errMsg)\r\n      console.log('SIGNIN STATUS: ' + errMsg)\r\n      return true\r\n    } else if (!this.state.userInfo.password) {\r\n      const errMsg = 'Insira uma senha.'\r\n      this.setLoginMsg(errMsg)\r\n      console.log('SIGNIN STATUS: ' + errMsg)\r\n      return true\r\n    } else return false\r\n  }\r\n\r\n  async restoreUserToken() {\r\n    try {\r\n      console.log('RESTORE USER TOKE STATUS: STARTED...')\r\n      var localAuthInfo = await AsyncStorage.getItem('LocalAuthenticationInfo')\r\n      \r\n      if (localAuthInfo) {\r\n        console.log('RESTORE USER TOKEN STATUS: LOCAL AUTH INFO ALREADY CONFIGURED. LOGGING CURRENT VALUE...')\r\n        localAuthInfo = JSON.parse(localAuthInfo)\r\n        console.log(localAuthInfo)\r\n\r\n        if (localAuthInfo.keepConnected.status) {\r\n          console.log(`RESTORE USER TOKEN STATUS: USER CONNECTION IS ALIVE FOR USER ID: ${localAuthInfo.keepConnected.userId}. PROCEDING TO SIGNIN...`)\r\n          const user = localAuthInfo.users.filter(user => user._id == localAuthInfo.keepConnected.userId)[0]\r\n          this.setState({\r\n            userInfo: {\r\n              username: user.username,\r\n              email: user.email,\r\n              password: user.password,  \r\n            }\r\n          })\r\n          this.onSignIn()\r\n        }\r\n\r\n        else {\r\n          console.log('RESTORE USER TOKEN STATUS: NO USER CONNECTION ALIVE. PROCEEDING TO SIGNIN/SIGNUP ...')\r\n        }\r\n\r\n      } else {\r\n        console.log('RESTORE USER TOKEN STATUS: NO LOCAL AUTH INFO CONFIGURED IN THIS DEVICE. SETTING DEVICE LOCAL AUTH INFO FOR THE FIRST TIME...')\r\n\r\n        var DEVICE_IP_ADDRESS\r\n        NetInfo.fetch(\"wifi\").then(state => {\r\n          DEVICE_IP_ADDRESS = state.details.ipAddress\r\n          console.log(\"RESTORE USER TOKEN STATUS: IP ADDRESS REQUEST SUCCESSFUL. IP ADDRESS: \" + DEVICE_IP_ADDRESS);\r\n        });\r\n\r\n        const initialLocalAuthInfo = {\r\n          IP_ADDRESS: DEVICE_IP_ADDRESS,\r\n          deviceBrand: Device.brand,\r\n          deviceManufacturer: Device.manufacturer,\r\n          deviceModelName: Device.modelName,\r\n          deviceModelId: Device.modelId,\r\n          deviceOsName: Device.osName,\r\n          deviceOsVersion: Device.osVersion,\r\n          deviceName: Device.deviceName,\r\n          deviceType: await Device.getDeviceTypeAsync(),\r\n          users: [],\r\n          keepConnected: {\r\n            status: false,\r\n            userId: null\r\n          }\r\n        }\r\n        console.log('RESTORE USER TOKEN STATUS: LOGGING NEW LOCAL AUTH INFO...')\r\n        console.log(initialLocalAuthInfo)\r\n        await AsyncStorage.setItem('LocalAuthenticationInfo', JSON.stringify(initialLocalAuthInfo))\r\n        console.log('RESTORE USER TOKEN STATUS: DEVICE LOCAL AUTH INFO CONFIGURED FOR THE FIRST TIME. PROCEEDING TO SIGNIN/SIGNUP ...')\r\n      }\r\n\r\n    } catch(error) {\r\n      console.log('RESTORE USER TOKEN STATUS: ERROR. LOGGING ERROR...')\r\n      console.log(error)\r\n    }\r\n  }  \r\n\r\n  async onSignIn() {\r\n\r\n    console.log('SIGNIN STATUS: Started...')\r\n    var info = this.state.userInfo;\r\n    info.email = info.email.trim()\r\n    this.setState({ isDataLoading: true });\r\n\r\n    try {\r\n\r\n      if (this.isInputEmpty()) return\r\n\r\n      var UsersResult = await fetch( corsURI + appServerURI + 'Users', { method: 'GET' });\r\n      const UsersStatus = 'Status: ' + UsersResult.status + ', ' + 'Status Text: ' + UsersResult.statusText\r\n      if (UsersResult.ok) {\r\n        console.log('fetch GET request for users data at signin successful.');\r\n        console.log(UsersStatus)\r\n      } else {\r\n        console.log('fetch GET request for users data at signin failed. Printing fetch response...')\r\n        console.log(JSON.stringify(UsersResult))\r\n        console.log('Throwing error...')\r\n        throw new Error(UsersStatus)\r\n      }\r\n\r\n      const Users = await UsersResult.json();\r\n      const user = Users.filter((user) => user.email === info.email)[0]\r\n      \r\n      if ( user ) {          \r\n        \r\n        if ( user.password === info.password ) {\r\n\r\n          await registerLocallyIfUserIsNewToDevice(user)\r\n\r\n          if (this.state.keepConnected) {\r\n            await keepUserConnectionAlive(user._id)\r\n          }\r\n\r\n          this.setState( {isUserAuth: true, userInfo: user} )\r\n          const successMsg = 'Login realizado com sucesso!'\r\n          this.setLoginMsg(successMsg)\r\n          console.log('SIGNIN STATUS: Sucesso.')\r\n\r\n        } else {\r\n          const errMsg = 'Senha incorreta.'\r\n          this.setLoginMsg(errMsg)\r\n          console.log('SIGNIN STATUS: ' + errMsg);\r\n        }\r\n\r\n      } else {\r\n        const errMsg = 'Email não cadastrado!'\r\n        this.setLoginMsg(errMsg)\r\n        console.log('SIGNIN STATUS: ' + errMsg)\r\n      }\r\n\r\n    } catch (error) {\r\n      const errMsg = 'Erro no servidor! Tente novamente...'\r\n      this.setLoginMsg(errMsg)\r\n      console.log('Error catched in fetch GET request for users data at signin. Printing Error...')\r\n      console.log('SIGNIN STATUS:' + 'Erro capturado. Imprimindo erro...')\r\n      console.log(error);\r\n\r\n    } finally {\r\n      this.setState({ isDataLoading: false });\r\n      console.log('SIGNIN STATUS: Concluido.')\r\n      if (this.state.isUserAuth) {\r\n        console.log('User authenticated. Navigating to \"HomeScreen\"...')\r\n        this.props.setAppState({isUserAuth: true, user: this.state.userInfo})\r\n        // Parent class component method that authenticates the user and redirects to entrances screen.\r\n      }\r\n    }\r\n  }\r\n\r\n  async onSignUp() {\r\n\r\n    console.log('SIGNUP STATUS: started...')\r\n    var info = this.state.userInfo;\r\n    info.email = info.email.trim()\r\n    this.setState({ isDataLoading: true });\r\n    \r\n    try {\r\n\r\n      var postUserResult = {ok: false}\r\n      if (this.isInputEmpty()) return\r\n\r\n      // Validating email and password\r\n      const emailValidation = await validateEmail(info.email)\r\n      console.log('SING UP STATUS: ' + emailValidation.status)\r\n      if (!emailValidation.ok) {\r\n          this.setLoginMsg(emailValidation.status)\r\n          return\r\n      }\r\n\r\n      // Checking if email is already registerd\r\n      var UsersResult = await fetch( corsURI + appServerURI + 'Users', { method: 'GET' } );  \r\n      const reqStatus = 'Status: ' + UsersResult.status + ', ' + UsersResult.statusText\r\n      if (UsersResult.ok) {\r\n        console.log('fetch GET request for users data at signup successful.')\r\n        console.log(reqStatus)\r\n      } else {\r\n        console.log('fetch GET request for users data at signup failed. Throwing error...')\r\n        throw new Error(reqStatus)\r\n      }\r\n\r\n      const Users = await UsersResult.json();\r\n      const User = Users.filter((user) => user.email === info.email)[0]\r\n      if ( !User ) {\r\n\r\n        // Validating Password\r\n        const passwordCheck = validatePassword(info.password)\r\n        if (!passwordCheck.ok) {\r\n          console.log('SING UP STATUS: ' + passwordCheck.status)\r\n          this.setLoginMsg(passwordCheck.status)\r\n          return\r\n      }\r\n\r\n        // Registering new user by posting user identification to database\r\n        info.username = info.email.split('@')[0]\r\n        const postUserOpts = {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify({ \r\n            ...info,\r\n            ...userScheme\r\n          })\r\n        }\r\n\r\n        postUserResult = await fetch( corsURI + appServerURI +  'Users/' + info.username, postUserOpts );\r\n        const postUserStatus = 'Status: ' + postUserResult.status + ', ' + postUserResult.statusText\r\n\r\n        if (postUserResult.ok) {\r\n          const successMsg = 'Cadastro realizado com sucesso!'\r\n          this.setLoginMsg(successMsg)\r\n          console.log('fetch POST request for user data at signup successful.')\r\n          console.log(postUserStatus)\r\n          console.log('SING UP STATUS: ' + successMsg)\r\n\r\n        } else {\r\n          console.log('fetch POST request for user data at signup failed. Throwing error...')\r\n          throw new Error(postUserStatus)\r\n        }\r\n\r\n      } else {\r\n        const errMsg = 'Email já cadastrado.'\r\n        this.setLoginMsg(errMsg)\r\n        console.log('SING UP STATUS: ' + errMsg)\r\n      }\r\n\r\n    } catch (error) {\r\n      const errMsg = 'Erro no servidor, tente novamente...'\r\n      this.setLoginMsg(errMsg)\r\n      console.log('SING UP STATUS: Erro capturado. Imprimindo erro...')\r\n      console.log(error);\r\n\r\n    } finally {\r\n      this.setState({ isDataLoading: false })\r\n      console.log('SING UP STATUS: Concluido.')\r\n      if (postUserResult.ok)  this.onSignIn()\r\n    }\r\n  }\r\n\r\n  render() {\r\n\r\n    console.log('Rendering \"LoginScreen\" component...')\r\n    return this.LoginScreen()\r\n  \r\n  }\r\n}\r\n\r\nexport default LoginScreen;","import React, { Component } from 'react';\r\nimport { ImageBackground, View, Text, Pressable, ScrollView, ActivityIndicator, Switch, StatusBar, Platform } from 'react-native';\r\nimport { Icon } from 'react-native-eva-icons';\r\nimport { keepUserConnectionAlive } from './LoginComponent';\r\nimport { capitalize } from './subcomponents/EditEmotions';\r\n\r\nimport NativeIcon from 'react-native-vector-icons/MaterialCommunityIcons';\r\n\r\n// cors-midpoint uri (needed to avoid cors' allow-cross-origin error when fetching in web platforms)\r\nconst corsURI = Platform.OS == 'web' ? 'https://morning-journey-78874.herokuapp.com/' : ''\r\nconst appServerURI = 'https://mood-tracker-server.herokuapp.com/'\r\n\r\nconst colorList = require('../shared/colorList.json')\r\n\r\n// var styles = StyleSheet.create({\r\nvar styles = {\r\n    background: {\r\n    flex: 1,\r\n    paddingTop: StatusBar.currentHeight,\r\n    alignItems: 'center',\r\n    justifyContent: 'space-between',\r\n  },\r\n  foreground: {\r\n    width: 350,\r\n  },\r\n  header: {\r\n    height: 110,\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    // borderWidth: 1,\r\n  },\r\n  settingsRow: {\r\n    height: 60,\r\n    paddingHorizontal: 10,\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    justifyContent: 'space-between',\r\n    borderRadius: 10,\r\n    // borderWidth: 1,\r\n  },\r\n  colorBox: {\r\n    height: 300,\r\n    paddingHorizontal: 0,\r\n    borderColor: 'rgba(200,200,200,0.2)'\r\n  },\r\n  colorRow: {\r\n    width: '100%',\r\n    height: 60,\r\n    paddingHorizontal: 10,\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    justifyContent: 'space-between',\r\n    borderBottomWidth: 1,\r\n    borderColor: 'rgba(200,200,200,0.2)',\r\n    borderRadius: 10,\r\n  },\r\n  colorSquare: {\r\n    // marginRight: 0,\r\n    width: 30,\r\n    height: 30,\r\n    borderRadius: 6,\r\n    borderColor: 'white'\r\n  },\r\n  logout: {\r\n    height: 33,\r\n    width: 85,\r\n    marginTop: 0,\r\n    marginBottom: 20,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    // borderWidth: 1,\r\n    // borderColor: 'red',\r\n  },\r\n  h1: {\r\n    fontSize: 25,\r\n    color: 'white'\r\n  },\r\n  h2: {\r\n    fontSize: 20,\r\n    color: 'white',\r\n  },\r\n  h3: {\r\n    fontSize: 17,\r\n    color: 'white',\r\n  },\r\n  h4: {\r\n    fontSize: 16,\r\n    color: 'white',\r\n  },\r\n}\r\n\r\nfunction blinkButton(setPressed, timeSpan=200) {\r\n  setPressed(true)\r\n  setTimeout(() => {\r\n    setPressed(false)\r\n  }, timeSpan);\r\n}\r\n\r\nexport async function postSettings(settings, username) {\r\n  // fetch post display background image value to user settings in server\r\n  try {\r\n   console.log('POST SETTINGS STATUS: Started...')\r\n   console.log('POST SETTINGS STATUS: LOGGING NEW SETTING VALUES... ')\r\n   console.log(JSON.stringify(settings))\r\n   var postSettingsResult = {ok: false, status: '999', statusText: 'Post not fetched yet.'}\r\n   const postSettingsOpts = { \r\n     method: 'POST',\r\n     headers: {\r\n         'Content-Type': 'application/json',\r\n     },\r\n     body: JSON.stringify( settings ),\r\n   }\r\n   // var postDisplayResult = await fetch('http://localhost:3000/Users/' + this.context.username + '/settings', postColorSettingOpts);\r\n   postSettingsResult = await fetch( `${corsURI + appServerURI}Users/${username}/settings`, postSettingsOpts);\r\n   const postSettingsStatus = 'Status: ' + postSettingsResult.status + ', ' + postSettingsResult.statusText\r\n\r\n   if (postSettingsResult.ok) {\r\n     console.log('POST SETTINGS STATUS: Successful.')\r\n     console.log(postSettingsStatus)\r\n         \r\n   } else {\r\n     console.log('POST SETTINGS STATUS: Failed. Throwing error...')\r\n     throw new Error(postSettingsStatus)\r\n   }\r\n } catch (error) {\r\n   alert('Erro no servidor. Tente novamente...')\r\n   console.log('Erro capturado:')\r\n   console.log(error);\r\n\r\n } finally {\r\n   console.log('POST DISPLAY BACKGROUND IMAGE STATUS: Finished.')\r\n   return postSettingsResult\r\n }\r\n} \r\n\r\nexport default class SettingsScreen extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isBackgroundColorSettingsOpen: false,\r\n      selectedColor: null,\r\n\r\n      isDisplayBackgroundImageLoading: false,\r\n      isChangeFontColorLoading: false,\r\n      isEnableHighResolutionLoading: false,\r\n      isRestoreColorLoading: false,\r\n      isSaveColorLoading: false,\r\n    }\r\n    this.syncUserSettings = this.syncUserSettings.bind(this);\r\n    this.setFontColor = this.setFontColor.bind(this);\r\n    this.setBackgroundColor = this.setBackgroundColor.bind(this);\r\n    this.SettingsScreen = this.SettingsScreen.bind(this);\r\n    this.ScreenSettings = this.ScreenSettings.bind(this);\r\n    this.ChooseImageSection = this.ChooseImageSection.bind(this);\r\n    this.DisplayBackgroundImageSection = this.DisplayBackgroundImageSection.bind(this);\r\n    this.ChangeFontColorSection = this.ChangeFontColorSection.bind(this);\r\n    this.EnableHighResolutionSection = this.EnableHighResolutionSection.bind(this);\r\n    this.ChangeBackgroundColorSection = this.ChangeBackgroundColorSection.bind(this);\r\n    this.ColorOptions = this.ColorOptions.bind(this);\r\n    this.ColorControl = this.ColorControl.bind(this);\r\n    this.onLogoutButtonPress = this.onLogoutButtonPress.bind(this);\r\n    this.onColorButtonPressFor = this.onColorButtonPressFor.bind(this);\r\n    this.onSaveColorButtonPress = this.onSaveColorButtonPress.bind(this);\r\n    this.onChangeFontColorSwitch = this.onChangeFontColorSwitch.bind(this);\r\n    this.ColorRow = this.ColorRow.bind(this);\r\n    this.isLoading = this.isLoading.bind(this);\r\n    this.logoutPressable = this.logoutPressable.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log('\"SettingsScreen\" component did mount')\r\n    this.syncUserSettings()\r\n  }\r\n  componentWillUnmount() {\r\n    console.log('\"SettingsScreen\" component will unmount...')\r\n  }\r\n\r\n  syncUserSettings() {\r\n    console.log('SYNC SETTINGS STATUS: INITIALIZING...')\r\n    this.setFontColor()\r\n    this.setBackgroundColor()\r\n  }\r\n\r\n  setFontColor() {\r\n    const settings = this.props.appState.user.settings\r\n    const fontColor = settings.fontColorDark ? '#000' : '#fff'\r\n    for (let h of ['h1', 'h2', 'h3', 'h4']) {\r\n      styles[h] = { ...styles[h], color: fontColor }\r\n    }\r\n  }\r\n\r\n  setBackgroundColor() {\r\n    const settings = this.props.appState.user.settings\r\n    this.setState({\r\n      selectedColor: settings.backgroundColor,\r\n    })\r\n    this.props.navigation.setParams({selectedColor: settings.backgroundColor})  // Necessary to change the tab bar color dinamically in App.js\r\n  }\r\n\r\n  SettingsScreen() {\r\n    const settings = this.props.appState.user.settings\r\n    const backgroundImage = settings.backgroundImage\r\n    const imgURI = settings.displayBackgroundImage ? (backgroundImage ? ( settings.enableHighResolution ? backgroundImage.urls.raw : backgroundImage.urls.regular ) : null) : null\r\n    return(\r\n      <ImageBackground\r\n      source={{uri : imgURI}}\r\n      style={[ styles.background, {backgroundColor: this.state.selectedColor} ]}\r\n      >\r\n        <ScrollView style={styles.foreground}>\r\n          <View style={styles.header}>\r\n            <Text style={styles.h1}>Configurações</Text>\r\n          </View>\r\n          <this.ScreenSettings />\r\n          <this.logoutPressable />\r\n        </ScrollView>\r\n      </ImageBackground>\r\n    )\r\n  }\r\n\r\n  ScreenSettings() {\r\n    const [isHighResulotionButtonPressed, setIsHighResulotionButtonPressed] = React.useState(false)\r\n    // const isLoading = this.state.isSaveColorLoading | this.state.isDisplayBackgroundImageLoading | this.state.isChangeFontColorLoading\r\n    return (\r\n      <>\r\n        <this.ChooseImageSection />\r\n        <this.DisplayBackgroundImageSection />\r\n        <this.EnableHighResolutionSection />\r\n        <this.ChangeFontColorSection />\r\n        <this.ChangeBackgroundColorSection />\r\n        <this.ColorOptions />\r\n      </>\r\n    )\r\n  }\r\n\r\n  ChooseImageSection() {\r\n    const [isChooseImageButtonPressed, setIsChooseImageButtonPressed] = React.useState(false)\r\n    let fontColor = styles.h1.color\r\n    let fontColorTransp = fontColor + '8'\r\n    return(\r\n      <Pressable\r\n      onPressIn={() => blinkButton(setIsChooseImageButtonPressed)}\r\n      onPress={() => this.props.navigation.navigate('WallpaperTopics')}\r\n      style={[styles.settingsRow, {backgroundColor: isChooseImageButtonPressed ? '#0003' : null }]}\r\n      >\r\n        <View style={{flexDirection: 'row', alignItems: 'center'}}>\r\n          <Icon name='image-outline' width={30} height={30} fill={fontColor} />\r\n          <Text style={[styles.h2, {marginLeft: 10}]}>Papel de parede</Text>\r\n        </View>\r\n        \r\n        <Icon\r\n        width={30} height={30}\r\n        name='arrow-ios-forward-outline'\r\n        fill={ fontColor } />\r\n      </Pressable>\r\n    )\r\n  }\r\n\r\n  DisplayBackgroundImageSection() {\r\n    const [isExposeImageButtonPressed, setIsExposeImageButtonPressed] = React.useState(false)\r\n    const displayBackgroundImageValue = this.props.appState.user.settings.displayBackgroundImage\r\n    const isLoading = this.state.isDisplayBackgroundImageLoading\r\n    return(\r\n      <Pressable\r\n      onPressIn={ () => blinkButton(setIsExposeImageButtonPressed) }\r\n      style={[styles.settingsRow, {backgroundColor: isExposeImageButtonPressed ? '#0003' : null }]}\r\n      >\r\n        <View style={{flexDirection: 'row', alignItems: 'center'}}>\r\n          <Icon name='eye-outline' width={30} height={30} fill={styles.h1.color} />\r\n          <Text style={[styles.h2, {marginLeft: 10, marginRight: 20}]}>Ver papel de parede</Text>\r\n          { isLoading ? <ActivityIndicator color='blue' /> : null }\r\n        </View>\r\n        <Switch\r\n        disabled={isLoading}\r\n        trackColor={{ false: \"#767577\", true: \"#81b0ff\" }}\r\n        thumbColor={displayBackgroundImageValue ? \"#f4f3f4\" : \"#f4f3f4\"}\r\n        ios_backgroundColor=\"#3e3e3e\"\r\n        onValueChange={() => {\r\n          blinkButton(setIsExposeImageButtonPressed)\r\n          this.onDisplayBackgroundImageSwitch(!displayBackgroundImageValue)\r\n        }}\r\n        value={displayBackgroundImageValue}\r\n        />\r\n      </Pressable>\r\n    )\r\n  }\r\n\r\n  EnableHighResolutionSection() {\r\n    const [isEnableHighResolutionButtonPressed, setIsEnableHighResolutionButtonPressed] = React.useState(false)\r\n    const enableHighResolutionValue = this.props.appState.user.settings.enableHighResolution\r\n    const isLoading = this.state.isEnableHighResolutionLoading\r\n    return(\r\n      <Pressable\r\n      onPressIn={ () => blinkButton(setIsEnableHighResolutionButtonPressed)}\r\n      style={[styles.settingsRow, {backgroundColor: isEnableHighResolutionButtonPressed ? '#0003' : null }]}\r\n      >\r\n        <View style={{flexDirection: 'row', alignItems: 'center'}}>\r\n          {/* <Icon name='camera-outline' width={30} height={30} fill={styles.h1.color} /> */}\r\n          <NativeIcon name='high-definition' size={30} color={styles.h1.color} />\r\n          <Text style={[styles.h2, {marginLeft: 10, marginRight: 20}]}>Alta definição</Text>\r\n          { isLoading ? <ActivityIndicator color='blue' /> : null }\r\n        </View>\r\n        <Switch\r\n        disabled={isLoading}\r\n        trackColor={{ false: \"#767577\", true: \"#81b0ff\" }}\r\n        thumbColor={enableHighResolutionValue ? \"#f4f3f4\" : \"#f4f3f4\"}\r\n        ios_backgroundColor=\"#3e3e3e\"\r\n        onValueChange={() => {\r\n          blinkButton(setIsEnableHighResolutionButtonPressed)\r\n          this.onEnableHighResolutionSwitch(!enableHighResolutionValue)\r\n        }}\r\n        value={enableHighResolutionValue}\r\n        />\r\n      </Pressable>    \r\n    )\r\n  }\r\n\r\n  ChangeFontColorSection() {\r\n    const [isChangeFontColorButtonPressed, setIsChangeFontColorButtonPressed] = React.useState(false)\r\n    const changeFontColorValue = this.props.appState.user.settings.fontColorDark\r\n    const isLoading = this.state.isChangeFontColorLoading\r\n    return(\r\n      <Pressable\r\n      onPressIn={ () => blinkButton(setIsChangeFontColorButtonPressed)}\r\n      style={[styles.settingsRow, {backgroundColor: isChangeFontColorButtonPressed ? '#0003' : null }]}\r\n      >\r\n        <View style={{flexDirection: 'row', alignItems: 'center'}}>\r\n          <Icon name='moon-outline' width={30} height={30} fill={styles.h1.color} />\r\n          <Text style={[styles.h2, {marginLeft: 10, marginRight: 20}]}>Texto escuro</Text>\r\n          { isLoading ? <ActivityIndicator color='blue' /> : null }\r\n        </View>\r\n        <Switch\r\n        disabled={isLoading}\r\n        trackColor={{ false: \"#767577\", true: \"#81b0ff\" }}\r\n        thumbColor={changeFontColorValue ? \"#f4f3f4\" : \"#f4f3f4\"}\r\n        ios_backgroundColor=\"#3e3e3e\"\r\n        onValueChange={() => {\r\n          blinkButton(setIsChangeFontColorButtonPressed)\r\n          this.onChangeFontColorSwitch(!changeFontColorValue)\r\n        }}\r\n        value={changeFontColorValue}\r\n        />\r\n      </Pressable>    \r\n    )\r\n  }\r\n\r\n  ChangeBackgroundColorSection() {\r\n    const [isColorButtonPressed, setIsColorButtonPressed] = React.useState(false)\r\n    const newColorUnselected = this.state.selectedColor == this.props.appState.user.settings.backgroundColor\r\n    let fontColor = styles.h1.color\r\n    let fontColorTransp = fontColor + '8'\r\n\r\n    return(\r\n      <Pressable\r\n      onPressIn={() => blinkButton(setIsColorButtonPressed)}\r\n      onPress={() => {\r\n        this.setState({ isBackgroundColorSettingsOpen: !this.state.isBackgroundColorSettingsOpen })\r\n        if (!newColorUnselected) this.syncUserSettings()\r\n      }}\r\n      style={[styles.settingsRow, {backgroundColor: isColorButtonPressed ? '#0003' : null }]}\r\n      >\r\n        <View style={{flexDirection: 'row', alignItems: 'center'} }>\r\n          <Icon name='color-palette-outline' height={30} width={30} fill={styles.h1.color} style={{marginRight: 0}} />\r\n          <Text style={[styles.h2, {marginLeft: 10}]}>Tema</Text>\r\n        </View>\r\n        <View style={{flexDirection: 'row', alignItems: 'center'} }>\r\n          <Icon\r\n          width={30} height={30}\r\n          name={this.state.isBackgroundColorSettingsOpen ? 'arrow-ios-upward-outline' : 'arrow-ios-downward-outline' }\r\n          fill={ fontColor } />\r\n        </View>\r\n      </Pressable>    \r\n    )\r\n  }\r\n\r\n  ColorOptions() {\r\n    return(\r\n      this.state.isBackgroundColorSettingsOpen ? (\r\n        <>\r\n          <ScrollView\r\n          nestedScrollEnabled\r\n          style={styles.colorBox}\r\n          >\r\n            { colorList.map(color => {\r\n              return (\r\n                <this.ColorRow color={color} key={'color-' + color} />\r\n              )\r\n            }) }\r\n          </ScrollView>\r\n          <this.ColorControl />\r\n        </>\r\n      ) : (\r\n        null\r\n      )\r\n    )\r\n  }\r\n\r\n  ColorRow({color}) {\r\n    const [isColorRowPressed, setIsColorRowPressed] = React.useState(false)\r\n    const isLoading = this.state.isRestoreColorLoading | this.state.isSaveColorLoading\r\n    return(\r\n      <Pressable\r\n      onPressIn={ () => blinkButton(setIsColorRowPressed, 300) }\r\n      onPress={ this.onColorButtonPressFor(color) }\r\n      disabled={isLoading}\r\n      style={[styles.colorRow, {backgroundColor: isColorRowPressed ? '#0003' : null }]}>\r\n        <Text style={[\r\n          styles.h3,\r\n          this.state.selectedColor == color\r\n          ? {fontStyle: 'italic', textDecorationLine: 'underline' }\r\n          : {fontStyle: 'italic', textDecorationLine: 'none' }\r\n        ]}>{ capitalize(color) }</Text>\r\n        <View style={[ styles.colorSquare, { backgroundColor: color, borderWidth: this.state.selectedColor==color ? 3 : 0 }]} />\r\n      </Pressable>\r\n    )\r\n  }\r\n\r\n  ColorControl() {\r\n    const newColorUnselected = this.state.selectedColor == this.props.appState.user.settings.backgroundColor\r\n    const isLoading = this.state.isRestoreColorLoading | this.state.isSaveColorLoading\r\n    return(\r\n      <View style={[styles.settingsRow, {justifyContent: 'space-between'}]}>\r\n        <Pressable\r\n        disabled={isLoading | newColorUnselected}\r\n        style={{ justifyContent: 'center', alignItems: 'center', width: 95 }}\r\n          \r\n        // onPressIn={() => blinkButton((bool) => this.setState({isRestoreColorLoading: bool}))}\r\n        onPress={() => {\r\n          this.setState({isRestoreColorLoading: true})\r\n          this.syncUserSettings()\r\n          this.setState({isRestoreColorLoading: false})\r\n        }}\r\n        >\r\n          <Text\r\n            style={[styles.h2, { \r\n              textAlign: 'center',\r\n              color: isLoading | newColorUnselected ? styles.h1.color + '6' : styles.h1.color\r\n            }]}\r\n          >\r\n            { this.state.isRestoreColorLoading ? <ActivityIndicator color='blue' /> :  'Restaurar' }\r\n          </Text>\r\n        </Pressable>\r\n\r\n        <Pressable\r\n        disabled={isLoading | newColorUnselected}\r\n        onPress={this.onSaveColorButtonPress}\r\n        style={{ justifyContent: 'center', alignItems: 'center', width: 75 }}\r\n        >\r\n          <Text style={[styles.h2, {width: 63, textAlign: 'center', color: isLoading | newColorUnselected ? styles.h1.color + '6' : styles.h1.color}]}>\r\n            { this.state.isSaveColorLoading ? <ActivityIndicator color='blue' /> : 'Aplicar' }\r\n          </Text>\r\n        </Pressable>\r\n      </View>\r\n    )\r\n  }\r\n\r\n  isLoading() {\r\n    return (\r\n      this.state.isDisplayBackgroundImageLoading | \r\n      this.state.isChangeFontColorLoading |\r\n      this.state.isRestoreColorLoading |\r\n      this.state.isEnableHighResolutionLoading |\r\n      this.state.isSaveColorLoading\r\n    )\r\n  }\r\n\r\n  logoutPressable() {\r\n    const [ isLogoutButtonPressed, setIsLogoutButtonPressed ] = React.useState(false)\r\n    const isLoading = this.isLoading()\r\n    const logoutColor = isLoading ? styles.h1.color+'8' : 'red'\r\n    return(\r\n      <Pressable   // logout pressable\r\n      onPress={() => {\r\n        blinkButton(setIsLogoutButtonPressed)\r\n        this.onLogoutButtonPress()\r\n      }}\r\n      disabled={isLoading}\r\n      style={[ styles.settingsRow, {\r\n        justifyContent: 'flex-start',\r\n        marginBottom: 30,\r\n        backgroundColor: isLogoutButtonPressed ? styles.h1.color+'8' : null\r\n      }]}\r\n      >\r\n        <Icon name='log-out' width={30} height={30} fill={logoutColor} />\r\n        <Text style={[styles.h2, { marginLeft: 10, color: logoutColor }]}>Logout</Text>\r\n      </Pressable>\r\n    )\r\n  }\r\n\r\n  onColorButtonPressFor(color) {\r\n    function onColorButtonPress() {\r\n      this.setState({ selectedColor: color })\r\n      this.props.navigation.setParams({selectedColor: color}) // Necessary to change the tab bar color dinamically in App.js\r\n    }\r\n    return onColorButtonPress.bind(this);\r\n  }\r\n\r\n  async onDisplayBackgroundImageSwitch(value) {\r\n    this.setState({ isDisplayBackgroundImageLoading: true });\r\n    const newSettings = {displayBackgroundImage: value}\r\n    const postDisplayResult = await postSettings(newSettings, this.props.appState.user.username)\r\n    if (postDisplayResult.ok) {\r\n      // sync user data with app or entries component\r\n      await this.props.route.params.syncUserData()\r\n    }\r\n    this.setState({ isDisplayBackgroundImageLoading: false });\r\n  }\r\n\r\n  async onChangeFontColorSwitch(value) {\r\n    this.setState({ isChangeFontColorLoading: true });\r\n    const newSettings = {fontColorDark: value}\r\n    const postDisplayResult = await postSettings(newSettings, this.props.appState.user.username)\r\n    if (postDisplayResult.ok) {\r\n      // sync user data with app or entries component\r\n      await this.props.route.params.syncUserData()\r\n      // update style variable with new data\r\n      this.setFontColor()\r\n    }\r\n    this.setState({ isChangeFontColorLoading: false });\r\n  }\r\n\r\n  async onEnableHighResolutionSwitch(value)  {\r\n    this.setState({ isEnableHighResolutionLoading: true });\r\n    const newSettings = {enableHighResolution: value}\r\n    const postHighResolutionResult = await postSettings(newSettings, this.props.appState.user.username)\r\n    if (postHighResolutionResult.ok) {\r\n      // sync user data with app or entries component\r\n      await this.props.route.params.syncUserData()\r\n      // update style variable with new data\r\n    }\r\n    this.setState({ isEnableHighResolutionLoading: false });\r\n  }\r\n\r\n  async onSaveColorButtonPress() {\r\n    // fetch post selected color to user settings in server\r\n    console.log('POST COLOR STATUS: Started...')\r\n    this.setState({ isSaveColorLoading: true });\r\n    const colorSetting = {\r\n      backgroundColor: this.state.selectedColor\r\n    }\r\n    const postColorResult = await postSettings(colorSetting, this.props.appState.user.username)\r\n    if (postColorResult.ok) {\r\n      if (this.props.appState.user.settings.displayBackgroundImage) {\r\n        await this.onDisplayBackgroundImageSwitch(false)\r\n      } else {\r\n        // sync user data with app or entries component\r\n        await this.props.route.params.syncUserData()\r\n      }\r\n      // initialize settings\r\n      this.syncUserSettings()\r\n    }\r\n    console.log('POST COLOR STATUS: Finished.')\r\n    this.setState({ isSaveColorLoading: false });\r\n  }\r\n\r\n  async onLogoutButtonPress() {\r\n    await keepUserConnectionAlive(null); // kills user connection\r\n    this.props.route.params.logout();\r\n  }\r\n\r\n  render() {\r\n    console.log('Rendering \"SettingsScreen\" component...')\r\n    return (\r\n      <this.SettingsScreen />\r\n    );  \r\n  }\r\n}\r\n","import { createContext } from 'react';\r\n\r\nconst UserContext = createContext();\r\n\r\nexport default UserContext","import React, { Component, useState, useEffect } from 'react';\r\nimport { FlatList, View, Text, SafeAreaView, Pressable, ActivityIndicator, Dimensions, ImageBackground, Platform, StatusBar } from 'react-native';\r\nimport { Icon } from 'react-native-eva-icons';\r\nimport * as Device from 'expo-device';\r\nimport { capitalize } from './subcomponents/EditEmotions';\r\nimport TouchHistoryMath from 'react-native/Libraries/Interaction/TouchHistoryMath';\r\n\r\nconst unsplash_APIKEY = '5fRBt7AhEBCWmlgXrHd-k6RYsEq0t4aJGy5kxkCofDQ' \r\nconst unsplashUrl = 'https://api.unsplash.com/'\r\n\r\nconst isWindows = Device.osName == 'Windows'\r\n\r\nfunction formatTopicName(name){\r\n  return capitalize(name.split('-').join(' '))\r\n}\r\n\r\nfunction buildApiUriParams(params) {\r\n  var uriParams = []\r\n  Object.keys(params).forEach( key => uriParams.push(key+'='+params[key]) )\r\n  return '?' + uriParams.join('&')\r\n}\r\n\r\nconst styles = {\r\n  mainView: {\r\n    height: '100%',\r\n    width: '100%',\r\n    // paddingTop: StatusBar.currentHeight\r\n  },\r\n  photosView: {\r\n    height: '100%',\r\n    width: '100%' ,\r\n  },\r\n  h1: {\r\n    fontSize: 26,\r\n    alignSelf: 'center',\r\n    // borderWidth: 1\r\n  },\r\n  header: {\r\n    position: 'absolute',\r\n    top: 0,\r\n    paddingTop: StatusBar.currentHeight,\r\n    width: '100%',\r\n    height: '20%',\r\n    backgroundColor: 'rgba(255,255,255,0.5)',\r\n    justifyContent: 'space-evenly',\r\n    alignItems: 'center'\r\n  },\r\n  headerLabel: {\r\n    // borderWidth: 1,\r\n    width: '70%',\r\n    fontSize: 22,\r\n    alignSelf: 'center',\r\n    textAlign: 'center',\r\n  },\r\n  status: {\r\n    backgroundColor: 'rgb(230,230,230)',\r\n    width: '100%',\r\n    height: '20%',\r\n    borderRadius: 20,\r\n    alignItems: 'center',\r\n    justifyContent: 'center'\r\n  },\r\n  statusText: {\r\n    fontSize: 18,\r\n    color: 'black'\r\n  },\r\n  image: {\r\n    width: '100%',\r\n    height: '100%',\r\n    alignItems: 'center',\r\n    justifyContent: 'center'\r\n  },\r\n}\r\n\r\nasync function getUnsplash(endpoint, params) {\r\n  console.log('UNSPLASH GET PHOTOS STATUS: STARTED...')\r\n  const reqParams = {\r\n    method: 'GET',\r\n    headers: {\r\n      // 'Accept-Version': 'v1',\r\n      // 'Authorization': `Client-ID ${unsplash_APIKEY}`\r\n    }\r\n  }\r\n  params.client_id = unsplash_APIKEY\r\n  const url = unsplashUrl + endpoint + buildApiUriParams(params)\r\n  var result, result_json, success\r\n  try {\r\n    result = await fetch(url, reqParams)\r\n    if (result.ok) {\r\n      console.log(`UNSPLASH PHOTOS STATUS: FETCH SUCCESSFULL...`)\r\n\r\n      let a = 'x-ratelimit-limit'\r\n      let b = 'x-ratelimit-remaining'\r\n      const headers = result.headers\r\n      var limit, remaining\r\n      switch (Platform.OS) {\r\n        case 'android':\r\n          limit = headers.map[a]\r\n          remaining = headers.map[b]          \r\n          break;\r\n        case 'web':\r\n          limit = headers.get(a)\r\n          remaining = headers.get(b)\r\n          break\r\n        default:\r\n          limit = headers.get(a)\r\n          remaining = headers.get(b)\r\n          break\r\n      }\r\n      console.log(`UNSPLASH PHOTOS STATUS:\\n  x-ratelimit-limit: ${limit}\\n  x-ratelimit-remaining: ${remaining}`)\r\n\r\n      result_json = await result.json()\r\n      success = result_json.length\r\n      if (success) {\r\n        console.log(`UNSPLASH PHOTOS STATUS: JSON RESULT SUCCESSFULL. RETRIEVED ${success} PHOTOS...`)\r\n        return result_json\r\n\r\n      } else {\r\n        console.log(`UNSPLASH PHOTOS STATUS: JSON RESULT FAILED. Logging json value...`)\r\n        console.log(result_json)\r\n        return null\r\n      }\r\n    } else {\r\n      console.log(`UNSPLASH GET PHOTOS STATUS: FETCH FAILED. Status code: ${result.status}, Text: ${result.statusText}..`)\r\n    }\r\n  } catch (error) {\r\n    console.log('UNSPLASH GET PHOTOS STATUS: ERROR CATCHED. LOGGING ERROR...')\r\n    console.log(error)\r\n    return null\r\n  }\r\n}\r\n\r\nconst Item = (props) => {\r\n\r\n  const topicsScreen = props.route.name == 'WallpaperTopics'\r\n  const photoURI = topicsScreen ? props.item.cover_photo.urls.regular : props.item.urls.regular\r\n  const nextScreenName = topicsScreen ? 'Wallpapers' : 'WallpaperZoom'\r\n  \r\n  const screenHeight = props.windowHeight + (Platform.OS != 'web' ? StatusBar.currentHeight : 0)\r\n  const photoHeight = topicsScreen ? ( isWindows ? screenHeight/3  : screenHeight/4 ) : ( isWindows ? screenHeight/2 : screenHeight/2 )\r\n  const photoWidth = topicsScreen ? ( isWindows ? '33.333333%' : '50%' ) : ( isWindows ? '50%' : '50%' )\r\n\r\n  // console.log(dimensions.window.height)\r\n  return(\r\n    <Pressable\r\n      onPress={() => props.navigation.navigate( nextScreenName , { selectedImage: props.item })}\r\n      style={[{ minHeight: 70, height: photoHeight, width: photoWidth, margin: 0}]}\r\n    >\r\n      <ImageBackground source={{ uri:  photoURI }} style={styles.image} >\r\n        <Text style={[styles.h1, {width: '80%', color: 'white', textAlign: 'center'}]}>{ topicsScreen ? formatTopicName(props.item.slug) : '' }</Text>\r\n      </ImageBackground>\r\n    </Pressable>\r\n  )\r\n};\r\n\r\nfunction ControlButton({iconName, size, additionalStyle, onPress}) {\r\n  return(\r\n    <Pressable\r\n    style={[{\r\n      position: 'absolute',\r\n      width: size,\r\n      height: size,\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n      borderRadius: size/2,\r\n    },\r\n    additionalStyle\r\n  ]}\r\n    onPress={onPress}\r\n    >\r\n      <Icon name={iconName} width={size} height={size} fill='#fff' />\r\n    </Pressable>\r\n  )\r\n}\r\n\r\nexport class WallpapersComponent extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state={\r\n      photos: null,\r\n      page: null,\r\n      windowHeight: Dimensions.get('window').height,\r\n      isPhotosLoading: false,\r\n      hideHeader: false,\r\n    };\r\n    this.initializePhotosAsync = this.initializePhotosAsync.bind(this);\r\n    this.WallpapersHeaderText = this.WallpapersHeaderText.bind(this);\r\n    this.WallpapersHeader = this.WallpapersHeader.bind(this);\r\n    this.renderItem = this.renderItem.bind(this);\r\n    this.PhotoList = this.PhotoList.bind(this);\r\n    this.ControlButtons = this.ControlButtons.bind(this);\r\n    this.loadNextPagePhotosAsync = this.loadNextPagePhotosAsync.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log('\"Wallpapers\" component did mount...')\r\n    // StatusBar.setStatusBarTranslucent(true)\r\n    this.initializePhotosAsync()\r\n  }\r\n\r\n  async initializePhotosAsync() {\r\n    this.setState({isPhotosLoading: true})\r\n    let route = this.props.route\r\n    if (route.name=='WallpaperTopics') {\r\n      let asyncResult = await getUnsplash(`topics`, {page: 1, per_page: 30, order_by: 'position'})\r\n      this.setState({photos: asyncResult}) \r\n\r\n    } else {\r\n      let endpoint = `topics/${route.params.selectedImage.id}/photos`\r\n      let asyncResult = await getUnsplash(endpoint, {page: 1, per_page: 30, order_by: 'popular', orientation: 'portrait'})\r\n      this.setState({photos: [ route.params.selectedImage.cover_photo, ...asyncResult ], page: 1}) \r\n    }\r\n    this.setState({isPhotosLoading: false}) \r\n  }  \r\n\r\n  async loadNextPagePhotosAsync() {\r\n    console.log('LOAD NEXT PHOTOS PAGE STATUS: STARTED... ')\r\n    this.setState({isPhotosLoading: true})\r\n    let endpoint = `topics/${this.props.route.params.selectedImage.id}/photos`\r\n    let asyncResult = await getUnsplash(endpoint, {page: this.state.page+1, per_page: 30, order_by: 'popular', orientation: 'portrait'})\r\n    if (asyncResult) {\r\n      console.log('LOAD NEXT PHOTOS PAGE STATUS: SUCCESSFUL! ')\r\n      this.setState((prevState) => ({\r\n          photos: [ ...prevState.photos, ...asyncResult ],\r\n          page: prevState.page+1,\r\n        }))   \r\n    } else {\r\n      console.log('LOAD NEXT PHOTOS PAGE STATUS: FAILED! ')\r\n    }\r\n      console.log('LOAD NEXT PHOTOS PAGE STATUS: FINISHED. ')\r\n      this.setState({isPhotosLoading: false})\r\n  }\r\n\r\n  renderItem = ({ item }) => (\r\n    <Item item={item} windowHeight={this.state.windowHeight} {...this.props} />\r\n  );\r\n\r\n  WallpapersHeader () {\r\n    const hideHeader = this.state.hideHeader\r\n    const topicsScreen = this.props.route.name == 'WallpaperTopics'\r\n    return(\r\n      !hideHeader ? (\r\n        <Pressable\r\n        style={[ styles.header, {height: topicsScreen ? '20%' : '23%' } ]}\r\n        onPress={() => {this.setState({ hideHeader: true }); console.log('close button clicked...')}}\r\n        >\r\n          <this.WallpapersHeaderText hideHeader={hideHeader} />\r\n        </Pressable>  \r\n      ) : (\r\n        null\r\n      )\r\n    )\r\n  }\r\n\r\n  WallpapersHeaderText () {\r\n    const topicsScreen = this.props.route.name=='WallpaperTopics'\r\n    return(\r\n      this.state.isPhotosLoading ? (\r\n        <ActivityIndicator size='large' color='black' />\r\n      ) : (\r\n        this.state.photos ? (\r\n          <>\r\n            { !topicsScreen ? <Text style={[styles.h1]}>{ formatTopicName(this.props.route.params.selectedImage.slug) }</Text> : null }\r\n            <Text\r\n            style={[styles.headerLabel, {fontSize: topicsScreen ? 26 : 22 }]}\r\n            >\r\n              { this.props.route.params.headerText }</Text>\r\n          </>\r\n        ) : (\r\n          <Text style={styles.headerLabel}>Erro ao carregar imagems...</Text>\r\n        )\r\n     )\r\n    )\r\n  }\r\n  \r\n  PhotoList = () => {\r\n  \r\n    useEffect(() => {\r\n      const subscription = Dimensions.addEventListener('change', ({ window, screen }) => {\r\n        const windowHeightDifference = Math.abs(this.state.windowHeight-window.height)\r\n        if ( windowHeightDifference > 100) {\r\n          this.setState({windowHeight: window.height})\r\n        }\r\n      });\r\n      return () => subscription?.remove();\r\n    });\r\n\r\n    return(\r\n      <FlatList\r\n        data={ this.state.photos }\r\n        renderItem={ this.renderItem }\r\n        keyExtractor={ item => item.id }\r\n        numColumns={ isWindows ? 3  : 2 }\r\n        initialNumToRender={ null }\r\n        onEndReached={ this.props.route.name == 'WallpaperTopics' ? null : this.loadNextPagePhotosAsync }\r\n        refreshing={ this.state.isPhotosLoading }\r\n        />\r\n    )\r\n  }\r\n\r\n  ControlButtons() {\r\n    const windowHeight = this.state.windowHeight\r\n    const centerBottom = {\r\n      bottom: windowHeight*0.05,\r\n      alignSelf: 'center',\r\n      backgroundColor: '#fff8',\r\n    }\r\n    const topRight = {\r\n      top: Platform.OS != 'web' ? StatusBar.currentHeight : 0,\r\n      right: 0,\r\n      margin: '1.5%',\r\n      backgroundColor: '#fff0',\r\n    }\r\n\r\n    return(\r\n      <>\r\n          { Platform.OS == 'web' ? (\r\n            <ControlButton\r\n            iconName='chevron-left-outline'\r\n            size={60}\r\n            additionalStyle={centerBottom}\r\n            onPress={() => this.props.navigation.goBack()}\r\n            />\r\n          ) : (\r\n            null\r\n          )}\r\n          { !this.state.hideHeader ? (\r\n            <ControlButton\r\n            iconName='close'\r\n            size={30}\r\n            additionalStyle={topRight}\r\n            onPress={() => this.setState({hideHeader: true})}\r\n            />\r\n          ) : (\r\n            null\r\n          ) }\r\n      </>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    console.log('Rendering \"Wallpapers\" component...')\r\n    const settings = this.props.appState.user.settings\r\n    return (\r\n      <SafeAreaView style={styles.mainView}>\r\n        <SafeAreaView style={[styles.photosView, {backgroundColor: settings.backgroundColor}]}>\r\n          <this.PhotoList />\r\n          <this.WallpapersHeader />\r\n          <this.ControlButtons />\r\n        </SafeAreaView>\r\n      </SafeAreaView>\r\n    );  \r\n  }\r\n\r\n}","import React, { useContext } from 'react';\r\nimport { View, Text, Image, ImageBackground, Pressable, ActivityIndicator, Platform, Linking } from 'react-native';\r\n// import { postDisplayBackgroundImage } from './SettingsScreen';\r\nimport { postSettings } from './SettingsScreen';\r\nimport UserContext from '../shared/UserContext';\r\n\r\n// cors-midpoint uri (needed to avoid cors' allow-cross-origin error when fetching in web platforms)\r\n// const corsURI = Platform.OS == 'web' ? 'https://morning-journey-78874.herokuapp.com/' : ''\r\n// const appServerURI = 'https://mood-tracker-server.herokuapp.com/'\r\n\r\nvar styles = {\r\n  fotter: {\r\n    position: 'absolute',\r\n    bottom: 0,\r\n    height: '22%',\r\n    width: '100%',\r\n    justifyContent: 'space-evenly',\r\n  },\r\n  controlView: {\r\n    // flex: 0.4,\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-evenly',\r\n    alignItems: 'center',\r\n  },\r\n  attributionView: {\r\n    // flex: 0.6,\r\n    flexDirection: 'row',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n controlButton: {\r\n    width: '35%',\r\n    height: 40,\r\n    borderWidth: 1,\r\n    borderRadius: 20,\r\n    backgroundColor: '#f4f3f4',\r\n    alignItems: 'center',\r\n    justifyContent: 'center'\r\n  },\r\n  controlButtonLabel: {\r\n    color: '#000',\r\n    fontSize: 17,\r\n    fontWeight: 'bold'\r\n  },\r\n  userProfileImage: {\r\n    width: 50,\r\n    height: 50,\r\n    borderRadius: 25\r\n  },\r\n  attributionLabel: {\r\n    color: 'white',\r\n    fontSize: 14,\r\n    fontStyle: 'italic',\r\n    paddingLeft: 10,\r\n    textAlign: 'left',\r\n    maxWidth: '78%',\r\n  },\r\n  attributionURL: {\r\n    textDecorationLine: 'underline'\r\n  },\r\n}\r\n\r\nconst openUserProfileFor = (url) => {\r\n  return function () {\r\n    Linking.openURL( url + '?utm_source=Mood-Tracker&utm_medium=referral');\r\n  } \r\n}\r\n\r\nconst openUnsplashURL = () => {\r\n  Linking.openURL('https://unsplash.com/?utm_source=Mood-Tracker&utm_medium=referral')\r\n}\r\n\r\nexport function WallpaperZoom(props) {\r\n\r\n  const appState = useContext(UserContext);\r\n  const settings = appState.user.settings\r\n  const [isSaveImageLoading, setIsSaveImageLoading] = React.useState(false);\r\n\r\n  async function onSaveImageButtonPress() {\r\n    // fetch post selected color to user settings in server\r\n    console.log('POST IMAGE STATUS: Started...');\r\n    setIsSaveImageLoading(true);\r\n    const imageSetting = {\r\n      backgroundImage: props.route.params.selectedImage\r\n    };\r\n\r\n    const postImageResult = await postSettings(imageSetting, appState.user.username)\r\n    if (postImageResult.ok) {\r\n      // sync user data with app or entries component\r\n      if (!settings.displayBackgroundImage) {\r\n        await postSettings({displayBackgroundImage: true}, appState.user.username)\r\n      }\r\n\r\n      await props.route.params.syncUserData();\r\n      // navigate back to settings\r\n      setIsSaveImageLoading(false);\r\n      props.navigation.navigate('Settings');\r\n    } else {\r\n      setIsSaveImageLoading(false);\r\n    }\r\n    console.log('POST IMAGE STATUS: Finished.');\r\n  }\r\n\r\n  console.log('Returning \"WallpaperZoom\" component...')\r\n\r\n  const fontColorDark = settings.fontColorDark\r\n  const fontColor = fontColorDark ? '#000' : '#fff'\r\n  const altFontColor = fontColorDark ? '#fff' : '#000'\r\n  for (let label of ['attributionLabel', 'controlButtonLabel']) {\r\n    styles[label] = { ...styles[label], color: fontColor }\r\n  }\r\n  styles.controlButton = { ...styles.controlButton, backgroundColor: altFontColor + '8', borderColor: fontColor + '8' }\r\n  const selectedImage = props.route.params.selectedImage\r\n  const imgURI = settings.enableHighResolution ? selectedImage.urls.raw : selectedImage.urls.regular\r\n  return (\r\n    <ImageBackground\r\n      source={{ uri: imgURI }}\r\n      style={{ flex: 1, backgroundColor: settings.backgroundColor }}\r\n    >\r\n      <View style={styles.fotter}>\r\n        <View style={styles.controlView}>\r\n          <Pressable\r\n            onPress={() => props.navigation.goBack()}\r\n            style={styles.controlButton}\r\n          >\r\n            <Text style={styles.controlButtonLabel}>Voltar</Text>\r\n          </Pressable>\r\n          <Pressable\r\n              onPress={onSaveImageButtonPress}\r\n              style={styles.controlButton}\r\n          >\r\n            {isSaveImageLoading ? (\r\n              <ActivityIndicator color='blue' />\r\n            ) : (\r\n              <Text style={styles.controlButtonLabel}>Aplicar</Text>\r\n            )}\r\n          </Pressable>\r\n        </View>\r\n        <View style={styles.attributionView}>\r\n          <Image\r\n          source={{ uri: selectedImage.user.profile_image.large }}\r\n          style={styles.userProfileImage} />\r\n          <Text style={styles.attributionLabel}>\r\n            {'Photo by '}\r\n            <Text\r\n            onPress={openUserProfileFor(selectedImage.user.links.html)}\r\n            style={styles.attributionURL} >{ selectedImage.user.name }</Text>\r\n            {' on '}\r\n            <Text\r\n            onPress={openUnsplashURL}\r\n            style={styles.attributionURL}>{ 'Unsplash' }</Text>\r\n          </Text>\r\n        </View>\r\n      </View>\r\n    </ImageBackground>\r\n  );\r\n}\r\n","import React, { Component, createContext, useContext } from 'react';\nimport { Dimensions, StatusBar, Platform } from 'react-native'; \nimport { Icon } from 'react-native-eva-icons'\n// import AsyncStorage from '@react-native-async-storage/async-storage';\nimport { LinearGradient } from 'expo-linear-gradient';\n\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\n//import { createDrawerNavigator } from '@react-navigation/drawer';\n\nimport EntrancesScreen from './components/EntrancesComponent';\nimport PostEntranceScreen from './components/PostEntryComponent';\nimport LoginScreen from './components/LoginComponent'\nimport SettingsScreen from './components/SettingsScreen';\nimport UserContext from './shared/UserContext';\nimport { WallpapersComponent } from './components/WallpapersComponent';\nimport { WallpaperZoom } from './components/WallpaperZoomComponent';\n\n// cors-midpoint uri (needed to avoid cors' allow-cross-origin error when fetching in web platforms)\nconst corsURI = Platform.OS == 'web' ? 'https://morning-journey-78874.herokuapp.com/' : ''\nconst appServerURI = 'https://mood-tracker-server.herokuapp.com/'\n\nconst unsplashTopics = require('./shared/unsplashTopics.json')\n\nconst window = Dimensions.get('window')\nconst windowHeight = window.height;\nconst screenHeight = windowHeight + StatusBar.currentHeight\n\n\nconst SettingsScreenProvider = (props) => {\n  const appState = useContext(UserContext)\n  return(\n    <SettingsScreen  appState={appState} {...props} />\n  )\n}\n\nconst EntrancesScreenProvider = (props) => {\n  const appState = useContext(UserContext)\n  return(\n    <EntrancesScreen  appState={appState} {...props} />\n  )\n}\n\nconst PostEntranceScreenProvider = (props) => {\n  const appState = useContext(UserContext)\n  return(\n    <PostEntranceScreen  appState={appState} {...props} />\n  )\n}\n\nconst WallpapersScreenProvider = (props) => {\n  const appState = useContext(UserContext)\n  return(\n    <WallpapersComponent  appState={appState} {...props} />\n  )\n}\n  \nconst Stack = createNativeStackNavigator();\nconst Tab = createBottomTabNavigator();\n\nfunction tabBarIcon(iconName) {\n  const iconFunc = ({ focused, color, size }) => {\n    let newIconName = focused\n    ? iconName + '-outline'\n    : iconName + '-outline';\n    return <Icon name={newIconName} width={size} height={size} fill={ focused ? 'rgba(0,0,0,1)' : 'rgba(0,0,0,0.6)' } />\n  }\n  return iconFunc\n}\n\nconst HomeTab = (props) => {\n\n  const appState = useContext(UserContext)\n\n  const mainScreenOptions = ({ route }) => ({\n    headerShown: false,\n    tabBarShowLabel: false,\n    tabBarHideOnKeyboard: true,\n    tabBarBackground: () => (\n      <LinearGradient\n        colors={['#f4f3f4', route.name=='Settings' ? route.params.selectedColor : appState.user.settings.backgroundColor, '#f4f3f4']}\n        start={[route.name=='Entrances' ? -0.5 : 1.5, 1]}\n        end={[route.name=='Entrances' ? 1 : 0, 1]}\n        location={[0, 0.5, 1]}\n        style={{flex: 1}}\n      />\n    ),\n  })\n\n  return(\n    <Tab.Navigator\n    initialRouteName='Entrances'\n    screenOptions={mainScreenOptions}\n    >\n      <Tab.Screen\n      name=\"Entrances\"\n      component={EntrancesScreenProvider}\n      initialParams={{\n        getAppState: props.route.params.getAppState,\n        setAppState: props.route.params.setAppState,\n        syncUserData: props.route.params.syncUserData,\n      }}\n      options={{\n        tabBarIcon: tabBarIcon('inbox')\n      }}\n      />\n      <Tab.Screen\n      name=\"Settings\"\n      component={SettingsScreenProvider}\n      initialParams={{\n        logout: props.route.params.logout,\n        getAppState: props.route.params.getAppState,\n        setAppState: props.route.params.setAppState,\n        syncUserData: props.route.params.syncUserData,\n      }}\n      options={{\n        tabBarIcon: tabBarIcon('settings-2')\n      }}\n      />\n    </Tab.Navigator>    \n  )\n}\n\nconst HomeStack = (props) => {\n\n  console.log('Returning \"HomeScreen\" component...')\n  return(\n    <Stack.Navigator \n    initialRouteName='Home'\n    screenOptions={{\n      headerShown: false,\n    }}\n    >\n      <Stack.Screen\n      name=\"Home\"\n      component={HomeTab}\n      initialParams={{\n        logout: props.logout,\n        getAppState: props.getAppState,\n        setAppState: props.setAppState,\n        syncUserData: props.syncUserData,\n      }}\n      // options={{title: 'Suas entradas'}}\n      />\n      <Stack.Screen\n      name=\"PostEntrance\"\n      component={PostEntranceScreenProvider}\n      initialParams={{\n        getAppState: props.getAppState,\n        setAppState: props.setAppState,\n        syncUserData: props.syncUserData,\n      }}\n      // options={{title: 'Adicione uma  entrada'}}\n      />\n      <Stack.Screen\n      name=\"WallpaperTopics\"\n      component={WallpapersScreenProvider}\n      initialParams={{\n        // photoList: unsplashTopics,\n        headerText: 'Tópicos',\n        getAppState: props.getAppState,\n        setAppState: props.setAppState,\n        syncUserData: props.syncUserData\n      }}\n      />\n      <Stack.Screen\n      name=\"Wallpapers\"\n      component={WallpapersScreenProvider}\n      initialParams={{\n        photoList: [],\n        headerText: 'Clique em uma imagem para ampliar',\n        getAppState: props.getAppState,\n        setAppState: props.setAppState,\n        syncUserData: props.syncUserData\n      }}\n      />\n      <Stack.Screen\n      name=\"WallpaperZoom\"\n      component={WallpaperZoom}\n      initialParams={{\n        getAppState: props.getAppState,\n        setAppState: props.setAppState,\n        syncUserData: props.syncUserData,\n      }}\n      />\n    </Stack.Navigator>\n  )  \n}\n\n// export const UserContext = createContext();\n\nexport default class App extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isUserAuth: false,\n      user: null,\n      isUserDataSyncing: false,\n      // userDataSynced: false\n    };\n\n    this.logout = this.logout.bind(this);\n    this.getAppState = this.getAppState.bind(this);\n    this.syncUserData = this.syncUserData.bind(this);\n  }\n\n  logout() {\n    console.log('User logged out. Navigating to \"LoginScreen\"...')\n    this.setState({isUserAuth: false, user: null})\n  }\n\n  getAppState() {\n    return this.state\n  }\n\n  async syncUserData() {\n    console.log('SYNC USER DATA STATUS: Started...')\n    this.setState({ isUserDataSyncing: true });\n    try {\n        var UserResult = await fetch( corsURI + appServerURI + 'Users/' + this.state.user.username, { method: 'GET' });\n        const userStatus =  'Status: ' + UserResult.status + ', ' + UserResult.statusText\n        if (UserResult.ok) {\n            console.log('fetch GET request for user DATA successful.')\n            console.log(userStatus)\n            console.log('SYNC USER DATA STATUS: Successful.')\n            const user = await UserResult.json();\n            this.setState({user: user})\n        } else {\n            console.log( new Error('\"fetch\" GET request for user DATA failed. Throwing error...') )\n            throw new Error(userStatus)\n        }\n    } catch (error) {\n            console.log('SYNC USER DATA STATUS: Error captured. Printing error...')\n            console.log(error);\n            alert('Não foi possível sincronizar as entradas. Por favor, aguarde..')\n    } finally {\n        this.setState({ isUserDataSyncing: false });\n        console.log('SYNC USER DATA STATUS: Finished.')\n    }    \n}\n\n  render() {\n    return !this.state.isUserAuth ? (\n      <LoginScreen\n      user={this.state.user}\n      getAppState={this.getAppState}\n      setAppState={this.setState.bind(this)}\n      />\n    ) : (\n      <UserContext.Provider value={this.state}>\n          <NavigationContainer>\n            <HomeStack\n            user={this.state.user}\n            logout={this.logout}\n            getAppState={this.getAppState}\n            setAppState={this.setState.bind(this)}\n            syncUserData={this.syncUserData}\n            />\n          </NavigationContainer>    \n      </UserContext.Provider>\n    );  \n  }\n}","// Emotion configs\r\nconst emotionGroupsNames = [ 'Bem & Calmo', 'Bem & Energizado', 'Mal & Calmo', 'Mal & Energizado' ]\r\nconst goodEnergizedEmotions = ['Animação', 'Concentração', 'Desinibição', 'Motivação', 'Euforia']\r\nconst goodCalmEmotions = ['Alívio', 'Calma', 'Conforto', 'Despreocupação', 'Inspiração', 'Orgulho', 'Paz', 'Relaxamento', 'Satisfação', 'Segurança', 'Criatividade']\r\nconst badEnergizedEmotions = ['Inquietação', 'Ansiedade', 'Desespero', 'Frustração', 'Insatisfação', 'Irritação', 'Medo', 'Vergonha', 'Preocupação', 'Impaciência', 'Sobrecarregado(a)', 'Tensão']\r\nconst badCalmEmotions = ['Depressão', 'Timidez', 'Cansaço', 'Tristeza','Confusão', 'Desanimo', 'Insegurança', 'Solidão', 'Tédio']\r\n// const badEnergizedEmotions = ['Agitação', 'Ansiedade', 'Tristeza', 'Decepção', 'Depressão', 'Desespero', 'Frustração', 'Insatisfação', 'Irritação', 'Medo', 'Paranoia', 'Preocupação', 'Impaciencia', 'Raiva', 'Revolta', 'Sobrecarregado(a)', 'Tensão', 'Nojo']\r\n\r\nconst emotionGroups = [ goodCalmEmotions.sort(), goodEnergizedEmotions.sort(), badCalmEmotions.sort(), badEnergizedEmotions.sort() ]\r\nconst basicEmotions = [ ...emotionGroups[0], ...emotionGroups[1], ...emotionGroups[2], ...emotionGroups[3] ]\r\n\r\nconst emotionTypes = ['Positiva', 'Negativa']\r\nconst emotionEnergy = ['Calmo(a)', 'Energizado(a)']\r\n\r\nvar defaultEmotions = []\r\nvar type, energy\r\n\r\nfor (let emotion of basicEmotions) {\r\n    type = emotionGroups[0].includes(emotion) || emotionGroups[1].includes(emotion) ? emotionTypes[0] : emotionTypes[1]\r\n    energy = emotionGroups[0].includes(emotion) || emotionGroups[2].includes(emotion) ? emotionEnergy[0] : emotionEnergy[1]\r\n    defaultEmotions.push({name: emotion, type: type, energy: energy})\r\n}\r\n\r\n// console.log(defaultEmotions);\r\n\r\nmodule.exports = defaultEmotions;"],"sourceRoot":""}