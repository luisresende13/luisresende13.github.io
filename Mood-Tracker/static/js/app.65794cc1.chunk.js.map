{"version":3,"sources":["assets/wallpaper.png","styles/entrancesStyles.js","components/subcomponents/UserEntryCards.js","shared/dateRange.js","components/EntrancesComponent.js","styles/postEntryStyles.js","components/subcomponents/EditEmotions.js","components/subcomponents/GoogleMapsAPI.js","components/PostEntryComponent.js","styles/loginStyles.js","components/LoginComponent.js","components/SettingsScreen.js","components/WallpapersComponent.js","shared/UserContext.js","components/WallpaperZoomComponent.js","components/victory.ts","components/Charts.js","App.js","shared/emotionsConfig.js"],"names":["module","exports","styles","mainView","flex","postButton","position","height","width","borderRadius","bottom","alignSelf","backgroundColor","justifyContent","postButtonLabel","scrollView","section","paddingVertical","borderBottomWidth","borderColor","sectionTitle","fontSize","color","fontWeight","card","marginTop","paddingHorizontal","cardRow","flexDirection","alignItems","moodBadge","textAlign","emotionBadge","marginRight","textBadge","paddingTop","paddingBottom","lineHeight","textAlignVertical","text","spaceBetween","icon","entryIcon","paddingRight","borderWidth","editButtonsView","editButton","editButtonLabel","msgBox","msg","theme","altTheme","moodColors","monthDict","MoodHeader","entry","View","style","Text","mood","star","name","fill","weather","Image","source","uri","Platform","OS","main","temp","toString","slice","startTime","Address","useState","isCollapsed","setIsCollapsed","address","numberOfLines","onPress","top","Emotions","emotions","length","flexWrap","PaddingBottom","map","emotion","index","Jornal","jornal","left","EmptyCard","props","navigateParams","currentEntry","type","parentState","selectedDate","now","Date","split","join","Today","date","textStyle","Pressable","parentProps","navigation","navigate","CardsLoadingMessage","UserEntryCards","state","EntryCard","bind","EditEntryButtons","editUserEntry","deleteUserEntry","setFontColor","console","log","this","setParams","selectedEntryId","_id","entryId","selDateEntries","user","entries","filter","reverse","isUserDataSyncing","onButtonPress","setAlertMsg","onButtonLongPress","isButtonPressed","setIsButtonPressed","highlightButtonFor","label","isLoading","isDeleteLoading","buttonLabel","selectable","disabled","onPressIn","onLongPress","ActivityIndicator","selectedEntry","a","async","setMainScreenState","isDeleteEntryLoading","UsersResult","ok","status","deleteEntryURI","appServerURI","username","fetch","method","usersStatus","statusText","Error","syncUserData","fontColorDark","settings","fontColor","altFontColor","UserEntryCardsList","Component","dateRange","englishMonthSigs","portugueseMonthSigs","englishWeekDayMap","getNextDate","next","nextDate","indexOf","formatDate","selDate","ymd","yesterday","englishWeekDay","weekDay","prefix","i","oneDigit","stringNumber","EntrancesScreen","DateNavigationButton","onNextButtonPress","hitSlop","time","alertMsg","getMainScreenState","setSelectedDate","route","params","setState","setTimeout","appState","backgroundImage","imgURI","displayBackgroundImage","enableHighResolution","urls","raw","regular","ImageBackground","ScrollView","size","login","StatusBar","currentHeight","entrances","content","flexGrow","contentRow","padding","entryTitle","paddingLeft","postButtonView","moodButtonView","moodButton","jornalText","saveButton","borderTopLeftRadius","borderTopRightRadius","saveButtonLabel","marginVertical","marginHorizontal","entryCardEmotionBadge","datetimeTitle","capitalize","multipleWordString","words","trim","CapitalizedWords","forEach","element","push","toUpperCase","EditEmotions","showEditMenu","showExpandMenuButton","mode","newEmotionName","selectedEmotionType","selectedEmotionEnergy","initialEmotionLayout","EditEmotionsMenu","EditEmotionsSection","onSaveEmotionButtonPress","emotionLayoutMap","inputSectionStyle","marginBottom","inputStyle","tagStyle","createEmotionViewStyle","borderTopWidth","borderTopColor","isDeleteEmotionLoading","isSaveEmotionLoading","isPostEntryLoading","isUpdateUserDataLoading","isNewEmotionFormComplete","TextInput","placeholder","placeholderTextColor","onChangeText","value","typeSelected","setParentState","deleteEmotionMode","layout","isLayoutSelected","selectedEmotionLayout","onSaveEmotionLayoutButtonPress","hidden","anyOpen","marginLeft","Object","keys","isSelectedEmotions","includes","newEmotion","energy","postEmotionResult","postUserEntryOpts","headers","body","JSON","stringify","postEmotionStatus","updateUserData","isSaveEmotionLayoutLoading","postEmotionLayoutResult","postEmotionLayoutOpts","postEmotionLayoutStatus","GoogleMapsAPI","GoogleMapsJavascriptAPIkey","GoogleMapsGeocodingAPIKey","Location","moods","moodColorsHEX","moodColorsRGBA","moodIcons","emotionGroupsNames","emotionTypes","emotionEnergy","buildIsSelectedEmotions","monthSigs","months","monthNameMap","monthSig","getTime","formatPostEntryDatetimeTitle","m","PostEntranceScreen","endTime","createdAt","lastEdited","selectedMood","jornalEntry","location","isMoodUnmarked","isFetchingLocationOrWeather","locationPermission","userCoordinates","loginMsg","initializeEntry","onSaveButtonPress","setLoginMsg","EmotionButtons","MoodButtons","postEntryHeader","onEmotionButtonPress","onMoodButtonPress","inputCardBody","setSelectedEntry","InputCard","JornalInput","postNewEntryAsync","deleteEmotion","onEmotionButtonLongPress","goBack","item","alpha","selected","selColor","selectMood","objList","objKey","obj","sortedKeys","sort","newObjList","key","sortObjListByKey","title","suppressHighlighting","selectEmotion","multiline","scrollEnabled","sectionName","cardBodyStyle","cardBodyContent","userEmotionGroups","emotionLabels","mapEmotions","setSelected","checkIfLocationEnabled","getCurrentLocation","fetchWeather","currentEmotions","isSelectedEmotionsNew","oldEmotions","newEmotionsSelected","isDataLoading","newEntryPost","newEntry","editMode","postUserEntryResult","postUserEntryStatus","coords","queryParams","lat","latitude","lon","longitude","units","fetchOptions","response","resStatus","json","weatherInfo","coord","clouds","wind","visibility","addr","street","streetNumber","district","subregion","region","isoCountryCode","minHeight","titleView","titleIcon","cardHeader","cardTitle","cardSection","loadingIcon","inputField","button","require","userScheme","falseParams","validateEmail","email","emailStatus","emailAddress","param","apiResp","apiRespJson","formatCheck","smtpCheck","registerLocallyIfUserIsNewToDevice","AsyncStorage","getItem","localAuthInfo","parse","users","localUser","updatedLocalAuthInfo","password","setItem","keepUserConnectionAlive","id","keepConnected","userId","LoginScreen","textContentType","autoComplete","importantForAutofill","secureTextEntry","submitButton","Switch","trackColor","false","true","thumbColor","ios_backgroundColor","onValueChange","LoginIcon","userInfo","isUserAuth","onSignIn","onSignUp","restoreUserToken","animation","textField","setField","sign","signIn","errMsg","NetInfo","then","DEVICE_IP_ADDRESS","details","ipAddress","Device","initialLocalAuthInfo","IP_ADDRESS","deviceBrand","deviceManufacturer","deviceModelName","deviceModelId","deviceOsName","deviceOsVersion","deviceName","deviceType","info","isInputEmpty","UsersStatus","Users","setAppState","postUserResult","emailValidation","reqStatus","passwordCheck","postUserOpts","postUserStatus","successMsg","colorList","background","foreground","header","settingsRow","colorBox","colorRow","colorSquare","logout","h1","h2","h3","h4","blinkButton","setPressed","timeSpan","postSettings","postSettingsResult","postSettingsOpts","postSettingsStatus","alert","SettingsScreen","isBackgroundColorSettingsOpen","selectedColor","isDisplayBackgroundImageLoading","isChangeFontColorLoading","isEnableHighResolutionLoading","isRestoreColorLoading","isSaveColorLoading","syncUserSettings","setBackgroundColor","ScreenSettings","ChooseImageSection","DisplayBackgroundImageSection","ChangeFontColorSection","EnableHighResolutionSection","ChangeBackgroundColorSection","ColorOptions","ColorControl","onLogoutButtonPress","onColorButtonPressFor","onSaveColorButtonPress","onChangeFontColorSwitch","ColorRow","logoutPressable","h","React","isChooseImageButtonPressed","setIsChooseImageButtonPressed","isExposeImageButtonPressed","setIsExposeImageButtonPressed","displayBackgroundImageValue","onDisplayBackgroundImageSwitch","isEnableHighResolutionButtonPressed","setIsEnableHighResolutionButtonPressed","enableHighResolutionValue","onEnableHighResolutionSwitch","isChangeFontColorButtonPressed","setIsChangeFontColorButtonPressed","changeFontColorValue","isColorButtonPressed","setIsColorButtonPressed","newColorUnselected","nestedScrollEnabled","isColorRowPressed","setIsColorRowPressed","fontStyle","textDecorationLine","isLogoutButtonPressed","setIsLogoutButtonPressed","logoutColor","newSettings","colorSetting","isWindows","formatTopicName","photosView","headerLabel","image","getUnsplash","endpoint","reqParams","result","result_json","success","Item","topicsScreen","photoURI","cover_photo","nextScreenName","screenHeight","windowHeight","photoHeight","photoWidth","selectedImage","margin","slug","WallpapersComponent","renderItem","PhotoList","useEffect","subscription","Dimensions","addEventListener","window","screen","Math","abs","remove","FlatList","data","photos","keyExtractor","numColumns","initialNumToRender","onEndReached","loadNextPagePhotosAsync","refreshing","isPhotosLoading","page","get","hideHeader","initializePhotosAsync","WallpapersHeaderText","WallpapersHeader","ControlButtons","per_page","order_by","asyncResult","orientation","prevState","headerText","topRight","right","SafeAreaView","UserContext","createContext","fotter","controlView","attributionView","controlButton","controlButtonLabel","userProfileImage","attributionLabel","maxWidth","attributionURL","openUnsplashURL","Linking","openURL","WallpaperZoom","useContext","isSaveImageLoading","setIsSaveImageLoading","userProfileHtmlLink","imageSetting","profile_image","large","links","html","Victory","moodColorsObj","statsRowItem","h5","moodMap","interpolations","ChartCard","Chart","MoodLineCard","temporal","setTemporal","interpolation","setInterpolation","temporalClicked","setTemporalClicked","interpolationClicked","setInterpolationClicked","MoodLineTemporal","MoodLine","current","nextIndex","nextInterpolation","time_s","x_domain","x_dif","times","parseInt","b","x_min","x_max","VictoryChart","domain","x","y","VictoryAxis","dependentAxis","tickFormat","tick","axis","stroke","grid","tickLabels","tickValues","tickEntry","tickLabelComponent","VictoryLabel","angle","dx","dy","axisLabel","ticks","VictoryLine","strokeWidth","VictoryScatter","datum","MoodPieCard","MoodPie","MoodPieStats","MoodStat","moodCountObj","countObj","moodCount","moodProp","round","colorScale","row","VictoryPie","innerRadius","padAngle","cornerRadius","labels","Charts","todayEntries","moodData","1","2","3","4","5","moodPieData","linking","prefixes","config","screens","Home","Entrances","Settings","PostEntrance","WallpaperTopics","Wallpapers","loginLinking","Login","LoadingScreen","SettingsScreenProvider","EntrancesScreenProvider","PostEntranceScreenProvider","WallpapersScreenProvider","WallpaperZoomScreenProvider","ChartsScreenProvider","Stack","createNativeStackNavigator","Tab","createBottomTabNavigator","tabBarIcon","iconName","focused","newIconName","HomeTab","Navigator","initialRouteName","screenOptions","headerShown","tabBarShowLabel","tabBarHideOnKeyboard","tabBarBackground","LinearGradient","colors","start","end","Screen","component","initialParams","options","HomeStack","App","getAppState","LoginContainer","ContextProvider","UserResult","userStatus","NavigationContainer","fallback","Provider","emotionGroups","defaultEmotions"],"mappings":"8FAAAA,EAAOC,QAAU,IAA0B,uC,gUCwI5BC,EAtIF,CACTC,SAAU,CACNC,KAAM,GAGVC,WAAY,CACRC,SAAU,WACVC,OAAQ,GACRC,MAAO,GACPC,aAAc,GACdC,OAAQ,KACRC,UAAW,SACXC,gBAAiB,gBACjBC,eAAgB,UAEpBC,gBAAiB,CACbH,UAAW,UAEfI,WAAY,CAERX,KAAM,GAEVY,QAAS,CACLR,MAAO,IACPS,gBAAiB,MACjBC,kBAAmB,EACnBC,YAAa,wBACbR,UAAW,UAEfS,aAAc,CACVH,gBAAiB,IACjBI,SAAU,GACVC,MAAO,QACPC,WAAY,OAEhBC,KAAM,CACFC,UAAW,KACXR,gBAAiB,EACjBS,kBAAmB,GACnBjB,aAAc,GACdG,gBAAiB,mBAErBe,QAAS,CACLC,cAAe,MACfX,gBAAiB,EACjBY,WAAY,UAEhBC,UAAW,CAEPlB,gBAAiB,QACjBH,aAAc,GACdQ,gBAAiB,EACjBT,MAAO,IACPa,SAAU,GACVU,UAAW,UAEfC,aAAc,CAEVpB,gBAAiB,UACjBH,aAAc,GACdQ,gBAAiB,EACjBS,kBAAmB,KACnBO,YAAa,EACbZ,SAAU,GACVU,UAAW,UAEfG,UAAW,CACPtB,gBAAiB,YACjBH,aAAc,GACd0B,WAAY,EACZC,cAAe,EACfV,kBAAmB,GACnBlB,MAAO,OACPa,SAAU,GACVgB,WAAY,GACZN,UAAW,OACXO,kBAAmB,OAEvBC,KAAM,CAEFlB,SAAU,GACVC,MAAO,SAEXkB,aAAc,CACV3B,eAAgB,iBAEpB4B,KAAM,CACFf,kBAAmB,IAEvBgB,UAAW,CACPC,aAAc,EACdC,YAAa,GAEjBC,gBAAiB,CACbjB,cAAe,MACfrB,OAAQ,GACR6B,cAAe,EACfP,WAAY,WACZhB,eAAgB,iBAEpBiC,WAAY,CACRvC,OAAQ,GACRC,MAAO,IACPoC,YAAa,EACbzB,YAAa,YACbV,aAAc,GACdoB,WAAY,SACZhB,eAAgB,UAEpBkC,gBAAiB,CACb1B,SAAU,GACVE,WAAY,MACZD,MAAO,SAEX0B,OAAQ,CACJ1C,SAAU,WACVK,UAAW,SACXD,OAAQ,IACRF,MAAO,IACPS,gBAAiB,GACjBS,kBAAmB,GAEnBb,eAAgB,SAChBD,gBAAiB,gBACjBgC,YAAa,EACbzB,YAAa,iBAEjB8B,IAAK,CACDlB,UAAW,SACXT,MAAO,U,u/BC5HfpB,EAAOgD,MAAQ,GAAIhD,EAAOiD,SAAW,GAerC,IAAMC,EAAa,CAAC,cAAY,UAAW,IAAO,UAAW,QAAW,UAAW,IAAO,UAAW,WAAS,WAExGC,EAAY,CAAC,IAAO,KAAM,IAAO,KAAM,IAAO,KAAM,IAAO,KAAM,IAAO,KAAM,IAAO,KAAM,IAAO,KAAM,IAAO,KAAM,IAAO,KAAM,IAAO,KAAM,IAAO,KAAM,IAAO,MAOzK,SAASC,EAAT,GAA8B,IAnBGb,EAmBZc,EAAQ,EAARA,MACjB,OACI,eAACC,EAAA,EAAD,CAAMC,MAAQ,CAACvD,EAAOyB,QAASzB,EAAOsC,cAAtC,UACI,eAACgB,EAAA,EAAD,CAAMC,MAAQ,CAAC,CAAC7B,cAAe,MAAOC,WAAY,WAAlD,UACI,cAAC6B,EAAA,EAAD,CAAMD,MAAO,CAACvD,EAAO4B,UAAW,CAAClB,gBAAiBwC,EAAWG,EAAMI,QAAnE,SAA6EJ,EAAMI,OAC7EJ,EAAMK,KACR,cAACJ,EAAA,EAAD,CAAMC,MAAO,CAAClD,OAAQ,GAAIC,MAAO,GAAIqB,WAAY,WAAYhB,eAAgB,UAA7E,SACI,cAAC,OAAD,CAAMgD,KAAK,OAAOC,KAAK,OAAOtD,MAAO,GAAID,OAAQ,OAEjD,6BACFgD,EAAMQ,QACJ,cAACP,EAAA,EAAD,CAAMC,MAAO,CAAClD,OAAQ,GAAIC,MAAO,GAAIqB,WAAY,WAAYhB,eAAgB,UAA7E,SACI,cAACmD,EAAA,EAAD,CAAOC,OAAQ,CAACC,KA/BXzB,EA+BuCc,EAAMQ,QAAQA,QAAQtB,KA9BtE,YAAhB0B,IAASC,GACH,oCAAqC3B,EAA3C,UAEuB,QAAhB0B,IAASC,GACV,qCAAsC3B,EAA5C,eADG,IA2B2FgB,MAAO,CAACjD,MAAO,GAAID,OAAQ,QAEzG,6BACFgD,EAAMQ,QACJ,cAACP,EAAA,EAAD,CAAMC,MAAO,CAAClD,OAAQ,GAAIC,MAAO,GAAIqB,WAAY,WAAYhB,eAAgB,UAA7E,SACI,eAAC6C,EAAA,EAAD,CAAMD,MAAO,CAACvD,EAAOgD,MAAO,CAAC7B,SAAU,KAAvC,cAAgDkC,EAAMQ,QAAQM,KAAKC,KAAKC,WAAWC,MAAM,EAAE,GAAK,QAAhG,SAEJ,gCAGZ,eAAChB,EAAA,EAAD,CAAMC,MAAO,CAACvD,EAAOyB,SAArB,UACI,cAAC,OAAD,CAAMkC,KAAK,OAAOtD,OAAQ,GAAIC,MAAO,GAAIsD,KAAK,yBAAyBL,MAAO,CAACxB,YAAa,KAC5F,cAACyB,EAAA,EAAD,CAAMD,MAAOvD,EAAOqC,KAApB,SAA2BgB,EAAMkB,UAAUD,MAAM,EAAE,WAOnE,SAASE,EAAT,GAA4B,IAATnB,EAAQ,EAARA,MACf,EAAsCoB,mBAAU,GAAhD,WAAOC,EAAP,KAAoBC,EAApB,KACA,OAAItB,EAAMuB,QAEF,cAACtB,EAAA,EAAD,CAAMC,MAAOvD,EAAOyB,QAApB,SACI,eAAC+B,EAAA,EAAD,CAAMqB,cAAgBH,EAAcI,QAAU,WAAQH,EAAgBD,EAAc,EAAI,IAAOnB,MAAOvD,EAAOqC,KAA7G,UACI,cAAC,OAAD,CAAMsB,KAAK,MAAMtD,OAAQ,GAAIC,MAAO,GAAIsD,KAAK,yBAAyBL,MAAO,CAACnD,SAAU,WAAY2B,YAAa,EAAGgD,IAAK,KACxH1B,EAAMuB,aAKZ,6BAIf,SAASI,EAAT,GAA6B,IAAT3B,EAAQ,EAARA,MAChB,OAAIA,EAAM4B,SAASC,OAAS,EAEpB,cAAC5B,EAAA,EAAD,CAAMC,MAAO,CAACvD,EAAOyB,QAAS,CAAC0D,SAAU,OAAQxE,eAAgB,aAAcsB,WAAY,EAAGmD,cAAe,IAA7G,SACM/B,EAAM4B,SAASI,KAAI,SAACC,EAASC,GAI3B,OAHID,EAAQ3B,OACR2B,EAAUA,EAAQ3B,MAGlB,cAACL,EAAA,EAAD,CAAiCC,MAAO,CAACxC,gBAAiB,EAAGS,kBAAmB,GAAhF,SACI,cAACgC,EAAA,EAAD,CAAMD,MAAO,CAACvD,EAAO8B,cAArB,SAAqCwD,KAD9B,WAAaA,QASpC,6BAKZ,SAASE,EAAT,GAA4B,IAAVnC,EAAS,EAATA,MACd,OAAIA,EAAMoC,OAEF,cAACnC,EAAA,EAAD,CAAMC,MAAOvD,EAAOyB,QAApB,SACI,eAAC+B,EAAA,EAAD,CAAMD,MAAOvD,EAAOgC,UAApB,UACI,cAAC,OAAD,CAAM2B,KAAK,YAAYtD,OAAQ,GAAIC,MAAO,GAAIsD,KAAK,mBAAmBL,MAAO,CAACnD,SAAU,WAAY2E,IAAK,EAAGW,KAAM,EAAG3D,YAAa,KACjIsB,EAAMoC,YAKZ,6BAIf,SAASE,EAAUC,GACf,IACMC,EAAiB,CACnBC,aAAc,CACVC,KAHMH,EAAMI,YAAYC,cA5FpC,WACI,IAAMC,EAAMC,OAAO9B,WAAW+B,MAAM,KAEpC,MADc,CAAEF,EAAI,GAAI/C,EAAU+C,EAAI,IAAKA,EAAI,IAAKG,KAAK,KA0FTC,GAG1B,MAAQ,cACtBC,KAAMX,EAAMI,YAAYC,aACxB5C,MAAO,OAMTmD,EAAY,CAAC,CAACrF,SAAU,GAAII,UAAW,GAAIvB,EAAOgD,OACxD,OACI,eAACyD,EAAA,EAAD,CACA3B,QAAU,kBAAMc,EAAMc,YAAYC,WAAWC,SAAS,eAAgBf,IACtEtC,MAAO,CAACvD,EAAOsB,KAAM,CAACK,WAAY,SAAUhB,eAAgB,SAAUQ,SAAU,GAAId,OAAQ,MAF5F,UAII,cAAC,OAAD,CAAMsD,KAAK,QAAQC,KAAK,wBAAwBtD,MAAO,GAAID,OAAQ,KACnE,cAACmD,EAAA,EAAD,CAAMD,MAAOiD,EAAb,2CACA,cAAChD,EAAA,EAAD,CAAMD,MAAOiD,EAAb,gEAKZ,SAASK,IACL,OACI,eAACvD,EAAA,EAAD,CAAMC,MAAO,CAACvD,EAAOsB,KAAM,CAACK,WAAY,SAAUhB,eAAgB,SAAUN,OAAQ,KAApF,UACI,cAAC,OAAD,CAAMsD,KAAK,eAAeC,KAAK,sBAAsBtD,MAAO,GAAID,OAAQ,KACxE,cAACmD,EAAA,EAAD,CAAMD,MAAO,CAACvD,EAAOgD,MAAO,CAACzB,UAAW,GAAIJ,SAAU,KAAtD,0C,IAKS2F,E,gCAEjB,WAAYlB,GAAQ,IAAD,sBACf,cAAMA,IACDmB,MAAQ,GAEb,EAAKC,UAAY,EAAKA,UAAUC,KAAf,QACjB,EAAKC,iBAAmB,EAAKA,iBAAiBD,KAAtB,QACxB,EAAKE,cAAgB,EAAKA,cAAcF,KAAnB,QACrB,EAAKG,gBAAkB,EAAKA,gBAAgBH,KAArB,QACvB,EAAKI,aAAe,EAAKA,aAAaJ,KAAlB,QARL,E,6CAWnB,WACIK,QAAQC,IAAI,gD,kCAGhB,WACID,QAAQC,IAAI,oD,uBAGhB,YAAsB,IAAVlE,EAAS,EAATA,MAIR,OACA,eAACoD,EAAA,EAAD,CACA3B,QALA,WACI0C,KAAK5B,MAAMc,YAAYC,WAAWc,UAAU,CAAEC,gBAAiBF,KAAK5B,MAAMI,YAAY0B,kBAAoBrE,EAAMsE,IAAM,KAAOtE,EAAMsE,OAI7GV,KAAKO,MAC/BjE,MAAO,CAACvD,EAAOsB,MAFf,UAGI,cAAC8B,EAAD,CAAYC,MAAOA,IACnB,cAAC2B,EAAD,CAAU3B,MAAOA,IACjB,cAACmB,EAAD,CAASnB,MAAOA,IAChB,cAACmC,EAAD,CAAQnC,MAAOA,IACf,mBAAM6D,iBAAN,CAAuBU,QAASvE,EAAMsE,W,gCAK9C,WAAsB,IAAD,OACXE,EAAiBL,KAAK5B,MAAMI,YAAY8B,KAAKC,QAAQC,QAAQ,SAAA3E,GAAK,OAAIA,EAAMkD,OAAS,EAAKX,MAAMI,YAAYC,gBAAegC,UAGjI,OAAIJ,EAAe3C,OAEX,mCACM2C,EAAexC,KAAK,SAAAhC,GAAK,OAAI,cAAC,EAAK2D,UAAN,CAAoD3D,MAAOA,GAAtC,cAAcA,EAAMkB,gBAIzEiD,KAAK5B,MAAMI,YAAYkC,kBACvB,cAACrB,EAAD,IAGA,cAAClB,EAAD,KAAe6B,KAAK5B,U,8BAInC,SAAiBA,GAAQ,IAAD,OAEduC,EAAgB,CAAE,OAAUX,KAAKL,cAAe,QAAW,WAAO,EAAKvB,MAAMwC,YAAY,kDACzFC,EAAoB,CAAE,OAAU,aAAU,QAAWb,KAAKJ,iBAEhE,EAA8C3C,mBAAS,CACnD,QAAU,EACV,SAAW,IAFf,WAAO6D,EAAP,KAAwBC,EAAxB,KAKA,SAASC,EAAmBC,GAIxB,OAHA,WACIF,EAAmB,EAAD,KAAMD,GAAN,UAAwBG,GAASH,EAAgBG,OAEhDxB,KAAKO,MAGhC,IAAMkB,EAAYlB,KAAK5B,MAAMI,YAAY2C,gBAAkBnB,KAAK5B,MAAMI,YAAYkC,kBAC5EU,EAAc,SAACH,GAAD,OAAW,cAACjF,EAAA,EAAD,CAAMqF,YAAY,EAAOtF,MAAO,CAACvD,EAAO6C,gBAAiB,CAACzB,MAAc,WAAPqH,EAAmB,MAAQzI,EAAOgD,MAAM5B,QAAzG,SAAoHqH,KACnJ,OAAIjB,KAAK5B,MAAMI,YAAY0B,iBAAmB9B,EAAMgC,QAE5C,cAACtE,EAAA,EAAD,CAAMC,MAAOvD,EAAO2C,gBAApB,SApBa,CAAC,SAAU,WAqBL0C,KAAK,SAACoD,GAAD,OAChB,cAAChC,EAAA,EAAD,CAEAlD,MAAO,CAAEvD,EAAO4C,WAAY,CACxBlC,gBAAiB4H,EAAgBG,GAASzI,EAAOgD,MAAM5B,MAAQ,IAAM,QACrEH,YAAoB,WAAPwH,EAAmB,MAAQzI,EAAOgD,MAAM5B,QAEzD0H,SAAWJ,EACX5D,QAAU,WAAO0D,EAAmBC,EAAnBD,GAA6BL,EAAcM,MAC5DM,UAAWP,EAAmBC,GAC9BO,YAAa,WAAOR,EAAmBC,EAAnBD,GAA6BH,EAAkBI,MATnE,SAWa,WAAPA,GACE,EAAK7C,MAAMI,YAAY2C,gBAAkB,cAACM,EAAA,EAAD,CAAmB7H,MAAM,QAElEwH,EAAYH,IAdpB,QACaA,EADb,IACsB7C,EAAMgC,cAoBjC,O,2BAIf,WAAiB,IAAD,OACNsB,EAAgB1B,KAAK5B,MAAMI,YAAY8B,KAAKC,QAAQC,QAAQ,SAAC3E,GAAD,OAAWA,EAAMsE,KAAO,EAAK/B,MAAMI,YAAY0B,mBAAkB,GAC7H7B,EAAiB,CACnBC,aAAc,CACVC,KAAM,OACNQ,KAAM2C,EAAc3C,KACpBlD,MAAO6F,IAMf1B,KAAK5B,MAAMc,YAAYC,WAAWC,SAAS,eAAgBf,K,6BAG/D,gCAAAsD,EAAAC,OAAA,uDAEI9B,QAAQC,IAAI,wCACZC,KAAK5B,MAAMyD,mBAAmB,CAAEC,sBAAsB,IAH1D,SAMYC,EAAc,CAACC,IAAI,EAAOC,OAAQ,KAChCzD,EAAcwB,KAAK5B,MAAMI,YACzB0D,EAAiBC,mDAA0B3D,EAAY8B,KAAK8B,SAAW,YAAc5D,EAAY0B,gBAR/G,WAAAyB,EAAA,MAS4BU,MAAOH,EAAgB,CAAEI,OAAQ,YAT7D,UASQP,EATR,OAWcQ,EAAe,UAAYR,EAAYE,OAAS,KAAOF,EAAYS,YAErET,EAAYC,GAbxB,iBAeYlC,QAAQC,IAAI,mDACZD,QAAQC,IAAIwC,GACZzC,QAAQC,IAAI,yCAjBxB,8BAoBYD,QAAQC,IAAK,IAAI0C,MAAM,oEACjB,IAAIA,MAAMF,GArB5B,0DAyBYzC,QAAQC,IAAI,+DACZD,QAAQC,IAAR,MACAC,KAAK5B,MAAMwC,YAAY,8DA3BnC,qBA8BQZ,KAAK5B,MAAMyD,mBAAmB,CAAEC,sBAAsB,IAEtDhC,QAAQC,IAA6D,uCACjEgC,EAAYC,GAjCxB,oCAAAL,EAAA,MAkCkB3B,KAAK5B,MAAMsE,gBAlC7B,QAmCY1C,KAAK5B,MAAMc,YAAYC,WAAWc,UAAU,CAAEC,gBAAiB,OAnC3E,qG,0BAwCA,WAII,IAHA,IAAMyC,EAAgB3C,KAAK5B,MAAMI,YAAY8B,KAAKsC,SAASD,cACrDE,EAAYF,EAAgB,OAAS,OACrCG,EAAeH,EAAgB,OAAS,OAC9C,MAAkB,CAAC,QAAS,QAA5B,eAAqC,CAAhC,IAAI5G,EAAK,KACVvD,EAAOuD,GAAP,OAAqBvD,EAAOuD,IAA5B,IAAoCnC,MAAOiJ,IAE/CrK,EAAOiD,SAAS7B,MAAQkJ,EACxBtK,EAAOiD,SAASvC,gBAAkB4J,I,oBAGtC,WAGI,OAFAhD,QAAQC,IAAI,iDACZC,KAAKH,eACEG,KAAK+C,yB,GA9KwBC,aC8Y7BC,EApiBG,CACd,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA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","file":"static/js/app.65794cc1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/wallpaper.219bc3cc.png\";","// import { StatusBar } from 'expo-status-bar';\r\n\r\nvar styles = {\r\n    mainView: {\r\n        flex: 1,                 \r\n        // marginTop: StatusBar.currentHeight,\r\n    },\r\n    postButton: {\r\n        position: 'absolute',\r\n        height: 60,\r\n        width: 60,\r\n        borderRadius: 30,\r\n        bottom: '2%',\r\n        alignSelf: 'center',\r\n        backgroundColor: 'rgba(0,0,0,1)',\r\n        justifyContent: 'center',  \r\n    },\r\n    postButtonLabel: {\r\n        alignSelf: 'center',\r\n    },\r\n    scrollView: {\r\n        // paddingHorizontal: Platform.OS != 'web' ? '5%' : '5%',\r\n        flex: 1,\r\n    },\r\n    section: {\r\n        width: 350,\r\n        paddingVertical: '16%',\r\n        borderBottomWidth: 1,\r\n        borderColor: 'rgba(155,155,155,0.3)',\r\n        alignSelf: 'center',\r\n    },\r\n    sectionTitle: {\r\n        paddingVertical: 7.5,\r\n        fontSize: 19,\r\n        color: 'white',\r\n        fontWeight: '400',\r\n    },\r\n    card: {\r\n        marginTop: '5%',\r\n        paddingVertical: 5,\r\n        paddingHorizontal: 10,\r\n        borderRadius: 20,\r\n        backgroundColor: 'rgba(0,0,0,0.3)',\r\n    },\r\n    cardRow: {\r\n        flexDirection: 'row',\r\n        paddingVertical: 5,\r\n        alignItems: 'center',\r\n    },\r\n    moodBadge: {\r\n        // fontFamily: 'sans-serif',\r\n        backgroundColor: 'green',\r\n        borderRadius: 30,\r\n        paddingVertical: 4,\r\n        width: 130,\r\n        fontSize: 15,\r\n        textAlign: 'center',\r\n    },\r\n    emotionBadge: {\r\n        // fontFamily: 'sans-serif',\r\n        backgroundColor: '#f4f3f4',\r\n        borderRadius: 18,\r\n        paddingVertical: 5,\r\n        paddingHorizontal: 12.5,\r\n        marginRight: 6,\r\n        fontSize: 14,\r\n        textAlign: 'center',\r\n    },\r\n    textBadge: {\r\n        backgroundColor: 'aliceblue',\r\n        borderRadius: 17,\r\n        paddingTop: 5,\r\n        paddingBottom: 8,\r\n        paddingHorizontal: 11,\r\n        width: '100%',\r\n        fontSize: 15,\r\n        lineHeight: 22,\r\n        textAlign: 'left',\r\n        textAlignVertical: 'top',\r\n},\r\n    text: {\r\n        // fontFamily: 'sans-serif',\r\n        fontSize: 14,\r\n        color: 'white'\r\n    },\r\n    spaceBetween: {\r\n        justifyContent: 'space-between',\r\n    },\r\n    icon: {\r\n        paddingHorizontal: 12,\r\n    },\r\n    entryIcon: {\r\n        paddingRight: 0,\r\n        borderWidth: 1,\r\n    },\r\n    editButtonsView: {\r\n        flexDirection: 'row',\r\n        height: 50,\r\n        paddingBottom: 5,\r\n        alignItems: 'flex-end',\r\n        justifyContent: 'space-between'\r\n    },\r\n    editButton: {\r\n        height: 34,\r\n        width: 102,\r\n        borderWidth: 1,\r\n        borderColor: 'aliceblue',\r\n        borderRadius: 17,\r\n        alignItems: 'center',\r\n        justifyContent: 'center'\r\n    },\r\n    editButtonLabel: {\r\n        fontSize: 15,\r\n        fontWeight: '400',\r\n        color: 'white',\r\n    },\r\n    msgBox: {\r\n        position: 'absolute',\r\n        alignSelf: 'center',\r\n        bottom: 110,\r\n        width: 300,\r\n        paddingVertical: 10,\r\n        paddingHorizontal: 10,\r\n        // height: 36,\r\n        justifyContent: 'center',\r\n        backgroundColor: 'rgb(30,30,30)',\r\n        borderWidth: 1,\r\n        borderColor: 'rgb(40,40,40)',\r\n    },\r\n    msg: {\r\n        textAlign: 'center',\r\n        color: 'white',\r\n        // paddingHorizontal: 20,\r\n    },\r\n};\r\n\r\nexport default styles;","// Module import\r\nimport React, { Component, useState } from 'react';\r\nimport { Platform, View, Text, Pressable, Image, ActivityIndicator } from 'react-native';\r\nimport { Icon } from 'react-native-eva-icons'\r\n\r\n// Local import\r\nimport styles from '../../styles/entrancesStyles'\r\nstyles.theme = {}; styles.altTheme = {}; \r\n\r\nconst appServerURI = 'https://mood-tracker-server.herokuapp.com/'\r\n\r\n// OpenWeatherMap API weather icons URI:\r\nfunction openWeatherMapIconsURI (icon) {\r\n    if (Platform.OS === 'android') {\r\n        return `http://openweathermap.org/img/wn/${icon}@2x.png`\r\n\r\n    } else if (Platform.OS === 'web') {\r\n        return `https://openweathermap.org/img/wn/${icon}@2x.png`\r\n    }\r\n}\r\n\r\n// Defining mood colors schema\r\nconst moodColors = {'Horrível': '#ff3333', 'Mal': '#0099cc', 'Regular': '#add8e6', 'Bem': '#ffff33', 'Ótimo': '#00cc00'};\r\n\r\nconst monthDict = {'Jan': '01', 'Feb': '02', 'Mar': '03', 'Apr': '04', 'May': '05', 'Jun': '06', 'Jul': '07', 'Ago': '08', 'Sep': '09', 'Oct': '10', 'Nov': '11', 'Dec': '12'}\r\nfunction Today() {\r\n    const now = Date().toString().split(' ')\r\n    const today = [ now[3], monthDict[now[1]], now[2] ].join('-')\r\n    return today\r\n}\r\n\r\nfunction MoodHeader({entry}) {\r\n    return(\r\n        <View style={ [styles.cardRow, styles.spaceBetween] }>\r\n            <View style={ [{flexDirection: 'row', alignItems: 'center'} ] }>\r\n                <Text style={[styles.moodBadge, {backgroundColor: moodColors[entry.mood]}]}>{entry.mood}</Text>\r\n                    { entry.star ? (\r\n                    <View style={{height: 30, width: 42, alignItems: 'flex-end', justifyContent: 'center'}}>\r\n                        <Icon name='star' fill='gold' width={28} height={28} />\r\n                    </View>\r\n                    ) : <></> }                    \r\n                    { entry.weather ? (\r\n                        <View style={{height: 30, width: 50, alignItems: 'flex-end', justifyContent: 'center'}}>\r\n                            <Image source={{uri: openWeatherMapIconsURI(entry.weather.weather.icon)}} style={{width: 40, height: 40}} />\r\n                        </View>\r\n                    ) : <></> }                    \r\n                    { entry.weather ? (\r\n                        <View style={{height: 30, width: 40, alignItems: 'flex-end', justifyContent: 'center'}}>\r\n                            <Text style={[styles.theme, {fontSize: 14}]}> { entry.weather.main.temp.toString().slice(0,2) + '°C' } </Text>\r\n                        </View>\r\n                    ) : <></> }                \r\n                \r\n            </View>\r\n            <View style={[styles.cardRow]}>\r\n                <Icon name='edit' height={18} width={18} fill='rgba(255,255,255,0.75)' style={{marginRight: 6}} />\r\n                <Text style={styles.text}>{entry.startTime.slice(0,5)}</Text>\r\n            </View>\r\n        </View>\r\n\r\n    )\r\n}\r\n\r\nfunction Address ({entry}) {\r\n    const [isCollapsed, setIsCollapsed] = useState( 1 );\r\n    if (entry.address) {\r\n        return(\r\n            <View style={styles.cardRow}>\r\n                <Text numberOfLines={ isCollapsed } onPress={ () => { setIsCollapsed( isCollapsed ? 0 : 1 ) }} style={styles.text}>\r\n                    <Icon name='pin' height={17} width={17} fill='rgba(255,255,255,0.75)' style={{position: 'relative', marginRight: 5, top: 2}} />\r\n                    {entry.address}\r\n                </Text>\r\n            </View>        \r\n        )\r\n    } else {\r\n        return <></>\r\n    }\r\n}\r\n\r\nfunction Emotions ({entry}) {\r\n    if (entry.emotions.length > 0) {\r\n        return (\r\n            <View style={[styles.cardRow, {flexWrap: 'wrap', justifyContent: 'flex-start', paddingTop: 2, PaddingBottom: 0}]}>\r\n                { entry.emotions.map((emotion, index) => {\r\n                    if (emotion.name) {\r\n                        emotion = emotion.name\r\n                    }\r\n                    return(\r\n                        <View key={'emotion-' + emotion} style={{paddingVertical: 5, paddingHorizontal: 2}}>\r\n                            <Text style={[styles.emotionBadge]}>{emotion}</Text>\r\n                        </View>\r\n                    )\r\n                })}\r\n            </View>\r\n        )\r\n    } else {\r\n        return (\r\n            <></>\r\n        )\r\n    }\r\n}\r\n\r\nfunction Jornal({ entry }) {\r\n    if (entry.jornal) {\r\n        return(\r\n            <View style={styles.cardRow}>\r\n                <Text style={styles.textBadge}>\r\n                    <Icon name='book-open' height={20} width={20} fill='rgba(0,0,0,0.25)' style={{position: 'relative', top: 4, left: 1, marginRight: 6}} />\r\n                    {entry.jornal}\r\n                </Text>\r\n            </View>\r\n        )\r\n    } else {\r\n        return <></>\r\n    }\r\n}\r\n\r\nfunction EmptyCard(props) {\r\n    const today = props.parentState.selectedDate == Today()\r\n    const navigateParams = {\r\n        currentEntry: {\r\n            type: today ? 'new' : 'custom-date',\r\n            date: props.parentState.selectedDate,\r\n            entry: null\r\n        },\r\n        // setMainScreenState: props.setMainScreenState,\r\n        // getMainScreenState: props.getMainScreenState,\r\n\r\n    }\r\n    const textStyle = [{fontSize: 16, marginTop: 7}, styles.theme]\r\n    return (\r\n        <Pressable\r\n        onPress={ () => props.parentProps.navigation.navigate('PostEntrance', navigateParams) }\r\n        style={[styles.card, {alignItems: 'center', justifyContent: 'center', fontSize: 16, height: 145}]}\r\n        >\r\n            <Icon name='inbox' fill='rgba(255,255,255,0.3)' width={25} height={25} />\r\n            <Text style={textStyle}> Nenhuma entrada encontrada. </Text>\r\n            <Text style={textStyle}> Pressione aqui para adicionar uma a este dia! </Text>\r\n        </Pressable>\r\n    );\r\n}\r\n\r\nfunction CardsLoadingMessage() {\r\n    return(\r\n        <View style={[styles.card, {alignItems: 'center', justifyContent: 'center', height: 85}]}>\r\n            <Icon name='sync-outline' fill='rgba(255,255,255,1)' width={25} height={25} />\r\n            <Text style={[styles.theme, {marginTop: 10, fontSize: 16}]}>Sincronizando entradas...</Text>\r\n        </View>\r\n    )\r\n}\r\n\r\nexport default class UserEntryCards extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n        \r\n        this.EntryCard = this.EntryCard.bind(this);\r\n        this.EditEntryButtons = this.EditEntryButtons.bind(this);\r\n        this.editUserEntry = this.editUserEntry.bind(this);\r\n        this.deleteUserEntry = this.deleteUserEntry.bind(this);\r\n        this.setFontColor = this.setFontColor.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log('Subcomponent \"UserEntryCards\" did mount...')\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        console.log('\"UserEntryCards\" sub-component will unmount...')\r\n      }\r\n    \r\n    EntryCard({ entry }) {\r\n        function onEntryCardPress() {\r\n            this.props.parentProps.navigation.setParams({ selectedEntryId: this.props.parentState.selectedEntryId === entry._id ? null : entry._id })\r\n        }\r\n        return (\r\n        <Pressable\r\n        onPress={onEntryCardPress.bind(this)}\r\n        style={[styles.card]}>\r\n            <MoodHeader entry={entry} />\r\n            <Emotions entry={entry} />\r\n            <Address entry={entry} />\r\n            <Jornal entry={entry} />\r\n            <this.EditEntryButtons entryId={entry._id} />\r\n        </Pressable>\r\n        );\r\n    }\r\n\r\n    UserEntryCardsList() {\r\n        const selDateEntries = this.props.parentState.user.entries.filter( entry => entry.date === this.props.parentState.selectedDate ).reverse()\r\n        // console.log('LOGGING USER ENTRIES:')\r\n        // console.log(selDateEntries)\r\n        if (selDateEntries.length) {\r\n            return(\r\n                <>\r\n                    { selDateEntries.map( entry => <this.EntryCard key={'entry-card-'+entry.startTime} entry={entry} />) }\r\n                    {/* { this.props.parentState.isUserDataSyncing ? <CardsLoadingMessage /> : null } */}\r\n                </>\r\n            )\r\n        } else if (this.props.parentState.isUserDataSyncing) {\r\n            return <CardsLoadingMessage />\r\n            \r\n        } else {\r\n            return <EmptyCard {...this.props} />\r\n        }\r\n    }\r\n\r\n    EditEntryButtons(props) {\r\n        const buttonLabels = ['Editar', 'Excluir']\r\n        const onButtonPress = { 'Editar': this.editUserEntry, 'Excluir': () => {this.props.setAlertMsg('Pressione e segure para excluir uma entrada.')} }\r\n        const onButtonLongPress = { 'Editar': () => {}, 'Excluir': this.deleteUserEntry }\r\n\r\n        const [isButtonPressed, setIsButtonPressed] = useState({\r\n            'Editar': false,\r\n            'Excluir': false,\r\n        })\r\n\r\n        function highlightButtonFor(label) {\r\n            function highlightButton() {\r\n                setIsButtonPressed({ ...isButtonPressed, [label]: !isButtonPressed[label] })\r\n            }\r\n            return highlightButton.bind(this);\r\n        }\r\n\r\n        const isLoading = this.props.parentState.isDeleteLoading | this.props.parentState.isUserDataSyncing\r\n        const buttonLabel = (label) => <Text selectable={false} style={[styles.editButtonLabel, {color: label=='Excluir' ? 'red' : styles.theme.color }]}>{label}</Text>\r\n        if (this.props.parentState.selectedEntryId == props.entryId) {\r\n            return(\r\n                <View style={styles.editButtonsView}>\r\n                    { buttonLabels.map( (label) => (\r\n                        <Pressable\r\n                        key={`edit-${label}-${props.entryId}`}\r\n                        style={[ styles.editButton, {\r\n                            backgroundColor: isButtonPressed[label] ? styles.theme.color + '4' : '#0000',\r\n                            borderColor: label=='Excluir' ? 'red' : styles.theme.color\r\n                        }]}\r\n                        disabled={ isLoading }\r\n                        onPress={ () => {highlightButtonFor(label)(); onButtonPress[label]()} }\r\n                        onPressIn={highlightButtonFor(label)}\r\n                        onLongPress={() => {highlightButtonFor(label)(); onButtonLongPress[label]()}}\r\n                        >\r\n                            { label=='Excluir' ? (\r\n                                this.props.parentState.isDeleteLoading ? <ActivityIndicator color='red' /> : buttonLabel(label)\r\n                                \r\n                            ) : buttonLabel(label) }\r\n                                                \r\n                        </Pressable>\r\n                    )) }\r\n            </View>\r\n            )\r\n        } else {\r\n            return null\r\n        }\r\n    }\r\n\r\n    editUserEntry() {\r\n        const selectedEntry = this.props.parentState.user.entries.filter( (entry) => entry._id == this.props.parentState.selectedEntryId )[0]\r\n        const navigateParams = {\r\n            currentEntry: {\r\n                type: 'edit',\r\n                date: selectedEntry.date,\r\n                entry: selectedEntry\r\n            },\r\n            // setMainScreenState: this.props.setMainScreenState,\r\n            // getMainScreenState: this.props.getMainScreenState,\r\n    \r\n        }\r\n        this.props.parentProps.navigation.navigate('PostEntrance', navigateParams)\r\n    }\r\n\r\n    async deleteUserEntry() {\r\n\r\n        console.log('DELETE USER ENTRY STATUS: Started...')\r\n        this.props.setMainScreenState({ isDeleteEntryLoading: true });\r\n\r\n        try {\r\n            var UsersResult = {ok: false, status: 999}\r\n            const parentState = this.props.parentState\r\n            const deleteEntryURI = appServerURI + 'Users/' + parentState.user.username + '/entries/' + parentState.selectedEntryId\r\n            UsersResult = await fetch( deleteEntryURI, { method: 'DELETE' });\r\n            // var UsersResult = await fetch( 'https://localhost:3000/' + 'Users/' + this.props.parentState.user.username + '/entries/' + this.props.parentState.selectedEntryId, { method: 'DELETE' });\r\n            const usersStatus =  'Status ' + UsersResult.status + ', ' + UsersResult.statusText\r\n\r\n            if (UsersResult.ok) {\r\n                // const users = await UsersResult.json();\r\n                console.log('fetch DELETE request for user entry successful.')\r\n                console.log(usersStatus)\r\n                console.log('DELETE USER ENTRY STATUS: Successful.')\r\n\r\n            } else {\r\n                console.log( new Error('\"fetch\" DELETE request for user entry failed. Throwing error...') )\r\n                throw new Error(usersStatus)\r\n            }\r\n    \r\n        } catch (error) {\r\n                console.log('DELETE USER ENTRY STATUS: Error captured. Printing error...')\r\n                console.log(error);\r\n                this.props.setAlertMsg('Não foi possível deletar a entrada. Tente novamente.')\r\n\r\n        } finally {\r\n            this.props.setMainScreenState({ isDeleteEntryLoading: false });\r\n            // this.props.setMainScreenState({ selectedEntryId: null })\r\n            console.log('DELETE USER ENTRY STATUS: FINISHED.' + UsersResult.ok ? 'Proceeding to sync user entries...' : 'Delete failed, skipping sync of user entries...')\r\n            if (UsersResult.ok) {\r\n                await this.props.syncUserData();\r\n                this.props.parentProps.navigation.setParams({ selectedEntryId: null })\r\n            }\r\n        }    \r\n    }\r\n\r\n    setFontColor() {\r\n        const fontColorDark = this.props.parentState.user.settings.fontColorDark\r\n        const fontColor = fontColorDark ? '#000' : '#fff'\r\n        const altFontColor = fontColorDark ? '#fff' : '#000'\r\n        for (let style of ['theme', 'text']) {\r\n            styles[style] = { ...styles[style], color: fontColor }\r\n        }\r\n        styles.altTheme.color = altFontColor\r\n        styles.altTheme.backgroundColor = altFontColor\r\n    }\r\n\r\n    render() {\r\n        console.log('\"Rendering \"UserEntryCards\" sub-component...\"')\r\n        this.setFontColor()\r\n        return this.UserEntryCardsList()\r\n    }\r\n}","const dateRange = [\r\n    \"2021-01-01\",\r\n    \"2021-01-02\",\r\n    \"2021-01-03\",\r\n    \"2021-01-04\",\r\n    \"2021-01-05\",\r\n    \"2021-01-06\",\r\n    \"2021-01-07\",\r\n    \"2021-01-08\",\r\n    \"2021-01-09\",\r\n    \"2021-01-10\",\r\n    \"2021-01-11\",\r\n    \"2021-01-12\",\r\n    \"2021-01-13\",\r\n    \"2021-01-14\",\r\n    \"2021-01-15\",\r\n    \"2021-01-16\",\r\n    \"2021-01-17\",\r\n    \"2021-01-18\",\r\n    \"2021-01-19\",\r\n    \"2021-01-20\",\r\n    \"2021-01-21\",\r\n    \"2021-01-22\",\r\n    \"2021-01-23\",\r\n    \"2021-01-24\",\r\n    \"2021-01-25\",\r\n    \"2021-01-26\",\r\n    \"2021-01-27\",\r\n    \"2021-01-28\",\r\n    \"2021-01-29\",\r\n    \"2021-01-30\",\r\n    \"2021-01-31\",\r\n    \"2021-02-01\",\r\n    \"2021-02-02\",\r\n    \"2021-02-03\",\r\n    \"2021-02-04\",\r\n    \"2021-02-05\",\r\n    \"2021-02-06\",\r\n    \"2021-02-07\",\r\n    \"2021-02-08\",\r\n    \"2021-02-09\",\r\n    \"2021-02-10\",\r\n    \"2021-02-11\",\r\n    \"2021-02-12\",\r\n    \"2021-02-13\",\r\n    \"2021-02-14\",\r\n    \"2021-02-15\",\r\n    \"2021-02-16\",\r\n    \"2021-02-17\",\r\n    \"2021-02-18\",\r\n    \"2021-02-19\",\r\n    \"2021-02-20\",\r\n    \"2021-02-21\",\r\n    \"2021-02-22\",\r\n    \"2021-02-23\",\r\n    \"2021-02-24\",\r\n    \"2021-02-25\",\r\n    \"2021-02-26\",\r\n    \"2021-02-27\",\r\n    \"2021-02-28\",\r\n    \"2021-03-01\",\r\n    \"2021-03-02\",\r\n    \"2021-03-03\",\r\n    \"2021-03-04\",\r\n    \"2021-03-05\",\r\n    \"2021-03-06\",\r\n    \"2021-03-07\",\r\n    \"2021-03-08\",\r\n    \"2021-03-09\",\r\n    \"2021-03-10\",\r\n    \"2021-03-11\",\r\n    \"2021-03-12\",\r\n    \"2021-03-13\",\r\n    \"2021-03-14\",\r\n    \"2021-03-15\",\r\n    \"2021-03-16\",\r\n    \"2021-03-17\",\r\n    \"2021-03-18\",\r\n    \"2021-03-19\",\r\n    \"2021-03-20\",\r\n    \"2021-03-21\",\r\n    \"2021-03-22\",\r\n    \"2021-03-23\",\r\n    \"2021-03-24\",\r\n    \"2021-03-25\",\r\n    \"2021-03-26\",\r\n    \"2021-03-27\",\r\n    \"2021-03-28\",\r\n    \"2021-03-29\",\r\n    \"2021-03-30\",\r\n    \"2021-03-31\",\r\n    \"2021-04-01\",\r\n    \"2021-04-02\",\r\n    \"2021-04-03\",\r\n    \"2021-04-04\",\r\n    \"2021-04-05\",\r\n    \"2021-04-06\",\r\n    \"2021-04-07\",\r\n    \"2021-04-08\",\r\n    \"2021-04-09\",\r\n    \"2021-04-10\",\r\n    \"2021-04-11\",\r\n    \"2021-04-12\",\r\n    \"2021-04-13\",\r\n    \"2021-04-14\",\r\n    \"2021-04-15\",\r\n    \"2021-04-16\",\r\n    \"2021-04-17\",\r\n    \"2021-04-18\",\r\n    \"2021-04-19\",\r\n    \"2021-04-20\",\r\n    \"2021-04-21\",\r\n    \"2021-04-22\",\r\n    \"2021-04-23\",\r\n    \"2021-04-24\",\r\n    \"2021-04-25\",\r\n    \"2021-04-26\",\r\n    \"2021-04-27\",\r\n    \"2021-04-28\",\r\n    \"2021-04-29\",\r\n    \"2021-04-30\",\r\n    \"2021-05-01\",\r\n    \"2021-05-02\",\r\n    \"2021-05-03\",\r\n    \"2021-05-04\",\r\n    \"2021-05-05\",\r\n    \"2021-05-06\",\r\n    \"2021-05-07\",\r\n    \"2021-05-08\",\r\n    \"2021-05-09\",\r\n    \"2021-05-10\",\r\n    \"2021-05-11\",\r\n    \"2021-05-12\",\r\n    \"2021-05-13\",\r\n    \"2021-05-14\",\r\n    \"2021-05-15\",\r\n    \"2021-05-16\",\r\n    \"2021-05-17\",\r\n    \"2021-05-18\",\r\n    \"2021-05-19\",\r\n    \"2021-05-20\",\r\n    \"2021-05-21\",\r\n    \"2021-05-22\",\r\n    \"2021-05-23\",\r\n    \"2021-05-24\",\r\n    \"2021-05-25\",\r\n    \"2021-05-26\",\r\n    \"2021-05-27\",\r\n    \"2021-05-28\",\r\n    \"2021-05-29\",\r\n    \"2021-05-30\",\r\n    \"2021-05-31\",\r\n    \"2021-06-01\",\r\n    \"2021-06-02\",\r\n    \"2021-06-03\",\r\n    \"2021-06-04\",\r\n    \"2021-06-05\",\r\n    \"2021-06-06\",\r\n    \"2021-06-07\",\r\n    \"2021-06-08\",\r\n    \"2021-06-09\",\r\n    \"2021-06-10\",\r\n    \"2021-06-11\",\r\n    \"2021-06-12\",\r\n    \"2021-06-13\",\r\n    \"2021-06-14\",\r\n    \"2021-06-15\",\r\n    \"2021-06-16\",\r\n    \"2021-06-17\",\r\n    \"2021-06-18\",\r\n    \"2021-06-19\",\r\n    \"2021-06-20\",\r\n    \"2021-06-21\",\r\n    \"2021-06-22\",\r\n    \"2021-06-23\",\r\n    \"2021-06-24\",\r\n    \"2021-06-25\",\r\n    \"2021-06-26\",\r\n    \"2021-06-27\",\r\n    \"2021-06-28\",\r\n    \"2021-06-29\",\r\n    \"2021-06-30\",\r\n    \"2021-07-01\",\r\n    \"2021-07-02\",\r\n    \"2021-07-03\",\r\n    \"2021-07-04\",\r\n    \"2021-07-05\",\r\n    \"2021-07-06\",\r\n    \"2021-07-07\",\r\n    \"2021-07-08\",\r\n    \"2021-07-09\",\r\n    \"2021-07-10\",\r\n    \"2021-07-11\",\r\n    \"2021-07-12\",\r\n    \"2021-07-13\",\r\n    \"2021-07-14\",\r\n    \"2021-07-15\",\r\n    \"2021-07-16\",\r\n    \"2021-07-17\",\r\n    \"2021-07-18\",\r\n    \"2021-07-19\",\r\n    \"2021-07-20\",\r\n    \"2021-07-21\",\r\n    \"2021-07-22\",\r\n    \"2021-07-23\",\r\n    \"2021-07-24\",\r\n    \"2021-07-25\",\r\n    \"2021-07-26\",\r\n    \"2021-07-27\",\r\n    \"2021-07-28\",\r\n    \"2021-07-29\",\r\n    \"2021-07-30\",\r\n    \"2021-07-31\",\r\n    \"2021-08-01\",\r\n    \"2021-08-02\",\r\n    \"2021-08-03\",\r\n    \"2021-08-04\",\r\n    \"2021-08-05\",\r\n    \"2021-08-06\",\r\n    \"2021-08-07\",\r\n    \"2021-08-08\",\r\n    \"2021-08-09\",\r\n    \"2021-08-10\",\r\n    \"2021-08-11\",\r\n    \"2021-08-12\",\r\n    \"2021-08-13\",\r\n    \"2021-08-14\",\r\n    \"2021-08-15\",\r\n    \"2021-08-16\",\r\n    \"2021-08-17\",\r\n    \"2021-08-18\",\r\n    \"2021-08-19\",\r\n    \"2021-08-20\",\r\n    \"2021-08-21\",\r\n    \"2021-08-22\",\r\n    \"2021-08-23\",\r\n    \"2021-08-24\",\r\n    \"2021-08-25\",\r\n    \"2021-08-26\",\r\n    \"2021-08-27\",\r\n    \"2021-08-28\",\r\n    \"2021-08-29\",\r\n    \"2021-08-30\",\r\n    \"2021-08-31\",\r\n    \"2021-09-01\",\r\n    \"2021-09-02\",\r\n    \"2021-09-03\",\r\n    \"2021-09-04\",\r\n    \"2021-09-05\",\r\n    \"2021-09-06\",\r\n    \"2021-09-07\",\r\n    \"2021-09-08\",\r\n    \"2021-09-09\",\r\n    \"2021-09-10\",\r\n    \"2021-09-11\",\r\n    \"2021-09-12\",\r\n    \"2021-09-13\",\r\n    \"2021-09-14\",\r\n    \"2021-09-15\",\r\n    \"2021-09-16\",\r\n    \"2021-09-17\",\r\n    \"2021-09-18\",\r\n    \"2021-09-19\",\r\n    \"2021-09-20\",\r\n    \"2021-09-21\",\r\n    \"2021-09-22\",\r\n    \"2021-09-23\",\r\n    \"2021-09-24\",\r\n    \"2021-09-25\",\r\n    \"2021-09-26\",\r\n    \"2021-09-27\",\r\n    \"2021-09-28\",\r\n    \"2021-09-29\",\r\n    \"2021-09-30\",\r\n    \"2021-10-01\",\r\n    \"2021-10-02\",\r\n    \"2021-10-03\",\r\n    \"2021-10-04\",\r\n    \"2021-10-05\",\r\n    \"2021-10-06\",\r\n    \"2021-10-07\",\r\n    \"2021-10-08\",\r\n    \"2021-10-09\",\r\n    \"2021-10-10\",\r\n    \"2021-10-11\",\r\n    \"2021-10-12\",\r\n    \"2021-10-13\",\r\n    \"2021-10-14\",\r\n    \"2021-10-15\",\r\n    \"2021-10-16\",\r\n    \"2021-10-17\",\r\n    \"2021-10-18\",\r\n    \"2021-10-19\",\r\n    \"2021-10-20\",\r\n    \"2021-10-21\",\r\n    \"2021-10-22\",\r\n    \"2021-10-23\",\r\n    \"2021-10-24\",\r\n    \"2021-10-25\",\r\n    \"2021-10-26\",\r\n    \"2021-10-27\",\r\n    \"2021-10-28\",\r\n    \"2021-10-29\",\r\n    \"2021-10-30\",\r\n    \"2021-10-31\",\r\n    \"2021-11-01\",\r\n    \"2021-11-02\",\r\n    \"2021-11-03\",\r\n    \"2021-11-04\",\r\n    \"2021-11-05\",\r\n    \"2021-11-06\",\r\n    \"2021-11-07\",\r\n    \"2021-11-08\",\r\n    \"2021-11-09\",\r\n    \"2021-11-10\",\r\n    \"2021-11-11\",\r\n    \"2021-11-12\",\r\n    \"2021-11-13\",\r\n    \"2021-11-14\",\r\n    \"2021-11-15\",\r\n    \"2021-11-16\",\r\n    \"2021-11-17\",\r\n    \"2021-11-18\",\r\n    \"2021-11-19\",\r\n    \"2021-11-20\",\r\n    \"2021-11-21\",\r\n    \"2021-11-22\",\r\n    \"2021-11-23\",\r\n    \"2021-11-24\",\r\n    \"2021-11-25\",\r\n    \"2021-11-26\",\r\n    \"2021-11-27\",\r\n    \"2021-11-28\",\r\n    \"2021-11-29\",\r\n    \"2021-11-30\",\r\n    \"2021-12-01\",\r\n    \"2021-12-02\",\r\n    \"2021-12-03\",\r\n    \"2021-12-04\",\r\n    \"2021-12-05\",\r\n    \"2021-12-06\",\r\n    \"2021-12-07\",\r\n    \"2021-12-08\",\r\n    \"2021-12-09\",\r\n    \"2021-12-10\",\r\n    \"2021-12-11\",\r\n    \"2021-12-12\",\r\n    \"2021-12-13\",\r\n    \"2021-12-14\",\r\n    \"2021-12-15\",\r\n    \"2021-12-16\",\r\n    \"2021-12-17\",\r\n    \"2021-12-18\",\r\n    \"2021-12-19\",\r\n    \"2021-12-20\",\r\n    \"2021-12-21\",\r\n    \"2021-12-22\",\r\n    \"2021-12-23\",\r\n    \"2021-12-24\",\r\n    \"2021-12-25\",\r\n    \"2021-12-26\",\r\n    \"2021-12-27\",\r\n    \"2021-12-28\",\r\n    \"2021-12-29\",\r\n    \"2021-12-30\",\r\n    \"2021-12-31\",\r\n    \"2022-01-01\",\r\n    \"2022-01-02\",\r\n    \"2022-01-03\",\r\n    \"2022-01-04\",\r\n    \"2022-01-05\",\r\n    \"2022-01-06\",\r\n    \"2022-01-07\",\r\n    \"2022-01-08\",\r\n    \"2022-01-09\",\r\n    \"2022-01-10\",\r\n    \"2022-01-11\",\r\n    \"2022-01-12\",\r\n    \"2022-01-13\",\r\n    \"2022-01-14\",\r\n    \"2022-01-15\",\r\n    \"2022-01-16\",\r\n    \"2022-01-17\",\r\n    \"2022-01-18\",\r\n    \"2022-01-19\",\r\n    \"2022-01-20\",\r\n    \"2022-01-21\",\r\n    \"2022-01-22\",\r\n    \"2022-01-23\",\r\n    \"2022-01-24\",\r\n    \"2022-01-25\",\r\n    \"2022-01-26\",\r\n    \"2022-01-27\",\r\n    \"2022-01-28\",\r\n    \"2022-01-29\",\r\n    \"2022-01-30\",\r\n    \"2022-01-31\",\r\n    \"2022-02-01\",\r\n    \"2022-02-02\",\r\n    \"2022-02-03\",\r\n    \"2022-02-04\",\r\n    \"2022-02-05\",\r\n    \"2022-02-06\",\r\n    \"2022-02-07\",\r\n    \"2022-02-08\",\r\n    \"2022-02-09\",\r\n    \"2022-02-10\",\r\n    \"2022-02-11\",\r\n    \"2022-02-12\",\r\n    \"2022-02-13\",\r\n    \"2022-02-14\",\r\n    \"2022-02-15\",\r\n    \"2022-02-16\",\r\n    \"2022-02-17\",\r\n    \"2022-02-18\",\r\n    \"2022-02-19\",\r\n    \"2022-02-20\",\r\n    \"2022-02-21\",\r\n    \"2022-02-22\",\r\n    \"2022-02-23\",\r\n    \"2022-02-24\",\r\n    \"2022-02-25\",\r\n    \"2022-02-26\",\r\n    \"2022-02-27\",\r\n    \"2022-02-28\",\r\n    \"2022-03-01\",\r\n    \"2022-03-02\",\r\n    \"2022-03-03\",\r\n    \"2022-03-04\",\r\n    \"2022-03-05\",\r\n    \"2022-03-06\",\r\n    \"2022-03-07\",\r\n    \"2022-03-08\",\r\n    \"2022-03-09\",\r\n    \"2022-03-10\",\r\n    \"2022-03-11\",\r\n    \"2022-03-12\",\r\n    \"2022-03-13\",\r\n    \"2022-03-14\",\r\n    \"2022-03-15\",\r\n    \"2022-03-16\",\r\n    \"2022-03-17\",\r\n    \"2022-03-18\",\r\n    \"2022-03-19\",\r\n    \"2022-03-20\",\r\n    \"2022-03-21\",\r\n    \"2022-03-22\",\r\n    \"2022-03-23\",\r\n    \"2022-03-24\",\r\n    \"2022-03-25\",\r\n    \"2022-03-26\",\r\n    \"2022-03-27\",\r\n    \"2022-03-28\",\r\n    \"2022-03-29\",\r\n    \"2022-03-30\",\r\n    \"2022-03-31\",\r\n    \"2022-04-01\",\r\n    \"2022-04-02\",\r\n    \"2022-04-03\",\r\n    \"2022-04-04\",\r\n    \"2022-04-05\",\r\n    \"2022-04-06\",\r\n    \"2022-04-07\",\r\n    \"2022-04-08\",\r\n    \"2022-04-09\",\r\n    \"2022-04-10\",\r\n    \"2022-04-11\",\r\n    \"2022-04-12\",\r\n    \"2022-04-13\",\r\n    \"2022-04-14\",\r\n    \"2022-04-15\",\r\n    \"2022-04-16\",\r\n    \"2022-04-17\",\r\n    \"2022-04-18\",\r\n    \"2022-04-19\",\r\n    \"2022-04-20\",\r\n    \"2022-04-21\",\r\n    \"2022-04-22\",\r\n    \"2022-04-23\",\r\n    \"2022-04-24\",\r\n    \"2022-04-25\",\r\n    \"2022-04-26\",\r\n    \"2022-04-27\",\r\n    \"2022-04-28\",\r\n    \"2022-04-29\",\r\n    \"2022-04-30\",\r\n    \"2022-05-01\",\r\n    \"2022-05-02\",\r\n    \"2022-05-03\",\r\n    \"2022-05-04\",\r\n    \"2022-05-05\",\r\n    \"2022-05-06\",\r\n    \"2022-05-07\",\r\n    \"2022-05-08\",\r\n    \"2022-05-09\",\r\n    \"2022-05-10\",\r\n    \"2022-05-11\",\r\n    \"2022-05-12\",\r\n    \"2022-05-13\",\r\n    \"2022-05-14\",\r\n    \"2022-05-15\",\r\n    \"2022-05-16\",\r\n    \"2022-05-17\",\r\n    \"2022-05-18\",\r\n    \"2022-05-19\",\r\n    \"2022-05-20\",\r\n    \"2022-05-21\",\r\n    \"2022-05-22\",\r\n    \"2022-05-23\",\r\n    \"2022-05-24\",\r\n    \"2022-05-25\",\r\n    \"2022-05-26\",\r\n    \"2022-05-27\",\r\n    \"2022-05-28\",\r\n    \"2022-05-29\",\r\n    \"2022-05-30\",\r\n    \"2022-05-31\",\r\n    \"2022-06-01\",\r\n    \"2022-06-02\",\r\n    \"2022-06-03\",\r\n    \"2022-06-04\",\r\n    \"2022-06-05\",\r\n    \"2022-06-06\",\r\n    \"2022-06-07\",\r\n    \"2022-06-08\",\r\n    \"2022-06-09\",\r\n    \"2022-06-10\",\r\n    \"2022-06-11\",\r\n    \"2022-06-12\",\r\n    \"2022-06-13\",\r\n    \"2022-06-14\",\r\n    \"2022-06-15\",\r\n    \"2022-06-16\",\r\n    \"2022-06-17\",\r\n    \"2022-06-18\",\r\n    \"2022-06-19\",\r\n    \"2022-06-20\",\r\n    \"2022-06-21\",\r\n    \"2022-06-22\",\r\n    \"2022-06-23\",\r\n    \"2022-06-24\",\r\n    \"2022-06-25\",\r\n    \"2022-06-26\",\r\n    \"2022-06-27\",\r\n    \"2022-06-28\",\r\n    \"2022-06-29\",\r\n    \"2022-06-30\"\r\n]\r\nexport default dateRange;","// Module imports\r\nimport React, { Component } from 'react';\r\nimport { View, Text, ImageBackground, Pressable, ScrollView, ActivityIndicator, Platform } from 'react-native';\r\nimport { Icon } from 'react-native-eva-icons'\r\n\r\n// Component imports\r\nimport UserEntryCards from './subcomponents/UserEntryCards';\r\n\r\n// Local imports\r\nimport dateRange from '../shared/dateRange';\r\nimport styles  from '../styles/entrancesStyles';\r\n\r\n// Defining pertinent constants\r\nconst monthDict = {'Jan': '01', 'Feb': '02', 'Mar': '03', 'Apr': '04', 'May': '05', 'Jun': '06', 'Jul': '07', 'Ago': '08', 'Sep': '09', 'Oct': '10', 'Nov': '11', 'Dec': '12'}\r\nconst englishMonthSigs = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Ago', 'Sep', 'Oct', 'Nov', 'Dec']\r\nconst portugueseMonthSigs = ['Jan', 'Fev', 'Mar', 'Abr', 'Mai', 'Jun', 'Jul', 'Ago', 'Set', 'Out', 'Nov', 'Dez']\r\nconst englishWeekDayMap = {'Mon': 'Seg', 'Tue': 'Ter', 'Wed': 'Qua', 'Thu': 'Qui', 'Fri': 'Sex', 'Sat': 'Sab', 'Sun': 'Dom'}\r\n\r\n// Defining pertinent functions\r\nexport function Today() {\r\n    const now = Date().toString().split(' ')\r\n    const today = [ now[3], monthDict[now[1]], now[2] ].join('-')\r\n    return today\r\n}\r\nfunction getNextDate(date, next='next') {\r\n    const nextDate = dateRange[dateRange.indexOf(date) + (next=='previous' ? -1 : 1)]\r\n    return nextDate\r\n}\r\nfunction getTime() {\r\n    //Wed,Jan,26,2022,15:12:37,GMT-0300,(Horário,Padrão,de,Brasília)\r\n    const now = Date().toString().split(' ')\r\n    const time = now[4]\r\n    return time\r\n}\r\nfunction formatDate(selDate) {\r\n    \r\n    var ymd = selDate.split('-')\r\n    const yesterday = getNextDate(Today(), 'previous')\r\n    const englishWeekDay = new Date(ymd[0], ymd[1], ymd[2]).toString().split(' ')[0]\r\n    const weekDay = englishWeekDayMap[englishWeekDay]\r\n    var prefix = ''\r\n\r\n    if (selDate === Today()) prefix = 'Hoje, '\r\n    else if (selDate === yesterday) prefix = 'Ontem, '\r\n    else prefix = weekDay + ', '\r\n    \r\n    for (var i=0; i<12; i++) {\r\n        if (monthDict[ englishMonthSigs[i] ] == ymd[1]) {\r\n            return prefix + oneDigit(ymd[2]) + '° ' + portugueseMonthSigs[i]\r\n        }\r\n    }\r\n}\r\nfunction oneDigit(stringNumber) {\r\n    if (stringNumber[0] == '0') return stringNumber.slice(1, stringNumber.length)\r\n    else return stringNumber\r\n}\r\n\r\nexport default class EntrancesScreen extends Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {            \r\n            date: Today(),\r\n            time: getTime(),\r\n            isDeleteEntryLoading: false,\r\n            alertMsg: '',\r\n        };\r\n        this.onNextButtonPress = this.onNextButtonPress.bind(this);\r\n        this.setFontColor = this.setFontColor.bind(this);\r\n        this.setAlertMsg = this. setAlertMsg.bind(this);\r\n        this.getMainScreenState = this.getMainScreenState.bind(this); // remove\r\n    }\r\n    \r\n    componentDidMount() {\r\n        console.log('\"Entries\" screen component did mount...')\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        console.log('\"EntriesScreen\" component will unmount...')\r\n    }\r\n\r\n    getMainScreenState() {\r\n        return this.state\r\n    }\r\n\r\n    onNextButtonPress(next='next') {\r\n        function setSelectedDate() {\r\n            this.props.navigation.setParams({\r\n                selectedEntryId: null,\r\n                selectedDate: getNextDate(this.props.route.params.selectedDate, next),\r\n            })\r\n        }\r\n        return setSelectedDate.bind(this);\r\n    }\r\n\r\n    setAlertMsg(msg) {\r\n        this.setState({alertMsg: msg})\r\n        setTimeout( () => this.setState({alertMsg: ''}) , 1000 * 5 )\r\n    }\r\n    \r\n    alertMsg() {\r\n        return(\r\n            <View style={[styles.msgBox, this.state.alertMsg ? {} : {height: null, paddingVertical: 10, backgroundColor: 'transparent', borderColor: 'transparent'} ]}>\r\n                <Text style={styles.msg}>{this.state.alertMsg}</Text>\r\n            </View>\r\n        )\r\n    }\r\n\r\n    DateNavigationButton = ({next}) => {\r\n        return(\r\n            <Pressable onPress={this.onNextButtonPress(next)} hitSlop={15} >\r\n                <Icon name={ next=='next' ? 'arrow-forward' : 'arrow-back'} width={29} height={29} fill={styles.theme.color} />\r\n            </Pressable>\r\n        )\r\n    }\r\n\r\n    setFontColor() {\r\n        const fontColor = this.props.appState.user.settings.fontColorDark ? '#000' : '#fff'\r\n        styles.theme = {color: fontColor}\r\n    }\r\n\r\n    render() {\r\n        console.log('Rendering \"EntriesScreen\" component...')\r\n\r\n        this.setFontColor()\r\n        const navigateParams = {\r\n            currentEntry: {type: 'new', date: Today(), entry: null},\r\n        }\r\n        const isLoading = this.props.appState.isUserDataSyncing | this.state.isDeleteEntryLoading\r\n        const settings = this.props.appState.user.settings\r\n        const backgroundImage = settings.backgroundImage\r\n        const imgURI =  settings.displayBackgroundImage ? (backgroundImage ? ( settings.enableHighResolution ? backgroundImage.urls.raw : backgroundImage.urls.regular ) : null ) : null\r\n        const backgroundColor = settings.backgroundColor\r\n\r\n        return(\r\n            <ImageBackground source={{uri: imgURI}} style={[styles.mainView, {backgroundColor: backgroundColor}]}>\r\n                \r\n                <ScrollView style={styles.scrollView}>\r\n                    <View style={styles.section}>\r\n                        <View style={[styles.cardRow, {justifyContent: 'space-between'}]}>\r\n                            <this.DateNavigationButton icon='arrow-back' next='previous' />\r\n                            <Text style={[styles.sectionTitle, styles.theme]}> {'Suas entradas  •  ' + formatDate(this.props.route.params.selectedDate)} </Text>                                \r\n                            <this.DateNavigationButton icon='arrow-forward' next='next' />\r\n                        </View>\r\n                        <UserEntryCards\r\n                        parentState={{\r\n                            selectedDate: this.props.route.params.selectedDate,\r\n                            selectedEntryId: this.props.route.params.selectedEntryId,\r\n                            user: this.props.appState.user,\r\n                            isUserDataSyncing: this.props.appState.isUserDataSyncing,\r\n                            isDeleteEntryLoading: this.state.isDeleteEntryLoading,\r\n                        }}\r\n                        parentProps={{\r\n                            navigation: this.props.navigation\r\n                        }}\r\n                        syncUserData={this.props.appState.syncUserData}\r\n                        setMainScreenState ={this.setState.bind(this)}\r\n                        getMainScreenState={this.getMainScreenState}\r\n                        setAlertMsg = {this.setAlertMsg}\r\n                        />\r\n                    </View>\r\n                </ScrollView>\r\n\r\n                <Pressable\r\n                onPress={() => {this.props.navigation.navigate( 'PostEntrance', navigateParams )}}\r\n                style={[styles.postButton, {backgroundColor: isLoading ? 'white' : 'black'}]}\r\n                disabled={isLoading}\r\n                >\r\n                { this.props.appState.isUserDataSyncing ? (\r\n                        <ActivityIndicator color='black' size={'large'} />\r\n                ) : (\r\n                    this.state.isDeleteEntryLoading ? (\r\n                        <ActivityIndicator color='red' size={'large'} />\r\n                    ) : (\r\n                        <Icon name='plus-circle' width={72} height={72} fill='#f4f3f4' style={styles.postButtonLabel}/>\r\n                    )\r\n                )}\r\n                </Pressable>\r\n\r\n                {this.alertMsg()}\r\n  \r\n            </ImageBackground>\r\n            )\r\n    }\r\n  }\r\n","import { StatusBar } from 'expo-status-bar';\r\n// import { Platform } from 'react-native';\r\n\r\nconst styles = {\r\n  login: {\r\n    msgBox: {\r\n      position: 'absolute',\r\n      bottom: '10%',\r\n      width: 300,\r\n      paddingHorizontal: 3,\r\n      paddingVertical: 5,\r\n      alignSelf: 'center',\r\n      // width: 350,\r\n      // height: 36,\r\n      justifyContent: 'center',\r\n      backgroundColor: 'rgb(30,30,30)',\r\n      borderWidth: 1,\r\n      borderColor: 'rgb(40,40,40)',\r\n    },\r\n    msg: {\r\n        textAlign: 'center',\r\n        color: 'white',\r\n        // paddingHorizontal: 15,\r\n    },\r\n  },\r\n  mainView: {\r\n    flex: 1,                 \r\n    marginTop: StatusBar.currentHeight,\r\n  },\r\n  entrances: {\r\n    marginTop: StatusBar.currentHeight,\r\n    borderWidth: 0,\r\n    flex:1,\r\n    justifyContent: 'space-between',\r\n    alignItems: 'flex-start',\r\n  },\r\n  scrollView: {\r\n    // paddingHorizontal: Platform.OS != 'web' ? '5%' : '5%',\r\n    width: '100%',\r\n    alignSelf: 'center',\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    paddingBottom: '0%',\r\n    paddingHorizontal: '5%',\r\n    alignSelf: 'stretch',\r\n    borderColor: 'black',\r\n  },\r\n  section: {\r\n    width: 350,\r\n    paddingVertical: '16%',\r\n    borderBottomWidth: 1,\r\n    borderColor: 'rgba(155,155,155,0.3)',\r\n    alignSelf: 'center',\r\n  },\r\n  contentRow: {\r\n    flexDirection: 'column',\r\n    padding: 10,\r\n    marginTop: 22,\r\n    borderWidth: 1,\r\n    borderColor: 'rgba(155,155,155, 0.4)',\r\n    borderRadius: 30,\r\n    backgroundColor: 'rgba(255,255,255, 0.3)',\r\n\r\n  },\r\n  entryTitle: {\r\n    paddingVertical: 3,\r\n    paddingLeft: 4,\r\n    fontSize: 19,\r\n    color: 'white',\r\n  },\r\n  entryIcon: {\r\n    paddingRight: 0,\r\n  },\r\n  postButtonView: {\r\n    height: 60,\r\n    width: 60,\r\n    borderRadius: 30,\r\n    alignSelf: 'center',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundColor: 'white',\r\n  },\r\n  postButtonLabel: {\r\n    fontSize: 45,\r\n    fontWeight: 'bold',\r\n  },\r\n  moodButtonView: {\r\n    width: 65,\r\n    height: 65,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    borderWidth: 1,\r\n  },\r\n  moodButton: {\r\n    width: 65,\r\n    height: 65,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  date: {\r\n    position: 'relative',\r\n    left: '60%',\r\n    paddingVertical: 8,\r\n    paddingHorizontal: 10,\r\n    fontSize: 15,\r\n    alignSelf: 'center',\r\n    backgroundColor: 'white',\r\n    borderRadius: 20\r\n  },\r\n  jornalText: {\r\n    paddingVertical: 5,\r\n    paddingHorizontal: 12,\r\n    flex: 1,\r\n    textAlignVertical: 'top',\r\n    width: '100%',\r\n    borderRadius: 20,\r\n    color: 'white',\r\n    fontSize: 16,\r\n  },\r\n  saveButton: {\r\n    height: 50,\r\n    width: '100%',\r\n    borderTopLeftRadius: 30,\r\n    borderTopRightRadius: 30,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundColor: 'white'\r\n  },\r\n  saveButtonLabel: {\r\n    fontWeight:'bold',\r\n    fontSize: 19\r\n  },\r\n  card: {\r\n    marginTop: '5%',\r\n    paddingVertical: 5,\r\n    paddingHorizontal: 10,\r\n    borderRadius: 20,\r\n    backgroundColor: 'rgba(0,0,0,0.2)',\r\n  },\r\n  cardRow: {\r\n      flexDirection: 'row',\r\n      paddingVertical: 5,\r\n      alignItems: 'center',\r\n  },\r\n  moodBadge: {\r\n      backgroundColor: 'green',\r\n      borderRadius: 30,\r\n      paddingVertical: 6,\r\n      width: 130,\r\n      fontSize: 16,\r\n      textAlign: 'center',\r\n  },\r\n  emotionBadge: {\r\n      backgroundColor: 'rgba(1,1,1,0.5)',\r\n      borderRadius: 30,\r\n      paddingVertical: 6,\r\n      paddingHorizontal: 12.5,\r\n      fontSize: 15,\r\n      textAlign: 'center',\r\n      marginVertical: 5,\r\n      marginHorizontal: 5\r\n  },\r\n  entryCardEmotionBadge: {\r\n    backgroundColor: 'aliceblue',\r\n    borderRadius: 30,\r\n    paddingVertical: 7,\r\n    paddingHorizontal: 12.5,\r\n    marginRight: 6,\r\n    fontSize: 15,\r\n    textAlign: 'center',\r\n  },\r\n  datetimeTitle: {\r\n    fontSize: 16,\r\n    marginRight: 3,\r\n  },\r\n  editButtonsView: {\r\n    flexDirection: 'row',\r\n    height: 55,\r\n    paddingVertical: 5,\r\n    alignItems: 'flex-end',\r\n    justifyContent: 'space-between'\r\n  },\r\n  editButton: {\r\n    height: 34,\r\n    width: 102,\r\n    borderWidth: 1,\r\n    borderColor: 'aliceblue',\r\n    borderRadius: 17,\r\n    alignItems: 'center',\r\n    justifyContent: 'center'\r\n  },\r\n  editButtonLabel: {\r\n      fontSize: 15,\r\n      fontWeight: '400',\r\n      color: 'white',\r\n  },\r\n}\r\n\r\nexport default styles;","import React, { Component, useState } from 'react';\r\nimport { View, Text,  Pressable, TextInput, ActivityIndicator, Platform } from 'react-native';\r\nimport { Icon } from 'react-native-eva-icons'\r\n// import VectorIcon from 'react-native-vector-icons/MaterialCommunityIcons';\r\nimport styles from '../../styles/postEntryStyles'\r\n\r\nconst appServerURI = 'https://mood-tracker-server.herokuapp.com/'\r\n\r\nexport function capitalize(multipleWordString) {\r\n    var words = multipleWordString.trim().split(' ');\r\n    var CapitalizedWords = [];\r\n    words.forEach(element => {\r\n    CapitalizedWords.push(element[0].toUpperCase() + element.slice(1, element.length));\r\n    });\r\n    return CapitalizedWords.join(' ');\r\n}\r\n\r\nexport default class EditEmotions extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showEditMenu: false,\r\n            showExpandMenuButton: true,\r\n            mode: 'hidden',\r\n            newEmotionName: '',\r\n            selectedEmotionType: null,\r\n            selectedEmotionEnergy: null,\r\n            initialEmotionLayout: null,\r\n        }\r\n        this.EditEmotionsMenu = this.EditEmotionsMenu.bind(this);\r\n        this.EditEmotionsSection = this.EditEmotionsSection.bind(this);\r\n        this.onSaveEmotionButtonPress = this.onSaveEmotionButtonPress.bind(this);\r\n    }\r\n\r\n    EditEmotionsSection() {\r\n\r\n        const emotionTypes = ['Positiva', 'Negativa']\r\n        const emotionEnergy = ['Calmo(a)', 'Energizado(a)']\r\n        const emotionLayoutMap = {\r\n            'Positiva ou Negativa': 'type',\r\n            'Calmo(a) ou Energizado(a)': 'energy',\r\n            'Grade': 'grid',\r\n            'Espalhado': 'spread'\r\n        }\r\n\r\n        const inputSectionStyle = {marginTop: 0, marginTop: 0   , alignItems: 'center'}\r\n        const textStyle = {color: styles.theme.color, fontSize: 16, alignSelf: 'center', marginBottom: 8}\r\n        const inputStyle = {width: '70%', height: 35, borderRadius: 16.5, color: styles.theme.color, backgroundColor: styles.altTheme.color+'8', fontSize: 15, textAlign: 'center' }\r\n        const tagStyle = {width: '45%', height: 28, borderRadius: 13.5,  marginBottom: 7, color: 'white', alignItems: 'center', justifyContent: 'center'}\r\n        const createEmotionViewStyle = {height: 420, marginTop: 10, paddingTop: 10, justifyContent: 'space-evenly', borderTopWidth: 1, borderTopColor: 'rgba(255,255,255,0.2)'}\r\n\r\n        const [isButtonPressed, setIsButtonPressed] = useState({\r\n            'Salvar': false,\r\n            'Voltar': false,\r\n            'Terminar': false,\r\n            'Salvar-Layout': false,\r\n            'Voltar-Layout': false\r\n        })\r\n        function highlightButtonFor(label) {\r\n            function highlightButton() {\r\n                setIsButtonPressed({ ...isButtonPressed, [label]: !isButtonPressed[label] })\r\n            }\r\n            return highlightButton.bind(this);\r\n        }\r\n\r\n        const isLoading = (\r\n            this.props.isDeleteEmotionLoading |\r\n            this.props.isSaveEmotionLoading |\r\n            this.props.isPostEntryLoading |\r\n            this.props.appState.isUserDataSyncing |\r\n            this.props.isUpdateUserDataLoading\r\n        )\r\n\r\n        const isNewEmotionFormComplete = !this.state.newEmotionName | !this.state.selectedEmotionType | !this.state.selectedEmotionEnergy\r\n\r\n        switch (this.state.mode) {\r\n\r\n            case 'hidden':\r\n                return null\r\n\r\n            case 'create':\r\n                return(\r\n                    <View style={createEmotionViewStyle}>\r\n                        <Text style={[ styles.theme, {fontSize: 22, alignSelf: 'center'}]}>Criar emoção</Text>\r\n                        <View style={inputSectionStyle}>\r\n                            <Text style={textStyle}>Nome</Text>\r\n                            <TextInput\r\n                            placeholder='Nome da emoção...'\r\n                            placeholderTextColor={styles.theme.color+'8'}\r\n                            style={inputStyle}\r\n                            onChangeText={text => this.setState({newEmotionName: text})}\r\n                            value={this.state.newEmotionName}\r\n                            />\r\n                        </View>\r\n                        <View style={inputSectionStyle}>\r\n                            <Text style={textStyle}>Tipo</Text>\r\n                            { emotionTypes.map((type) => {\r\n                                const typeSelected = this.state.selectedEmotionType === type\r\n                                return(\r\n                                    <Pressable\r\n                                    key={'emotion-'+type}\r\n                                    onPress={() => this.setState({selectedEmotionType: typeSelected ? null : type })}\r\n                                    style={[tagStyle, { backgroundColor: styles.altTheme.color + (typeSelected ? 'd' : '6') }]}>\r\n                                        <Text style={[{fontSize: 15}, styles.theme]}>{type}</Text>\r\n                                    </Pressable>\r\n                                )\r\n                            }) }\r\n                        </View>\r\n                        <View style={inputSectionStyle}>\r\n                            <Text style={textStyle}>Energia</Text>\r\n                            { emotionEnergy.map((type) => {\r\n                                const typeSelected = this.state.selectedEmotionEnergy === type\r\n                                return(\r\n                                    <Pressable\r\n                                    key={'emotion-'+type}\r\n                                    onPress={() => this.setState({selectedEmotionEnergy: typeSelected ? null : type })}\r\n                                    style={[tagStyle, { backgroundColor: styles.altTheme.color + (typeSelected ? 'd' : '6') }]}>\r\n                                        <Text style={[{fontSize: 15}, styles.theme]}>{type}</Text>\r\n                                    </Pressable>\r\n                                )\r\n                            }) }\r\n                        </View>\r\n                        <View style={[inputSectionStyle, {flexDirection: 'row', justifyContent: 'space-evenly'}]}>\r\n                            <Pressable\r\n                            onPress={() => {\r\n                                highlightButtonFor('Salvar')()\r\n                                this.onSaveEmotionButtonPress()\r\n                                setIsButtonPressed({'Salvar': false})\r\n                            }}\r\n                            onPressIn={highlightButtonFor('Salvar')}\r\n                            disabled={isLoading | isNewEmotionFormComplete}\r\n                            style={[styles.editButton, {\r\n                                alignSelf: 'center',\r\n                                backgroundColor: isButtonPressed['Salvar'] ? styles.theme.color+'5' : '#0000',\r\n                                borderColor: isLoading | isNewEmotionFormComplete ? styles.theme.color+'5' : styles.theme.color,\r\n                                }]}>\r\n                                <Text style={[ styles.editButtonLabel, {\r\n                                    color: isLoading | isNewEmotionFormComplete ? styles.theme.color+'5' : styles.theme.color\r\n                                }]}\r\n                                >\r\n                                {'Salvar'}\r\n                                </Text>\r\n                            </Pressable>\r\n                            <Pressable\r\n                            onPress={() => {\r\n                                highlightButtonFor('Voltar')()\r\n                                this.setState({showEditMenu: true, showExpandMenuButton: true, mode: 'hidden'})\r\n                                setIsButtonPressed({'Voltar': false})\r\n                            }}\r\n                            onPressIn={highlightButtonFor('Voltar')}\r\n                            disabled={isLoading}\r\n                            style={[styles.editButton, {\r\n                                alignSelf: 'center',\r\n                                backgroundColor: isButtonPressed['Voltar'] ? styles.theme.color+'5' : '#0000',\r\n                                borderColor: isLoading ? styles.theme.color+'5' : styles.theme.color,\r\n                                }]}>\r\n                                <Text style={[styles.editButtonLabel, {color: isLoading ? styles.theme.color+'5' : styles.theme.color}]}>Voltar</Text>\r\n                            </Pressable>\r\n                        </View>\r\n                    </View>\r\n                )\r\n\r\n            case 'delete':\r\n                return(\r\n                    <View style={[createEmotionViewStyle, {height: 180}]}>\r\n                        <Text style={{color: styles.theme.color, fontSize: 22, alignSelf: 'center'}}>Excluir emoções</Text>\r\n                        <Text style={{color: styles.theme.color, fontSize: 16, textAlign: 'center'}}>Pressione e segure para excluir uma emoção.</Text>\r\n                        <View style={[styles.cardRow, {justifyContent: 'space-evenly'}]}>\r\n                            <Pressable\r\n                            onPress={() => {\r\n                                highlightButtonFor('Terminar')();\r\n                                this.props.setParentState({deleteEmotionMode: false});\r\n                                this.setState({showEditMenu: true, showExpandMenuButton: true, mode: 'hidden'});\r\n                                setIsButtonPressed({'Terminar': false})\r\n                            }}\r\n                            onPressIn={highlightButtonFor('Terminar')}\r\n                            disabled={isLoading}\r\n                            style={[styles.editButton, {\r\n                                alignSelf: 'center',\r\n                                borderColor: isLoading ? styles.theme.color+'5' : styles.theme.color,\r\n                                backgroundColor: isButtonPressed['Terminar'] ? styles.theme.color+'5' : '#0000'\r\n                            }]}\r\n                            >\r\n                                <Text style={[styles.editButtonLabel, {color: isLoading ? styles.theme.color+'5' : styles.theme.color}]}>Terminar</Text>\r\n                            </Pressable>\r\n                        </View>\r\n                    </View>\r\n                )\r\n\r\n            case 'layout':\r\n                return(\r\n                    <View style={[createEmotionViewStyle, {height: 320}]}>\r\n                        <View style={inputSectionStyle}>\r\n                            <Text style={{color: styles.theme.color, fontSize: 22, alignSelf: 'center', paddingBottom: 25}}>Escolha o layout</Text>\r\n                            { ['Positiva ou Negativa', 'Calmo(a) ou Energizado(a)', 'Grade', 'Espalhado'].map((layout) => {\r\n                                const isLayoutSelected = this.props.selectedEmotionLayout === emotionLayoutMap[layout]\r\n                                return(\r\n                                    <Pressable\r\n                                    key={'emotion-'+layout}\r\n                                    onPress={() => this.props.setParentState({selectedEmotionLayout: emotionLayoutMap[layout] })}\r\n                                    style={[tagStyle, {width: 230, height: 30, borderRadius: 15, marginBottom: 10, backgroundColor: isLayoutSelected ? styles.altTheme.color+'d' : styles.altTheme.color+'5'}]}>\r\n                                        <Text style={[{fontSize: 15, color: styles.theme.color}]}>{layout}</Text>\r\n                                    </Pressable>\r\n                                )\r\n                            }) }\r\n                        </View>\r\n                        <View style={[inputSectionStyle, {flexDirection: 'row', justifyContent: 'space-evenly'}]}>\r\n                            <Pressable\r\n                            onPress={() => {\r\n                                highlightButtonFor('Salvar-Layout')()\r\n                                this.onSaveEmotionLayoutButtonPress()\r\n                                setIsButtonPressed({'Salvar-Layout': false})\r\n                            }}\r\n                            onPressIn={highlightButtonFor('Salvar-Layout')}\r\n                            disabled={ isLoading }\r\n                            style={[styles.editButton, {\r\n                                alignSelf: 'center',\r\n                                backgroundColor: isButtonPressed['Salvar-Layout'] ? styles.theme.color+'5' : '#0000',\r\n                                borderColor: isLoading ? styles.theme.color+'5' : styles.theme.color,\r\n                                }]}>\r\n                                <Text style={[styles.editButtonLabel, {color: isLoading ? styles.theme.color+'5' : styles.theme.color}]}>Salvar</Text>\r\n                            </Pressable>\r\n                            <Pressable\r\n                            onPress={() => {\r\n                                highlightButtonFor('Voltar-Layout')()\r\n                                this.props.setParentState({selectedEmotionLayout: this.state.initialEmotionLayout})\r\n                                this.setState({showEditMenu: true, showExpandMenuButton: true, mode: 'hidden', initialEmotionLayout: null})\r\n                                setIsButtonPressed({'Voltar-Layout': false})\r\n                            }}\r\n                            onPressIn={highlightButtonFor('Voltar-Layout')}\r\n                            disabled={isLoading}\r\n                            style={[styles.editButton, {\r\n                                alignSelf: 'center',\r\n                                borderColor: isLoading ? styles.theme.color+'5' : styles.theme.color,\r\n                                backgroundColor: isButtonPressed['Voltar-Layout'] ? styles.theme.color+'5' : '#0000'\r\n                                }]}>\r\n                                <Text style={[styles.editButtonLabel, {color: isLoading ? styles.theme.color+'5' : styles.theme.color}]}>Voltar</Text>\r\n                            </Pressable>\r\n                        </View>\r\n                    </View>\r\n                )\r\n\r\n            default:\r\n                return null\r\n        }\r\n    }\r\n\r\n    EditEmotionsMenu() {\r\n\r\n        const buttonLabels = ['Criar', 'Excluir', 'Layout']\r\n        const onButtonPress = { \r\n            'Criar': () => this.setState({showEditMenu: false, showExpandMenuButton: false, mode: 'create'}),\r\n            'Excluir': () => {\r\n                this.props.setParentState({deleteEmotionMode: !this.props.deleteEmotionMode})\r\n                this.setState({showEditMenu: false , showExpandMenuButton: false, mode: 'delete'})\r\n            },\r\n            'Layout': () => this.setState({showEditMenu: false, showExpandMenuButton: false, mode: 'layout', initialEmotionLayout: this.props.selectedEmotionLayout})\r\n        }\r\n        const [isButtonPressed, setIsButtonPressed] = useState({\r\n            'Criar': false,\r\n            'Excluir': false,\r\n            'Layout': false,\r\n        })\r\n        function highlightButtonFor(label) {\r\n            function highlightButton() {\r\n                setIsButtonPressed({ ...isButtonPressed, [label]: !isButtonPressed[label] })\r\n            }\r\n            return highlightButton.bind(this);\r\n        }\r\n\r\n        const showEditMenu =  this.state.showEditMenu\r\n        const showExpandMenuButton = this.state.showExpandMenuButton\r\n        const hidden = this.state.mode == 'hidden'\r\n        const anyOpen = showEditMenu || !hidden\r\n\r\n        const isLoading = (\r\n            this.props.isPostEntryLoading |\r\n            this.props.appState.isUserDataSyncing |\r\n            this.props.isUpdateUserDataLoading |\r\n            this.props.isDeleteEmotionLoading |\r\n            this.props.isSaveEmotionLoading\r\n        )\r\n\r\n        return(\r\n            <>\r\n                { showExpandMenuButton ? (\r\n                    <View style={[styles.cardRow, {height: 60, marginTop: 10, paddingTop: 10, justifyContent: showEditMenu ? 'space-between' : 'center', borderTopWidth: 1, borderTopColor: 'rgba(255,255,255,0.2)'}]}>\r\n                        { showEditMenu ? ( \r\n                            buttonLabels.map((label) => (\r\n                                <Pressable\r\n                                key={`emotion-${label}`}\r\n                                style={[styles.editButton,  {\r\n                                    backgroundColor: isButtonPressed[label] ? styles.theme.color+'5' : '#0000',\r\n                                    borderColor: isLoading ? styles.theme.color+'5' : styles.theme.color,\r\n                                    width: 75\r\n                                }]}\r\n                                disabled={ isLoading }\r\n                                onPress={() => {\r\n                                    highlightButtonFor(label)(); onButtonPress[label]()\r\n                                    setIsButtonPressed({ [label]: false })\r\n                                } }\r\n                                onPressIn={highlightButtonFor(label)}\r\n                                >\r\n                                    <Text style={[styles.editButtonLabel, {color: isLoading ? styles.theme.color+'5' : styles.theme.color}]}>{label}</Text>                    \r\n                                </Pressable>\r\n                            ))\r\n                        ) : null }\r\n                        <Pressable\r\n                        onPress={() => this.setState({ showEditMenu:  !showEditMenu })}\r\n                        // disabled={isLoading}\r\n                        style={{flexDirection: 'row', alignItems: 'center', justifyContent: 'center', paddingVertical: 5, width: 75}}>\r\n                            <Icon name={ !showEditMenu ? 'more-horizontal-outline' : 'arrow-back-outline' } fill={styles.theme.color} width={20} height={20} />\r\n                            <Text style={{color: styles.theme.color, fontSize: 15, marginLeft: 0}}> {anyOpen ? 'menos' : 'mais'}</Text>\r\n                        </Pressable>\r\n                    </View> \r\n                ) :  null  }\r\n            </>\r\n\r\n        )\r\n    }\r\n\r\n    async onSaveEmotionButtonPress() {\r\n\r\n        const newEmotionAlreadyExists = Object.keys(this.props.isSelectedEmotions).includes(capitalize(this.state.newEmotionName))\r\n        if (newEmotionAlreadyExists) {\r\n            this.props.setAlertMsg('Essa emoção já foi criada, escolha outro nome para continuar.')\r\n            return\r\n        }\r\n\r\n        try {\r\n            this.props.setParentState({ isSaveEmotionLoading: true });\r\n            var user = this.props.appState.user;\r\n            const newEmotion = {\r\n                name: capitalize(this.state.newEmotionName),\r\n                type: this.state.selectedEmotionType,\r\n                energy: this.state.selectedEmotionEnergy,\r\n            }\r\n\r\n            console.log('POST EMOTION STATUS: Started...')\r\n            var postEmotionResult = {ok: false, status: '999', statusText: 'Post not fetched yet.'}\r\n            const postUserEntryOpts = { \r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify( newEmotion ),\r\n            }\r\n            // var postUserEntryResult = await fetch('http://localhost:3000/Users/' + info.username + '/emotions', postUserEntryOpts);\r\n            postEmotionResult = await fetch( appServerURI + 'Users/' + user.username + '/emotions', postUserEntryOpts);\r\n            const postEmotionStatus = 'Status: ' + postEmotionResult.status + ', ' + postEmotionResult.statusText\r\n\r\n            if (postEmotionResult.ok) {\r\n                console.log('POST EMOTION STATUS: Successful.')\r\n                console.log(postEmotionStatus)\r\n                this.setState({\r\n                    showEditMenu: true,\r\n                    showExpandMenuButton: true,\r\n                    mode: 'hidden',\r\n                    newEmotionName: '',\r\n                    selectedEmotionType: null,\r\n                    selectedEmotionEnergy: null,        \r\n                })\r\n                    \r\n            } else {\r\n                console.log('POST EMOTION STATUS: Failed. Throwing error...')\r\n                throw new Error(postEmotionStatus)\r\n            }\r\n\r\n        } catch (error) {\r\n            this.props.setAlertMsg('Erro no servidor. Tente novamente...')\r\n            console.log('Erro capturado:')\r\n            console.log(error);\r\n\r\n        } finally {\r\n            console.log('POST EMOTION STATUS: Finished.')\r\n            this.props.setParentState({ isSaveEmotionLoading: false });\r\n            if (postEmotionResult.ok) {\r\n                await this.props.appState.syncUserData();\r\n                this.props.updateUserData();\r\n            }\r\n        } \r\n    }\r\n    \r\n    async onSaveEmotionLayoutButtonPress() {\r\n\r\n        try {\r\n            this.props.setParentState({ isSaveEmotionLayoutLoading: true });\r\n            var user = this.props.appState.user;\r\n            \r\n            console.log('POST EMOTION LAYOUT STATUS: Started...')\r\n            var postEmotionLayoutResult = {ok: false, status: '999', statusText: 'Post not fetched yet.'}\r\n            const postEmotionLayoutOpts = { \r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify( {layout: this.props.selectedEmotionLayout} ),\r\n            }\r\n            postEmotionLayoutResult = await fetch( appServerURI + 'Users/' + user.username + '/layout', postEmotionLayoutOpts);\r\n            // var postUserEntryResult = await fetch('http://localhost:3000/Users/' + info.username + '/emotions', postEmotionLayoutOpts);\r\n            const postEmotionLayoutStatus = 'Status: ' + postEmotionLayoutResult.status + ', ' + postEmotionLayoutResult.statusText\r\n\r\n            if (postEmotionLayoutResult.ok) {\r\n                console.log('POST EMOTION LAYOUT STATUS: Successful.')\r\n                console.log(postEmotionLayoutStatus)\r\n                this.setState({\r\n                    showEditMenu: true,\r\n                    showExpandMenuButton: true,\r\n                    mode: 'hidden',\r\n                    initialEmotionLayout: null,\r\n                })\r\n                    \r\n            } else {\r\n                console.log('POST EMOTION LAYOUT STATUS: Failed. Throwing error...')\r\n                throw new Error(postEmotionLayoutStatus)\r\n            }\r\n\r\n        } catch (error) {\r\n            this.props.setAlertMsg('Erro no servidor. Tente novamente...')\r\n            console.log('Erro capturado:')\r\n            console.log(error);\r\n\r\n        } finally {\r\n            console.log('POST EMOTION LAYOUT STATUS: Finished.')\r\n            this.props.setParentState({ isSaveEmotionLayoutLoading: false });\r\n            if (postEmotionLayoutResult.ok) {\r\n                await this.props.appState.syncUserData();\r\n                this.props.updateUserData();\r\n            }\r\n        } \r\n    }\r\n\r\n    setFontColor() {\r\n        const fontColorDark = this.props.appState.user.settings.fontColorDark\r\n        const fontColor = fontColorDark ? '#000' : '#fff'\r\n        const altFontColor = fontColorDark ? '#fff' : '#000'\r\n        for (let style of ['theme', ]) {\r\n            styles[style] = { ...styles[style], color: fontColor }\r\n        }\r\n        styles.altTheme.color = altFontColor\r\n        // styles.altTheme.backgroundColor = altFontColor\r\n    }    \r\n\r\n    render() {\r\n        return(\r\n            <>\r\n                <this.EditEmotionsSection />\r\n                <this.EditEmotionsMenu />\r\n            </>\r\n        )\r\n    }\r\n\r\n}","const GoogleMapsAPI = {\r\n    GoogleMapsJavascriptAPIkey: \"AIzaSyBVWbOwPAMRyz2bS6rYHrDftVeihQ8WMCo\",\r\n    GoogleMapsGeocodingAPIKey: \"AIzaSyB6O-DpvulBC0rom1mGy-mBcstIbPlDPHA\",\r\n}\r\n\r\nexport default GoogleMapsAPI","import React, { Component } from 'react';\r\nimport { View, Text, ImageBackground, Pressable, ScrollView, Platform, TextInput, ActivityIndicator } from 'react-native';\r\n\r\nimport { Icon } from 'react-native-eva-icons'\r\nimport VectorIcon from 'react-native-vector-icons/MaterialCommunityIcons';\r\nimport EditEmotions from './subcomponents/EditEmotions'\r\nimport styles from '../styles/postEntryStyles'\r\nstyles.theme = {}; styles.altTheme = {};\r\n\r\n// Geocoding and weather dependencies and APIs\r\nimport * as Location from 'expo-location';\r\nimport GoogleMapsAPI from './subcomponents/GoogleMapsAPI'\r\nLocation.setGoogleApiKey(GoogleMapsAPI.GoogleMapsGeocodingAPIKey)\r\n\r\nconst appServerURI = 'https://mood-tracker-server.herokuapp.com/'\r\n\r\n// Mood configs\r\nconst moods = ['Horrível', 'Mal', 'Regular', 'Bem', 'Ótimo']\r\nexport const moodColorsHEX = ['#ff3333', '#0099cc', '#add8e6', '#ffff33', '#00cc00']\r\nconst moodColorsRGBA = ['rgba(255, 51, 51, 1)', 'rgba(0, 153, 204, 1)', 'rgba(173, 216, 230, 1)', 'rgba(255, 255, 51, 1)', 'rgba(0, 204, 0, 1)']\r\nconst moodColorsTransp = (alpha) => [`rgba(255, 51, 51, ${alpha})`, `rgba(0, 153, 204, ${alpha})`, `rgba(173, 216, 230, ${alpha})`, `rgba(255, 255, 51, ${alpha})`, `rgba(0, 204, 0, ${alpha})`]\r\nexport const moodIcons = ['emoticon-dead', 'emoticon-sad', 'emoticon-neutral', 'emoticon-happy', 'emoticon-excited']\r\n\r\n// Emotion configs\r\nconst emotionGroupsNames = [ 'Bem & Calmo(a)', 'Bem & Energizado(a)', 'Mal & Calmo(a)', 'Mal & Energizado(a)' ]\r\nconst emotionTypes = ['Positiva', 'Negativa']\r\nconst emotionEnergy = ['Calmo(a)', 'Energizado(a)']\r\n\r\nfunction buildIsSelectedEmotions(emotions) {\r\n    var isSelectedEmotions = {}\r\n    for ( let emotion of emotions) {\r\n        isSelectedEmotions[emotion.name] = false\r\n    }\r\n    return isSelectedEmotions\r\n}\r\n\r\n// Date config\r\nconst monthSigs = ['Jan', 'Feb', 'Mar', 'Apr', 'Jun', 'Jul', 'Ago', 'Sep', 'Oct', 'Nov', 'Dec']\r\nconst months = ['01', '02', '03', '04', '05', '06', '07', '08', '09', '10', '11', '12']\r\n\r\nconst monthNameMap = {\r\n    '01': 'Janeiro',\r\n    '02': 'Fevereiro',\r\n    '03': 'Março',\r\n    '04': 'Abril',\r\n    '05': 'Maio',\r\n    '06': 'Junho',\r\n    '07': 'Julho',\r\n    '08': 'Agosto',\r\n    '09': 'Setembro',\r\n    '10': 'Outubro',\r\n    '11': 'Novembro',\r\n    '12': 'Dezembro',\r\n}\r\n\r\n// Functions\r\n\r\nfunction convertMonthSig(monthSig) {\r\n    const thisMonth = months[monthSigs.indexOf(monthSig)]\r\n    return thisMonth\r\n}\r\n\r\nfunction Today() {\r\n    const now = Date().toString().split(' ')\r\n    const today = [ now[3], convertMonthSig(now[1]), now[2] ].join('-')\r\n    return today\r\n}\r\n\r\nfunction getTime() {\r\n    //Wed,Jan,26,2022,15:12:37,GMT-0300,(Horário,Padrão,de,Brasília)\r\n    const now = Date().toString().split(' ')\r\n    const time = now[4]\r\n    return time\r\n}\r\n\r\nfunction oneDigit(stringNumber) {\r\n    if (stringNumber[0] == '0') return stringNumber.slice(1, stringNumber.length)\r\n    else return stringNumber\r\n}\r\n\r\nfunction formatPostEntryDatetimeTitle(date, time) {\r\n    const ymd = date.split('-')\r\n    const m = monthNameMap[ ymd[1] ]\r\n    return oneDigit( ymd[2] ) + ' ' + m + ' ' + ymd[0] + (time ? ' - ' : '') + time.slice(0,5)\r\n}\r\n\r\nfunction formattedAddress(addr) {\r\n    return (\r\n        ( addr.street ? addr.street + ', ' : '' ) +\r\n        ( addr.streetNumber ? addr.streetNumber + ' - ' : '' ) +\r\n        ( addr.district ? addr.district + ', ' : '' ) +\r\n        ( addr.subregion ? addr.subregion + '. ' : '' ) +\r\n        ( addr.region ? addr.region + ', ' : '' ) +\r\n        ( addr.isoCountryCode ? addr.isoCountryCode : '' )  + '.'\r\n    )\r\n}\r\n\r\nfunction mapEmotions(emotions, layout='grid') {\r\n    var userEmotionGroups = layout=='grid' ? [[],[],[],[]] : ( layout=='spread' ? [[]] : [[],[]] )\r\n    var emotionLabels = layout=='grid' ? emotionGroupsNames : ( layout=='type' ? emotionTypes : (layout=='spread' ? [''] : emotionEnergy ) )\r\n    for (let emotion of emotions) {\r\n        if (layout=='grid') {\r\n            if (emotion.type=='Positiva') {\r\n                if (emotion.energy=='Calmo(a)')\r\n                    userEmotionGroups[0] = [ ...userEmotionGroups[0], emotion]\r\n                else if (emotion.energy=='Energizado(a)')\r\n                    userEmotionGroups[1] = [ ...userEmotionGroups[1], emotion]\r\n            } else if (emotion.type=='Negativa') {\r\n                if (emotion.energy=='Calmo(a)')\r\n                    userEmotionGroups[2] = [ ...userEmotionGroups[2], emotion]\r\n                else if (emotion.energy=='Energizado(a)')\r\n                    userEmotionGroups[3] = [ ...userEmotionGroups[3], emotion]\r\n            }\r\n        } else if (layout=='type') {\r\n            if (emotion.type=='Positiva')\r\n                userEmotionGroups[0] = [ ...userEmotionGroups[0], emotion]\r\n            else if (emotion.type=='Negativa')\r\n                userEmotionGroups[1] = [ ...userEmotionGroups[1], emotion]\r\n        } else if (layout=='energy') {\r\n            if (emotion.energy=='Calmo(a)')\r\n                userEmotionGroups[0] = [ ...userEmotionGroups[0], emotion]\r\n            else if (emotion.energy=='Energizado(a)')\r\n                userEmotionGroups[1] = [ ...userEmotionGroups[1], emotion]\r\n        } else if (layout=='spread') {\r\n            userEmotionGroups[0] = [ ...userEmotionGroups[0], emotion]\r\n        }\r\n    }\r\n    return [userEmotionGroups, emotionLabels]\r\n}\r\n\r\nfunction sortObjListByKey(objList, objKey) {\r\n    const keys = objList.map(obj => obj[objKey])\r\n    const sortedKeys = [...keys].sort()\r\n    var newObjList = []\r\n    sortedKeys.forEach(key => {\r\n        newObjList.push( objList[keys.indexOf(key)] )\r\n    })\r\n    return newObjList\r\n}\r\n\r\nexport default class PostEntranceScreen extends Component {\r\n  \r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            user: this.props.appState.user,\r\n\r\n            date: '',\r\n            startTime: '',\r\n            endTime: '',\r\n            createdAt: '',\r\n            lastEdited: [],\r\n\r\n            star: false,\r\n            selectedMood: '',\r\n            emotions: [],\r\n            jornalEntry: '',    \r\n            address: '',\r\n            location: null,\r\n            weather: null,\r\n\r\n            selectedEntry: 'Avaliação',\r\n            isMoodUnmarked: true,\r\n            isSelectedEmotions: buildIsSelectedEmotions(this.props.appState.user.emotions),\r\n            selectedEmotionLayout: this.props.appState.user.layout,\r\n            isFetchingLocationOrWeather: false,\r\n            isPostEntryLoading: false,\r\n            isDeleteEmotionLoading: false,\r\n            isSaveEmotionLoading: false,\r\n            deleteEmotionMode: false,\r\n            isUpdateUserDataLoading: false,\r\n\r\n            locationPermission: null,\r\n            userCoordinates: null,\r\n            loginMsg: '',\r\n        };\r\n\r\n        this.initializeEntry = this.initializeEntry.bind(this);\r\n        this.onSaveButtonPress = this.onSaveButtonPress.bind(this);\r\n        this.saveButton = this.saveButton.bind(this);\r\n        this.setLoginMsg = this.setLoginMsg.bind(this);\r\n        this.EmotionButtons = this.EmotionButtons.bind(this);\r\n        this.MoodButtons = this.MoodButtons.bind(this);\r\n        this.postEntryHeader = this.postEntryHeader.bind(this);\r\n        this.onEmotionButtonPress = this.onEmotionButtonPress.bind(this);\r\n        this.onMoodButtonPress = this.onMoodButtonPress.bind(this);\r\n        this.inputCardBody = this.inputCardBody.bind(this);\r\n        this.setSelectedEntry = this.setSelectedEntry.bind(this);\r\n        this.InputCard = this.InputCard.bind(this);\r\n        this.JornalInput = this.JornalInput.bind(this);\r\n        this.postNewEntryAsync = this.postNewEntryAsync.bind(this);\r\n        this.updateUserData = this.updateUserData.bind(this);\r\n        this.deleteEmotion = this.deleteEmotion.bind(this);\r\n        this.onEmotionButtonLongPress = this.onEmotionButtonLongPress.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log('\"PostEntry\" component did mount.')\r\n        this.initializeEntry()\r\n    }\r\n\r\n    postEntryHeader() {\r\n        return(\r\n            <View style={[styles.cardRow, {justifyContent: 'space-between'}]}>\r\n                <Pressable onPress={() => {this.props.navigation.goBack()}} hitSlop={10} style={styles.postButton}>\r\n                    <Icon name='arrow-back' fill={styles.theme.color+'b'} height={29} width={29}/>\r\n                </Pressable>\r\n                <View style={[styles.entryCardEmotionBadge, {flexDirection: 'row', alignItems: 'center'}]}>\r\n                    <Text style={styles.datetimeTitle}> { formatPostEntryDatetimeTitle(this.props.route.params.currentEntry.date, this.state.startTime) } </Text>\r\n                    <Icon name='edit' fill='rgba(75,75,75,1)' height={20} width={20}/>\r\n                </View>\r\n                <Pressable onPress={() => {this.setState({star: !this.state.star})}}  hitSlop={10} style={styles.postButton}>\r\n                    <Icon name={this.state.star ? 'star' : 'star-outline'} fill={this.state.star ? 'gold' : styles.theme.color+'b' } height={30} width={30}/>\r\n                </Pressable>\r\n            </View>\r\n        )\r\n    }\r\n\r\n    MoodButtons() {\r\n        return moods.map((item, index) => {\r\n            const selected = this.state.selectedMood == item\r\n            const isMoodUnmarked = this.state.isMoodUnmarked\r\n            const selColor = moodColorsRGBA[index]\r\n            return(\r\n                <View key={'mood '+index} style={styles.moodButton}>\r\n                    <VectorIcon\r\n                    name={moodIcons[index]}\r\n                    size={isMoodUnmarked ? 52 : (selected ? 57 : 50) }\r\n                    color={ isMoodUnmarked ? selColor : (selected ? selColor : moodColorsTransp(0.5)[index]) }\r\n                    onPress={this.onMoodButtonPress(item)}\r\n                    />\r\n                </View>\r\n            )\r\n        })\r\n    }\r\n\r\n    onMoodButtonPress(item) {\r\n        function selectMood() {\r\n            if (this.state.selectedMood==item) {\r\n                this.setState({selectedMood: null, isMoodUnmarked: true})\r\n            } else {\r\n                this.setState({selectedMood: item, isMoodUnmarked: false})\r\n            }\r\n        }\r\n        selectMood = selectMood.bind(this);\r\n        return selectMood\r\n    }\r\n\r\n    EmotionButtons(emotions) {\r\n        return(\r\n            sortObjListByKey(emotions, 'name').map( emotion => (\r\n                <Pressable\r\n                key={'emotion-' + emotion.name}\r\n                title={emotion.name}\r\n                onPress={this.onEmotionButtonPress(emotion.name)}\r\n                onLongPress={this.onEmotionButtonLongPress(emotion.name)}\r\n                suppressHighlighting={true}\r\n                selectable={false}\r\n                >\r\n                    <Text\r\n                    selectable={false}\r\n                    // selectionColor={'#0000'}\r\n                    onLongPress={null}\r\n                    style={[styles.emotionBadge,\r\n                        {backgroundColor: this.state.isSelectedEmotions[emotion.name] ? 'lightblue' : 'aliceblue' }\r\n                    ]}\r\n                    >\r\n                        {emotion.name}\r\n                        </Text>\r\n                </Pressable>\r\n            ))\r\n        )\r\n    }\r\n\r\n    onEmotionButtonPress(emotion) {\r\n        function selectEmotion () {\r\n            this.setState({\r\n                isSelectedEmotions: {\r\n                    ...this.state.isSelectedEmotions,\r\n                    [emotion]: !this.state.isSelectedEmotions[emotion]\r\n                }\r\n            })    \r\n        }\r\n        selectEmotion = selectEmotion.bind(this);\r\n        return selectEmotion\r\n    }\r\n\r\n    onEmotionButtonLongPress(emotion) { \r\n        function selectEmotion () {\r\n            if (this.state.deleteEmotionMode) {\r\n                this.deleteEmotion(emotion)\r\n            }\r\n        }\r\n        selectEmotion = selectEmotion.bind(this);\r\n        return selectEmotion\r\n    }\r\n\r\n    JornalInput() {\r\n        return(\r\n            <TextInput\r\n            multiline\r\n            scrollEnabled\r\n            placeholder='Escreva aqui...'\r\n            placeholderTextColor='rgba(255,255,255,0.6)'\r\n            onChangeText={text => this.setState({jornalEntry: text})}\r\n            value={this.state.jornalEntry}\r\n            style={[styles.jornalText, styles.theme]}\r\n            >\r\n            </TextInput>\r\n        )\r\n    }\r\n\r\n    inputCardBody(sectionName, cardBodyStyle, cardBodyContent) {\r\n        if (this.state.selectedEntry === sectionName) {\r\n            if (sectionName == 'Emoções') {\r\n                const [userEmotionGroups, emotionLabels] = mapEmotions(this.props.appState.user.emotions, this.state.selectedEmotionLayout)\r\n                return(\r\n                    <>\r\n                        { userEmotionGroups.map((emotions, index) => (\r\n                            <View key={'emotion-group-' + index} style={{width: '100%', alignItems: 'center', marginVertical: 10}}>\r\n                                { emotionLabels[index] ? <Text style={{fontSize: 15, color: 'white', marginVertical: 8}}>{emotionLabels[index]}</Text> : null }\r\n                                <View key={index} style={[styles.cardRow, cardBodyStyle]}>\r\n                                    {cardBodyContent(emotions)}\r\n                                </View>\r\n                            </View>\r\n                        )) }\r\n                        <EditEmotions\r\n                        {...this.props}\r\n                        {...this.state}\r\n                        setParentState={this.setState.bind(this)}\r\n                        updateUserData={this.updateUserData}\r\n                        setAlertMsg={this.setLoginMsg}\r\n                        />\r\n                    </>\r\n\r\n                )\r\n            } else {\r\n                return(\r\n                    <View style={[styles.cardRow, cardBodyStyle]}>\r\n                        {cardBodyContent}\r\n                    </View>\r\n                )    \r\n            }\r\n        } else {\r\n            return(\r\n                <></>\r\n            )\r\n        }\r\n    }\r\n\r\n    InputCard(sectionName, icon, cardBodyStyle, cardBodyContent) {\r\n        return(\r\n            <View style={[styles.card]} >\r\n                <Pressable style={styles.cardRow} onPress={this.setSelectedEntry(sectionName)} >\r\n                    <Icon name={icon} fill={styles.theme.color+'c'} height={28} width={28} style={styles.entryIcon} />\r\n                    <Text style={styles.entryTitle}> {sectionName} </Text>\r\n                </Pressable>    \r\n                {this.inputCardBody(sectionName, cardBodyStyle, cardBodyContent)}  \r\n            </View>   \r\n        )\r\n    }\r\n\r\n    setSelectedEntry (entry) {\r\n        function setSelected() {\r\n            this.setState( {selectedEntry:  this.state.selectedEntry === entry ? null : entry  } )\r\n        }\r\n        setSelected = setSelected.bind(this);\r\n        return setSelected\r\n    }\r\n\r\n    loginMsg() {\r\n        return(\r\n          <View style={[styles.login.msgBox, this.state.loginMsg ? {} : {height: 0, backgroundColor: 'transparent', borderColor: 'transparent'} ]}>\r\n            <Text style={styles.login.msg}>{this.state.loginMsg}</Text>\r\n          </View>\r\n        )\r\n    }\r\n\r\n    setLoginMsg(msg) {\r\n        this.setState({loginMsg: msg})\r\n        setTimeout( () => this.setState({loginMsg: ''}) , 1000 * 5 )\r\n    }    \r\n\r\n    async initializeEntry() {\r\n        const currentEntry = this.props.route.params.currentEntry\r\n        const user = this.props.appState.user\r\n        switch (currentEntry.type) {\r\n            case 'new':\r\n                console.log('POST ENTRY STATUS: INITIATING BLANK NEW ENTRY! FETCHING LOCATION AND WEATHER DATA...')\r\n                this.setState({\r\n                    date: currentEntry.date,\r\n                    startTime: getTime(),\r\n                    endTime: '',\r\n                    isFetchingLocationOrWeather: true\r\n                })\r\n                await this.checkIfLocationEnabled();\r\n                await this.getCurrentLocation();                    \r\n                await this.fetchWeather()\r\n                this.setState({isFetchingLocationOrWeather: false})\r\n            break;\r\n        \r\n            case 'custom-date':\r\n                console.log('POST ENTRY STATUS: INITIALIZING CUSTOM DATE ENTRY! SETTING DATE TO: ' + currentEntry.date)\r\n                this.setState({\r\n                    date: currentEntry.date,\r\n                    startTime: '',\r\n                    endTime: '',\r\n                })\r\n                break\r\n\r\n            case 'edit':\r\n                const entry = currentEntry.entry\r\n                const currentEmotions = entry.emotions.map(emotion => emotion.name)\r\n                var isSelectedEmotionsNew = {}\r\n                for ( let emotion of user.emotions ) {\r\n                    isSelectedEmotionsNew[emotion.name] = currentEmotions.includes(emotion.name)\r\n                }\r\n\r\n                this.setState({\r\n                    date: entry.date,\r\n                    startTime: entry.startTime,\r\n                    endTime: entry.endTime,\r\n                    createdAt: entry.createdAt,\r\n                    lastEdited: entry.lastEdited,\r\n                    star: entry.star,\r\n                    selectedMood: entry.mood,\r\n                    isSelectedEmotions: isSelectedEmotionsNew,\r\n                    jornalEntry: entry.jornal,\r\n                    address: entry.address,\r\n                    location: entry.location,\r\n                    weather: entry.weather,\r\n                    isMoodUnmarked: false,\r\n                })\r\n                break\r\n    \r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    updateUserData() {\r\n        console.log('UPDATING USER DATA IN \"PostEntryComponent\"...')\r\n        this.setState({isUpdateUserDataLoading: true})\r\n        const user = this.props.appState.user\r\n\r\n        const oldEmotions = Object.keys(this.state.isSelectedEmotions)\r\n        const currentEmotions = user.emotions.map(emotion => emotion.name)\r\n        const newEmotions = currentEmotions.filter(emotion => oldEmotions.includes(emotion))\r\n\r\n        const newEmotionsSelected = buildIsSelectedEmotions(newEmotions)\r\n        oldEmotions.forEach(emotion => { \r\n            if (currentEmotions.includes(emotion)) \r\n                newEmotionsSelected[emotion] = this.state.isSelectedEmotions[emotion]\r\n        })\r\n\r\n        this.setState({\r\n            // user: user,\r\n            isSelectedEmotions: newEmotionsSelected,\r\n            isUpdateUserDataLoading: false\r\n        })\r\n    }\r\n\r\n    saveButton() {\r\n        const isDataLoading = (\r\n            this.state.isFetchingLocationOrWeather |\r\n            this.state.isPostEntryLoading |\r\n            this.state.isSaveEmotionLoading |\r\n            this.state.isDeleteEmotionLoading |\r\n            this.props.appState.isUserDataSyncing |\r\n            this.state.isUpdateUserDataLoading\r\n        )\r\n        var color;\r\n        switch (true) {\r\n            case this.state.isFetchingLocationOrWeather:\r\n                color = 'brown'\r\n                break;\r\n        \r\n            case this.state.isPostEntryLoading:\r\n                color = 'black'\r\n                break;\r\n            case this.state.isSaveEmotionLoading:\r\n                color = 'green'\r\n                break;\r\n            case this.state.isDeleteEmotionLoading:\r\n                color = 'red'\r\n                break;\r\n            case this.props.appState.isUserDataSyncing:\r\n                color = 'blue'\r\n                break;\r\n            case this.state.isUpdateUserDataLoading:\r\n                color = 'green'\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        return(\r\n            <Pressable\r\n            onPress={this.onSaveButtonPress}\r\n            disabled={isDataLoading}\r\n            style={styles.saveButton}\r\n            >\r\n                { isDataLoading ? (\r\n                    <ActivityIndicator size='small' color={color} />\r\n                ) : (\r\n                    <Text style={styles.saveButtonLabel}> Salvar </Text>\r\n                ) }\r\n            </Pressable>\r\n        )\r\n    }\r\n\r\n    onSaveButtonPress() {\r\n        if (!this.state.selectedMood) {\r\n            this.setLoginMsg('Adicione uma avaliação para continuar.')\r\n            this.setState({selectedEntry: 'Avaliação'})\r\n            return\r\n        }\r\n        const currentEntry = this.props.route.params.currentEntry\r\n        var lastEdited = getTime()\r\n        var createdAt, endTime\r\n        switch (currentEntry.type) {\r\n            case 'new':\r\n                endTime = lastEdited\r\n                createdAt = lastEdited\r\n                break;\r\n            case 'custom-date':\r\n                endTime = this.state.endTime // Returns empty string ''.\r\n                createdAt = lastEdited\r\n                break\r\n            case 'edit':\r\n                endTime = this.state.endTime\r\n                createdAt = this.state.createdAt\r\n                break\r\n            default:\r\n                break;\r\n        }\r\n        const newEntryPost = {\r\n            date: this.state.date,\r\n            startTime: this.state.startTime,\r\n            endTime: endTime,\r\n            createdAt: createdAt,\r\n            lastEdited: [ ...this.state.lastEdited, {date: Today(), time: lastEdited}],\r\n            star: this.state.star,\r\n            mood: this.state.selectedMood,\r\n            emotions: this.props.appState.user.emotions.filter( emotion => this.state.isSelectedEmotions[emotion.name] ),\r\n            jornal: this.state.jornalEntry,\r\n            address: this.state.address,\r\n            location: this.state.location,\r\n            weather: this.state.weather,\r\n        }\r\n        this.postNewEntryAsync(newEntryPost)\r\n    }\r\n    \r\n    async postNewEntryAsync(newEntry) {\r\n        this.setState({ isPostEntryLoading: true });\r\n        var user = this.props.appState.user;\r\n        const currentEntry = this.props.route.params.currentEntry\r\n        const editMode = currentEntry.type === 'edit';\r\n        try {\r\n            console.log('POST ENTRY STATUS: Started...')\r\n            var postUserEntryResult = {ok: false, status: '999', statusText: 'Post not fetched yet.'}\r\n            const postUserEntryOpts = { \r\n                method: editMode? 'PUT' : 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify( newEntry ),\r\n            }\r\n            // var postUserEntryResult = await fetch('http://localhost:3000/Users/' + info.username + '/entries', postUserEntryOpts);\r\n            postUserEntryResult = await fetch( appServerURI + 'Users/' + user.username + '/entries' + (editMode ? '/'+currentEntry.entry._id : ''), postUserEntryOpts);\r\n            const postUserEntryStatus = 'Status: ' + postUserEntryResult.status + ', ' + postUserEntryResult.statusText\r\n\r\n            if (postUserEntryResult.ok) {\r\n                console.log('POST ENTRY STATUS: Successful.')\r\n                console.log(postUserEntryStatus)\r\n                    \r\n            } else {\r\n                console.log('POST ENTRY STATUS: Failed. Throwing error...')\r\n                throw new Error(postUserEntryStatus)\r\n            }\r\n\r\n        } catch (error) {\r\n            this.setLoginMsg('Erro no servidor. Tente novamente...')\r\n            console.log('Erro capturado:')\r\n            console.log(error);\r\n\r\n        } finally {\r\n            console.log('POST ENTRY STATUS: Finished.')\r\n            this.setState({ isPostEntryLoading: false });\r\n            if (postUserEntryResult.ok) {\r\n                console.log('proceding to SYNC USER DATA IN RESPONSE TO SUCCESSFUL USER ENTRY POST... ')\r\n                this.props.appState.syncUserData()\r\n                // this.props.route.params.setMainScreenState({\r\n                //     selectedEntryId: null,\r\n                //     selectedDate: currentEntry.type == 'new' ? Today() : this.props.route.params.getMainScreenState().selectedDate,\r\n                // })\r\n                this.props.navigation.navigate('Entrances', {\r\n                    selectedEntryId: null,\r\n                    selectedDate: newEntry.date,\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    async deleteEmotion(emotion) {\r\n        this.setState({ isDeleteEmotionLoading: true });\r\n        var user = this.props.appState.user;\r\n        try {\r\n            console.log('DELETE EMOTION STATUS: Started...')\r\n            var postEmotionResult = {ok: false, status: '999', statusText: 'Post not fetched yet.'}\r\n            const postUserEntryOpts = { \r\n                method: 'DELETE',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n            }\r\n            // var postUserEntryResult = await fetch('http://localhost:3000/Users/' + info.username + '/emotions', postUserEntryOpts);\r\n            postEmotionResult = await fetch( appServerURI + 'Users/' + user.username + '/emotions/' + emotion, postUserEntryOpts);\r\n            const postEmotionStatus = 'Status: ' + postEmotionResult.status + ', ' + postEmotionResult.statusText\r\n\r\n            if (postEmotionResult.ok) {\r\n                console.log('DELETE EMOTION STATUS: Successful.')\r\n                console.log(postEmotionStatus)\r\n                    \r\n            } else {\r\n                console.log('DELETE EMOTION STATUS: Failed. Throwing error...')\r\n                throw new Error(postEmotionStatus)\r\n            }\r\n\r\n        } catch (error) {\r\n            this.setLoginMsg('Erro no servidor. Tente novamente...')\r\n            console.log('Erro capturado:')\r\n            console.log(error);\r\n\r\n        } finally {\r\n            console.log('DELETE EMOTION STATUS: Finished.')\r\n            this.setState({ isDeleteEmotionLoading: false });\r\n            if (postEmotionResult.ok) {\r\n                await this.props.appState.syncUserData();\r\n                this.updateUserData();\r\n            }\r\n        }\r\n    }\r\n\r\n    async fetchWeather() {\r\n        try {\r\n            if (this.state.userCoordinates) {\r\n                console.log('FETCH WEATHER STATUS: STARTED...!')\r\n                const coords = this.state.userCoordinates\r\n                const queryParams = {\r\n                    lat: coords.latitude,\r\n                    lon: coords.longitude,\r\n                    units: 'metric'\r\n                }\r\n                const fetchOptions = {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                    },    \r\n                    body: JSON.stringify({\r\n                        queryParams: queryParams\r\n                    })\r\n                }\r\n                const response = await fetch(appServerURI + 'api/weather', fetchOptions)\r\n                const resStatus = 'Status: ' + response.status + ', Status Text: ' + response.statusText\r\n                if (!response.ok) \r\n                    throw new Error(resStatus)\r\n                else {\r\n                    const weather = await response.json()\r\n                    console.log('FETCH WEATHER STATUS: SUCCESSFUL!')\r\n                    const weatherInfo = {\r\n                        coords: weather.coord,\r\n                        name: weather.name,\r\n                        weather: weather.weather[0],\r\n                        main: weather.main,\r\n                        clouds: weather.clouds,\r\n                        wind: weather.wind,\r\n                        visibility: weather.visibility,\r\n                    }\r\n                    this.setState({weather: weatherInfo})\r\n                }\r\n            } else {\r\n            // this.setLoginMsg('Não foi possível obter as condições do tempo. Tente reabrir essa tela...')\r\n            console.log('FETCH WEATHER STATUS: UNABLE TO START! USER POSITION NOT AVAILABLE.')\r\n            }\r\n        } catch (error) {\r\n            this.setLoginMsg('Não foi possível obter as condições do tempo. Tente reabrir essa tela...')\r\n            console.log('FETCH WEATHER STATUS: ERROR! LOGGING ERROR...')\r\n            console.log(error)\r\n\r\n        } finally {\r\n            console.log('FETCH WEATHER STATUS: FINISHED!')    \r\n        }\r\n    }\r\n\r\n    // Check if device has location services enabled\r\n    async checkIfLocationEnabled () {\r\n\r\n        try{\r\n            console.log('GEOCODING PROCESS (CHECK): CHECKING IF USER HAS SERVICES ENABLED.' )\r\n            let enabled = await Location.hasServicesEnabledAsync();            \r\n\r\n            if (!enabled) {\r\n                console.log('GEOCODING PROCESS (CHECK): CHECKED! USER DOES NOT HAVE SERVICES ENABLED.' )\r\n                this.setLoginMsg('Não foi possível obter sua localização. Habilite o serviço de localização para associar um endereço a essa entrada...')\r\n            } else {\r\n                console.log('GEOCODING PROCESS (CHECK): CHECKED! USER HAS SERVICES ENABLED.')\r\n            }\r\n\r\n        } catch(error) {\r\n            this.setLoginMsg('Não foi possível conferir se o serviço de localização está ativado. Tente reabrir essa tela...')\r\n            console.log(\"GEOCODING PROCESS (CHECK): ERROR IN SERVICES PERMISSION CHECK! COULD'NT CHECK IF USER HAS SERVICES ENABLED.\")\r\n        \r\n        } finally {\r\n            console.log(\"GEOCODING PROCESS (CHECK): FINISHED!\")\r\n        }\r\n    };\r\n\r\n    // Check for permission, get current user position and use reverse geocoding for user coordinates\r\n    async getCurrentLocation() {\r\n\r\n        try {\r\n\r\n            if (this.state.locationPermission === 'granted') {\r\n                console.log('GEOCODING PROCESS (PERMISSION): PERMISSION ALREADY GRANTED. SKIPPING REQUEST...')\r\n            } else {\r\n                console.log('GEOCODING PROCESS (PERMISSION): REQUESTING PERMISSION ASYNC...')\r\n                let { status } = await Location.requestForegroundPermissionsAsync()\r\n                // let { status } = await Location.requestBackgroundPermissionsAsync()        \r\n                this.setState({locationPermission: status})\r\n    \r\n                if (status !== 'granted') {\r\n                    console.log('GEOCODING PROCESS (PERMISSION): PERMISSION NOT GRANTED!')\r\n                    this.setLoginMsg('Permissão de localização não concedida. Permita que o app use os serviços de localização para associar um endereço a essa entrada...')\r\n                    return \r\n    \r\n                } else {\r\n                    console.log('GEOCODING PROCESS (PERMISSION): PERMISSION GRANTED!')\r\n                }\r\n            }\r\n\r\n            console.log('GEOCODING PROCESS (REQUEST): GETTING CURRENT USER POSITION ASYNC...')\r\n            let { coords } = await Location.getCurrentPositionAsync();\r\n            \r\n            if (coords) {   \r\n                console.log(`GEOCODING PROCESS (REQUEST): CURRENT USER POSITION FOUND... Latitude: ${latitude}, Logitude: ${longitude}`)\r\n                console.log('GEOCODING PROCESS (REVERSE GEOCODING): REVERSE GEOCODE ASYNC...')  \r\n                this.setState({userCoordinates: coords})\r\n                const { latitude, longitude } = coords;\r\n                let response = await Location.reverseGeocodeAsync({ latitude, longitude });\r\n        \r\n                if (response) {\r\n                    console.log('GEOCODING PROCESS (REVERSE GEOCODING): REVERSE GEOCODE SUCCESSFUL! UPDATING STATE...')  \r\n                    this.setState({ address: formattedAddress(response[0]), location: { position: coords, address: response[0] } })\r\n\r\n                } else {\r\n                    console.log('GEOCODING PROCESS (REVERSE GEOCODING): REVERSE GEOCODE FAILED! LOGGING RESPONSE...')  \r\n                    console.log(response)\r\n                }\r\n            } else {\r\n                console.log(`GEOCODING PROCESS (REVERSE GEOCODING): USER POSITION NOT FOUND! UNABLE TO PROCEED TO REVERSE GEOCODING...`)\r\n            }\r\n        } catch (error) {\r\n            this.setLoginMsg('Não foi possível obter a localização atual. Tente reabrir essa tela...')\r\n            console.log('GEOCODING PROCESS: ERROR IN USER POSITION REQUEST! LOGGING ERROR...')\r\n            console.log(error)\r\n        \r\n        } finally {\r\n            console.log('GEOCODING PROCESS: USER POSITION REQUEST FINISHED. PROCEEDING TO FETCH WEATHER DATA...')\r\n        }\r\n    };\r\n\r\n    setFontColor() {\r\n        const fontColorDark = this.props.appState.user.settings.fontColorDark\r\n        const fontColor = fontColorDark ? '#000' : '#fff'\r\n        const altFontColor = fontColorDark ? '#fff' : '#000'\r\n        for (let style of ['theme', 'entryTitle']) {\r\n            styles[style] = { ...styles[style], color: fontColor }\r\n        }\r\n        styles.altTheme.color = altFontColor\r\n        styles.altTheme.backgroundColor = altFontColor\r\n    }    \r\n\r\n    render() {\r\n        console.log('Rendering \"PostEntry\" component...')\r\n        this.setFontColor()\r\n        const settings = this.props.appState.user.settings\r\n        const backgroundColor = settings.backgroundColor\r\n        const backgroundImage = settings.backgroundImage\r\n        const imgURI =  settings.displayBackgroundImage ? (backgroundImage ? ( settings.enableHighResolution ? backgroundImage.urls.raw : backgroundImage.urls.regular ) : null ) : null\r\n        return(\r\n            <ImageBackground source={{'uri' : imgURI}} style={[styles.mainView, {backgroundColor: backgroundColor}]}>\r\n                <ScrollView style={styles.scrollView}>\r\n                    <View style={styles.section}>\r\n                            {this.postEntryHeader()}\r\n                            {this.InputCard('Avaliação', 'smiling-face', {justifyContent: 'space-between'}, this.MoodButtons())}\r\n                            {this.InputCard('Emoções', 'checkmark-square-outline', {flexWrap: 'wrap', justifyContent: 'center'}, this.EmotionButtons)}\r\n                            {this.InputCard('Jornal', 'book', {flexDirection: 'column', minHeight: 130}, this.JornalInput())}\r\n                    </View>\r\n                </ScrollView>  \r\n                <this.saveButton />\r\n                {this.loginMsg()}\r\n            </ImageBackground>\r\n        )    \r\n    }\r\n}","import { StatusBar } from 'expo-status-bar';\r\nvar styles = {\r\n    login: {\r\n        mainView: {\r\n            flex: 1,\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n            // paddingHorizontal: Platform.OS != 'web' ? '5%' : '5%',\r\n        },\r\n        titleView: {\r\n            flexDirection: 'row',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n            minHeight: 50,\r\n            marginTop: 30,\r\n        },\r\n        title: {\r\n            // width: 200,\r\n            textAlign: 'center',\r\n            fontSize: 30,\r\n            fontWeight: 'bold',\r\n            color: 'white',\r\n            alignSelf: 'center',\r\n        },\r\n        titleIcon: {\r\n            width: 30,\r\n            height: 30,\r\n            marginLeft: 6,\r\n            paddingTop: 3,\r\n        },\r\n        card: {\r\n            height: 440,\r\n            minHeight: 430,\r\n            width: 350,\r\n            paddingHorizontal: 10,\r\n            paddingVertical: 10,\r\n            borderWidth: 4,\r\n            borderRadius: 10,\r\n            borderColor: 'rgba(0,0,0,0.1)',\r\n            justifyContent: 'space-between',\r\n            backgroundColor: 'azure',\r\n        },\r\n        cardHeader: {\r\n            height: 90,\r\n            width: '100%',\r\n            justifyContent: 'center'\r\n            // borderWidth: 1\r\n        },\r\n        cardTitle: {\r\n            position: 'relative',\r\n            left: 5,\r\n            fontSize: 24,\r\n            fontWeight: 'bold',\r\n            color: 'black',\r\n        },\r\n        cardSection: {\r\n            height: 85,\r\n            justifyContent: 'space-between',\r\n            alignItems: 'center',\r\n            // borderWidth: 1\r\n        },\r\n        loadingIcon: {\r\n            alignSelf: 'center'\r\n        },\r\n        inputField: {\r\n            minHeight: 40,\r\n            width: '100%',\r\n            paddingLeft: 10,\r\n            fontSize: 14,\r\n            borderWidth: 1,\r\n            borderRadius: 5,\r\n            borderColor: 'rgba(0,0,0,0.1)',\r\n            backgroundColor: 'white'\r\n        },\r\n        button: {\r\n            height: 40,\r\n            width: '100%',\r\n            textAlign: 'center',\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n            borderWidth: 1,\r\n            borderRadius: 5,\r\n            borderColor: 'rgba(0,0,0,0)',\r\n            backgroundColor: 'lightblue',        \r\n        },\r\n        buttonLabel: {\r\n            fontSize: 15,\r\n            fontWeight: 'bold',\r\n            color: 'black',\r\n        },\r\n        text: {\r\n            fontSize: 15,\r\n            textAlign: 'center',\r\n        },\r\n        msgBox: {\r\n            width: 300,\r\n            paddingVertical: 5,\r\n            paddingHorizontal: 3,\r\n            justifyContent: 'center',\r\n            backgroundColor: 'rgb(30,30,30)',\r\n            borderWidth: 1,\r\n            borderColor: 'rgb(40,40,40)',\r\n            \r\n        },\r\n        msg: {\r\n            textAlign: 'center',\r\n            color: 'white',\r\n            // paddingHorizontal: 20,\r\n        },\r\n    }\r\n};\r\nexport default styles;","import { Icon } from 'react-native-eva-icons'\r\n\r\nimport React, { Component } from 'react';\r\nimport { View, Text, ImageBackground, TextInput, Pressable, Platform, ActivityIndicator, Switch } from 'react-native';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport NetInfo from \"@react-native-community/netinfo\";\r\nimport * as Device from 'expo-device';\r\n\r\nimport styles from '../styles/loginStyles'\r\nlet backgroundColor = \"#5926a6\"\r\nlet imgURI = require('../assets/wallpaper.png')\r\n\r\nconst defaultEmotions = require('../shared/emotionsConfig')\r\nconst userScheme = {\r\n  emotions: defaultEmotions,\r\n  entries: [],\r\n  layout: 'grid',\r\n  settings: {\r\n    backgroundColor: \"#5926a6\",\r\n    backgroundImage: require('../shared/defaultWallpaper.json'),\r\n    displayBackgroundImage: true,\r\n    enableHighResolution: false,\r\n    fontColorDark: false,\r\n  }\r\n}\r\n\r\n// App server connection settings\r\nconst appServerURI = 'https://mood-tracker-server.herokuapp.com/'\r\n\r\n// Email Validation settings\r\nconst falseParams = ['validateDNS', 'checkCatchAll', 'checkFree', 'checkDisposable']\r\n\r\nasync function validateEmail(email) {\r\n  console.log('EMAIL VERIFICATION STATUS: Fetching email verification api...')\r\n  var emailStatus = {ok: false, status: 'Email não verificado.'}\r\n  try {\r\n    var queryParams = {\r\n      emailAddress: email,\r\n    }\r\n    falseParams.forEach(param => queryParams[param]='false')\r\n    const fetchOptions = {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },    \r\n        body: JSON.stringify({\r\n          queryParams: queryParams\r\n        }),\r\n    }\r\n    const apiResp = await fetch(appServerURI + 'api/email', fetchOptions)\r\n  \r\n    if (apiResp.ok) {  \r\n      console.log('EMAIL VERIFICATION STATUS: Api fetch request successful.')\r\n      const apiRespJson = await apiResp.json()\r\n      if ( apiRespJson.formatCheck!='true' ) {\r\n        emailStatus.status = 'Email inválido.'\r\n      } else if ( apiRespJson.smtpCheck!='true' ) {\r\n        emailStatus.status = 'Email não existe.'\r\n      } else {\r\n        emailStatus = {ok: true, status: 'Email válido.'}\r\n      }\r\n      return emailStatus\r\n  \r\n    } else {\r\n      console.log('EMAIL VERIFICATION STATUS: Api fetch request failed. Throwing error...')\r\n      throw new Error('Status: ' + apiResp.status + ', Status Text: ' + apiResp.statusText)\r\n    }\r\n  } finally {\r\n    console.log('EMAIL VERIFICATION STATUS: Concluído')\r\n  }\r\n}\r\n\r\nfunction validatePassword(password) {\r\n  console.log('VALIDATING PASSWORD FOR SIGNUP...')\r\n  const hasMinLength = password.length > 6\r\n  var res\r\n  if (!hasMinLength) {\r\n    res = {ok: false, status: 'A senha deve ter no mínimo 6 caractéres.'}\r\n  } else {\r\n    res = {ok: true, status: 'Senha válida.'}\r\n  }\r\n  return res\r\n}\r\n\r\n// async function fetchUsers() {\r\n//   var UsersResponse = await fetch( appServerURI + 'Users', { method: 'GET' });\r\n//   const UsersStatus = 'Status: ' + UsersResponse.status + ', ' + 'Status Text: ' + UsersResponse.statusText\r\n//   if (UsersResponse.ok) {\r\n//     console.log('fetch GET request for users data at signin successful.');\r\n//     console.log(UsersStatus)\r\n\r\n//     const Users = await UsersResponse.json();\r\n//     return Users\r\n//   } else {\r\n//     console.log('fetch GET request for users data at signin failed. Printing fetch response...')\r\n//     console.log(JSON.stringify(UsersResponse))\r\n//     console.log('Returning null...')\r\n//     return null\r\n//   }\r\n// }\r\n\r\nasync function registerLocallyIfUserIsNewToDevice(user) {\r\n  var localAuthInfo = await AsyncStorage.getItem('LocalAuthenticationInfo')\r\n  localAuthInfo = JSON.parse(localAuthInfo)  \r\n  if ( !localAuthInfo.users.filter(localUser => localUser._id == user._id)[0] ) {\r\n    console.log('SIGNIN STATUS: Primeiro login do usuário nesse aparelho. Adicionando informações do usuário no armazenamento local...')\r\n    const updatedLocalAuthInfo = {\r\n      ...localAuthInfo,\r\n      users: [ \r\n        ...localAuthInfo.users,\r\n        {\r\n          _id: user._id,\r\n          username: user.username,\r\n          email: user.email,\r\n          password: user.password,\r\n        }\r\n      ]\r\n    }\r\n    await AsyncStorage.setItem('LocalAuthenticationInfo', JSON.stringify(updatedLocalAuthInfo))\r\n    console.log('SIGNIN STATUS: Informações do usuário adicionadas no aparelho.')\r\n  } else {\r\n    console.log('SIGNIN STATUS: Informações do usuário já registradas nesse aparelho. Pulando registro do usuário no armazenamento local...')\r\n  } \r\n}\r\n\r\nexport async function keepUserConnectionAlive(id) {\r\n  var localAuthInfo = await AsyncStorage.getItem('LocalAuthenticationInfo')\r\n  localAuthInfo = JSON.parse(localAuthInfo)\r\n\r\n  if ( localAuthInfo.keepConnected.userId != id ) {\r\n    console.log(`SIGNIN STATUS: Usuário optou por ${id ? 'manter conexão ativa. Configurando conexão ativa para o usuário...' : 'desativar conexão ativa. Desativando...' }`)\r\n    const updatedLocalAuthInfo = {\r\n      ...localAuthInfo,\r\n      keepConnected: {\r\n        status: id ? true : false,\r\n        userId: id\r\n      }\r\n    }\r\n    await AsyncStorage.setItem('LocalAuthenticationInfo', JSON.stringify(updatedLocalAuthInfo))\r\n  } else {\r\n    console.log('SIGNIN STATUS: Fazendo login via conexã ativa. Pulando configuração de conexão ativa para o usuário...')\r\n  }\r\n\r\n}\r\n\r\nclass LoginScreen extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      userInfo: {\r\n        password: '',\r\n        email: '',\r\n        username: '',\r\n        settings: null,\r\n      },\r\n      keepConnected: true,\r\n      loginMsg: '',\r\n      isUserAuth: false,\r\n      isDataLoading: false,\r\n    }\r\n    this.onChangeText = this.onChangeText.bind(this);\r\n    this.submitButton = this.submitButton.bind(this);\r\n    this.loginMsg = this.loginMsg.bind(this);\r\n    this.setLoginMsg = this.setLoginMsg.bind(this);\r\n    this.onSignIn = this.onSignIn.bind(this);\r\n    this.onSignUp = this.onSignUp.bind(this);\r\n    this.LoginScreen = this.LoginScreen.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log('\"LoginScreen\" component did mount...')\r\n    this.restoreUserToken()\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    console.log('\"LoginScreen\" component will unmount...')\r\n  }\r\n\r\n  LoginIcon() {  \r\n    if (this.state.isDataLoading) {\r\n      return <ActivityIndicator color='#000000' />\r\n    } else {\r\n      return <Icon name='log-in-outline' animation='pulse' fill='#000' width={30} height={30} />\r\n    }\r\n  }\r\n\r\n  setLoginMsg(msg) {\r\n    this.setState({loginMsg: msg})\r\n    setTimeout( () => this.setState({loginMsg: ''}) , 1000 * 5 )\r\n  }\r\n\r\n  loginMsg() {\r\n      return(\r\n        <View style={[styles.login.msgBox, this.state.loginMsg ? {} : {backgroundColor: 'transparent', borderColor: 'transparent'} ]}>\r\n          <Text style={styles.login.msg}>{this.state.loginMsg}</Text>\r\n        </View>\r\n      )\r\n  }\r\n\r\n  onChangeText(textField) {\r\n    function setField(text) {\r\n      this.setState( { userInfo: { ...this.state.userInfo, [textField] : text}} )\r\n    }\r\n    setField = setField.bind(this);\r\n    return setField\r\n  }\r\n\r\n  submitButton(sign) {\r\n    const signIn = sign == 'signin'\r\n    return(\r\n      <Pressable\r\n      disabled={this.state.isDataLoading}\r\n      onPress={signIn ? this.onSignIn : this.onSignUp}\r\n      style={[styles.login.button]}\r\n      >\r\n        <Text style={styles.login.buttonLabel}>{ signIn ? 'Entrar' : 'Cadastrar' }</Text>\r\n      </Pressable>\r\n    )\r\n  }\r\n\r\n  LoginScreen = () => {\r\n  return(\r\n      <ImageBackground\r\n      source={imgURI}\r\n      style={[styles.login.mainView, {backgroundColor: backgroundColor, justifyContent: 'space-evenly'}]}\r\n      >\r\n        \r\n        <View style={styles.login.titleView}>\r\n          <Text style={styles.login.title}>Rastreador de humor</Text>\r\n        </View>\r\n\r\n        <View style={styles.login.card}>\r\n          <View style={styles.login.cardHeader} >\r\n            <Text style={styles.login.cardTitle}>Entrar</Text>\r\n          </View>\r\n          <View style={styles.login.cardSection}>\r\n            <TextInput\r\n            placeholder='Email'\r\n            textContentType='emailAddress'\r\n            style={styles.login.inputField}\r\n            onChangeText={this.onChangeText('email')}\r\n            autoComplete='email'\r\n            importantForAutofill='yes'\r\n            />\r\n            <TextInput\r\n            placeholder='Senha'\r\n            textContentType='password'\r\n            secureTextEntry={true}\r\n            style={styles.login.inputField}\r\n            onChangeText={this.onChangeText('password')}\r\n            autoComplete='password'\r\n            importantForAutofill='yes'\r\n            />\r\n          </View>\r\n          <View style={[styles.login.cardSection, {height: 138}]}>\r\n            {this.submitButton('signin')}\r\n            {this.submitButton('signup')}\r\n            <View style={{flexDirection: 'row', height: 48, alignSelf: 'stretch', alignItems: 'center', justifyContent: 'flex-end'}}>\r\n              <Text style={{marginRight: Platform.OS=='web' ? 10 : null }}>Manter-me conectado</Text>\r\n              <Switch\r\n                disabled={this.state.isDataLoading}\r\n                trackColor={{ false: \"#767577\", true: \"#81b0ff\" }}\r\n                thumbColor={this.state.keepConnected ? \"#f4f3f4\" : \"#f4f3f4\"}\r\n                ios_backgroundColor=\"#3e3e3e\" \r\n                onValueChange={() => this.setState({keepConnected: !this.state.keepConnected})}\r\n                value={this.state.keepConnected}\r\n              />\r\n            </View>\r\n          </View>\r\n          <View style={[styles.login.cardSection, {height: 80, justifyContent: 'center'}]}>\r\n            {this.LoginIcon()}\r\n          </View>\r\n        </View>\r\n\r\n        {this.loginMsg()}\r\n\r\n      </ImageBackground>\r\n    )\r\n  }\r\n\r\n  isInputEmpty() {\r\n    if (!this.state.userInfo.email) {\r\n      const errMsg = 'Insira um endereço de email.'\r\n      this.setLoginMsg(errMsg)\r\n      console.log('SIGNIN STATUS: ' + errMsg)\r\n      return true\r\n    } else if (!this.state.userInfo.password) {\r\n      const errMsg = 'Insira uma senha.'\r\n      this.setLoginMsg(errMsg)\r\n      console.log('SIGNIN STATUS: ' + errMsg)\r\n      return true\r\n    } else return false\r\n  }\r\n\r\n  async restoreUserToken() {\r\n    try {\r\n      console.log('RESTORE USER TOKE STATUS: STARTED...')\r\n      var localAuthInfo = await AsyncStorage.getItem('LocalAuthenticationInfo')\r\n      \r\n      if (localAuthInfo) {\r\n        console.log('RESTORE USER TOKEN STATUS: LOCAL AUTH INFO ALREADY CONFIGURED. LOGGING CURRENT VALUE...')\r\n        localAuthInfo = JSON.parse(localAuthInfo)\r\n\r\n        if (localAuthInfo.keepConnected.status) {\r\n          console.log(`RESTORE USER TOKEN STATUS: USER CONNECTION IS ALIVE FOR USER ID: ${localAuthInfo.keepConnected.userId}. PROCEDING TO SIGNIN...`)\r\n          const user = localAuthInfo.users.filter(user => user._id == localAuthInfo.keepConnected.userId)[0]\r\n          this.setState({\r\n            userInfo: {\r\n              username: user.username,\r\n              email: user.email,\r\n              password: user.password,\r\n            }\r\n          })\r\n          this.onSignIn()\r\n        }\r\n\r\n        else {\r\n          console.log('RESTORE USER TOKEN STATUS: NO USER CONNECTION ALIVE. PROCEEDING TO SIGNIN/SIGNUP ...')\r\n        }\r\n\r\n      } else {\r\n        console.log('RESTORE USER TOKEN STATUS: NO LOCAL AUTH INFO CONFIGURED IN THIS DEVICE. SETTING DEVICE LOCAL AUTH INFO FOR THE FIRST TIME...')\r\n\r\n        var DEVICE_IP_ADDRESS\r\n        NetInfo.fetch(\"wifi\").then(state => {\r\n          DEVICE_IP_ADDRESS = state.details.ipAddress\r\n          console.log(\"RESTORE USER TOKEN STATUS: IP ADDRESS REQUEST SUCCESSFUL. IP ADDRESS: \" + DEVICE_IP_ADDRESS);\r\n        });\r\n\r\n        const initialLocalAuthInfo = {\r\n          IP_ADDRESS: DEVICE_IP_ADDRESS,\r\n          deviceBrand: Device.brand,\r\n          deviceManufacturer: Device.manufacturer,\r\n          deviceModelName: Device.modelName,\r\n          deviceModelId: Device.modelId,\r\n          deviceOsName: Device.osName,\r\n          deviceOsVersion: Device.osVersion,\r\n          deviceName: Device.deviceName,\r\n          deviceType: await Device.getDeviceTypeAsync(),\r\n          users: [],\r\n          keepConnected: {\r\n            status: false,\r\n            userId: null\r\n          }\r\n        }\r\n        await AsyncStorage.setItem('LocalAuthenticationInfo', JSON.stringify(initialLocalAuthInfo))\r\n        console.log('RESTORE USER TOKEN STATUS: DEVICE LOCAL AUTH INFO CONFIGURED FOR THE FIRST TIME. PROCEEDING TO SIGNIN/SIGNUP ...')\r\n      }\r\n\r\n    } catch(error) {\r\n      console.log('RESTORE USER TOKEN STATUS: ERROR. LOGGING ERROR...')\r\n      console.log(error)\r\n    }\r\n  }  \r\n\r\n  async onSignIn() {\r\n\r\n    console.log('SIGNIN STATUS: Started...')\r\n    var info = this.state.userInfo;\r\n    info.email = info.email.trim()\r\n    this.setState({ isDataLoading: true });\r\n\r\n    try {\r\n\r\n      if (this.isInputEmpty()) return\r\n\r\n      var UsersResult = await fetch( appServerURI + 'Users', { method: 'GET' });\r\n      const UsersStatus = 'Status: ' + UsersResult.status + ', ' + 'Status Text: ' + UsersResult.statusText\r\n      if (UsersResult.ok) {\r\n        console.log('fetch GET request for users data at signin successful.');\r\n        console.log(UsersStatus)\r\n      } else {\r\n        console.log('fetch GET request for users data at signin failed. Printing fetch response...')\r\n        console.log(JSON.stringify(UsersResult))\r\n        console.log('Throwing error...')\r\n        throw new Error(UsersStatus)\r\n      }\r\n\r\n      const Users = await UsersResult.json();\r\n      const user = Users.filter((user) => user.email === info.email)[0]\r\n      \r\n      if ( user ) {          \r\n        \r\n        if ( user.password === info.password ) {\r\n\r\n          await registerLocallyIfUserIsNewToDevice(user)\r\n\r\n          if (this.state.keepConnected) {\r\n            await keepUserConnectionAlive(user._id)\r\n          }\r\n          this.setState( {isUserAuth: true, userInfo: user} )\r\n          const successMsg = 'Login realizado com sucesso!'\r\n          this.setLoginMsg(successMsg)\r\n          console.log('SIGNIN STATUS: Sucesso.')\r\n\r\n        } else {\r\n          const errMsg = 'Senha incorreta.'\r\n          this.setLoginMsg(errMsg)\r\n          console.log('SIGNIN STATUS: ' + errMsg);\r\n        }\r\n\r\n      } else {\r\n        const errMsg = 'Email não cadastrado!'\r\n        this.setLoginMsg(errMsg)\r\n        console.log('SIGNIN STATUS: ' + errMsg)\r\n      }\r\n\r\n    } catch (error) {\r\n      const errMsg = 'Erro no servidor! Tente novamente...'\r\n      this.setLoginMsg(errMsg)\r\n      console.log('Error catched in fetch GET request for users data at signin. Printing Error...')\r\n      console.log('SIGNIN STATUS:' + 'Erro capturado. Imprimindo erro...')\r\n      console.log(error);\r\n\r\n    } finally {\r\n      this.setState({ isDataLoading: false });\r\n      console.log('SIGNIN STATUS: Concluido.')\r\n      if (this.state.isUserAuth) {\r\n        console.log('User authenticated. Navigating to \"HomeScreen\"...')\r\n        this.props.setAppState({isUserAuth: true, user: this.state.userInfo})\r\n        // Parent class component method that authenticates the user and redirects to entrances screen.\r\n      }\r\n    }\r\n  }\r\n\r\n  async onSignUp() {\r\n\r\n    console.log('SIGNUP STATUS: started...')\r\n    var info = this.state.userInfo;\r\n    info.email = info.email.trim()\r\n    this.setState({ isDataLoading: true });\r\n    \r\n    try {\r\n\r\n      var postUserResult = {ok: false}\r\n      if (this.isInputEmpty()) return\r\n\r\n      // Validating email and password\r\n      const emailValidation = await validateEmail(info.email)\r\n      console.log('SING UP STATUS: ' + emailValidation.status)\r\n      if (!emailValidation.ok) {\r\n          this.setLoginMsg(emailValidation.status)\r\n          return\r\n      }\r\n\r\n      // Checking if email is already registerd\r\n      var UsersResult = await fetch( appServerURI + 'Users', { method: 'GET' } );  \r\n      const reqStatus = 'Status: ' + UsersResult.status + ', ' + UsersResult.statusText\r\n      if (UsersResult.ok) {\r\n        console.log('fetch GET request for users data at signup successful.')\r\n        console.log(reqStatus)\r\n      } else {\r\n        console.log('fetch GET request for users data at signup failed. Throwing error...')\r\n        throw new Error(reqStatus)\r\n      }\r\n\r\n      const Users = await UsersResult.json();\r\n      const User = Users.filter((user) => user.email === info.email)[0]\r\n      if ( !User ) {\r\n\r\n        // Validating Password\r\n        const passwordCheck = validatePassword(info.password)\r\n        if (!passwordCheck.ok) {\r\n          console.log('SING UP STATUS: ' + passwordCheck.status)\r\n          this.setLoginMsg(passwordCheck.status)\r\n          return\r\n      }\r\n\r\n        // Registering new user by posting user identification to database\r\n        info.username = info.email.split('@')[0]\r\n        const postUserOpts = {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify({ \r\n            ...info,\r\n            ...userScheme\r\n          })\r\n        }\r\n\r\n        postUserResult = await fetch( appServerURI +  'Users/' + info.username, postUserOpts );\r\n        const postUserStatus = 'Status: ' + postUserResult.status + ', ' + postUserResult.statusText\r\n\r\n        if (postUserResult.ok) {\r\n          const successMsg = 'Cadastro realizado com sucesso!'\r\n          this.setLoginMsg(successMsg)\r\n          console.log('fetch POST request for user data at signup successful.')\r\n          console.log(postUserStatus)\r\n          console.log('SING UP STATUS: ' + successMsg)\r\n\r\n        } else {\r\n          console.log('fetch POST request for user data at signup failed. Throwing error...')\r\n          throw new Error(postUserStatus)\r\n        }\r\n\r\n      } else {\r\n        const errMsg = 'Email já cadastrado.'\r\n        this.setLoginMsg(errMsg)\r\n        console.log('SING UP STATUS: ' + errMsg)\r\n      }\r\n\r\n    } catch (error) {\r\n      const errMsg = 'Erro no servidor, tente novamente...'\r\n      this.setLoginMsg(errMsg)\r\n      console.log('SING UP STATUS: Erro capturado. Imprimindo erro...')\r\n      console.log(error);\r\n\r\n    } finally {\r\n      this.setState({ isDataLoading: false })\r\n      console.log('SING UP STATUS: Concluido.')\r\n      if (postUserResult.ok)  this.onSignIn()\r\n    }\r\n  }\r\n\r\n  render() {\r\n    console.log('Rendering \"LoginScreen\" component...')\r\n    return this.LoginScreen()\r\n  }\r\n}\r\n\r\nexport default LoginScreen;","import React, { Component } from 'react';\r\nimport { ImageBackground, View, Text, Pressable, ScrollView, ActivityIndicator, Switch, StatusBar, Platform } from 'react-native';\r\nimport { Icon } from 'react-native-eva-icons';\r\nimport { keepUserConnectionAlive } from './LoginComponent';\r\nimport { capitalize } from './subcomponents/EditEmotions';\r\n\r\nimport NativeIcon from 'react-native-vector-icons/MaterialCommunityIcons';\r\n\r\n// cors-midpoint uri (needed to avoid cors' allow-cross-origin error when fetching in web platforms)\r\nconst appServerURI = 'https://mood-tracker-server.herokuapp.com/'\r\n\r\nconst colorList = require('../shared/colorList.json')\r\n\r\nvar styles = {\r\n    background: {\r\n    flex: 1,\r\n    paddingTop: StatusBar.currentHeight,\r\n    alignItems: 'center',\r\n    justifyContent: 'space-between',\r\n  },\r\n  foreground: {\r\n    width: 350,\r\n  },\r\n  header: {\r\n    height: 110,\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    // borderWidth: 1,\r\n  },\r\n  settingsRow: {\r\n    height: 60,\r\n    paddingHorizontal: 10,\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    justifyContent: 'space-between',\r\n    borderRadius: 10,\r\n    // borderWidth: 1,\r\n  },\r\n  colorBox: {\r\n    height: 300,\r\n    paddingHorizontal: 0,\r\n    borderColor: 'rgba(200,200,200,0.2)'\r\n  },\r\n  colorRow: {\r\n    width: '100%',\r\n    height: 60,\r\n    paddingHorizontal: 10,\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    justifyContent: 'space-between',\r\n    borderBottomWidth: 1,\r\n    borderColor: 'rgba(200,200,200,0.2)',\r\n    borderRadius: 10,\r\n  },\r\n  colorSquare: {\r\n    // marginRight: 0,\r\n    width: 30,\r\n    height: 30,\r\n    borderRadius: 6,\r\n    borderColor: 'white'\r\n  },\r\n  logout: {\r\n    height: 33,\r\n    width: 85,\r\n    marginTop: 0,\r\n    marginBottom: 20,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    // borderWidth: 1,\r\n    // borderColor: 'red',\r\n  },\r\n  h1: {\r\n    fontSize: 25,\r\n    color: 'white'\r\n  },\r\n  h2: {\r\n    fontSize: 20,\r\n    color: 'white',\r\n  },\r\n  h3: {\r\n    fontSize: 17,\r\n    color: 'white',\r\n  },\r\n  h4: {\r\n    fontSize: 16,\r\n    color: 'white',\r\n  },\r\n}\r\n\r\nexport function blinkButton(setPressed, timeSpan=200) {\r\n  setPressed(true)\r\n  setTimeout(() => {\r\n    setPressed(false)\r\n  }, timeSpan);\r\n}\r\n\r\nexport async function postSettings(settings, username) {\r\n  // fetch post display background image value to user settings in server\r\n  try {\r\n   console.log('POST SETTINGS STATUS: Started...')\r\n   console.log('POST SETTINGS STATUS: LOGGING NEW SETTING VALUES... ')\r\n   console.log(JSON.stringify(settings))\r\n   var postSettingsResult = {ok: false, status: '999', statusText: 'Post not fetched yet.'}\r\n   const postSettingsOpts = { \r\n     method: 'POST',\r\n     headers: {\r\n         'Content-Type': 'application/json',\r\n     },\r\n     body: JSON.stringify( settings ),\r\n   }\r\n   // var postDisplayResult = await fetch('http://localhost:3000/Users/' + this.context.username + '/settings', postColorSettingOpts);\r\n   postSettingsResult = await fetch( `${appServerURI}Users/${username}/settings`, postSettingsOpts);\r\n   const postSettingsStatus = 'Status: ' + postSettingsResult.status + ', ' + postSettingsResult.statusText\r\n\r\n   if (postSettingsResult.ok) {\r\n     console.log('POST SETTINGS STATUS: Successful.')\r\n     console.log(postSettingsStatus)\r\n         \r\n   } else {\r\n     console.log('POST SETTINGS STATUS: Failed. Throwing error...')\r\n     throw new Error(postSettingsStatus)\r\n   }\r\n } catch (error) {\r\n   alert('Erro no servidor. Tente novamente...')\r\n   console.log('Erro capturado:')\r\n   console.log(error);\r\n\r\n } finally {\r\n   console.log('POST DISPLAY BACKGROUND IMAGE STATUS: Finished.')\r\n   return postSettingsResult\r\n }\r\n} \r\n\r\nexport default class SettingsScreen extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isBackgroundColorSettingsOpen: false,\r\n      selectedColor: null,\r\n\r\n      isDisplayBackgroundImageLoading: false,\r\n      isChangeFontColorLoading: false,\r\n      isEnableHighResolutionLoading: false,\r\n      isRestoreColorLoading: false,\r\n      isSaveColorLoading: false,\r\n    }\r\n    this.syncUserSettings = this.syncUserSettings.bind(this);\r\n    this.setFontColor = this.setFontColor.bind(this);\r\n    this.setBackgroundColor = this.setBackgroundColor.bind(this);\r\n    this.SettingsScreen = this.SettingsScreen.bind(this);\r\n    this.ScreenSettings = this.ScreenSettings.bind(this);\r\n    this.ChooseImageSection = this.ChooseImageSection.bind(this);\r\n    this.DisplayBackgroundImageSection = this.DisplayBackgroundImageSection.bind(this);\r\n    this.ChangeFontColorSection = this.ChangeFontColorSection.bind(this);\r\n    this.EnableHighResolutionSection = this.EnableHighResolutionSection.bind(this);\r\n    this.ChangeBackgroundColorSection = this.ChangeBackgroundColorSection.bind(this);\r\n    this.ColorOptions = this.ColorOptions.bind(this);\r\n    this.ColorControl = this.ColorControl.bind(this);\r\n    this.onLogoutButtonPress = this.onLogoutButtonPress.bind(this);\r\n    this.onColorButtonPressFor = this.onColorButtonPressFor.bind(this);\r\n    this.onSaveColorButtonPress = this.onSaveColorButtonPress.bind(this);\r\n    this.onChangeFontColorSwitch = this.onChangeFontColorSwitch.bind(this);\r\n    this.ColorRow = this.ColorRow.bind(this);\r\n    this.isLoading = this.isLoading.bind(this);\r\n    this.logoutPressable = this.logoutPressable.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log('\"SettingsScreen\" component did mount')\r\n    this.syncUserSettings()\r\n  }\r\n  componentWillUnmount() {\r\n    console.log('\"SettingsScreen\" component will unmount...')\r\n  }\r\n\r\n  syncUserSettings() {\r\n    console.log('SYNC SETTINGS STATUS: INITIALIZING...')\r\n    this.setFontColor()\r\n    this.setBackgroundColor()\r\n  }\r\n\r\n  setFontColor() {\r\n    const settings = this.props.appState.user.settings\r\n    const fontColor = settings.fontColorDark ? '#000' : '#fff'\r\n    for (let h of ['h1', 'h2', 'h3', 'h4']) {\r\n      styles[h] = { ...styles[h], color: fontColor }\r\n    }\r\n  }\r\n\r\n  setBackgroundColor() {\r\n    const settings = this.props.appState.user.settings\r\n    this.setState({\r\n      selectedColor: settings.backgroundColor,\r\n    })\r\n    this.props.navigation.setParams({selectedColor: settings.backgroundColor})  // Necessary to change the tab bar color dinamically in App.js\r\n  }\r\n\r\n  SettingsScreen() {\r\n    const settings = this.props.appState.user.settings\r\n    const backgroundImage = settings.backgroundImage\r\n    const backgroundColor = this.state.selectedColor\r\n    const imgURI = settings.displayBackgroundImage ? (backgroundImage ? ( settings.enableHighResolution ? backgroundImage.urls.raw : backgroundImage.urls.regular ) : null) : null\r\n    return(\r\n      <ImageBackground\r\n      source={{uri : imgURI}}\r\n      style={[ styles.background, {backgroundColor: backgroundColor} ]}\r\n      >\r\n        <ScrollView style={styles.foreground}>\r\n          <View style={styles.header}>\r\n            <Text style={styles.h1}>Configurações</Text>\r\n          </View>\r\n          <this.ScreenSettings />\r\n          <this.logoutPressable />\r\n        </ScrollView>\r\n      </ImageBackground>\r\n    )\r\n  }\r\n\r\n  ScreenSettings() {\r\n    const [isHighResulotionButtonPressed, setIsHighResulotionButtonPressed] = React.useState(false)\r\n    // const isLoading = this.state.isSaveColorLoading | this.state.isDisplayBackgroundImageLoading | this.state.isChangeFontColorLoading\r\n    return (\r\n      <>\r\n        <this.ChooseImageSection />\r\n        <this.DisplayBackgroundImageSection />\r\n        <this.EnableHighResolutionSection />\r\n        <this.ChangeFontColorSection />\r\n        <this.ChangeBackgroundColorSection />\r\n        <this.ColorOptions />\r\n      </>\r\n    )\r\n  }\r\n\r\n  ChooseImageSection() {\r\n    const [isChooseImageButtonPressed, setIsChooseImageButtonPressed] = React.useState(false)\r\n    let fontColor = styles.h1.color\r\n    let fontColorTransp = fontColor + '8'\r\n    return(\r\n      <Pressable\r\n      onPressIn={() => blinkButton(setIsChooseImageButtonPressed)}\r\n      onPress={() => this.props.navigation.navigate('WallpaperTopics')}\r\n      style={[styles.settingsRow, {backgroundColor: isChooseImageButtonPressed ? '#0003' : null }]}\r\n      >\r\n        <View style={{flexDirection: 'row', alignItems: 'center'}}>\r\n          <Icon name='image-outline' width={30} height={30} fill={fontColor} />\r\n          <Text style={[styles.h2, {marginLeft: 10}]}>Papel de parede</Text>\r\n        </View>\r\n        \r\n        <Icon\r\n        width={30} height={30}\r\n        name='arrow-ios-forward-outline'\r\n        fill={ fontColor } />\r\n      </Pressable>\r\n    )\r\n  }\r\n\r\n  DisplayBackgroundImageSection() {\r\n    const [isExposeImageButtonPressed, setIsExposeImageButtonPressed] = React.useState(false)\r\n    const displayBackgroundImageValue = this.props.appState.user.settings.displayBackgroundImage\r\n    const isLoading = this.state.isDisplayBackgroundImageLoading\r\n    return(\r\n      <Pressable\r\n      onPressIn={ () => blinkButton(setIsExposeImageButtonPressed) }\r\n      style={[styles.settingsRow, {backgroundColor: isExposeImageButtonPressed ? '#0003' : null }]}\r\n      >\r\n        <View style={{flexDirection: 'row', alignItems: 'center'}}>\r\n          <Icon name='eye-outline' width={30} height={30} fill={styles.h1.color} />\r\n          <Text style={[styles.h2, {marginLeft: 10, marginRight: 20}]}>Ver papel de parede</Text>\r\n          { isLoading ? <ActivityIndicator color='blue' /> : null }\r\n        </View>\r\n        <Switch\r\n        disabled={isLoading}\r\n        trackColor={{ false: \"#767577\", true: \"#81b0ff\" }}\r\n        thumbColor={displayBackgroundImageValue ? \"#f4f3f4\" : \"#f4f3f4\"}\r\n        ios_backgroundColor=\"#3e3e3e\"\r\n        onValueChange={() => {\r\n          blinkButton(setIsExposeImageButtonPressed)\r\n          this.onDisplayBackgroundImageSwitch(!displayBackgroundImageValue)\r\n        }}\r\n        value={displayBackgroundImageValue}\r\n        />\r\n      </Pressable>\r\n    )\r\n  }\r\n\r\n  EnableHighResolutionSection() {\r\n    const [isEnableHighResolutionButtonPressed, setIsEnableHighResolutionButtonPressed] = React.useState(false)\r\n    const enableHighResolutionValue = this.props.appState.user.settings.enableHighResolution\r\n    const isLoading = this.state.isEnableHighResolutionLoading\r\n    return(\r\n      <Pressable\r\n      onPressIn={ () => blinkButton(setIsEnableHighResolutionButtonPressed)}\r\n      style={[styles.settingsRow, {backgroundColor: isEnableHighResolutionButtonPressed ? '#0003' : null }]}\r\n      >\r\n        <View style={{flexDirection: 'row', alignItems: 'center'}}>\r\n          {/* <Icon name='camera-outline' width={30} height={30} fill={styles.h1.color} /> */}\r\n          <NativeIcon name='high-definition' size={30} color={styles.h1.color} />\r\n          <Text style={[styles.h2, {marginLeft: 10, marginRight: 20}]}>Alta definição</Text>\r\n          { isLoading ? <ActivityIndicator color='blue' /> : null }\r\n        </View>\r\n        <Switch\r\n        disabled={isLoading}\r\n        trackColor={{ false: \"#767577\", true: \"#81b0ff\" }}\r\n        thumbColor={enableHighResolutionValue ? \"#f4f3f4\" : \"#f4f3f4\"}\r\n        ios_backgroundColor=\"#3e3e3e\"\r\n        onValueChange={() => {\r\n          blinkButton(setIsEnableHighResolutionButtonPressed)\r\n          this.onEnableHighResolutionSwitch(!enableHighResolutionValue)\r\n        }}\r\n        value={enableHighResolutionValue}\r\n        />\r\n      </Pressable>    \r\n    )\r\n  }\r\n\r\n  ChangeFontColorSection() {\r\n    const [isChangeFontColorButtonPressed, setIsChangeFontColorButtonPressed] = React.useState(false)\r\n    const changeFontColorValue = this.props.appState.user.settings.fontColorDark\r\n    const isLoading = this.state.isChangeFontColorLoading\r\n    return(\r\n      <Pressable\r\n      onPressIn={ () => blinkButton(setIsChangeFontColorButtonPressed)}\r\n      style={[styles.settingsRow, {backgroundColor: isChangeFontColorButtonPressed ? '#0003' : null }]}\r\n      >\r\n        <View style={{flexDirection: 'row', alignItems: 'center'}}>\r\n          <Icon name='moon-outline' width={30} height={30} fill={styles.h1.color} />\r\n          <Text style={[styles.h2, {marginLeft: 10, marginRight: 20}]}>Texto escuro</Text>\r\n          { isLoading ? <ActivityIndicator color='blue' /> : null }\r\n        </View>\r\n        <Switch\r\n        disabled={isLoading}\r\n        trackColor={{ false: \"#767577\", true: \"#81b0ff\" }}\r\n        thumbColor={changeFontColorValue ? \"#f4f3f4\" : \"#f4f3f4\"}\r\n        ios_backgroundColor=\"#3e3e3e\"\r\n        onValueChange={() => {\r\n          blinkButton(setIsChangeFontColorButtonPressed)\r\n          this.onChangeFontColorSwitch(!changeFontColorValue)\r\n        }}\r\n        value={changeFontColorValue}\r\n        />\r\n      </Pressable>    \r\n    )\r\n  }\r\n\r\n  ChangeBackgroundColorSection() {\r\n    const [isColorButtonPressed, setIsColorButtonPressed] = React.useState(false)\r\n    const newColorUnselected = this.state.selectedColor == this.props.appState.user.settings.backgroundColor\r\n    let fontColor = styles.h1.color\r\n    let fontColorTransp = fontColor + '8'\r\n\r\n    return(\r\n      <Pressable\r\n      onPressIn={() => blinkButton(setIsColorButtonPressed)}\r\n      onPress={() => {\r\n        this.setState({ isBackgroundColorSettingsOpen: !this.state.isBackgroundColorSettingsOpen })\r\n        if (!newColorUnselected) this.syncUserSettings()\r\n      }}\r\n      style={[styles.settingsRow, {backgroundColor: isColorButtonPressed ? '#0003' : null }]}\r\n      >\r\n        <View style={{flexDirection: 'row', alignItems: 'center'} }>\r\n          <Icon name='color-palette-outline' height={30} width={30} fill={styles.h1.color} style={{marginRight: 0}} />\r\n          <Text style={[styles.h2, {marginLeft: 10}]}>Tema</Text>\r\n        </View>\r\n        <View style={{flexDirection: 'row', alignItems: 'center'} }>\r\n          <Icon\r\n          width={30} height={30}\r\n          name={this.state.isBackgroundColorSettingsOpen ? 'arrow-ios-upward-outline' : 'arrow-ios-downward-outline' }\r\n          fill={ fontColor } />\r\n        </View>\r\n      </Pressable>    \r\n    )\r\n  }\r\n\r\n  ColorOptions() {\r\n    return(\r\n      this.state.isBackgroundColorSettingsOpen ? (\r\n        <>\r\n          <ScrollView\r\n          nestedScrollEnabled\r\n          style={styles.colorBox}\r\n          >\r\n            { colorList.map(color => {\r\n              return (\r\n                <this.ColorRow color={color} key={'color-' + color} />\r\n              )\r\n            }) }\r\n          </ScrollView>\r\n          <this.ColorControl />\r\n        </>\r\n      ) : (\r\n        null\r\n      )\r\n    )\r\n  }\r\n\r\n  ColorRow({color}) {\r\n    const [isColorRowPressed, setIsColorRowPressed] = React.useState(false)\r\n    const isLoading = this.state.isRestoreColorLoading | this.state.isSaveColorLoading\r\n    return(\r\n      <Pressable\r\n      onPressIn={ () => blinkButton(setIsColorRowPressed, 300) }\r\n      onPress={ this.onColorButtonPressFor(color) }\r\n      disabled={isLoading}\r\n      style={[styles.colorRow, {backgroundColor: isColorRowPressed ? '#0003' : null }]}>\r\n        <Text style={[\r\n          styles.h3,\r\n          this.state.selectedColor == color\r\n          ? {fontStyle: 'italic', textDecorationLine: 'underline' }\r\n          : {fontStyle: 'italic', textDecorationLine: 'none' }\r\n        ]}>{ capitalize(color) }</Text>\r\n        <View style={[ styles.colorSquare, { backgroundColor: color, borderWidth: this.state.selectedColor==color ? 3 : 0 }]} />\r\n      </Pressable>\r\n    )\r\n  }\r\n\r\n  ColorControl() {\r\n    const newColorUnselected = this.state.selectedColor == this.props.appState.user.settings.backgroundColor\r\n    const isLoading = this.state.isRestoreColorLoading | this.state.isSaveColorLoading\r\n    return(\r\n      <View style={[styles.settingsRow, {justifyContent: 'space-between'}]}>\r\n        <Pressable\r\n        disabled={isLoading | newColorUnselected}\r\n        style={{ justifyContent: 'center', alignItems: 'center', width: 95 }}\r\n        // onPressIn={() => blinkButton((bool) => this.setState({isRestoreColorLoading: bool}))}\r\n        onPress={() => {\r\n          this.setState({isRestoreColorLoading: true})\r\n          this.syncUserSettings()\r\n          this.setState({isRestoreColorLoading: false})\r\n        }}\r\n        >\r\n          <Text\r\n            style={[styles.h2, { \r\n              textAlign: 'center',\r\n              color: isLoading | newColorUnselected ? styles.h1.color + '6' : styles.h1.color\r\n            }]}\r\n          >\r\n            { this.state.isRestoreColorLoading ? <ActivityIndicator color='blue' /> :  'Restaurar' }\r\n          </Text>\r\n        </Pressable>\r\n\r\n        <Pressable\r\n        disabled={isLoading | newColorUnselected}\r\n        onPress={this.onSaveColorButtonPress}\r\n        style={{ justifyContent: 'center', alignItems: 'center', width: 75 }}\r\n        >\r\n          <Text style={[styles.h2, {width: 63, textAlign: 'center', color: isLoading | newColorUnselected ? styles.h1.color + '6' : styles.h1.color}]}>\r\n            { this.state.isSaveColorLoading ? <ActivityIndicator color='blue' /> : 'Aplicar' }\r\n          </Text>\r\n        </Pressable>\r\n      </View>\r\n    )\r\n  }\r\n\r\n  isLoading() {\r\n    return (\r\n      this.state.isDisplayBackgroundImageLoading | \r\n      this.state.isChangeFontColorLoading |\r\n      this.state.isRestoreColorLoading |\r\n      this.state.isEnableHighResolutionLoading |\r\n      this.state.isSaveColorLoading\r\n    )\r\n  }\r\n\r\n  logoutPressable() {\r\n    const [ isLogoutButtonPressed, setIsLogoutButtonPressed ] = React.useState(false)\r\n    const isLoading = this.isLoading()\r\n    const logoutColor = isLoading ? styles.h1.color+'8' : 'red'\r\n    return(\r\n      <Pressable   // logout pressable\r\n      onPress={() => {\r\n        blinkButton(setIsLogoutButtonPressed)\r\n        this.onLogoutButtonPress()\r\n      }}\r\n      disabled={isLoading}\r\n      style={[ styles.settingsRow, {\r\n        justifyContent: 'flex-start',\r\n        marginBottom: 30,\r\n        backgroundColor: isLogoutButtonPressed ? styles.h1.color+'8' : null\r\n      }]}\r\n      >\r\n        <Icon name='log-out' width={30} height={30} fill={logoutColor} />\r\n        <Text style={[styles.h2, { marginLeft: 10, color: logoutColor }]}>Logout</Text>\r\n      </Pressable>\r\n    )\r\n  }\r\n\r\n  onColorButtonPressFor(color) {\r\n    function onColorButtonPress() {\r\n      this.setState({ selectedColor: color })\r\n      this.props.navigation.setParams({selectedColor: color}) // Necessary to change the tab bar color dinamically in App.js\r\n    }\r\n    return onColorButtonPress.bind(this);\r\n  }\r\n\r\n  async onDisplayBackgroundImageSwitch(value) {\r\n    this.setState({ isDisplayBackgroundImageLoading: true });\r\n    const newSettings = {displayBackgroundImage: value}\r\n    const postDisplayResult = await postSettings(newSettings, this.props.appState.user.username)\r\n    if (postDisplayResult.ok) {\r\n      // sync user data with app or entries component\r\n      await this.props.appState.syncUserData()\r\n    }\r\n    this.setState({ isDisplayBackgroundImageLoading: false });\r\n  }\r\n\r\n  async onChangeFontColorSwitch(value) {\r\n    this.setState({ isChangeFontColorLoading: true });\r\n    const newSettings = {fontColorDark: value}\r\n    const postDisplayResult = await postSettings(newSettings, this.props.appState.user.username)\r\n    if (postDisplayResult.ok) {\r\n      // sync user data with app or entries component\r\n      await this.props.appState.syncUserData()\r\n      // update style variable with new data\r\n      this.setFontColor()\r\n    }\r\n    this.setState({ isChangeFontColorLoading: false });\r\n  }\r\n\r\n  async onEnableHighResolutionSwitch(value)  {\r\n    this.setState({ isEnableHighResolutionLoading: true });\r\n    const newSettings = {enableHighResolution: value}\r\n    const postHighResolutionResult = await postSettings(newSettings, this.props.appState.user.username)\r\n    if (postHighResolutionResult.ok) {\r\n      // sync user data with app or entries component\r\n      await this.props.appState.syncUserData()\r\n      // update style variable with new data\r\n    }\r\n    this.setState({ isEnableHighResolutionLoading: false });\r\n  }\r\n\r\n  async onSaveColorButtonPress() {\r\n    // fetch post selected color to user settings in server\r\n    console.log('POST COLOR STATUS: Started...')\r\n    this.setState({ isSaveColorLoading: true });\r\n    const colorSetting = {\r\n      backgroundColor: this.state.selectedColor\r\n    }\r\n    const postColorResult = await postSettings(colorSetting, this.props.appState.user.username)\r\n    if (postColorResult.ok) {\r\n      if (this.props.appState.user.settings.displayBackgroundImage) {\r\n        await this.onDisplayBackgroundImageSwitch(false)\r\n      } else {\r\n        // sync user data with app or entries component\r\n        await this.props.appState.syncUserData()\r\n      }\r\n      // initialize settings\r\n      this.syncUserSettings()\r\n    }\r\n    console.log('POST COLOR STATUS: Finished.')\r\n    this.setState({ isSaveColorLoading: false });\r\n  }\r\n\r\n  async onLogoutButtonPress() {\r\n    await keepUserConnectionAlive(null); // kills user connection\r\n    // this.props.route.params.logout();\r\n    this.props.appState.logout()\r\n  }\r\n\r\n  render() {\r\n    console.log('Rendering \"SettingsScreen\" component...')\r\n    return (\r\n      <this.SettingsScreen />\r\n    );  \r\n  }\r\n}\r\n","import React, { Component, useState, useEffect } from 'react';\r\nimport { FlatList, Text, SafeAreaView, Pressable, ActivityIndicator, Dimensions, ImageBackground, Platform, StatusBar } from 'react-native';\r\nimport { Icon } from 'react-native-eva-icons';\r\nimport * as Device from 'expo-device';\r\nconst isWindows = Device.osName == 'Windows'\r\nimport { capitalize } from './subcomponents/EditEmotions';\r\n\r\nconst appServerURI = 'https://mood-tracker-server.herokuapp.com/'\r\n\r\nfunction formatTopicName(name){\r\n  return capitalize(name.split('-').join(' '))\r\n}\r\n\r\nfunction buildApiUriParams(params) {\r\n  var uriParams = []\r\n  Object.keys(params).forEach( key => uriParams.push(key+'='+params[key]) )\r\n  return '?' + uriParams.join('&')\r\n}\r\n\r\nconst styles = {\r\n  mainView: {\r\n    height: '100%',\r\n    width: '100%',\r\n    // paddingTop: StatusBar.currentHeight\r\n  },\r\n  photosView: {\r\n    height: '100%',\r\n    width: '100%' ,\r\n  },\r\n  h1: {\r\n    fontSize: 26,\r\n    alignSelf: 'center',\r\n    // borderWidth: 1\r\n  },\r\n  header: {\r\n    position: 'absolute',\r\n    top: 0,\r\n    paddingTop: StatusBar.currentHeight,\r\n    width: '100%',\r\n    height: '20%',\r\n    backgroundColor: 'rgba(255,255,255,0.5)',\r\n    justifyContent: 'space-evenly',\r\n    alignItems: 'center'\r\n  },\r\n  headerLabel: {\r\n    // borderWidth: 1,\r\n    width: '70%',\r\n    fontSize: 22,\r\n    alignSelf: 'center',\r\n    textAlign: 'center',\r\n  },\r\n  status: {\r\n    backgroundColor: 'rgb(230,230,230)',\r\n    width: '100%',\r\n    height: '20%',\r\n    borderRadius: 20,\r\n    alignItems: 'center',\r\n    justifyContent: 'center'\r\n  },\r\n  statusText: {\r\n    fontSize: 18,\r\n    color: 'black'\r\n  },\r\n  image: {\r\n    width: '100%',\r\n    height: '100%',\r\n    alignItems: 'center',\r\n    justifyContent: 'center'\r\n  },\r\n}\r\n\r\nasync function getUnsplash(endpoint, params) {\r\n  console.log('UNSPLASH GET PHOTOS STATUS: STARTED...')\r\n  const reqParams = {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify({\r\n      endpoint: endpoint,\r\n      queryParams: params,\r\n    }),\r\n  }\r\n  var result, result_json, success\r\n  try {\r\n    result = await fetch(appServerURI + 'api/unsplash', reqParams)\r\n    if (result.ok) {\r\n      console.log(`UNSPLASH PHOTOS STATUS: FETCH SUCCESSFULL...`)\r\n\r\n      // let a = 'x-ratelimit-limit'\r\n      // let b = 'x-ratelimit-remaining'\r\n      // const headers = result.headers\r\n      // var limit, remaining\r\n      // switch (Platform.OS) {\r\n      //   case 'android':\r\n      //     limit = headers.map[a]\r\n      //     remaining = headers.map[b]          \r\n      //     break;\r\n      //   case 'web':\r\n      //     limit = headers.get(a)\r\n      //     remaining = headers.get(b)\r\n      //     break\r\n      //   default:\r\n      //     limit = headers.get(a)\r\n      //     remaining = headers.get(b)\r\n      //     break\r\n      // }\r\n      // console.log(`UNSPLASH PHOTOS STATUS:\\n  x-ratelimit-limit: ${limit}\\n  x-ratelimit-remaining: ${remaining}`)\r\n\r\n      result_json = await result.json()\r\n      success = result_json.length\r\n      if (success) {\r\n        console.log(`UNSPLASH PHOTOS STATUS: JSON RESULT SUCCESSFULL. RETRIEVED ${success} PHOTOS...`)\r\n        return result_json\r\n\r\n      } else {\r\n        console.log(`UNSPLASH PHOTOS STATUS: JSON RESULT FAILED. Logging json value...`)\r\n        console.log(result_json)\r\n        return null\r\n      }\r\n    } else {\r\n      console.log(`UNSPLASH GET PHOTOS STATUS: FETCH FAILED. Status code: ${result.status}, Text: ${result.statusText}..`)\r\n    }\r\n  } catch (error) {\r\n    console.log('UNSPLASH GET PHOTOS STATUS: ERROR CATCHED. LOGGING ERROR...')\r\n    console.log(error)\r\n    return null\r\n  }\r\n}\r\n\r\nconst Item = (props) => {\r\n  const topicsScreen = props.route.name == 'WallpaperTopics'\r\n  const photoURI = topicsScreen ? props.item.cover_photo.urls.regular : props.item.urls.regular\r\n  const nextScreenName = topicsScreen ? 'Wallpapers' : 'WallpaperZoom'\r\n  \r\n  const screenHeight = props.windowHeight + (Platform.OS != 'web' ? StatusBar.currentHeight : 0)\r\n  const photoHeight = topicsScreen ? ( isWindows ? screenHeight/3  : screenHeight/4 ) : ( isWindows ? screenHeight/2 : screenHeight/2 )\r\n  const photoWidth = topicsScreen ? ( isWindows ? '33.333333%' : '50%' ) : ( isWindows ? '50%' : '50%' )\r\n  return(\r\n    <Pressable\r\n      onPress={() => props.navigation.navigate( nextScreenName , { selectedImage: props.item })}\r\n      style={[{ minHeight: 70, height: photoHeight, width: photoWidth, margin: 0}]}\r\n    >\r\n      <ImageBackground source={{ uri:  photoURI }} style={styles.image} >\r\n        <Text style={[styles.h1, {width: '80%', color: 'white', textAlign: 'center'}]}>{ topicsScreen ? formatTopicName(props.item.slug) : '' }</Text>\r\n      </ImageBackground>\r\n    </Pressable>\r\n  )\r\n};\r\n\r\nexport class WallpapersComponent extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state={\r\n      photos: null,\r\n      page: null,\r\n      windowHeight: Dimensions.get('window').height,\r\n      isPhotosLoading: false,\r\n      hideHeader: false,\r\n    };\r\n    this.initializePhotosAsync = this.initializePhotosAsync.bind(this);\r\n    this.WallpapersHeaderText = this.WallpapersHeaderText.bind(this);\r\n    this.WallpapersHeader = this.WallpapersHeader.bind(this);\r\n    this.renderItem = this.renderItem.bind(this);\r\n    this.PhotoList = this.PhotoList.bind(this);\r\n    this.ControlButtons = this.ControlButtons.bind(this);\r\n    this.loadNextPagePhotosAsync = this.loadNextPagePhotosAsync.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log('\"Wallpapers\" component did mount...')\r\n    // StatusBar.setStatusBarTranslucent(true)\r\n    this.initializePhotosAsync()\r\n  }\r\n\r\n  async initializePhotosAsync() {\r\n    this.setState({isPhotosLoading: true})\r\n    let route = this.props.route\r\n    if (route.name=='WallpaperTopics') {\r\n      let asyncResult = await getUnsplash(`topics`, {page: 1, per_page: 30, order_by: 'position'})\r\n      this.setState({photos: asyncResult}) \r\n\r\n    } else {\r\n      let endpoint = `topics/${route.params.selectedImage.id}/photos`\r\n      let asyncResult = await getUnsplash(endpoint, {page: 1, per_page: 30, order_by: 'popular', orientation: 'portrait'})\r\n      this.setState({photos: [ route.params.selectedImage.cover_photo, ...asyncResult ], page: 1}) \r\n    }\r\n    this.setState({isPhotosLoading: false}) \r\n  }  \r\n\r\n  async loadNextPagePhotosAsync() {\r\n    console.log('LOAD NEXT PHOTOS PAGE STATUS: STARTED... ')\r\n    this.setState({isPhotosLoading: true})\r\n    let endpoint = `topics/${this.props.route.params.selectedImage.id}/photos`\r\n    let asyncResult = await getUnsplash(endpoint, {page: this.state.page+1, per_page: 30, order_by: 'popular', orientation: 'portrait'})\r\n    if (asyncResult) {\r\n      console.log('LOAD NEXT PHOTOS PAGE STATUS: SUCCESSFUL! ')\r\n      this.setState((prevState) => ({\r\n          photos: [ ...prevState.photos, ...asyncResult ],\r\n          page: prevState.page+1,\r\n        }))   \r\n    } else {\r\n      console.log('LOAD NEXT PHOTOS PAGE STATUS: FAILED! ')\r\n    }\r\n      console.log('LOAD NEXT PHOTOS PAGE STATUS: FINISHED. ')\r\n      this.setState({isPhotosLoading: false})\r\n  }\r\n\r\n  renderItem = ({ item }) => (\r\n    <Item item={item} windowHeight={this.state.windowHeight} {...this.props} />\r\n  );\r\n\r\n  WallpapersHeader () {\r\n    const hideHeader = this.state.hideHeader\r\n    const topicsScreen = this.props.route.name == 'WallpaperTopics'\r\n    return(\r\n      !hideHeader ? (\r\n        <Pressable\r\n        style={[ styles.header, {height: topicsScreen ? '20%' : '23%' } ]}\r\n        onPress={() => {this.setState({ hideHeader: true }); console.log('close button clicked...')}}\r\n        >\r\n          <this.WallpapersHeaderText hideHeader={hideHeader} />\r\n        </Pressable>  \r\n      ) : (\r\n        null\r\n      )\r\n    )\r\n  }\r\n\r\n  WallpapersHeaderText () {\r\n    const topicsScreen = this.props.route.name=='WallpaperTopics'\r\n    return(\r\n      this.state.isPhotosLoading ? (\r\n        <ActivityIndicator size='large' color='black' />\r\n      ) : (\r\n        this.state.photos ? (\r\n          <>\r\n            { !topicsScreen ? <Text style={[styles.h1]}>{ formatTopicName(this.props.route.params.selectedImage.slug) }</Text> : null }\r\n            <Text\r\n            style={[styles.headerLabel, {fontSize: topicsScreen ? 26 : 22 }]}\r\n            >\r\n              { this.props.route.params.headerText }</Text>\r\n          </>\r\n        ) : (\r\n          <Text style={styles.headerLabel}>Erro ao carregar imagems...</Text>\r\n        )\r\n     )\r\n    )\r\n  }\r\n  \r\n  PhotoList = () => {\r\n  \r\n    useEffect(() => {\r\n      const subscription = Dimensions.addEventListener('change', ({ window, screen }) => {\r\n        const windowHeightDifference = Math.abs(this.state.windowHeight-window.height)\r\n        if ( windowHeightDifference > 100) {\r\n          this.setState({windowHeight: window.height})\r\n        }\r\n      });\r\n      return () => subscription?.remove();\r\n    });\r\n\r\n    return(\r\n      <FlatList\r\n        data={ this.state.photos }\r\n        renderItem={ this.renderItem }\r\n        keyExtractor={ item => item.id }\r\n        numColumns={ isWindows ? 3  : 2 }\r\n        initialNumToRender={ null }\r\n        onEndReached={ this.props.route.name == 'WallpaperTopics' ? null : this.loadNextPagePhotosAsync }\r\n        refreshing={ this.state.isPhotosLoading }\r\n        />\r\n    )\r\n  }\r\n\r\n  ControlButtons() {\r\n    const topRight = {\r\n      top: Platform.OS != 'web' ? StatusBar.currentHeight : 0,\r\n      right: 0,\r\n      margin: '1.5%',\r\n      backgroundColor: '#fff0',\r\n    }\r\n\r\n    return(\r\n      !this.state.hideHeader ? (\r\n        <Pressable\r\n        style={[{\r\n          position: 'absolute',\r\n          width: 30,\r\n          height: 30,\r\n          alignItems: 'center',\r\n          justifyContent: 'center',\r\n          borderRadius: 30/2,\r\n        },\r\n        topRight\r\n        ]}\r\n        onPress={() => this.setState({hideHeader: true})}\r\n        >\r\n          <Icon name='close' width={30} height={30} fill='#fff' />\r\n        </Pressable>\r\n      ) : (\r\n        null\r\n      )\r\n    )\r\n  }\r\n\r\n  render() {\r\n    console.log('Rendering \"Wallpapers\" component...')\r\n    const settings = this.props.appState.user.settings\r\n    return (\r\n      <SafeAreaView style={styles.mainView}>\r\n        <SafeAreaView style={[styles.photosView, {backgroundColor: settings.backgroundColor}]}>\r\n          <this.PhotoList />\r\n          <this.WallpapersHeader />\r\n          <this.ControlButtons />\r\n        </SafeAreaView>\r\n      </SafeAreaView>\r\n    );  \r\n  }\r\n\r\n}","import { createContext } from 'react';\r\n\r\nconst UserContext = createContext();\r\n\r\nexport default UserContext","import React, { useContext } from 'react';\r\nimport { View, Text, Image, ImageBackground, Pressable, ActivityIndicator, Platform, Linking } from 'react-native';\r\n// import { postDisplayBackgroundImage } from './SettingsScreen';\r\nimport { postSettings } from './SettingsScreen';\r\nimport UserContext from '../shared/UserContext';\r\n\r\nvar styles = {\r\n  fotter: {\r\n    position: 'absolute',\r\n    bottom: 0,\r\n    height: '22%',\r\n    width: '100%',\r\n    justifyContent: 'space-evenly',\r\n  },\r\n  controlView: {\r\n    // flex: 0.4,\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-evenly',\r\n    alignItems: 'center',\r\n  },\r\n  attributionView: {\r\n    // flex: 0.6,\r\n    flexDirection: 'row',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n controlButton: {\r\n    width: '35%',\r\n    height: 40,\r\n    borderWidth: 1,\r\n    borderRadius: 20,\r\n    backgroundColor: '#f4f3f4',\r\n    alignItems: 'center',\r\n    justifyContent: 'center'\r\n  },\r\n  controlButtonLabel: {\r\n    color: '#000',\r\n    fontSize: 17,\r\n    fontWeight: 'bold'\r\n  },\r\n  userProfileImage: {\r\n    width: 50,\r\n    height: 50,\r\n    borderRadius: 25\r\n  },\r\n  attributionLabel: {\r\n    color: 'white',\r\n    fontSize: 14,\r\n    fontStyle: 'italic',\r\n    paddingLeft: 10,\r\n    textAlign: 'left',\r\n    maxWidth: '78%',\r\n  },\r\n  attributionURL: {\r\n    textDecorationLine: 'underline'\r\n  },\r\n}\r\n\r\nconst openUserProfileFor = (userProfileHtmlLink) => {\r\n  return function () {\r\n    Linking.openURL( userProfileHtmlLink + '?utm_source=Mood-Tracker&utm_medium=referral');\r\n  } \r\n}\r\n\r\nconst openUnsplashURL = () => {\r\n  Linking.openURL('https://unsplash.com/?utm_source=Mood-Tracker&utm_medium=referral')\r\n}\r\n\r\nexport function WallpaperZoom(props) {\r\n\r\n  const appState = useContext(UserContext);\r\n  const settings = appState.user.settings\r\n  const [isSaveImageLoading, setIsSaveImageLoading] = React.useState(false);\r\n\r\n  async function onSaveImageButtonPress() {\r\n    // fetch post selected color to user settings in server\r\n    console.log('POST IMAGE STATUS: Started...');\r\n    setIsSaveImageLoading(true);\r\n    const imageSetting = {\r\n      backgroundImage: props.route.params.selectedImage\r\n    };\r\n\r\n    const postImageResult = await postSettings(imageSetting, appState.user.username)\r\n    if (postImageResult.ok) {\r\n      // sync user data with app or entries component\r\n      if (!settings.displayBackgroundImage) {\r\n        await postSettings({displayBackgroundImage: true}, appState.user.username)\r\n      }\r\n\r\n      await props.appState.syncUserData();\r\n      // navigate back to settings\r\n      setIsSaveImageLoading(false);\r\n      props.navigation.navigate('Settings');\r\n    } else {\r\n      setIsSaveImageLoading(false);\r\n    }\r\n    console.log('POST IMAGE STATUS: Finished.');\r\n  }\r\n\r\n  console.log('Returning \"WallpaperZoom\" component...')\r\n\r\n  const fontColorDark = settings.fontColorDark\r\n  const fontColor = fontColorDark ? '#000' : '#fff'\r\n  const altFontColor = fontColorDark ? '#fff' : '#000'\r\n  for (let label of ['attributionLabel', 'controlButtonLabel']) {\r\n    styles[label] = { ...styles[label], color: fontColor }\r\n  }\r\n  styles.controlButton = { ...styles.controlButton, backgroundColor: altFontColor + '8', borderColor: fontColor + '8' }\r\n  const selectedImage = props.route.params.selectedImage\r\n  const imgURI = settings.enableHighResolution ? selectedImage.urls.raw : selectedImage.urls.regular\r\n  return (\r\n    <ImageBackground\r\n      source={{ uri: imgURI }}\r\n      style={{ flex: 1, backgroundColor: settings.backgroundColor }}\r\n    >\r\n      <View style={styles.fotter}>\r\n        <View style={styles.controlView}>\r\n          <Pressable\r\n            onPress={() => props.navigation.goBack()}\r\n            style={styles.controlButton}\r\n          >\r\n            <Text style={styles.controlButtonLabel}>Voltar</Text>\r\n          </Pressable>\r\n          <Pressable\r\n              onPress={onSaveImageButtonPress}\r\n              style={styles.controlButton}\r\n          >\r\n            {isSaveImageLoading ? (\r\n              <ActivityIndicator color='blue' />\r\n            ) : (\r\n              <Text style={styles.controlButtonLabel}>Aplicar</Text>\r\n            )}\r\n          </Pressable>\r\n        </View>\r\n        <View style={styles.attributionView}>\r\n          <Image\r\n          source={{ uri: selectedImage.user.profile_image.large }}\r\n          style={styles.userProfileImage} />\r\n          <Text style={styles.attributionLabel}>\r\n            {'Photo by '}\r\n            <Text\r\n            onPress={openUserProfileFor(selectedImage.user.links.html)}\r\n            style={styles.attributionURL} >{ selectedImage.user.name }</Text>\r\n            {' on '}\r\n            <Text\r\n            onPress={openUnsplashURL}\r\n            style={styles.attributionURL}>{ 'Unsplash' }</Text>\r\n          </Text>\r\n        </View>\r\n      </View>\r\n    </ImageBackground>\r\n  );\r\n}\r\n","console.log('Importing victory module...')\r\nimport * as Victory from 'victory'\r\nexport default Victory","import React, { Component, useState } from 'react';\r\nimport { ImageBackground, View, Text, Pressable, ScrollView, ActivityIndicator, Switch, StatusBar, Platform } from 'react-native';\r\nimport { Icon } from 'react-native-eva-icons';\r\nimport VectorIcon from 'react-native-vector-icons/MaterialCommunityIcons';\r\nimport \"react-native\";\r\nimport Victory from './victory'\r\nimport { blinkButton } from './SettingsScreen';\r\nimport { Today } from './EntrancesComponent';\r\nimport { moodColorsHEX, moodIcons } from './PostEntryComponent';\r\nvar moodColorsObj = {}\r\nmoodColorsHEX.forEach((color, index) => {\r\n  moodColorsObj[index+1] = color\r\n})\r\nconst moods = [1,2,3,4,5]\r\n\r\nvar styles = {\r\n  background: {\r\n    flex: 1,\r\n    paddingTop: StatusBar.currentHeight,\r\n    alignItems: 'center',\r\n    justifyContent: 'space-between',\r\n  },\r\n  foreground: {\r\n    width: 350,\r\n    paddingBottom: 60\r\n  },\r\n  header: {\r\n    height: 110,\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  card: {\r\n    marginTop: '5%',\r\n    paddingVertical: 5,\r\n    paddingHorizontal: 10,\r\n    borderRadius: 20,\r\n    backgroundColor: 'rgba(0,0,0,0.3)',\r\n  },\r\n  cardRow: {\r\n    flexDirection: 'row',\r\n    paddingVertical: 5,\r\n    alignItems: 'center',\r\n  },\r\n  statsRowItem: {\r\n    width: '25%',\r\n    alignItems: 'center',\r\n    justifyContent: 'center'\r\n  },\r\n  h1: {\r\n    fontSize: 25,\r\n    color: 'white'\r\n  },\r\n  h2: {\r\n    fontSize: 20,\r\n    color: 'white',\r\n  },\r\n  h3: {\r\n    fontSize: 17,\r\n    color: 'white',\r\n  },\r\n  h4: {\r\n    fontSize: 15,\r\n    color: 'white',\r\n  },\r\n  h5: {\r\n    fontSize: 13,\r\n    color: 'white',\r\n  },\r\n}\r\n\r\nlet moodMap = {\r\n  'Horrível': 1,\r\n  'Mal': 2,\r\n  'Regular': 3,\r\n  'Bem': 4,\r\n  'Ótimo': 5\r\n}\r\n\r\nconst interpolations = ['natural', 'linear', 'step', 'cardinal', 'catmullRom', 'basis']\r\nfunction nextInterpolation(current) {\r\n  const index = interpolations.indexOf(current)\r\n  const nextIndex = index==interpolations.length-1 ? 0 : index+1\r\n  return interpolations[nextIndex]\r\n}\r\n\r\nconst ChartCard = ({title, Chart, data}) => {\r\n  return(\r\n    <View style={styles.card}>\r\n      <View style={styles.cardRow}>\r\n        <Text style={styles.h2}>{ title }</Text>\r\n      </View>\r\n      <View style={{marginTop: 5, marginBottom: 5, alignItems: 'center', justifyContent: 'center'}}>\r\n        <Chart data={data} />\r\n      </View>\r\n    </View>\r\n  )\r\n}\r\n\r\nfunction MoodLineCard({data}) {\r\n  const [temporal, setTemporal] = useState(false)\r\n  const [interpolation, setInterpolation] = useState('natural')\r\n  const [temporalClicked, setTemporalClicked] = useState(false)\r\n  const [interpolationClicked, setInterpolationClicked] = useState(false)\r\n  return(\r\n    <View style={{width: '100%',  alignItems: 'center', justifyContent: 'center'}}>\r\n      <View style={{width: '100%',  alignItems: 'center', justifyContent: 'flex-start'}}>\r\n        { temporal ? <MoodLineTemporal data={data} interpolation={interpolation} /> : <MoodLine data={data} interpolation={interpolation} /> }\r\n      </View>\r\n      <View style={{width: '100%', height: 55, paddingHorizontal: 5, flexDirection: 'row', alignItems: 'center', justifyContent: 'space-between'}}>\r\n        <View style={{flexDirection: 'row', alignItems: 'center'}}>\r\n          <Icon name='swap-outline' width={15} height={15} fill={interpolationClicked ? '#fff6' : '#fff'} />\r\n          <Text\r\n          style={[styles.h4, { fontSize: 16, color: interpolationClicked ? '#fff6' : '#fff' }]}\r\n          onPress={() => {blinkButton(setInterpolationClicked, 100); setInterpolation(nextInterpolation(interpolation))}}\r\n          >\r\n            { ' ' + interpolation }\r\n          </Text>\r\n        </View>\r\n        <View style={{flexDirection: 'row', alignItems: 'center'}}>\r\n          <Icon name='swap-outline' width={15} height={15} fill={temporalClicked ? '#fff6' : '#fff'} />\r\n          <Text\r\n          style={[styles.h4, { fontSize: 16, color: temporalClicked ? '#fff6' : '#fff' }]}\r\n          onPress={() => {blinkButton(setTemporalClicked, 100); setTemporal(!temporal)}}\r\n          >\r\n            { temporal ? ' temporal' : ' atemporal' }\r\n          </Text>\r\n        </View>\r\n      </View>\r\n    </View>\r\n  )\r\n}\r\n\r\nfunction MoodLineTemporal({data, interpolation}) {\r\n  var time, time_s\r\n  var times = []\r\n  data.forEach((entry, index) => {\r\n    time = entry.startTime\r\n    time_s = parseInt(time.slice(0,2))*3600 + parseInt(time.slice(3,5))*60 + parseInt(time.slice(6,8))\r\n    data[index]['time_s'] = time_s\r\n    times.push(time_s)\r\n  })\r\n  data = data.sort((a, b) => {\r\n    return a.time_s - b.time_s;\r\n  })\r\n  var x_domain, x_dif, x_range\r\n  if (data[0]) {\r\n    let x_min = data[0].time_s\r\n    let x_max = data[data.length-1].time_s  \r\n    x_range = x_max - x_min\r\n    x_dif = (x_range/data.length-1)*0.4\r\n    let X_m = x_min - x_dif\r\n    let X_M = x_max + x_dif\r\n    x_domain = [ X_m, X_M ]\r\n    } else {\r\n    x_domain = [0,1]\r\n    x_dif = 0\r\n    x_range = 1\r\n  }\r\n  return(\r\n    <Victory.VictoryChart \r\n    width={330}\r\n    height={225}\r\n    padding={{left: 40, right: 20, top: 0, bottom: 65}}\r\n    domain={{x: x_domain, y: [0.5, 5.5]}}\r\n    >\r\n      <Victory.VictoryAxis\r\n      dependentAxis\r\n      domain={[0.5, 5.5]}\r\n      tickFormat={ tick => parseInt(tick) }\r\n      style={{\r\n        axis: {stroke: \"#fff0\"},\r\n        grid: {stroke: \"#fff7\"},\r\n        tickLabels: {fontSize: 17, padding: 15 , fill: '#fff'},\r\n      }}\r\n      />\r\n      <Victory.VictoryAxis\r\n      label={ !data[0] ? 'Adicione uma entrada para habilitar\\no modo temporal.' : ''}\r\n      tickValues={data.map(entry => entry.time_s)}\r\n      tickFormat={ tick => {\r\n        let tickEntry = data.filter(entry => entry.time_s==tick)[0]\r\n        if (tickEntry) {\r\n          return tickEntry.startTime.slice(0,5)\r\n        } else return null\r\n      }}\r\n      tickLabelComponent={<Victory.VictoryLabel angle={-90} dx={-25} dy={-8} />}\r\n      style={{\r\n        axis: {stroke: \"#fff0\"},\r\n        grid: {stroke: \"#fff0\"},\r\n        axisLabel: {\r\n          width: '70%',\r\n          fontSize: styles.h3.fontSize,\r\n          fill: '#fff',\r\n          // padding: 0\r\n        },\r\n        tickLabels: {fontSize: 15, padding: 0, fill: '#fff'},\r\n        ticks: {stroke: data[0] ? \"#fff8\" : '#fff0', size: 10},\r\n      }}\r\n      />\r\n      <Victory.VictoryLine\r\n      data={data}\r\n      x='time_s' y='y'\r\n      interpolation={interpolation}\r\n      style={{\r\n        data: {\r\n          stroke: '#fff',\r\n          strokeWidth: 3,\r\n        },\r\n      }}\r\n      />\r\n      <Victory.VictoryScatter\r\n      data={data}\r\n      x='time_s' y='y'\r\n      size={5.7}\r\n      style={{ data: { fill: ({datum}) => moodColorsHEX[datum.y-1] } }}\r\n      />\r\n    </Victory.VictoryChart>\r\n  )\r\n}\r\n\r\nfunction MoodLine({data, interpolation}) {\r\n  return(\r\n    <Victory.VictoryChart \r\n    width={330}\r\n    height={160}\r\n    padding={{left: 40, right: 20, top: 0, bottom: 0}}\r\n    domain={{x: [ 0.6, data.length + 0.4 ], y: [0.5, 5.5]}}\r\n    >\r\n      <Victory.VictoryAxis\r\n      dependentAxis\r\n      domain={[0.5, 5.5]}\r\n      tickFormat={ tick => parseInt(tick) }\r\n      style={{\r\n        axis: {stroke: \"#fff0\"},\r\n        grid: {stroke: \"#fff7\"},\r\n        tickLabels: {fontSize: 17, padding: 15, fill: '#fff'},\r\n      }}\r\n      />\r\n      <Victory.VictoryLine\r\n      data={data}\r\n      x='x' y='y'\r\n      interpolation={interpolation}\r\n      style={{\r\n        data: {\r\n          stroke: '#fff',\r\n          strokeWidth: 3,\r\n        },\r\n      }}\r\n      />\r\n      <Victory.VictoryScatter\r\n      data={data}\r\n      size={5.7}\r\n      style={{ data: { fill: ({datum}) => moodColorsHEX[datum.y-1] }}}\r\n      />\r\n    </Victory.VictoryChart>\r\n  )\r\n}\r\n\r\nfunction MoodPieCard({data}) {\r\n  return(\r\n    <View style={{width: 330, height: 180, flexDirection: 'row', alignItems: 'center', paddingTop: 5, paddingBottom: 10}}>\r\n      { data.entries[0]\r\n        ? <MoodPie data={data.data} />\r\n        : <Text style={[styles.h3, {width: '60%', textAlign: 'center'}]}>Você ainda não fez nenhuma entrada.</Text>\r\n      }\r\n      <MoodPieStats data={data} />\r\n    </View>\r\n  )\r\n}\r\n\r\nfunction MoodPieStats({data}) {\r\n  return(\r\n    <View style={{width: 150, height: 160, alignItems: 'center', justifyContent: 'space-between'}}>\r\n      {moods.map(mood => (<MoodStat key={mood} mood={mood} data={data} />))}\r\n    </View>\r\n  )\r\n}\r\n\r\nfunction MoodStat({mood, data}) {\r\n  const moodCountObj = data.data.filter(countObj => countObj.x==mood)[0]\r\n  const moodCount = moodCountObj ? moodCountObj.y : 0\r\n  const moodProp = Math.round(100*moodCount/data.entries.length)\r\n  return(\r\n    <View style={{width: '100%', height: 25, flexDirection: 'row', alignItems: 'center', justifyContent: 'space-evenly'}}>\r\n      <View style={styles.statsRowItem}>\r\n        <View style={{alignItems: 'center', justifyContent: 'center', width: 22, height: 22, borderRadius: 12.5, backgroundColor: moodColorsHEX[mood-1]}}>\r\n          <Text style={[styles.h4, {color: mood==3|mood==4|mood==5 ? '#000' : '#fff'}]}>{mood}</Text>\r\n        </View>\r\n      </View>\r\n      <View style={styles.statsRowItem}>\r\n        <Text style={styles.h4}>{`${moodCount}/${data.entries.length}` }</Text>\r\n      </View>\r\n      <View style={styles.statsRowItem}>\r\n        <Icon name='arrow-forward-outline' width={15} height={15} fill='#fff' />\r\n      </View>\r\n      <View style={styles.statsRowItem}>\r\n        <Text style={styles.h4}>{ (moodProp ? moodProp : 0) + '%' }</Text>\r\n      </View>\r\n    </View>\r\n  )\r\n}\r\n\r\nfunction MoodPie({data}) {\r\n  var colorScale = []\r\n  data.forEach(row => {colorScale.push(moodColorsHEX[row.x-1])})\r\n  return(\r\n    <Victory.VictoryPie\r\n    data={data}\r\n    x='x' y='y'\r\n    width={180}\r\n    height={150}\r\n    padding={{left: 0, right: 0, top: 0, bottom: 0}}\r\n    innerRadius={37}\r\n    padAngle={4}\r\n    cornerRadius={4}\r\n    colorScale={colorScale}\r\n    labels={[]}\r\n    />\r\n  )\r\n}\r\n\r\nexport default class Charts extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {}\r\n  }\r\n\r\n  render() {\r\n    console.log('Rendering \"Charts\" screen component...')\r\n    const settings = this.props.appState.user.settings\r\n    const backgroundImage = settings.backgroundImage\r\n    const imgURI =  settings.displayBackgroundImage ? (backgroundImage ? ( settings.enableHighResolution ? backgroundImage.urls.raw : backgroundImage.urls.regular ) : null ) : null\r\n    const backgroundColor = settings.backgroundColor\r\n\r\n    const entries = this.props.appState.user.entries\r\n    const todayEntries = entries.filter(entry => entry.date==Today())\r\n\r\n    const moodData = todayEntries.map( (entry, index) => ({ x: index+1, y: moodMap[entry.mood], startTime: entry.startTime }) )\r\n\r\n    var moodCount = { 1: 0, 2: 0, 3: 0, 4: 0, 5: 0 }\r\n    todayEntries.forEach((entry) => {\r\n      moodCount[moodMap[entry.mood]] += 1\r\n    })\r\n    var moodPieData = []\r\n    moods.forEach(mood => {\r\n      if (moodCount[mood]) {\r\n        moodPieData.push({ x: mood, y: moodCount[mood] })\r\n      }\r\n    })\r\n    \r\n    return(\r\n      <ImageBackground\r\n      source={{uri : imgURI}}\r\n      style={[ styles.background, {backgroundColor: backgroundColor} ]}\r\n      >\r\n        <ScrollView style={{width: '100%'}}>\r\n          <View style={[styles.foreground, {alignSelf: 'center'}]}>\r\n            <View style={styles.header}>\r\n              <Text style={styles.h1}>{'Painel'}</Text>\r\n            </View>\r\n            <ChartCard title='Avaliações de Hoje' Chart={MoodLineCard} data={moodData} />\r\n            <ChartCard title='Proporção das Avaliações' Chart={MoodPieCard} data={{data: moodPieData, entries: todayEntries}} />\r\n          </View>\r\n        </ScrollView>\r\n      </ImageBackground>\r\n    )  \r\n  }\r\n}","import React, { Component, createContext, useContext } from 'react';\nimport { ImageBackground, Text, ActivityIndicator, Platform } from 'react-native';\nimport { Icon } from 'react-native-eva-icons'\n// import AsyncStorage from '@react-native-async-storage/async-storage';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { Today } from './components/EntrancesComponent';\nimport { NavigationContainer, DefaultTheme, DarkTheme } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\n//import { createDrawerNavigator } from '@react-navigation/drawer';\n\nimport EntrancesScreen from './components/EntrancesComponent';\nimport PostEntranceScreen from './components/PostEntryComponent';\nimport LoginScreen from './components/LoginComponent'\nimport SettingsScreen from './components/SettingsScreen';\nimport { WallpapersComponent } from './components/WallpapersComponent';\nimport { WallpaperZoom } from './components/WallpaperZoomComponent';\nimport Charts from './components/Charts'\nimport UserContext from './shared/UserContext';\n\nimport * as Linking from 'expo-linking';\nconst linking = {\n  prefixes: [Linking.createURL('/')],//, 'https://luisresende13.github.io/Mood-Tracker'],\n  config: {\n    screens: {\n      Home: {\n        screens: {\n          Entrances: 'Entrances',\n          Settings: 'Settings',\n        },\n      },\n      PostEntrance: 'PostEntrance',\n      WallpaperTopics: 'WallpaperTopics',\n      Wallpapers: 'Wallpapers',\n      WallpaperZoom: 'WallpaperZoom'\n    }\n  }\n};\nconst loginLinking = {\n  prefixes: [Linking.createURL('/')],//, 'https://luisresende13.github.io/Mood-Tracker'],\n  config: {\n    screens: {\n      Login: 'Login'\n    }\n  }\n};\nconsole.log('CREATE URL: ' + Linking.createURL('/'))\n\n// cors-midpoint uri (needed to avoid cors' allow-cross-origin error when fetching in web platforms)\nconst appServerURI = 'https://mood-tracker-server.herokuapp.com/'\n\nconst LoadingScreen = () => (\n  <ImageBackground source={require('./assets/wallpaper.png')} style={{flex: 1, alignItems: 'center', justifyContent: 'center'}}>\n    <ActivityIndicator size='large' color='#fff' />\n  </ImageBackground>\n)\n\nconst SettingsScreenProvider = (props) => {\n  const appState = useContext(UserContext)\n  return(\n    <SettingsScreen  appState={appState} {...props} />\n  )\n}\n\nconst EntrancesScreenProvider = (props) => {\n  const appState = useContext(UserContext)\n  return(\n    <EntrancesScreen  appState={appState} {...props} />\n  )\n}\n\nconst PostEntranceScreenProvider = (props) => {\n  const appState = useContext(UserContext)\n  return(\n    <PostEntranceScreen  appState={appState} {...props} />\n  )\n}\n\nconst WallpapersScreenProvider = (props) => {\n  const appState = useContext(UserContext)\n  return(\n    <WallpapersComponent  appState={appState} {...props} />\n  )\n}\n\nconst WallpaperZoomScreenProvider = (props) => {\n  const appState = useContext(UserContext)\n  return(\n    <WallpaperZoom appState={appState} {...props} />\n  )\n}\n\nconst ChartsScreenProvider = (props) => {\n  const appState = useContext(UserContext)\n  return(\n    <Charts appState={appState} {...props} />\n  )\n}\n\nconst Stack = createNativeStackNavigator();\nconst Tab = createBottomTabNavigator();\n\nfunction tabBarIcon(iconName) {\n  const iconFunc = ({ focused, color, size }) => {\n    let newIconName = focused\n    ? iconName + '-outline'\n    : iconName + '-outline';\n    return <Icon name={newIconName} width={size} height={size} fill={ focused ? 'rgba(0,0,0,1)' : 'rgba(0,0,0,0.6)' } />\n  }\n  return iconFunc\n}\n\nconst HomeTab = (props) => {\n  const appState = useContext(UserContext)\n  const mainScreenOptions = ({ route }) => ({\n    headerShown: false,\n    tabBarShowLabel: false,\n    tabBarHideOnKeyboard: true,\n    tabBarBackground: () => (\n      <LinearGradient\n        colors={['#f4f3f4', route.name=='Settings' ? route.params.selectedColor : appState.user.settings.backgroundColor, '#f4f3f4']}\n        start={[route.name=='Entrances' ? -0.5 : 1.5, 1]}\n        end={[route.name=='Entrances' ? 1 : 0, 1]}\n        location={[0, 0.5, 1]}\n        style={{flex: 1}}\n      />\n    ),\n  })\n\n  return(\n    <Tab.Navigator\n    initialRouteName='Entrances'\n    screenOptions={mainScreenOptions}\n    >\n      <Tab.Screen\n      name=\"Entrances\"\n      component={EntrancesScreenProvider}\n      initialParams={{\n        selectedDate: Today(),\n        selectedEntryId: null,\n      }}\n      options={{\n        tabBarIcon: tabBarIcon('inbox')\n      }}\n      />\n      <Tab.Screen\n      name=\"Charts\"\n      component={ChartsScreenProvider}\n      options={{\n        tabBarIcon: tabBarIcon('bar-chart')\n      }}\n      />\n      <Tab.Screen\n      name=\"Settings\"\n      component={SettingsScreenProvider}\n      initialParams={{\n        selectedColor: appState.user.settings.selectedColor\n      }}\n      options={{\n        tabBarIcon: tabBarIcon('settings-2')\n      }}\n      />\n    </Tab.Navigator>    \n  )\n}\n\nconst HomeStack = () => {\n\n  console.log('Returning \"HomeScreen\" component...')\n  return(\n    <Stack.Navigator \n    initialRouteName='Home'\n    screenOptions={{\n      headerShown: false,\n    }}\n    >\n      <Stack.Screen\n      name=\"Home\"\n      component={HomeTab}\n      />\n      <Stack.Screen\n      name=\"PostEntrance\"\n      component={PostEntranceScreenProvider}\n      initialParams={{\n        currentEntry: {type: 'new', date: Today(), entry: null},\n      }}\n      />\n      <Stack.Screen\n      name=\"WallpaperTopics\"\n      component={WallpapersScreenProvider}\n      initialParams={{\n        headerText: 'Tópicos',\n      }}\n      />\n      <Stack.Screen\n      name=\"Wallpapers\"\n      component={WallpapersScreenProvider}\n      initialParams={{\n        headerText: 'Clique em uma imagem para ampliar',\n      }}\n      />\n      <Stack.Screen\n      name=\"WallpaperZoom\"\n      component={WallpaperZoomScreenProvider}\n      />\n    </Stack.Navigator>\n  )  \n}\n\nexport default class App extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      user: null,\n      isUserAuth: false,\n      isUserDataSyncing: false,\n    };\n\n    this.logout = this.logout.bind(this);\n    this.getAppState = this.getAppState.bind(this);\n    this.syncUserData = this.syncUserData.bind(this);\n    this.Login = this.Login.bind(this);\n    this.LoginContainer = this.LoginContainer.bind(this);\n    this.ContextProvider = this.ContextProvider.bind(this);\n  }\n\n  componentDidMount() {\n    console.log('App component did mount...')\n  }\n\n  logout() {\n    console.log('User logged out. Navigating to \"LoginScreen\"...')\n    this.setState({isUserAuth: false, user: null})\n  }\n\n  getAppState() {\n    return this.state\n  }\n\n  async syncUserData() {\n    console.log('SYNC USER DATA STATUS: Started...')\n    this.setState({ isUserDataSyncing: true });\n    try {\n        var UserResult = await fetch( appServerURI + 'Users/' + this.state.user.username, { method: 'GET' });\n        const userStatus =  'Status: ' + UserResult.status + ', ' + UserResult.statusText\n        if (UserResult.ok) {\n            console.log('fetch GET request for user DATA successful.')\n            console.log(userStatus)\n            console.log('SYNC USER DATA STATUS: Successful.')\n            const user = await UserResult.json();\n            this.setState({user: user})\n\n        } else {\n            console.log( new Error('\"fetch\" GET request for user DATA failed. Throwing error...') )\n            throw new Error(userStatus)\n        }\n    } catch (error) {\n            console.log('SYNC USER DATA STATUS: Error captured. Printing error...')\n            console.log(error);\n            alert('Não foi possível sincronizar as entradas. Por favor, aguarde..')\n\n    } finally {\n        this.setState({ isUserDataSyncing: false });\n        console.log('SYNC USER DATA STATUS: Finished.')\n    }    \n  }\n\n  Login() {\n    return(\n      <LoginScreen\n      user={this.state.user}\n      getAppState={this.getAppState}\n      setAppState={this.setState.bind(this)}\n      />\n    )\n  }\n\n  LoginContainer() {\n    return(\n      <NavigationContainer\n      linking={loginLinking}\n      fallback={<LoadingScreen />}\n      >\n        <Stack.Navigator \n        initialRouteName='Login'\n        screenOptions={{\n          headerShown: false,\n        }}\n        >\n          <Stack.Screen\n          name=\"Login\"\n          component={this.Login}\n          />\n        </Stack.Navigator>\n      </NavigationContainer>    \n    )\n  }\n\n  ContextProvider() {\n    return(\n      <UserContext.Provider\n      value={{\n        ...this.state,\n        logout: this.logout,\n        setAppState: this.setState.bind(this),\n        syncUserData: this.syncUserData\n      }}>\n          <NavigationContainer\n          linking={linking}\n          fallback={<LoadingScreen />}\n          >\n            <HomeStack />\n          </NavigationContainer>    \n      </UserContext.Provider>\n    )\n  }\n  render() {\n    console.log('Rendering \"App\" component...')\n    \n    return !this.state.isUserAuth ? (\n      <this.LoginContainer />\n    ) : (\n      <this.ContextProvider />\n    );  \n\n    // if (this.state.isUserAuth) {\n    //     return <this.ContextProvider />\n    // } else {\n    //     return <this.LoginContainer />\n    // }\n\n    // switch (this.state.isUserAuth) {\n    //   case true:\n    //     return <this.ContextProvider />\n    //   default:\n    //     return <this.LoginContainer />\n    // }\n  }\n}","// Emotion configs\r\nconst emotionGroupsNames = [ 'Bem & Calmo', 'Bem & Energizado', 'Mal & Calmo', 'Mal & Energizado' ]\r\nconst goodEnergizedEmotions = ['Animação', 'Concentração', 'Desinibição', 'Motivação', 'Euforia']\r\nconst goodCalmEmotions = ['Alívio', 'Calma', 'Conforto', 'Despreocupação', 'Inspiração', 'Orgulho', 'Paz', 'Relaxamento', 'Satisfação', 'Segurança', 'Criatividade']\r\nconst badEnergizedEmotions = ['Inquietação', 'Ansiedade', 'Desespero', 'Frustração', 'Insatisfação', 'Irritação', 'Medo', 'Vergonha', 'Preocupação', 'Impaciência', 'Sobrecarregado(a)', 'Tensão']\r\nconst badCalmEmotions = ['Depressão', 'Timidez', 'Cansaço', 'Tristeza','Confusão', 'Desanimo', 'Insegurança', 'Solidão', 'Tédio']\r\n// const badEnergizedEmotions = ['Agitação', 'Ansiedade', 'Tristeza', 'Decepção', 'Depressão', 'Desespero', 'Frustração', 'Insatisfação', 'Irritação', 'Medo', 'Paranoia', 'Preocupação', 'Impaciencia', 'Raiva', 'Revolta', 'Sobrecarregado(a)', 'Tensão', 'Nojo']\r\n\r\nconst emotionGroups = [ goodCalmEmotions.sort(), goodEnergizedEmotions.sort(), badCalmEmotions.sort(), badEnergizedEmotions.sort() ]\r\nconst basicEmotions = [ ...emotionGroups[0], ...emotionGroups[1], ...emotionGroups[2], ...emotionGroups[3] ]\r\n\r\nconst emotionTypes = ['Positiva', 'Negativa']\r\nconst emotionEnergy = ['Calmo(a)', 'Energizado(a)']\r\n\r\nvar defaultEmotions = []\r\nvar type, energy\r\n\r\nfor (let emotion of basicEmotions) {\r\n    type = emotionGroups[0].includes(emotion) || emotionGroups[1].includes(emotion) ? emotionTypes[0] : emotionTypes[1]\r\n    energy = emotionGroups[0].includes(emotion) || emotionGroups[2].includes(emotion) ? emotionEnergy[0] : emotionEnergy[1]\r\n    defaultEmotions.push({name: emotion, type: type, energy: energy})\r\n}\r\n\r\n// console.log(defaultEmotions);\r\n\r\nmodule.exports = defaultEmotions;"],"sourceRoot":""}