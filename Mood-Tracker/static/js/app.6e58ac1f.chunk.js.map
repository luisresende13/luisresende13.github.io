{"version":3,"sources":["assets/wallpaper.png","shared/dateRange.js","shared/dates.js","styles/loginStyles.js","styles/entrancesStyles.js","components/subcomponents/UserEntryCards.js","components/LoginComponent.js","styles/postEntryStyles.js","components/subcomponents/EditEmotions.js","components/SettingsScreen.js","components/EntrancesComponent.js","components/subcomponents/GoogleMapsAPI.js","components/PostEntryComponent.js","components/WallpapersComponent.js","shared/UserContext.js","components/WallpaperZoomComponent.js","components/victory.ts","components/subcomponents/MoodLineTemporal.js","components/subcomponents/EmotionBar.js","components/Charts.js","App.js","shared/emotionsConfig.js"],"names":["module","exports","dateRange","monthDict","Today","now","Date","toString","split","join","oneDigit","stringNumber","slice","length","getNextDate","date","next","nextDate","indexOf","getUniqueYears","uniqueYears","year","includes","push","fullDates","dates","currentYear","currentWeek","dateObj","newDate","day","parseInt","weekday","getDay","week","month","Years","FullDates","Weeks","weeks","fullDate","getWeeks","Months","months","getMonths","fullDateMap","current","period","dateCollections","getNext","currentIndex","dateCollection","nDates","forEach","collDate","index","lastDateIndex","isInLastDateIndex","nextIndex","intWeekDayMap","0","1","2","3","4","5","6","portugueseMonthSigs","formatDate","formatPeriodDate","thisWeek","lastWeek","isThisWeek","isLastWeek","thisMonth","lastMonth","isThisMonth","isLastMonth","datePeriodFilters","entry","dateDiff","date0","date1","YearTicks","firstDayOfEachMonth","filter","firstDayOfTheYear","map","yearTicks","isWindowsBroswer","Platform","OS","Device","screenWidth","Dimensions","get","width","screenHeight","height","relativeToScreen","size","axis","styles","login","mainView","flex","justifyContent","alignItems","paddingTop","StatusBar","currentHeight","titleView","flexDirection","minHeight","title","textAlign","fontSize","fontWeight","color","alignSelf","titleIcon","marginLeft","card","paddingHorizontal","paddingVertical","borderWidth","borderRadius","borderColor","backgroundColor","cardHeader","cardTitle","position","left","cardSection","loadingIcon","inputField","paddingLeft","button","buttonLabel","text","msgBox","marginBottom","msg","paddingBottom","scrollView","header","navigationRow","section","borderBottomWidth","sectionHeader","sectionTitle","cardRow","postButton","bottom","postButtonLabel","moodBadge","textAlignVertical","moodHeaderItem","emotionBadge","marginRight","textBadge","lineHeight","spaceBetween","icon","entryIcon","paddingRight","editButtonsView","editButton","editButtonLabel","theme","altTheme","moodColors","MoodHeader","View","style","Text","mood","star","name","fill","weather","Image","source","uri","main","temp","startTime","Address","useState","isCollapsed","setIsCollapsed","address","numberOfLines","onPress","top","Emotions","emotions","flexWrap","PaddingBottom","emotion","Jornal","jornal","EmptyCard","props","navigateParams","currentEntry","type","parentState","selectedDate","textStyle","marginTop","Pressable","parentProps","navigation","navigate","selectable","CardsLoadingMessage","UserEntryCards","state","EntryCard","bind","EditEntryButtons","editUserEntry","deleteUserEntry","setFontColor","console","log","lastCard","this","setParams","selectedEntryId","_id","entryId","selDateEntries","user","entries","reverse","isUserDataSyncing","onButtonPress","setAlertMsg","onButtonLongPress","isButtonPressed","setIsButtonPressed","highlightButtonFor","label","isLoading","isDeleteLoading","disabled","onPressIn","onLongPress","ActivityIndicator","selectedEntry","a","async","setMainScreenState","isDeleteEntryLoading","UsersResult","ok","status","deleteEntryURI","appServerURI","username","fetch","method","usersStatus","statusText","Error","syncUserData","fontColorDark","settings","fontColor","altFontColor","UserEntryCardsList","Component","imgURI","require","userScheme","layout","backgroundImage","displayBackgroundImage","enableHighResolution","falseParams","validateEmail","email","emailStatus","queryParams","emailAddress","param","fetchOptions","headers","body","JSON","stringify","apiResp","json","apiRespJson","formatCheck","smtpCheck","registerLocallyIfUserIsNewToDevice","AsyncStorage","getItem","localAuthInfo","parse","users","localUser","updatedLocalAuthInfo","password","setItem","keepUserConnectionAlive","id","keepConnected","userId","LoginScreen","ImageBackground","TextInput","placeholder","textContentType","onChangeText","autoComplete","importantForAutofill","value","userInfo","secureTextEntry","submitButton","Switch","isDataLoading","trackColor","false","true","thumbColor","ios_backgroundColor","onValueChange","setState","LoginIcon","loginMsg","isUserAuth","setLoginMsg","onSignIn","onSignUp","restoreUserToken","animation","setTimeout","textField","setField","sign","signIn","errMsg","NetInfo","then","DEVICE_IP_ADDRESS","details","ipAddress","initialLocalAuthInfo","IP_ADDRESS","deviceBrand","deviceManufacturer","deviceModelName","deviceModelId","deviceOsName","deviceOsVersion","deviceName","deviceType","info","trim","isInputEmpty","UsersStatus","Users","setAppState","postUserResult","emailValidation","reqStatus","passwordCheck","postUserOpts","postUserStatus","successMsg","entrances","content","flexGrow","entryTitle","moodButton","jornalText","saveButton","borderTopLeftRadius","borderTopRightRadius","saveButtonLabel","marginVertical","marginHorizontal","entryCardEmotionBadge","datetimeTitle","capitalize","multipleWordString","words","CapitalizedWords","element","toUpperCase","EditEmotions","showEditMenu","showExpandMenuButton","mode","newEmotionName","selectedEmotionType","selectedEmotionEnergy","initialEmotionLayout","EditEmotionsMenu","EditEmotionsSection","onSaveEmotionButtonPress","emotionLayoutMap","inputSectionStyle","inputStyle","tagStyle","createEmotionViewStyle","borderTopWidth","borderTopColor","isDeleteEmotionLoading","isSaveEmotionLoading","isPostEntryLoading","appState","isUpdateUserDataLoading","isNewEmotionFormComplete","unselectedLayout","selectedEmotionLayout","placeholderTextColor","typeSelected","setParentState","deleteEmotionMode","isLayoutSelected","onSaveEmotionLayoutButtonPress","hidden","anyOpen","Object","keys","isSelectedEmotions","newEmotion","energy","postEmotionResult","postUserEntryOpts","postEmotionStatus","updateUserData","isSaveEmotionLayoutLoading","postEmotionLayoutResult","postEmotionLayoutOpts","postEmotionLayoutStatus","colorList","background","foreground","settingsRow","colorBox","colorRow","colorSquare","logout","h1","h2","h3","h4","blinkButton","setPressed","timeSpan","postSettings","postSettingsResult","postSettingsOpts","postSettingsStatus","alert","SettingsScreen","isBackgroundColorSettingsOpen","selectedColor","isDisplayBackgroundImageLoading","isChangeFontColorLoading","isEnableHighResolutionLoading","isRestoreColorLoading","isSaveColorLoading","syncUserSettings","setBackgroundColor","ScreenSettings","ChooseImageSection","DisplayBackgroundImageSection","ChangeFontColorSection","EnableHighResolutionSection","ChangeBackgroundColorSection","ColorOptions","ColorControl","onLogoutButtonPress","onColorButtonPressFor","onSaveColorButtonPress","onChangeFontColorSwitch","ColorRow","logoutPressable","h","urls","raw","regular","ScrollView","React","isChooseImageButtonPressed","setIsChooseImageButtonPressed","isExposeImageButtonPressed","setIsExposeImageButtonPressed","displayBackgroundImageValue","onDisplayBackgroundImageSwitch","isEnableHighResolutionButtonPressed","setIsEnableHighResolutionButtonPressed","enableHighResolutionValue","onEnableHighResolutionSwitch","isChangeFontColorButtonPressed","setIsChangeFontColorButtonPressed","changeFontColorValue","isColorButtonPressed","setIsColorButtonPressed","newColorUnselected","fontColorTransp","seeWallpaper","nestedScrollEnabled","isColorRowPressed","setIsColorRowPressed","fontStyle","textDecorationLine","isLogoutButtonPressed","setIsLogoutButtonPressed","logoutColor","newSettings","colorSetting","EntrancesScreen","DateNavigationButton","onNextButtonPress","hitSlop","time","alertMsg","getMainScreenState","PostButton","setSelectedDate","route","params","isButtonClicked","setIsButtonClicked","GoogleMapsAPI","GoogleMapsJavascriptAPIkey","GoogleMapsGeocodingAPIKey","Location","moods","moodColorsHEX","moodColorsRGBA","moodIcons","emotionGroupsNames","emotionTypes","emotionEnergy","buildIsSelectedEmotions","monthSigs","monthNameMap","monthSig","getTime","formatPostEntryDatetimeTitle","ymd","m","PostEntranceScreen","endTime","createdAt","lastEdited","selectedMood","jornalEntry","location","isMoodUnmarked","isFetchingLocationOrWeather","locationPermission","userCoordinates","initializeEntry","onSaveButtonPress","EmotionButtons","MoodButtons","postEntryHeader","onEmotionButtonPress","onMoodButtonPress","inputCardBody","setSelectedEntry","InputCard","JornalInput","postNewEntryAsync","deleteEmotion","onEmotionButtonLongPress","goBack","item","alpha","selected","selColor","selectMood","objList","objKey","obj","sortedKeys","sort","newObjList","key","sortObjListByKey","isEmotionSelected","suppressHighlighting","selectEmotion","multiline","scrollEnabled","sectionName","cardBodyStyle","cardBodyContent","userEmotionGroups","emotionLabels","mapEmotions","setSelected","checkIfLocationEnabled","getCurrentLocation","fetchWeather","currentEmotions","isSelectedEmotionsNew","oldEmotions","newEmotionsSelected","newEntryPost","newEntry","editMode","postUserEntryResult","postUserEntryStatus","coords","lat","latitude","lon","longitude","units","response","resStatus","weatherInfo","coord","clouds","wind","visibility","addr","street","streetNumber","district","subregion","region","isoCountryCode","isWindows","formatTopicName","photosView","headerLabel","image","getUnsplash","endpoint","reqParams","result","result_json","success","Item","topicsScreen","photoURI","cover_photo","nextScreenName","windowHeight","photoHeight","photoWidth","selectedImage","margin","slug","WallpapersComponent","renderItem","PhotoList","useEffect","subscription","addEventListener","window","screen","Math","abs","remove","FlatList","data","photos","keyExtractor","numColumns","initialNumToRender","onEndReached","loadNextPagePhotosAsync","refreshing","isPhotosLoading","page","hideHeader","initializePhotosAsync","WallpapersHeaderText","WallpapersHeader","ControlButtons","per_page","order_by","asyncResult","orientation","prevState","headerText","topRight","right","SafeAreaView","UserContext","createContext","fotter","controlView","attributionView","controlButton","controlButtonLabel","userProfileImage","attributionLabel","maxWidth","attributionURL","openUnsplashURL","Linking","openURL","ControlButton","isClicked","setIsClicked","WallpaperZoom","useContext","isSaveImageLoading","setIsSaveImageLoading","userProfileHtmlLink","imageSetting","profile_image","large","links","html","Victory","appendTimeData","time_s","time_d","datePeriodDates","dateDifDays","sortData","by","ascending","b","range","i","n","list","lastDayOfTheMonth","monthDays","getDomain","space","x_min","x_max","x_dif","x_lim","x_domains","expandDomains","xAxisLabel","objListAverage","sum","equalObjects","obj1","obj2","equal","objListIncludes","dateAverage","isVariance","firstDatePeriodDate","uniqueDates","uniqueDate","avgData","subsetSizeThreshold","dataSubset","hour","subsetFilters","subsetAverage","avg","objListVariance","thisSubsetFirstDate","x","y","MoodLineTemporal","interpolation","secMode","thirdMode","setThirdMode","groupByMap","ticks","xTickValues","interval","xTicks","x_domain","y_domain","chartStyles","yAxis","stroke","grid","tickLabels","padding","xAxis","axisLabel","line","strokeWidth","scatter","datum","round","chartPaddings","chart","VictoryChart","domain","animate","duration","onLoad","VictoryAxis","dependentAxis","tickValues","tickFormat","tick","periodMap","toLowerCase","tickComponent","LineSegment","y1","y2","tickLabelComponent","VictoryLabel","angle","dx","dy","VictoryLine","VictoryScatter","uniqueItems","items","EmotionBarCard","uniqueEmotions","emotionCount","uniqueItemsCount","itemsCount","emotionEntriesLength","entriesProportion","emotionEntriesProportion","setBy","EmotionBar","ModeControlRow","containerStyle","var2","setVar2","var2Options","EmotionLabel","maxCount","variable","labelOutside","textAnchor","emotionBarStyle","parent","labels","VictoryBar","horizontal","barWidth","labelComponent","cornerRadius","moodColorsObj","cardContainer","periodButton","chartView","controlRow","bottomControlRow","moodPieCard","moodPieCardSection","moodPieStatsView","moodStatRow","statsRowItem","moodCircleBadge","h5","moodMap","periods","ChartScreenHeader","stats","groupBy","domainModes","ChartPanel","currentDates","setPeriod","setDate","NavigationRow","Chart","MoodLineCard","initialMode","modes","initialSecMode","secModes","initialThirdMode","thirdModes","MoodPieCard","PeriodButton","ChartCard","setMode","setSecMode","temporal","setTemporal","ModeSwapButton","var1","setVar1","var1Options","modeClicked","setModeClicked","interpolations","setInterpolation","stat","per","setStatForPeriod","MoodLine","moodCount","moodPieData","MoodPie","MoodPieStats","nEntries","colorScale","row","VictoryPie","innerRadius","padAngle","moodCounts","countObj","MoodStat","moodCountObj","moodProp","Charts","ChartsScreen","linking","prefixes","config","screens","Home","Entrances","Settings","PostEntrance","WallpaperTopics","Wallpapers","loginLinking","Login","LoadingScreen","SettingsScreenProvider","EntrancesScreenProvider","PostEntranceScreenProvider","WallpapersScreenProvider","WallpaperZoomScreenProvider","ChartsScreenProvider","tabBarLabelsMap","tabBarIconsMap","tabNavigatorOptionsProvider","iconName","headerShown","tabBarHideOnKeyboard","tabBarLabel","tabBarLabelPosition","tabBarLabelStyle","tabBarShowLabel","tabBarIcon","focused","newIconName","tabBarActiveTintColor","tabBarInactiveTintColor","tabBarActiveBackgroundColor","tabBarInactiveBackgroundColor","tabBarItemStyle","tabBarStyle","elevation","Stack","createNativeStackNavigator","Tab","createBottomTabNavigator","HomeTab","Navigator","initialRouteName","screenOptions","Screen","component","initialParams","options","HomeStack","App","getAppState","LoginContainer","ContextProvider","UserResult","userStatus","NavigationContainer","fallback","Provider","emotionGroups","defaultEmotions"],"mappings":"8FAAAA,EAAOC,QAAU,IAA0B,uC,+PCo7H5BC,EAp7HG,CACd,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,c,s0BC56HJ,IAAMC,EAAY,CAChB,IAAO,KAAM,IAAO,KAAM,IAAO,KACjC,IAAO,KAAM,IAAO,KAAM,IAAO,KACjC,IAAO,KAAM,IAAO,KAAM,IAAO,KACjC,IAAO,KAAM,IAAO,KAAM,IAAO,MAG5B,SAASC,IACZ,IAAMC,GAAM,IAAIC,MAAOC,WAAWC,MAAM,KAExC,MADc,CAAEH,EAAI,GAAIF,EAAUE,EAAI,IAAKA,EAAI,IAAKI,KAAK,KAItD,SAASC,EAASC,GACrB,MAAuB,KAAnBA,EAAa,GAAkBA,EAAaC,MAAM,EAAGD,EAAaE,QAC1DF,EAGT,SAASG,EAAYC,GAAoB,IAAdC,EAAa,uDAAR,OAC7BC,EAAWf,EAAUA,EAAUgB,QAAQH,IAAe,YAANC,GAAoB,EAAI,IAC9E,OAAOC,EAGX,SAASE,IAEP,IADE,IACF,EADMC,EAAc,GACpB,IAAiBlB,KAAjB,aAA4B,CAAC,IACvBmB,EADsB,QACVT,MAAM,EAAE,GACnBQ,EAAYE,SAASD,IACxBD,EAAYG,KAAKF,GAGrB,OAAOD,EAGT,SAASI,IAIP,IAHA,IAGA,EAHIC,EAAQ,GACRC,EAAcP,IAAiB,GAC/BQ,EAAc,EAClB,IAAiBzB,KAAjB,aAA4B,CAAC,IAApBa,EAAmB,QACpBa,EAAU,IAAItB,KAAKS,GACrBc,EAAU,CACZd,KAAMA,EACNe,IAAKC,SAASrB,EAASK,EAAKH,MAAM,EAAE,MACpCoB,QAASJ,EAAQK,SACjBC,KAAM,KACNC,MAAOJ,SAASrB,EAASK,EAAKH,MAAM,EAAE,KACtCS,KAAMU,SAAShB,EAAKH,MAAM,EAAE,KAG1BiB,EAAQR,MAAQK,GAClBA,EAAcG,EAAQR,KACtBM,EAAc,GAEO,GAAjBE,EAAQG,UACVL,GAAe,GAGnBE,EAAQK,KAAOP,EACfF,EAAMF,KAAKM,GAEb,OAAOJ,EA+BF,IAAMW,EAAQjB,IACRkB,EAAYb,IACZc,EA9Bb,WAGE,IAFA,IAEA,EAFMD,EAAYb,IACde,EAAQ,CAAE,CAACL,KAAMG,EAAU,GAAGH,KAAMb,KAAMgB,EAAU,GAAGhB,OAC3D,IAAqBgB,KAArB,aAAgC,CAAC,IAAxBG,EAAuB,QACzBA,EAASN,MAAQK,EAAMA,EAAM1B,OAAO,GAAGqB,MAC1CK,EAAMhB,KAAK,CACPW,KAAMM,EAASN,KACfb,KAAMmB,EAASnB,OAIvB,OAAOkB,EAmBYE,GACRC,EAjBN,WAGL,IAFA,IAEA,EAFML,EAAYb,IACdmB,EAAS,CAAE,CAACR,MAAOE,EAAU,GAAGF,MAAOd,KAAMgB,EAAU,GAAGhB,OAC9D,IAAqBgB,KAArB,aAAgC,CAAC,IAAxBG,EAAuB,QACvBA,EAASL,OAASQ,EAAOA,EAAO9B,OAAO,GAAGsB,OAC/CQ,EAAOpB,KAAK,CACVY,MAAOK,EAASL,MAChBd,KAAMmB,EAASnB,OAIrB,OAAOsB,EAMaC,GAEf,SAASC,EAAY9B,GAC1B,OAAOsB,EAAUnC,EAAUgB,QAAQH,IAG9B,SAAS+B,EAAQC,GACtB,OAAOF,EAAYzC,KAAS2C,GAGvB,IAAMC,EAAkB,CAC7B,IAAO9C,EACP,KAAQoC,EACR,MAASI,EACT,KAAQN,GAGH,SAASa,EAAQlC,GAA4B,IAG9CmC,EAHwBlC,EAAqB,uDAAhB,OAAQ+B,EAAQ,uCAC3CI,EAAiBH,EAAgBD,GACjCK,EAASD,EAAetC,OAE1B,CAAC,MAAO,QAAQS,SAASyB,GAC3BG,EAAeC,EAAejC,QAAQH,EAAKR,YAE3C4C,EAAeE,SAAQ,SAACC,EAAUC,GAC9BD,EAASP,IAAShC,EAAKgC,IAAWO,EAASjC,MAAMN,EAAKM,OACxD6B,EAAeK,MAGnB,IAAMC,EAAsB,QAANxC,EAAeoC,EAAO,EAAI,EAC1CK,EAAoBP,GAAcM,EAClCE,EAAYD,EACR,QAANzC,EAAe,EAAIoC,EAAO,EAC5BF,GAAsB,QAANlC,EAAe,GAAK,GAEtC,OAAOmC,EAAeO,GAGjB,IAAMC,EAAgB,CAC3BC,EAAG,MACHC,EAAG,MACHC,EAAG,MACHC,EAAG,MACHC,EAAG,MACHC,EAAG,MACHC,EAAG,OAGQC,EAAsB,CACjC,MAAO,MAAO,MAAO,MACrB,MAAO,MAAO,MAAO,MACrB,MAAO,MAAO,MAAO,OAGhB,SAASC,EAAWrD,GACzB,IAAMc,EAAU,IAAIvB,KAAKS,GACnBiB,EAAU2B,EAAc9B,EAAQI,UAChCH,EAAMC,SAASrB,EAASK,EAAKH,MAAM,EAAE,MACrCuB,EAAQgC,EAAoBpC,SAASrB,EAASK,EAAKH,MAAM,EAAE,KAAK,GAKtE,OAHIG,IAASX,IAAkB,SACtBW,IAASD,EAAYV,IAAS,YAAsB,UAC/C4B,EAAU,MACRF,EAAM,IAAMK,EAwBvB,IAAMkC,EAAmB,CAC9B,IAAOD,EACP,KAvBK,SAAoBrD,GACzB,IAAMuD,EAAW,CAACpC,KAAMY,EAAQ,QAASzB,KAAMyB,EAAQ,SACjDyB,EAAWtB,EAAQqB,EAAU,WAAY,QACzCE,EAAazD,EAAKmB,MAAMoC,EAASpC,MAAQnB,EAAKM,MAAMiD,EAASjD,KAC7DoD,EAAa1D,EAAKmB,MAAMqC,EAASrC,MAAQnB,EAAKM,MAAMkD,EAASlD,KACnE,OAAImD,EAAkB,gBAAiBzD,EAAKM,KACnCoD,EAAkB,mBAAoB1D,EAAKM,KAC/C,UAAiBN,EAAKmB,KAAtB,KAA+BnB,EAAKM,MAiBzC,MAdK,SAAqBN,GAC1B,IAAM2D,EAAY,CAACvC,MAAOW,EAAQ,SAAUzB,KAAMyB,EAAQ,SACpD6B,EAAY1B,EAAQyB,EAAW,WAAY,SAC3CE,EAAc7D,EAAKoB,OAAOuC,EAAUvC,OAASpB,EAAKM,MAAMqD,EAAUrD,KAClEwD,EAAc9D,EAAKoB,OAAOwC,EAAUxC,OAASpB,EAAKM,MAAMsD,EAAUtD,KAClEc,EAAQgC,EAAoBpD,EAAKoB,MAAM,GAC7C,OAAIyC,EAAmB,gBAAczC,EAApB,IAA6BpB,EAAKM,KAC1CwD,EAAmB,mBAAiB1C,EAAvB,IAAgCpB,EAAKM,KAC5Cc,EAAV,KAAoBpB,EAAKM,MAO9B,KAAQ,SAAAN,GAAI,aAAWA,IAGlB,SAAS+D,EAAkB/D,EAAMgC,GACtC,MAAO,CACL,KAAQ,SAAAgC,GAAK,OAAIA,EAAMhE,MAAQA,EAAKgC,GAAQhC,MAC5C,IAAO,SAAAgE,GAAK,OAAIA,EAAMhE,MAAQA,EAAKgC,IACnC,KAAQ,SAAAgC,GAAK,OAAIlC,EAAYkC,EAAMhE,MAAMmB,MAAMnB,EAAKgC,GAAQb,MAAQW,EAAYkC,EAAMhE,MAAMM,MAAMN,EAAKgC,GAAQ1B,MAC/G,MAAS,SAAA0D,GAAK,OAAIlC,EAAYkC,EAAMhE,MAAMoB,OAAOpB,EAAKgC,GAAQZ,OAASU,EAAYkC,EAAMhE,MAAMM,MAAMN,EAAKgC,GAAQ1B,MAClH,KAAQ,SAAA0D,GAAK,OAAIlC,EAAYkC,EAAMhE,MAAMM,MAAMN,EAAKgC,KACpDA,GAGG,SAASiC,EAASC,EAAOC,GAC9B,OAAS,IAAI5E,KAAK4E,GAAW,IAAI5E,KAAK2E,IAA/B,MASF,IAAME,EANb,WACE,IAAMC,EAAsB/C,EAAUgD,OAAOP,EAAkB,CAAC,KAAQ,MAAO,SAASO,QAAO,SAAAtE,GAAI,OAAc,GAAVA,EAAKe,OACtGwD,EAAoBF,EAAoBC,QAAO,SAAA7C,GAAQ,OAAoB,GAAhBA,EAASV,KAA8B,GAAlBU,EAASL,SAAa,GAAGpB,KAC/G,OAAOqE,EAAoBG,KAAI,SAAA/C,GAAQ,OAAIwC,EAASM,EAAmB9C,EAASzB,SAGzDyE,G,6GCnNnBC,GAAgC,OAAbC,IAASC,GAA4B,OAAfC,KAAsC,WAAfA,KAChEC,GAAcC,KAAWC,IAAI,UAAUC,MACvCC,GAAeH,KAAWC,IAAI,UAAUG,OAEvC,SAASC,GAAiBC,GAAqB,IAAfC,EAAc,uDAAT,QACxC,MAAkB,iBAAPD,EACArE,SAASqE,EAAKxF,MAAM,EAAGwF,EAAKvF,OAAO,IAAM,KAAc,SAANwF,EAAgBR,GAAcI,IAE/ER,GAAmBW,EAAOA,GAAe,SAANC,EAAgBR,GAAY,OAASI,GAAa,OAIpG,IAgHeK,GAhHF,CACTC,MAAO,CACHC,SAAU,CACNC,KAAM,EACNC,eAAgB,SAChBC,WAAY,SAEZC,WAAYC,KAAUC,eAE1BC,UAAW,CACPC,cAAe,MACfN,eAAgB,SAChBC,WAAY,SACZM,UAAWd,GAAiB,GAAI,WAEpCe,MAAO,CAEHC,UAAW,SACXC,SAAUjB,GAAiB,IAC3BkB,WAAY,OACZC,MAAO,QACPC,UAAW,UAEfC,UAAW,CACPxB,MAAOG,GAAiB,IACxBD,OAAQC,GAAiB,IACzBsB,WAAYtB,GAAiB,GAC7BS,WAAYT,GAAiB,IAEjCuB,KAAM,CACFxB,OAAQC,GAAiB,KACzBc,UAAWd,GAAiB,KAC5BH,MAAOG,GAAiB,KACxBwB,kBAAmBxB,GAAiB,IACpCyB,gBAAiBzB,GAAiB,IAClC0B,YAAa1B,GAAiB,GAC9B2B,aAAc3B,GAAiB,IAC/B4B,YAAa,kBACbrB,eAAgB,gBAChBsB,gBAAiB,SAErBC,WAAY,CACR/B,OAAQ,SACRF,MAAO,OACPU,eAAgB,UAGpBwB,UAAW,CACPC,SAAU,WACVC,KAAMjC,GAAiB,GACvBiB,SAAUjB,GAAiB,IAC3BkB,WAAY,OACZC,MAAO,SAEXe,YAAa,CACTnC,OAAQ,QACRQ,eAAgB,gBAChBC,WAAY,UAGhB2B,YAAa,CACTf,UAAW,UAEfgB,WAAY,CAERrC,OAAQ,MACRF,MAAO,OACPwC,YAAarC,GAAiB,IAC9BiB,SAAUjB,GAAiB,IAC3B0B,YAAa,EACbC,aAAc3B,GAAiB,GAC/B4B,YAAa,kBACbC,gBAAiB,SAErBS,OAAQ,CACJvC,OAAQ,MACRF,MAAO,OACPmB,UAAW,SACXR,WAAY,SACZD,eAAgB,SAChBmB,YAAa,EACbC,aAAc,EACdC,YAAa,gBACbC,gBAAiB,aAErBU,YAAa,CACTtB,SAAUjB,GAAiB,IAC3BkB,WAAY,OACZC,MAAO,SAEXqB,KAAM,CACFvB,SAAUjB,GAAiB,IAC3BgB,UAAW,UAEfyB,OAAQ,CACJ5C,MAAOG,GAAiB,KACxByB,gBAAiBzB,GAAiB,GAClCwB,kBAAmBxB,GAAiB,GACpC0C,aAAc1C,GAAiB,GAC/BO,eAAgB,SAChBsB,gBAAiB,gBACjBH,YAAa,EACbE,YAAa,iBAGjBe,IAAK,CACD3B,UAAW,SACXG,MAAO,W,SCsCJhB,GA5JF,CACTE,SAAU,CACNC,KAAM,EACNG,WAAYC,KAAUC,cACtBiC,cAAe5C,GAAiB,KAEpC6C,WAAY,CACRvC,KAAM,GAEVwC,OAAQ,CACJ/C,OAAQC,GAAiB,KACzBQ,WAAY,SACZD,eAAgB,UAEpBwC,cAAe,CACXhD,OAAQC,GAAiB,IACzBO,eAAgB,gBAChBC,WAAY,cAEhBwC,QAAS,CACLnD,MAAOG,GAAiB,KACxB4C,cAAe,MACfK,kBAAmB,EACnBrB,YAAa,QACbR,UAAW,UAEf8B,cAAe,CACX1C,WAAY,SACZD,eAAgB,SAChBR,OAAQC,GAAiB,MAE7BmD,aAAc,CACVlC,SAAUjB,GAAiB,IAC3BmB,MAAO,SAGXI,KAAM,CACFmB,aAAc,KACdjB,gBAAiBzB,GAAiB,GAClCwB,kBAAmBxB,GAAiB,IACpC2B,aAAc3B,GAAiB,IAC/B6B,gBAAiB,mBAErBuB,QAAS,CACLvC,cAAe,MACfY,gBAAiBzB,GAAiB,GAClCQ,WAAY,UAEhB6C,WAAY,CACRrB,SAAU,WACVjC,OAAQC,GAAiB,IACzBH,MAAOG,GAAiB,IACxB2B,aAAc3B,GAAiB,IAC/BsD,OAAQtD,GAAiB,IAEzBoB,UAAW,SACXS,gBAAiB,gBACjBtB,eAAgB,UAEpBgD,gBAAiB,CACbnC,UAAW,UAEfoC,UAAW,CACPzD,OAAqB,OAAbR,IAASC,GAAY,KAAOQ,GAAiB,IACrDyB,gBAA8B,OAAblC,IAASC,GAAY,EAAI,KAC1CmC,aAAc3B,GAAiB,IAC/BH,MAAOG,GAAiB,KACxBiB,SAAUjB,GAAiB,IAC3BgB,UAAW,SACXyC,kBAAmB,UAEvBC,eAAgB,CACZ3D,OAAQC,GAAiB,IACzBQ,WAAY,WACZD,eAAgB,UAEpBoD,aAAc,CAEV5D,OAAqB,OAAbR,IAASC,GAAY,KAAOQ,GAAiB,IACrD6B,gBAAiB,UACjBF,aAAc3B,GAAiB,MAC/ByB,gBAA8B,OAAblC,IAASC,GAAY,EAAI,KAC1CgC,kBAAmBxB,GAAiB,MACpC4D,YAAa5D,GAAiB,GAC9BiB,SAAUjB,GAAiB,IAC3BgB,UAAW,SACXyC,kBAAmB,UAEvBI,UAAW,CACPhC,gBAAiB,YACjBF,aAAc3B,GAAiB,IAC/BS,WAAYT,GAAiB,GAC7B4C,cAAe5C,GAAiB,GAChCwB,kBAAmBxB,GAAiB,IACpCH,MAAO,OACPoB,SAAUjB,GAAiB,IAC3B8D,WAAY9D,GAAiB,IAC7BgB,UAAW,OACXyC,kBAAmB,OAEvBjB,KAAM,CAEFvB,SAAUjB,GAAiB,IAC3BmB,MAAO,SAEX4C,aAAc,CACVxD,eAAgB,iBAEpByD,KAAM,CACFxC,kBAAmBxB,GAAiB,KAExCiE,UAAW,CACPC,aAAc,EACdxC,YAAa,GAEjByC,gBAAiB,CACbtD,cAAe,MACfd,OAAQC,GAAiB,IACzB4C,cAAe5C,GAAiB,GAChCQ,WAAY,WACZD,eAAgB,iBAEpB6D,WAAY,CACRrE,OAAQC,GAAiB,IACzBH,MAAOG,GAAiB,KACxB0B,YAAa,EACbE,YAAa,YACbD,aAAc3B,GAAiB,IAC/BQ,WAAY,SACZD,eAAgB,UAEpB8D,gBAAiB,CACbpD,SAAUjB,GAAiB,IAC3BkB,WAAY,MACZC,MAAO,SAEXsB,OAAQ,CACJT,SAAU,WACVZ,UAAW,SACXkC,OAAQtD,GAAiB,KACzBH,MAAOG,GAAiB,KACxByB,gBAAiBzB,GAAiB,IAClCwB,kBAAmBxB,GAAiB,IAEpCO,eAAgB,SAChBsB,gBAAiB,gBACjBH,YAAa,EACbE,YAAa,iBAEjBe,IAAK,CACD3B,UAAW,SACXG,MAAO,U,6/BCnJfhB,GAAOmE,MAAQ,GAAInE,GAAOoE,SAAW,GAerC,IAAMC,GAAa,CAAC,cAAY,UAAW,IAAO,UAAW,QAAW,UAAW,IAAO,UAAW,WAAS,WAExGxK,GAAY,CAAC,IAAO,KAAM,IAAO,KAAM,IAAO,KAAM,IAAO,KAAM,IAAO,KAAM,IAAO,KAAM,IAAO,KAAM,IAAO,KAAM,IAAO,KAAM,IAAO,KAAM,IAAO,KAAM,IAAO,MAOzK,SAASyK,GAAT,GAA8B,IAnBGT,EAmBZpF,EAAQ,EAARA,MACjB,OACI,gBAAC8F,GAAA,EAAD,CAAMC,MAAQ,CAACxE,GAAOiD,QAASjD,GAAO4D,cAAtC,UACI,gBAACW,GAAA,EAAD,CAAMC,MAAQ,CAAC,CAAC9D,cAAe,MAAOL,WAAY,eAAlD,UACA,eAACoE,GAAA,EAAD,CAAMD,MAAO,CAACxE,GAAOqD,UAAW,CAAC3B,gBAAiB2C,GAAW5F,EAAMiG,QAAnE,SAA6EjG,EAAMiG,OACzEjG,EAAMkG,KACR,eAACJ,GAAA,EAAD,CAAMC,MAAO,CAACxE,GAAOuD,eAAgB,CAAC7D,MAAOG,GAAiB,MAA9D,SACI,eAAC,OAAD,CAAM+E,KAAK,OAAOC,KAAK,OAAOnF,MAAOG,GAAiB,IAAKD,OAAQC,GAAiB,QAEpF,KACFpB,EAAMqG,QACJ,eAACP,GAAA,EAAD,CAAMC,MAAO,CAACxE,GAAOuD,eAAgB,CAAC7D,MAAOG,GAAiB,MAA9D,SACI,eAACkF,GAAA,EAAD,CACAC,OAAQ,CAACC,KAhCJpB,EAgCgCpF,EAAMqG,QAAQA,QAAQjB,KA/B/D,YAAhBzE,IAASC,GACH,oCAAqCwE,EAA3C,UAEuB,QAAhBzE,IAASC,GACV,qCAAsCwE,EAA5C,eADG,IA6BiBW,MAAO,CAAC9E,MAAOG,GAAiB,IAAKD,OAAQC,GAAiB,SAGlE,KACFpB,EAAMqG,QACJ,eAACP,GAAA,EAAD,CAAMC,MAAO,CAACxE,GAAOuD,eAAgB,CAAC7D,MAAOG,GAAiB,MAA9D,SACI,eAAC4E,GAAA,EAAD,CAAMD,MAAO,CAACxE,GAAOmE,MAAO,CAACrD,SAAUjB,GAAiB,MAAxD,SACMpB,EAAMqG,QAAQI,KAAKC,KAAKlL,WAAWK,MAAM,EAAE,GAAK,YAG1D,QAGZ,gBAACiK,GAAA,EAAD,CAAMC,MAAO,CAACxE,GAAOiD,SAArB,UACI,eAAC,OAAD,CAAM2B,KAAK,OAAOhF,OAAQC,GAAiB,IAAKH,MAAOG,GAAiB,IAAKgF,KAAK,yBAAyBL,MAAO,CAACf,YAAa5D,GAAiB,MACjJ,eAAC4E,GAAA,EAAD,CAAMD,MAAOxE,GAAOqC,KAApB,SAA2B5D,EAAM2G,UAAU9K,MAAM,EAAE,WAOnE,SAAS+K,GAAT,GAA4B,IAAT5G,EAAQ,EAARA,MACf,EAAsC6G,mBAAU,GAAhD,WAAOC,EAAP,KAAoBC,EAApB,KACA,OAAI/G,EAAMgH,QAEF,eAAClB,GAAA,EAAD,CAAMC,MAAOxE,GAAOiD,QAApB,SACI,gBAACwB,GAAA,EAAD,CAAMiB,cAAgBH,EAAcI,QAAU,WAAQH,EAAgBD,EAAc,EAAI,IAAOf,MAAOxE,GAAOqC,KAA7G,UACI,eAAC,OAAD,CAAMuC,KAAK,MAAMhF,OAAQC,GAAiB,IAAKH,MAAOG,GAAiB,IAAKgF,KAAK,yBAAyBL,MAAO,CAAC3C,SAAU,WAAY4B,YAAa5D,GAAiB,GAAI+F,IAAK/F,GAAiB,MAC/LpB,EAAMgH,aAKZ,+BAIf,SAASI,GAAT,GAA6B,IAATpH,EAAQ,EAARA,MAChB,OAAIA,EAAMqH,SAASvL,OAAS,EAEpB,eAACgK,GAAA,EAAD,CAAMC,MAAO,CAACxE,GAAOiD,QAAS,CAAC8C,SAAU,OAAQ3F,eAAgB,aAAcE,WAAY,EAAG0F,cAAe,IAA7G,SACMvH,EAAMqH,SAAS7G,KAAI,SAACgH,EAAShJ,GAI3B,OAHIgJ,EAAQrB,OACRqB,EAAUA,EAAQrB,MAGlB,eAACL,GAAA,EAAD,CAEAC,MAAO,CAAClD,gBAAiBzB,GAAiB,GAAIwB,kBAAmBxB,GAAiB,IAFlF,SAII,eAAC4E,GAAA,EAAD,CAAMD,MAAO,CAACxE,GAAOwD,cAArB,SAAqCyC,KAHpC,WAAaA,QAW9B,+BAKZ,SAASC,GAAT,GAA4B,IAAVzH,EAAS,EAATA,MACd,OAAIA,EAAM0H,OAEF,eAAC5B,GAAA,EAAD,CAAMC,MAAOxE,GAAOiD,QAApB,SACI,gBAACwB,GAAA,EAAD,CAAMD,MAAOxE,GAAO0D,UAApB,UACI,eAAC,OAAD,CACAkB,KAAK,YACLhF,OAAQC,GAAiB,IACzBH,MAAOG,GAAiB,IACxBgF,KAAK,mBACLL,MAAO,CAAC3C,SAAU,WAAY+D,IAAK/F,GAAiB,GAAIiC,KAAM,EAAG2B,YAAa5D,GAAiB,MAE9FpB,EAAM0H,YAKZ,+BAIf,SAASC,GAAUC,GACf,IACMC,EAAiB,CACnBC,aAAc,CACVC,KAHMH,EAAMI,YAAYC,cA1GpC,WACI,IAAM3M,EAAMC,OAAOC,WAAWC,MAAM,KAEpC,MADc,CAAEH,EAAI,GAAIF,GAAUE,EAAI,IAAKA,EAAI,IAAKI,KAAK,KAwGTL,GAG1B,MAAQ,cACtBW,KAAM4L,EAAMI,YAAYC,aACxBjI,MAAO,OAMTkI,EAAY,CAAC,CAAC7F,SAAUjB,GAAiB,IAAKgB,UAAW,SAAU+F,UAAW/G,GAAiB,IAAKG,GAAOmE,OACjH,OACI,gBAAC0C,GAAA,EAAD,CACAlB,QAAU,kBAAMU,EAAMS,YAAYC,WAAWC,SAAS,eAAgBV,IACtE9B,MAAO,CAACxE,GAAOoB,KAAM,CAACf,WAAY,SAAUD,eAAgB,SAAUU,SAAUjB,GAAiB,IAAKD,OAAQC,GAAiB,OAF/H,UAII,eAAC,OAAD,CAAM+E,KAAK,QAAQC,KAAK,wBAAwBnF,MAAOG,GAAiB,IAAKD,OAAQC,GAAiB,MACtG,eAAC4E,GAAA,EAAD,CAAMwC,YAAY,EAAOzC,MAAOmC,EAAhC,2CACA,eAAClC,GAAA,EAAD,CAAMwC,YAAY,EAAOzC,MAAOmC,EAAhC,gEAKZ,SAASO,KACL,OACI,gBAAC3C,GAAA,EAAD,CAAMC,MAAO,CAACxE,GAAOoB,KAAM,CAACf,WAAY,SAAUD,eAAgB,SAAUR,OAAQC,GAAiB,MAArG,UACI,eAAC,OAAD,CAAM+E,KAAK,eAAeC,KAAK,sBAAsBnF,MAAOG,GAAiB,IAAKD,OAAQC,GAAiB,MAC3G,eAAC4E,GAAA,EAAD,CAAMD,MAAO,CAACxE,GAAOmE,MAAO,CAACyC,UAAW/G,GAAiB,IAAKiB,SAAUjB,GAAiB,MAAzF,0C,IAKSsH,G,iCAEjB,WAAYd,GAAQ,IAAD,sBACf,cAAMA,IACDe,MAAQ,GAEb,EAAKC,UAAY,EAAKA,UAAUC,KAAf,QACjB,EAAKC,iBAAmB,EAAKA,iBAAiBD,KAAtB,QACxB,EAAKE,cAAgB,EAAKA,cAAcF,KAAnB,QACrB,EAAKG,gBAAkB,EAAKA,gBAAgBH,KAArB,QACvB,EAAKI,aAAe,EAAKA,aAAaJ,KAAlB,QARL,E,6CAWnB,WACIK,QAAQC,IAAI,gD,kCAGhB,WACID,QAAQC,IAAI,oD,uBAGhB,YAAgC,IAApBnJ,EAAmB,EAAnBA,MAAOoJ,EAAY,EAAZA,SAIf,OACA,gBAAChB,GAAA,EAAD,CACAlB,QALA,WACImC,KAAKzB,MAAMS,YAAYC,WAAWgB,UAAU,CAAEC,gBAAiBF,KAAKzB,MAAMI,YAAYuB,kBAAoBvJ,EAAMwJ,IAAM,KAAOxJ,EAAMwJ,OAI7GX,KAAKQ,MAC/BtD,MAAO,CAACxE,GAAOoB,KAAM,CAACmB,aAAcsF,EAAW,EAAI7H,GAAOoB,KAAKmB,eAF/D,UAGI,eAAC+B,GAAD,CAAY7F,MAAOA,IACnB,eAACoH,GAAD,CAAUpH,MAAOA,IACjB,eAAC4G,GAAD,CAAS5G,MAAOA,IAChB,eAACyH,GAAD,CAAQzH,MAAOA,IACf,oBAAM8I,iBAAN,CAAuBW,QAASzJ,EAAMwJ,W,gCAK9C,WAAsB,IAAD,OACXE,EAAiBL,KAAKzB,MAAMI,YAAY2B,KAAKC,QAAQtJ,QAAQ,SAAAN,GAAK,OAAIA,EAAMhE,OAAS,EAAK4L,MAAMI,YAAYC,gBAAe4B,UAGjI,OAAIH,EAAe5N,OAEX,uCACMuN,KAAKzB,MAAMI,YAAY8B,kBAAoB,eAACrB,GAAD,IAA0B,KACrEiB,EAAelJ,KAAK,SAAAR,GAAK,OAAI,eAAC,EAAK4I,UAAN,CAAoD5I,MAAOA,GAAtC,cAAcA,EAAM2G,iBAGzE0C,KAAKzB,MAAMI,YAAY8B,kBACvB,eAACrB,GAAD,IAGA,eAACd,GAAD,MAAe0B,KAAKzB,U,8BAInC,SAAiBA,GAAQ,IAAD,OAEdmC,EAAgB,CAClB,OAAUV,KAAKN,cACf,QAAW,WAAO,EAAKnB,MAAMoC,YAAY,kDAEvCC,EAAoB,CAAE,OAAU,aAAU,QAAWZ,KAAKL,iBAEhE,EAA8CnC,mBAAS,CACnD,QAAU,EACV,SAAW,IAFf,WAAOqD,EAAP,KAAwBC,EAAxB,KAKA,SAASC,EAAmBC,GAIxB,OAHA,WACIF,EAAmB,GAAD,MAAMD,GAAN,UAAwBG,GAASH,EAAgBG,OAEhDxB,KAAKQ,MAGhC,IAAMiB,EAAYjB,KAAKzB,MAAMI,YAAYuC,gBAAkBlB,KAAKzB,MAAMI,YAAY8B,kBAC5EnG,EAAc,SAAC0G,GAAD,OAAW,eAACrE,GAAA,EAAD,CAAMwC,YAAY,EAAOzC,MAAO,CAACxE,GAAOkE,gBAAiB,CAAClD,MAAc,WAAP8H,EAAmB,MAAQ9I,GAAOmE,MAAMnD,QAAzG,SAAoH8H,KACnJ,OAAIhB,KAAKzB,MAAMI,YAAYuB,iBAAmB3B,EAAM6B,QAE5C,eAAC3D,GAAA,EAAD,CAAMC,MAAOxE,GAAOgE,gBAApB,SAvBa,CAAC,SAAU,WAwBL/E,KAAK,SAAC6J,GAAD,OAChB,eAACjC,GAAA,EAAD,CAEArC,MAAO,CAAExE,GAAOiE,WAAY,CACxBvC,gBAAiBiH,EAAgBG,GAAS9I,GAAOmE,MAAMnD,MAAQ,IAAM,QACrES,YAAoB,WAAPqH,EAAmB,MAAQ9I,GAAOmE,MAAMnD,QAEzDiI,SAAWF,EACXpD,QAAU,WAAOkD,EAAmBC,EAAnBD,GAA6BL,EAAcM,MAC5DI,UAAWL,EAAmBC,GAC9BK,YAAa,WAAON,EAAmBC,EAAnBD,GAA6BH,EAAkBI,MATnE,SAWa,WAAPA,GACE,EAAKzC,MAAMI,YAAYuC,gBAAkB,eAACI,EAAA,EAAD,CAAmBpI,MAAM,QAElEoB,EAAY0G,IAdpB,QACaA,EADb,IACsBzC,EAAM6B,cAoBjC,O,2BAIf,WAAiB,IAAD,OACNmB,EAAgBvB,KAAKzB,MAAMI,YAAY2B,KAAKC,QAAQtJ,QAAQ,SAACN,GAAD,OAAWA,EAAMwJ,KAAO,EAAK5B,MAAMI,YAAYuB,mBAAkB,GAC7H1B,EAAiB,CACnBC,aAAc,CACVC,KAAM,OACN/L,KAAM4O,EAAc5O,KACpBgE,MAAO4K,IAMfvB,KAAKzB,MAAMS,YAAYC,WAAWC,SAAS,eAAgBV,K,6BAG/D,gCAAAgD,EAAAC,OAAA,uDAEI5B,QAAQC,IAAI,wCACZE,KAAKzB,MAAMmD,mBAAmB,CAAEC,sBAAsB,IAH1D,SAMYC,EAAc,CAACC,IAAI,EAAOC,OAAQ,KAChCnD,EAAcqB,KAAKzB,MAAMI,YACzBoD,EAAiBC,mDAA0BrD,EAAY2B,KAAK2B,SAAW,YAActD,EAAYuB,gBAR/G,WAAAsB,EAAA,MAS4BU,MAAOH,EAAgB,CAAEI,OAAQ,YAT7D,UASQP,EATR,OAWcQ,EAAe,UAAYR,EAAYE,OAAS,KAAOF,EAAYS,YAErET,EAAYC,GAbxB,iBAeYhC,QAAQC,IAAI,mDACZD,QAAQC,IAAIsC,GACZvC,QAAQC,IAAI,yCAjBxB,8BAoBYD,QAAQC,IAAK,IAAIwC,MAAM,oEACjB,IAAIA,MAAMF,GArB5B,0DAyBYvC,QAAQC,IAAI,+DACZD,QAAQC,IAAR,MACAE,KAAKzB,MAAMoC,YAAY,8DA3BnC,qBA8BQX,KAAKzB,MAAMmD,mBAAmB,CAAEC,sBAAsB,IAEtD9B,QAAQC,IAA6D,uCACjE8B,EAAYC,GAjCxB,oCAAAL,EAAA,MAkCkBxB,KAAKzB,MAAMgE,gBAlC7B,QAmCYvC,KAAKzB,MAAMS,YAAYC,WAAWgB,UAAU,CAAEC,gBAAiB,OAnC3E,qG,0BAwCA,WAII,IAHA,IAAMsC,EAAgBxC,KAAKzB,MAAMI,YAAY2B,KAAKmC,SAASD,cACrDE,EAAYF,EAAgB,OAAS,OACrCG,EAAeH,EAAgB,OAAS,OAC9C,MAAkB,CAAC,QAAS,QAA5B,eAAqC,CAAhC,IAAI9F,EAAK,KACVxE,GAAOwE,GAAP,SAAqBxE,GAAOwE,IAA5B,IAAoCxD,MAAOwJ,IAE/CxK,GAAOoE,SAASpD,MAAQyJ,EACxBzK,GAAOoE,SAAS1C,gBAAkB+I,I,oBAGtC,WAGI,OAFA9C,QAAQC,IAAI,iDACZE,KAAKJ,eACEI,KAAK4C,yB,GAjLwBC,a,+iCC7J5C,IACIC,GAASC,EAAQ,KAGfC,GAAa,CACjBhF,SAFsB+E,EAAQ,KAG9BxC,QAAS,GACT0C,OAAQ,OACRR,SAAU,CACR7I,gBAAiB,UACjBsJ,gBAAiBH,EAAQ,KACzBI,wBAAwB,EACxBC,sBAAsB,EACtBZ,eAAe,IAQba,GAAc,CAAC,cAAe,gBAAiB,YAAa,mBAElE,SAAeC,GAAcC,GAA7B,uBAAA/B,EAAAC,OAAA,uDACE5B,QAAQC,IAAI,iEACR0D,EAAc,CAAC3B,IAAI,EAAOC,OAAQ,4BAFxC,SAIQ2B,EAAc,CAChBC,aAAcH,GAEhBF,GAAYpO,SAAQ,SAAA0O,GAAK,OAAIF,EAAYE,GAAO,WAC1CC,EAAe,CACjBzB,OAAQ,OACR0B,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CACnBP,YAAaA,KAdvB,WAAAjC,EAAA,MAiB0BU,MAAMF,sDAA4B4B,IAjB5D,YAiBUK,EAjBV,QAmBgBpC,GAnBhB,wBAoBMhC,QAAQC,IAAI,4DApBlB,YAAA0B,EAAA,MAqBgCyC,EAAQC,QArBxC,cAsBoC,SADxBC,EArBZ,QAsBuBC,YACfZ,EAAY1B,OAAS,qBACY,QAAvBqC,EAAYE,UACtBb,EAAY1B,OAAS,uBAErB0B,EAAc,CAAC3B,IAAI,EAAMC,OAAQ,oBA3BzC,kBA6Ba0B,GA7Bb,cAgCM3D,QAAQC,IAAI,0EACN,IAAIwC,MAAM,WAAa2B,EAAQnC,OAAS,kBAAoBmC,EAAQ5B,YAjChF,yBAoCIxC,QAAQC,IAAI,2CApChB,kFAqEA,SAAewE,GAAmChE,GAAlD,iBAAAkB,EAAAC,OAAA,kEAAAD,EAAA,MAC4B+C,KAAaC,QAAQ,4BADjD,UACMC,EADN,QAEEA,EAAgBV,KAAKW,MAAMD,IACPE,MAAM1N,QAAO,SAAA2N,GAAS,OAAIA,EAAUzE,KAAOG,EAAKH,OAAK,GAH3E,wBAIIN,QAAQC,IAAI,qIACN+E,EALV,SAMSJ,GANT,IAOME,MAAM,GAAD,YACAF,EAAcE,OADd,CAEH,CACExE,IAAKG,EAAKH,IACV8B,SAAU3B,EAAK2B,SACfsB,MAAOjD,EAAKiD,MACZuB,SAAUxE,EAAKwE,cAbzB,WAAAtD,EAAA,MAiBU+C,KAAaQ,QAAQ,0BAA2BhB,KAAKC,UAAUa,KAjBzE,OAkBIhF,QAAQC,IAAI,2EAlBhB,wBAoBID,QAAQC,IAAI,6IApBhB,6DAwBO,SAAekF,GAAwBC,GAAvC,iBAAAzD,EAAAC,OAAA,kEAAAD,EAAA,MACqB+C,KAAaC,QAAQ,4BAD1C,UACDC,EADC,QAELA,EAAgBV,KAAKW,MAAMD,IAERS,cAAcC,QAAUF,EAJtC,wBAKHpF,QAAQC,IAAR,wCAAgDmF,EAAK,8EAAuE,+CACtHJ,EANH,SAOEJ,GAPF,IAQDS,cAAe,CACbpD,SAAQmD,EACRE,OAAQF,KAVT,WAAAzD,EAAA,MAaG+C,KAAaQ,QAAQ,0BAA2BhB,KAAKC,UAAUa,KAblE,+BAeHhF,QAAQC,IAAI,yHAfT,6D,IA8YQsF,G,iCAzXb,WAAY7G,GAAQ,IAAD,sBACjB,cAAMA,IA0ER6G,YAAc,WACd,OACI,gBAACC,EAAA,EAAD,CACAnI,OAAQ4F,GACRpG,MAAO,CAACxE,GAAOC,MAAMC,SAAU,CAACwB,gBAxNhB,UAwNkDtB,eAAgB,iBAFlF,UAKE,eAACmE,GAAA,EAAD,CAAMC,MAAOxE,GAAOC,MAAMQ,UAA1B,SACE,eAACgE,GAAA,EAAD,CAAMD,MAAOxE,GAAOC,MAAMW,MAA1B,mCAGF,gBAAC2D,GAAA,EAAD,CAAMC,MAAOxE,GAAOC,MAAMmB,KAA1B,UACE,eAACmD,GAAA,EAAD,CAAMC,MAAOxE,GAAOC,MAAM0B,WAA1B,SACE,eAAC8C,GAAA,EAAD,CAAMD,MAAOxE,GAAOC,MAAM2B,UAA1B,sBAEF,gBAAC2C,GAAA,EAAD,CAAMC,MAAOxE,GAAOC,MAAM8B,YAA1B,UACE,eAACqL,GAAA,EAAD,CACAC,YAAY,QACZC,gBAAgB,eAChB9I,MAAOxE,GAAOC,MAAMgC,WACpBsL,aAAc,EAAKA,aAAa,SAChCC,aAAa,QACbC,qBAAqB,MACrBC,MAAO,EAAKtG,MAAMuG,SAAStC,QAE3B,eAAC+B,GAAA,EAAD,CACAC,YAAY,QACZC,gBAAgB,WAChBM,iBAAiB,EACjBpJ,MAAOxE,GAAOC,MAAMgC,WACpBsL,aAAc,EAAKA,aAAa,YAChCC,aAAa,WACbC,qBAAqB,MACrBC,MAAO,EAAKtG,MAAMuG,SAASf,cAG7B,gBAACrI,GAAA,EAAD,CAAMC,MAAO,CAACxE,GAAOC,MAAM8B,YAAa,CAACnC,OAAQ,UAAjD,UACG,EAAKiO,aAAa,UAClB,EAAKA,aAAa,UACnB,gBAACtJ,GAAA,EAAD,CAAMC,MAAO,CAAC9D,cAAe,MAAOd,OAAQC,GAAiB,IAAKoB,UAAW,UAAWZ,WAAY,SAAUD,eAAgB,YAA9H,UACE,eAACqE,GAAA,EAAD,CAAMD,MAAO,CAACf,YAA0B,OAAbrE,IAASC,GAAYQ,GAAiB,IAAM,MAAvE,iCACA,eAACiO,GAAA,EAAD,CACE7E,SAAU,EAAK7B,MAAM2G,cACrBC,WAAY,CAAEC,MAAO,UAAWC,KAAM,WACtCC,YAAY,EAAK/G,MAAM4F,cAAgB,WACvCoB,oBAAoB,UACpBC,cAAe,kBAAM,EAAKC,SAAS,CAACtB,eAAgB,EAAK5F,MAAM4F,iBAC/DU,MAAO,EAAKtG,MAAM4F,sBAIxB,eAACzI,GAAA,EAAD,CAAMC,MAAO,CAACxE,GAAOC,MAAM8B,YAAa,CAACnC,OAAQ,SAAUQ,eAAgB,WAA3E,SACG,EAAKmO,iBAIT,EAAKC,eAhIV,EAAKpH,MAAQ,CACXuG,SAAU,CACRf,SAAU,GACVvB,MAAO,GACPtB,SAAU,GACVQ,SAAU,MAEZyC,eAAe,EACfwB,SAAU,GACVC,YAAY,EACZV,eAAe,GAEjB,EAAKR,aAAe,EAAKA,aAAajG,KAAlB,QACpB,EAAKuG,aAAe,EAAKA,aAAavG,KAAlB,QACpB,EAAKkH,SAAW,EAAKA,SAASlH,KAAd,QAChB,EAAKoH,YAAc,EAAKA,YAAYpH,KAAjB,QACnB,EAAKqH,SAAW,EAAKA,SAASrH,KAAd,QAChB,EAAKsH,SAAW,EAAKA,SAAStH,KAAd,QAChB,EAAK4F,YAAc,EAAKA,YAAY5F,KAAjB,QArBF,E,6CAwBnB,WACEK,QAAQC,IAAI,wCACZE,KAAK+G,qB,kCAGP,WACElH,QAAQC,IAAI,6C,uBAGd,WACE,OAAIE,KAAKV,MAAM2G,cACN,eAAC3E,EAAA,EAAD,CAAmBpI,MAAM,YAEzB,eAAC,OAAD,CAAM4D,KAAK,iBAAiBkK,UAAU,QAAQjK,KAAK,OAAOnF,MAAOG,GAAiB,IAAKD,OAAQC,GAAiB,Q,yBAI3H,SAAY2C,GAAM,IAAD,OACfsF,KAAKwG,SAAS,CAACE,SAAUhM,IACzBuM,YAAY,kBAAM,EAAKT,SAAS,CAACE,SAAU,OAAO,O,sBAGpD,WACI,OACE,eAACjK,GAAA,EAAD,CAAMC,MAAO,CAACxE,GAAOC,MAAMqC,OAAQwF,KAAKV,MAAMoH,SAAW,GAAK,CAAC9M,gBAAiB,cAAeD,YAAa,gBAA5G,SACE,eAACgD,GAAA,EAAD,CAAMD,MAAOxE,GAAOC,MAAMuC,IAA1B,SAAgCsF,KAAKV,MAAMoH,e,0BAKnD,SAAaQ,GACX,SAASC,EAAS5M,GAChByF,KAAKwG,SAAU,CAAEX,SAAS,SAAM7F,KAAKV,MAAMuG,UAAlB,UAA6BqB,EAAa3M,MAGrE,OADA4M,EAAWA,EAAS3H,KAAKQ,Q,0BAI3B,SAAaoH,GACX,IAAMC,EAAiB,UAARD,EACf,OACE,eAACrI,GAAA,EAAD,CACAoC,SAAUnB,KAAKV,MAAM2G,cACrBpI,QAASwJ,EAASrH,KAAK6G,SAAW7G,KAAK8G,SACvCpK,MAAO,CAACxE,GAAOC,MAAMkC,QAHrB,SAKE,eAACsC,GAAA,EAAD,CAAMwC,YAAY,EAAOzC,MAAOxE,GAAOC,MAAMmC,YAA7C,SAA4D+M,EAAS,SAAW,kB,0BAmEtF,WACE,GAAKrH,KAAKV,MAAMuG,SAAStC,MAKlB,IAAKvD,KAAKV,MAAMuG,SAASf,SAKzB,OAAO,EADZ,OAFA9E,KAAK4G,YADU,qBAEf/G,QAAQC,IAAI,qCACL,EARP,IAAMwH,EAAS,kCAGf,OAFAtH,KAAK4G,YAAYU,GACjBzH,QAAQC,IAAI,kBAAoBwH,IACzB,I,8BASX,gCAAA9F,EAAAC,OAAA,gEAEI5B,QAAQC,IAAI,wCAFhB,WAAA0B,EAAA,MAG8B+C,KAAaC,QAAQ,4BAHnD,YAGQC,EAHR,yBAKM5E,QAAQC,IAAI,4FACZ2E,EAAgBV,KAAKW,MAAMD,IAETS,cAAcpD,QAC9BjC,QAAQC,IAAR,oEAAgF2E,EAAcS,cAAcC,OAA5G,4BACM7E,EAAOmE,EAAcE,MAAM1N,QAAO,SAAAqJ,GAAI,OAAIA,EAAKH,KAAOsE,EAAcS,cAAcC,UAAQ,GAChGnF,KAAKwG,SAAS,CACZX,SAAU,CACR5D,SAAU3B,EAAK2B,SACfsB,MAAOjD,EAAKiD,MACZuB,SAAUxE,EAAKwE,YAGnB9E,KAAK6G,YAILhH,QAAQC,IAAI,wFAtBpB,+BA0BMD,QAAQC,IAAI,iIAGZyH,KAAQrF,MAAM,QAAQsF,MAAK,SAAAlI,GACzBmI,EAAoBnI,EAAMoI,QAAQC,UAClC9H,QAAQC,IAAI,yEAA2E2H,MA/B/F,KAmCoBA,EAnCpB,KAoCqBjQ,KApCrB,KAqC4BA,KArC5B,KAsCyBA,KAtCzB,KAuCuBA,KAvCvB,KAwCsBA,KAxCtB,KAyCyBA,KAzCzB,KA0CoBA,KA1CpB,YAAAgK,EAAA,MA2C0BhK,QA3C1B,gCA4Ce,GA5Cf,MA6CuB,CACbsK,QAAQ,EACRqD,OAAQ,MAbNyC,EAlCZ,CAmCQC,WAnCR,KAoCQC,YApCR,KAqCQC,mBArCR,KAsCQC,gBAtCR,KAuCQC,cAvCR,KAwCQC,aAxCR,KAyCQC,gBAzCR,KA0CQC,WA1CR,KA2CQC,WA3CR,KA4CQ1D,MA5CR,KA6CQO,cA7CR,mBAAA1D,EAAA,MAkDY+C,KAAaQ,QAAQ,0BAA2BhB,KAAKC,UAAU4D,KAlD3E,QAmDM/H,QAAQC,IAAI,oHAnDlB,2DAuDID,QAAQC,IAAI,sDACZD,QAAQC,IAAR,OAxDJ,mE,sBA4DA,kCAAA0B,EAAAC,OAAA,mDAEE5B,QAAQC,IAAI,8BACRwI,EAAOtI,KAAKV,MAAMuG,UACjBtC,MAAQ+E,EAAK/E,MAAMgF,OACxBvI,KAAKwG,SAAS,CAAEP,eAAe,IALjC,UASQjG,KAAKwI,eATb,mEAAAhH,EAAA,MAW4BU,MAAOF,kDAAwB,CAAEG,OAAQ,SAXrE,UAWQP,EAXR,OAYU6G,EAAc,WAAa7G,EAAYE,OAAzB,kBAA2DF,EAAYS,YACvFT,EAAYC,GAbpB,iBAcMhC,QAAQC,IAAI,0DACZD,QAAQC,IAAI2I,GAflB,8BAiBM5I,QAAQC,IAAI,iFACZD,QAAQC,IAAIiE,KAAKC,UAAUpC,IAC3B/B,QAAQC,IAAI,qBACN,IAAIwC,MAAMmG,GApBtB,2BAAAjH,EAAA,MAuBwBI,EAAYsC,QAvBpC,WAuBUwE,EAvBV,SAwBUpI,EAAOoI,EAAMzR,QAAO,SAACqJ,GAAD,OAAUA,EAAKiD,QAAU+E,EAAK/E,SAAO,IAxBnE,oBA4BWjD,EAAKwE,WAAawD,EAAKxD,SA5BlC,oCAAAtD,EAAA,MA8Bc8C,GAAmChE,IA9BjD,YAgCYN,KAAKV,MAAM4F,cAhCvB,oCAAA1D,EAAA,MAiCgBwD,GAAwB1E,EAAKH,MAjC7C,QAmCQH,KAAKwG,SAAU,CAACG,YAAY,EAAMd,SAAUvF,IACzB,+BACnBN,KAAK4G,YADc,gCAEnB/G,QAAQC,IAAI,2BAtCpB,wBAyCuB,mBACfE,KAAK4G,YADU,oBAEf/G,QAAQC,IAAI,mCA3CpB,gCA+CqB,2BACfE,KAAK4G,YADU,4BAEf/G,QAAQC,IAAI,2CAjDlB,0DAqDmB,uCACfE,KAAK4G,YADU,wCAEf/G,QAAQC,IAAI,kFACZD,QAAQC,IAAI,oDACZD,QAAQC,IAAR,MAzDJ,yBA4DIE,KAAKwG,SAAS,CAAEP,eAAe,IAC/BpG,QAAQC,IAAI,6BACRE,KAAKV,MAAMqH,aACb9G,QAAQC,IAAI,qDACZE,KAAKzB,MAAMoK,YAAY,CAAChC,YAAY,EAAMrG,KAAMN,KAAKV,MAAMuG,YAhEjE,sF,sBAsEA,8CAAArE,EAAAC,OAAA,mDAEE5B,QAAQC,IAAI,8BACRwI,EAAOtI,KAAKV,MAAMuG,UACjBtC,MAAQ+E,EAAK/E,MAAMgF,OACxBvI,KAAKwG,SAAS,CAAEP,eAAe,IALjC,SASQ2C,EAAiB,CAAC/G,IAAI,IACtB7B,KAAKwI,eAVb,oEAAAhH,EAAA,MAakC8B,GAAcgF,EAAK/E,QAbrD,WAaUsF,EAbV,OAcIhJ,QAAQC,IAAI,mBAAqB+I,EAAgB/G,QAC5C+G,EAAgBhH,GAfzB,wBAgBQ7B,KAAK4G,YAAYiC,EAAgB/G,QAhBzC,8CAAAN,EAAA,MAqB4BU,MAAOF,kDAAwB,CAAEG,OAAQ,SArBrE,WAqBQP,EArBR,OAsBUkH,EAAY,WAAalH,EAAYE,OAAS,KAAOF,EAAYS,YACnET,EAAYC,GAvBpB,iBAwBMhC,QAAQC,IAAI,0DACZD,QAAQC,IAAIgJ,GAzBlB,8BA2BMjJ,QAAQC,IAAI,wEACN,IAAIwC,MAAMwG,GA5BtB,2BAAAtH,EAAA,MA+BwBI,EAAYsC,QA/BpC,WA+BUwE,EA/BV,OAgCiBA,EAAMzR,QAAO,SAACqJ,GAAD,OAAUA,EAAKiD,QAAU+E,EAAK/E,SAAO,GAhCnE,oBAnWwBuB,EAuYqBwD,EAAKxD,SAtYlDjF,QAAQC,IAAI,sCAsYAiJ,EArYSjE,EAASrS,OAAS,EAK/B,CAACoP,IAAI,EAAMC,OAAQ,oBAFnB,CAACD,IAAI,EAAOC,OAAQ,mDAmYHD,GArCzB,wBAsCQhC,QAAQC,IAAI,mBAAqBiJ,EAAcjH,QAC/C9B,KAAK4G,YAAYmC,EAAcjH,QAvCvC,kCA4CMwG,EAAKrG,SAAWqG,EAAK/E,MAAMnR,MAAM,KAAK,GAChC4W,EAAe,CACnB7G,OAAQ,OACR0B,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAL,SACDsE,GACAtF,MApDb,YAAAxB,EAAA,MAwD6BU,MAAOF,mDAA2BsG,EAAKrG,SAAU+G,IAxD9E,WAwDMJ,EAxDN,OAyDYK,EAAiB,WAAaL,EAAe9G,OAAS,KAAO8G,EAAevG,YAE9EuG,EAAe/G,GA3DzB,iBA4DcqH,EAAa,kCACnBlJ,KAAK4G,YAAYsC,GACjBrJ,QAAQC,IAAI,0DACZD,QAAQC,IAAImJ,GACZpJ,QAAQC,IAAI,mBAAqBoJ,GAhEzC,8BAmEQrJ,QAAQC,IAAI,wEACN,IAAIwC,MAAM2G,GApExB,gCAwEY3B,EAAS,0BACftH,KAAK4G,YAAYU,GACjBzH,QAAQC,IAAI,mBAAqBwH,GA1EvC,0DA8EmB,uCACftH,KAAK4G,YADU,wCAEf/G,QAAQC,IAAI,sDACZD,QAAQC,IAAR,MAjFJ,yBAoFIE,KAAKwG,SAAS,CAAEP,eAAe,IAC/BpG,QAAQC,IAAI,8BACR8I,EAAe/G,IAAK7B,KAAK6G,WAtFjC,+CAnWF,IAA0B/B,IAmWxB,oC,oBA0FA,WAEE,OADAjF,QAAQC,IAAI,wCACLE,KAAKoF,kB,GAvXUvC,aC2DX3K,GAvMA,CACbC,MAAO,CACLqC,OAAQ,CACNT,SAAU,WACVsB,OAAQ,MACRzD,MAAOG,GAAiB,KACxBwB,kBAAmB,EACnBC,gBAAiB,EACjBL,UAAW,SACXb,eAAgB,SAChBsB,gBAAiB,gBACjBH,YAAa,EACbE,YAAa,iBAEfe,IAAK,CACD3B,UAAW,SACXG,MAAO,UAGbd,SAAU,CACRC,KAAM,EACNG,WAAYC,KAAUC,eAGxByQ,UAAW,CACTrK,UAAWrG,KAAUC,cACrBe,YAAa,EACbpB,KAAK,EACLC,eAAgB,gBAChBC,WAAY,cAEdqC,WAAY,CAEVhD,MAAO,OACPuB,UAAW,UAEbiQ,QAAS,CACPC,SAAU,EACV1O,cAAe,KACfpB,kBAAmB,KACnBJ,UAAW,UACXQ,YAAa,SAEfoB,QAAS,CACPnD,MAAOG,GAAiB,KAExByB,gBAAiB,MACjBwB,kBAAmB,EACnBrB,YAAa,wBACbR,UAAW,UAYbmQ,WAAY,CACV9P,gBAAiBzB,GAAiB,GAClCqC,YAAarC,GAAiB,GAC9BiB,SAAUjB,GAAiB,IAC3BmB,MAAO,QAET8C,UAAW,CACTC,aAAc,GAsBhBsN,WAAY,CACV3R,MAAOG,GAAiB,IACxBD,OAAQC,GAAiB,IACzBQ,WAAY,SACZD,eAAgB,UAYlBkR,WAAY,CACVhQ,gBAAiB,EACjBD,kBAAmBxB,GAAiB,IACpCM,KAAM,EACNmD,kBAAmB,MACnB5D,MAAO,OACP8B,aAAc3B,GAAiB,IAC/BmB,MAAO,QACPF,SAAU,IAEZyQ,WAAY,CACV3R,OAAQC,GAAiB,IACzBH,MAAO,OACP8R,oBAAqB3R,GAAiB,IACtC4R,qBAAsB5R,GAAiB,IACvCO,eAAgB,SAChBC,WAAY,SACZqB,gBAAiB,SAEnBgQ,gBAAiB,CACf3Q,WAAW,OACXD,SAAUjB,GAAiB,KAE7BuB,KAAM,CACJwF,UAAW,KACXtF,gBAAiBzB,GAAiB,GAClCwB,kBAAmBxB,GAAiB,IACpC2B,aAAc3B,GAAiB,IAC/B6B,gBAAiB,mBAEnBuB,QAAS,CACLvC,cAAe,MACfY,gBAAiBzB,GAAiB,GAClCQ,WAAY,UAUhBmD,aAAc,CACV5D,OAAqB,OAAbR,IAASC,GAAY,KAAOQ,GAAiB,IACrD6B,gBAAiB,kBACjBF,aAAc3B,GAAiB,IAC/ByB,gBAA8B,OAAblC,IAASC,GAAY,EAAI,KAC1CgC,kBAAmBxB,GAAiB,MACpCiB,SAAUjB,GAAiB,IAC3BgB,UAAW,SACXyC,kBAAmB,SACnBqO,eAAgB9R,GAAiB,GACjC+R,iBAAkB/R,GAAiB,IAEvCgS,sBAAuB,CACrBjS,OAAQC,GAAiB,IACzB6B,gBAAiB,YACjBF,aAAc3B,GAAiB,MAE/BwB,kBAAmBxB,GAAiB,MACpC4D,YAAa5D,GAAiB,GAC9BiB,SAAUjB,GAAiB,IAC3BgB,UAAW,SACXyC,kBAAmB,UAErBwO,cAAe,CACbhR,SAAUjB,GAAiB,IAC3B4D,YAAa5D,GAAiB,IAEhCmE,gBAAiB,CACftD,cAAe,MACfd,OAAQC,GAAiB,IACzByB,gBAAiBzB,GAAiB,GAClCQ,WAAY,WACZD,eAAgB,iBAElB6D,WAAY,CACVrE,OAAQC,GAAiB,IACzBH,MAAOG,GAAiB,KACxB0B,YAAa,EACbE,YAAa,YACbD,aAAc3B,GAAiB,IAC/BQ,WAAY,SACZD,eAAgB,UAElB8D,gBAAiB,CACbpD,SAAUjB,GAAiB,IAC3BkB,WAAY,MACZC,MAAO,U,q/BC7LN,SAAS+Q,GAAWC,GACvB,IAAIC,EAAQD,EAAmB3B,OAAOnW,MAAM,KACxCgY,EAAmB,GAIvB,OAHAD,EAAMlV,SAAQ,SAAAoV,GACdD,EAAiBjX,KAAKkX,EAAQ,GAAGC,cAAgBD,EAAQ7X,MAAM,EAAG6X,EAAQ5X,YAEnE2X,EAAiB/X,KAAK,K,IAGZkY,G,iCAEjB,WAAYhM,GAAQ,IAAD,sBACf,cAAMA,IACDe,MAAQ,CACTkL,cAAc,EACdC,sBAAsB,EACtBC,KAAM,SACNC,eAAgB,GAChBC,oBAAqB,KACrBC,sBAAuB,KACvBC,qBAAsB,MAE1B,EAAKC,iBAAmB,EAAKA,iBAAiBvL,KAAtB,QACxB,EAAKwL,oBAAsB,EAAKA,oBAAoBxL,KAAzB,QAC3B,EAAKyL,yBAA2B,EAAKA,yBAAyBzL,KAA9B,QAbjB,E,+CAgBnB,WAAuB,IAAD,OAIZ0L,EAAmB,CACrB,uBAAwB,OACxB,4BAA6B,SAC7B,MAAS,OACT,UAAa,UAGXC,EAAoB,CAACrM,UAAW,EAAGA,UAAW,EAAMvG,WAAY,UAChEsG,EAAY,CAAC3F,MAAOhB,GAAOmE,MAAMnD,MAAOF,SAAUjB,GAAiB,IAAKoB,UAAW,SAAUsB,aAAc1C,GAAiB,IAC5HqT,EAAa,CAACxT,MAAO,MAAOE,OAAQC,GAAiB,IAAK2B,aAAc3B,GAAiB,IAAKmB,MAAOhB,GAAOmE,MAAMnD,MAAOU,gBAAiB1B,GAAOoE,SAASpD,MAAM,IAAKF,SAAUjB,GAAiB,IAAKgB,UAAW,UAChNsS,EAAW,CAACzT,MAAO,MAAOE,OAAQC,GAAiB,IAAK2B,aAAc3B,GAAiB,IAAM0C,aAAc1C,GAAiB,GAAImB,MAAO,QAASX,WAAY,SAAUD,eAAgB,UACtLgT,EAAyB,CAACxT,OAAQC,GAAiB,KAAM+G,UAAW/G,GAAiB,IAAKS,WAAYT,GAAiB,IAAKO,eAAgB,eAAgBiT,eAAgB,EAAGC,eAAgB,yBAErM,EAA8ChO,mBAAS,CACnD,QAAU,EACV,QAAU,EACV,UAAY,EACZ,iBAAiB,EACjB,iBAAiB,IALrB,WAAOqD,EAAP,KAAwBC,EAAxB,KAOA,SAASC,EAAmBC,GAIxB,OAHA,WACIF,EAAmB,SAAKD,GAAN,UAAwBG,GAASH,EAAgBG,OAEhDxB,KAAKQ,MAGhC,IAAMiB,EACFjB,KAAKzB,MAAMkN,uBACXzL,KAAKzB,MAAMmN,qBACX1L,KAAKzB,MAAMoN,mBACX3L,KAAKzB,MAAMqN,SAASnL,kBACpBT,KAAKzB,MAAMsN,wBAGTC,GAA4B9L,KAAKV,MAAMqL,gBAAkB3K,KAAKV,MAAMsL,qBAAuB5K,KAAKV,MAAMuL,sBACtGkB,EAAmB/L,KAAKzB,MAAMyN,uBAAuBhM,KAAKV,MAAMwL,qBAEtE,OAAQ9K,KAAKV,MAAMoL,MAEf,IAAK,SACD,OAAO,KAEX,IAAK,SACD,OACI,gBAACjO,GAAA,EAAD,CAAMC,MAAO4O,EAAb,UACI,eAAC3O,GAAA,EAAD,CAAMD,MAAO,CAAExE,GAAOmE,MAAO,CAACrD,SAAUjB,GAAiB,IAAKoB,UAAW,WAAzE,gCACA,gBAACsD,GAAA,EAAD,CAAMC,MAAOyO,EAAb,UACI,eAACxO,GAAA,EAAD,CAAMD,MAAOmC,EAAb,kBACA,eAACyG,GAAA,EAAD,CACAC,YAAY,0BACZ0G,qBAAsB/T,GAAOmE,MAAMnD,MAAM,IACzCwD,MAAO0O,EACP3F,aAAc,SAAAlL,GAAI,OAAI,EAAKiM,SAAS,CAACmE,eAAgBpQ,KACrDqL,MAAO5F,KAAKV,MAAMqL,oBAGtB,gBAAClO,GAAA,EAAD,CAAMC,MAAOyO,EAAb,UACI,eAACxO,GAAA,EAAD,CAAMD,MAAOmC,EAAb,kBA5DC,CAAC,WAAY,YA6DC1H,KAAI,SAACuH,GAChB,IAAMwN,EAAe,EAAK5M,MAAMsL,sBAAwBlM,EACxD,OACI,eAACK,GAAA,EAAD,CAEAlB,QAAS,kBAAM,EAAK2I,SAAS,CAACoE,oBAAqBsB,EAAe,KAAOxN,KACzEhC,MAAO,CAAC2O,EAAU,CAAEzR,gBAAiB1B,GAAOoE,SAASpD,OAASgT,EAAe,IAAM,OAHnF,SAII,eAACvP,GAAA,EAAD,CAAMwC,YAAY,EAAOzC,MAAO,CAAC,CAAC1D,SAAUjB,GAAiB,KAAMG,GAAOmE,OAA1E,SAAmFqC,KAHlF,WAAWA,SAQ5B,gBAACjC,GAAA,EAAD,CAAMC,MAAOyO,EAAb,UACI,eAACxO,GAAA,EAAD,CAAMD,MAAOmC,EAAb,qBAzEE,CAAC,WAAY,iBA0EC1H,KAAI,SAACuH,GACjB,IAAMwN,EAAe,EAAK5M,MAAMuL,wBAA0BnM,EAC1D,OACI,eAACK,GAAA,EAAD,CAEAlB,QAAS,kBAAM,EAAK2I,SAAS,CAACqE,sBAAuBqB,EAAe,KAAOxN,KAC3EhC,MAAO,CAAC2O,EAAU,CAAEzR,gBAAiB1B,GAAOoE,SAASpD,OAASgT,EAAe,IAAM,OAHnF,SAII,eAACvP,GAAA,EAAD,CAAMwC,YAAY,EAAOzC,MAAO,CAAC,CAAC1D,SAAUjB,GAAiB,KAAMG,GAAOmE,OAA1E,SAAmFqC,KAHlF,WAAWA,SAQ5B,gBAACjC,GAAA,EAAD,CAAMC,MAAO,CAACyO,EAAmB,CAACvS,cAAe,MAAON,eAAgB,iBAAxE,UACI,eAACyG,GAAA,EAAD,CACAlB,QAAS,WACLkD,EAAmB,SAAnBA,GACA,EAAKyF,SAAS,CAACgE,cAAc,EAAMC,sBAAsB,EAAMC,KAAM,WACrE5J,EAAmB,CAAC,QAAU,KAElCM,UAAWL,EAAmB,UAC9BI,SAAUF,EACVvE,MAAO,CAACxE,GAAOiE,WAAY,CACvBhD,UAAW,SACXS,gBAAiBiH,EAAe,OAAa3I,GAAOmE,MAAMnD,MAAM,IAAM,QACtES,YAAasH,EAAY/I,GAAOmE,MAAMnD,MAAM,IAAMhB,GAAOmE,MAAMnD,QAXnE,SAaI,eAACyD,GAAA,EAAD,CAAMwC,YAAY,EAAOzC,MAAO,CAACxE,GAAOkE,gBAAiB,CAAClD,MAAO+H,EAAY/I,GAAOmE,MAAMnD,MAAM,IAAMhB,GAAOmE,MAAMnD,QAAnH,sBAEJ,eAAC6F,GAAA,EAAD,CACAlB,QAAS,WACLkD,EAAmB,SAAnBA,GACA,EAAKkK,2BACLnK,EAAmB,CAAC,QAAU,KAElCM,UAAWL,EAAmB,UAC9BI,SAAUF,EAAY6K,EACtBpP,MAAO,CAACxE,GAAOiE,WAAY,CACvBhD,UAAW,SACXS,gBAAiBiH,EAAe,OAAa3I,GAAOmE,MAAMnD,MAAM,IAAM,QACtES,YAAasH,EAAY6K,EAA2B5T,GAAOmE,MAAMnD,MAAM,IAAMhB,GAAOmE,MAAMnD,QAX9F,SAaI,eAACyD,GAAA,EAAD,CAAMwC,YAAY,EAAOzC,MAAO,CAAExE,GAAOkE,gBAAiB,CACtDlD,MAAO+H,EAAY6K,EAA2B5T,GAAOmE,MAAMnD,MAAM,IAAMhB,GAAOmE,MAAMnD,QADxF,SAIC,mBAOrB,IAAK,SACD,OACI,gBAACuD,GAAA,EAAD,CAAMC,MAAO,CAAC4O,EAAwB,CAACxT,OAAQC,GAAiB,OAAhE,UACI,eAAC4E,GAAA,EAAD,CAAMD,MAAO,CAACxD,MAAOhB,GAAOmE,MAAMnD,MAAOF,SAAUjB,GAAiB,IAAKoB,UAAW,UAApF,mCACA,eAACwD,GAAA,EAAD,CAAMD,MAAO,CAACxD,MAAOhB,GAAOmE,MAAMnD,MAAOF,SAAUjB,GAAiB,IAAKgB,UAAW,UAApF,+DACA,eAAC0D,GAAA,EAAD,CAAMC,MAAO,CAACxE,GAAOiD,QAAS,CAAC7C,eAAgB,iBAA/C,SACI,eAACyG,GAAA,EAAD,CACAlB,QAAS,WACLkD,EAAmB,WAAnBA,GACA,EAAKxC,MAAM4N,eAAe,CAACC,mBAAmB,IAC9C,EAAK5F,SAAS,CAACgE,cAAc,EAAMC,sBAAsB,EAAMC,KAAM,WACrE5J,EAAmB,CAAC,UAAY,KAEpCM,UAAWL,EAAmB,YAC9BI,SAAUF,EACVvE,MAAO,CAACxE,GAAOiE,WAAY,CACvBhD,UAAW,SACXQ,YAAasH,EAAY/I,GAAOmE,MAAMnD,MAAM,IAAMhB,GAAOmE,MAAMnD,MAC/DU,gBAAiBiH,EAAe,SAAe3I,GAAOmE,MAAMnD,MAAM,IAAM,UAZ5E,SAeI,eAACyD,GAAA,EAAD,CAAMwC,YAAY,EAAOzC,MAAO,CAACxE,GAAOkE,gBAAiB,CAAClD,MAAO+H,EAAY/I,GAAOmE,MAAMnD,MAAM,IAAMhB,GAAOmE,MAAMnD,QAAnH,6BAMpB,IAAK,SACD,OACI,gBAACuD,GAAA,EAAD,CAAMC,MAAO,CAAC4O,EAAwB,CAACxT,OAAQC,GAAiB,OAAhE,UACI,gBAAC0E,GAAA,EAAD,CAAMC,MAAOyO,EAAb,UACI,eAACxO,GAAA,EAAD,CAAMD,MAAO,CAACxD,MAAOhB,GAAOmE,MAAMnD,MAAOF,SAAUjB,GAAiB,IAAKoB,UAAW,SAAUwB,cAAe5C,GAAiB,KAA9H,8BACE,CAAC,uBAAwB,4BAA6B,QAAS,aAAaZ,KAAI,SAAC8L,GAC/E,IAAMoJ,EAAmB,EAAK9N,MAAMyN,wBAA0Bd,EAAiBjI,GAC/E,OACI,eAAClE,GAAA,EAAD,CAEAlB,QAAS,kBAAM,EAAKU,MAAM4N,eAAe,CAACH,sBAAuBd,EAAiBjI,MAClFvG,MAAO,CAAC2O,EAAU,CAACzT,MAAOG,GAAiB,KAAMD,OAAQC,GAAiB,IAAK2B,aAAc3B,GAAiB,IAAK0C,aAAc1C,GAAiB,IAAK6B,gBAAiByS,EAAmBnU,GAAOoE,SAASpD,MAAM,IAAMhB,GAAOoE,SAASpD,MAAM,MAH7O,SAII,eAACyD,GAAA,EAAD,CAAMwC,YAAY,EAAOzC,MAAO,CAAC,CAAC1D,SAAU,GAAIE,MAAOhB,GAAOmE,MAAMnD,QAApE,SAA8E+J,KAH7E,WAAWA,SAQ5B,gBAACxG,GAAA,EAAD,CAAMC,MAAO,CAACyO,EAAmB,CAACvS,cAAe,MAAON,eAAgB,iBAAxE,UACI,eAACyG,GAAA,EAAD,CACAlB,QAAS,WACLkD,EAAmB,gBAAnBA,GACA,EAAKxC,MAAM4N,eAAe,CAACH,sBAAuB,EAAK1M,MAAMwL,uBAC7D,EAAKtE,SAAS,CAACgE,cAAc,EAAMC,sBAAsB,EAAMC,KAAM,SAAUI,qBAAsB,OACrGhK,EAAmB,CAAC,iBAAiB,KAEzCM,UAAWL,EAAmB,iBAC9BI,SAAUF,EACVvE,MAAO,CAACxE,GAAOiE,WAAY,CACvBhD,UAAW,SACXQ,YAAasH,EAAY/I,GAAOmE,MAAMnD,MAAM,IAAMhB,GAAOmE,MAAMnD,MAC/DU,gBAAiBiH,EAAgB,iBAAmB3I,GAAOmE,MAAMnD,MAAM,IAAM,UAZjF,SAcI,eAACyD,GAAA,EAAD,CAAMwC,YAAY,EAAOzC,MAAO,CAACxE,GAAOkE,gBAAiB,CAAClD,MAAO+H,EAAY/I,GAAOmE,MAAMnD,MAAM,IAAMhB,GAAOmE,MAAMnD,QAAnH,sBAEJ,eAAC6F,GAAA,EAAD,CACAlB,QAAS,WACLkD,EAAmB,gBAAnBA,GACA,EAAKuL,iCACLxL,EAAmB,CAAC,iBAAiB,KAEzCM,UAAWL,EAAmB,iBAC9BI,SAAWF,GAAa8K,EACxBrP,MAAO,CAACxE,GAAOiE,WAAY,CACvBhD,UAAW,SACXS,gBAAiBiH,EAAgB,iBAAmB3I,GAAOmE,MAAMnD,MAAM,IAAM,QAC7ES,YAAasH,GAAa8K,EAAmB7T,GAAOmE,MAAMnD,MAAM,IAAMhB,GAAOmE,MAAMnD,QAXvF,SAaI,eAACyD,GAAA,EAAD,CAAMwC,YAAY,EAAOzC,MAAO,CAACxE,GAAOkE,gBAAiB,CAAClD,MAAO+H,GAAa8K,EAAmB7T,GAAOmE,MAAMnD,MAAM,IAAMhB,GAAOmE,MAAMnD,QAAvI,4BAMpB,QACI,OAAO,Q,8BAInB,WAAoB,IAAD,OAGTwH,EAAgB,CAClB,MAAS,kBAAM,EAAK8F,SAAS,CAACgE,cAAc,EAAOC,sBAAsB,EAAOC,KAAM,YACtF,QAAW,WACP,EAAKnM,MAAM4N,eAAe,CAACC,mBAAoB,EAAK7N,MAAM6N,oBAC1D,EAAK5F,SAAS,CAACgE,cAAc,EAAQC,sBAAsB,EAAOC,KAAM,YAE5E,OAAU,kBAAM,EAAKlE,SAAS,CAACgE,cAAc,EAAOC,sBAAsB,EAAOC,KAAM,SAAUI,qBAAsB,EAAKvM,MAAMyN,0BAEtI,EAA8CxO,mBAAS,CACnD,OAAS,EACT,SAAW,EACX,QAAU,IAHd,WAAOqD,EAAP,KAAwBC,EAAxB,KAKA,SAASC,EAAmBC,GAIxB,OAHA,WACIF,EAAmB,SAAKD,GAAN,UAAwBG,GAASH,EAAgBG,OAEhDxB,KAAKQ,MAGhC,IAAMwK,EAAgBxK,KAAKV,MAAMkL,aAC3BC,EAAuBzK,KAAKV,MAAMmL,qBAClC8B,EAA4B,UAAnBvM,KAAKV,MAAMoL,KACpB8B,EAAUhC,IAAiB+B,EAE3BtL,EACFjB,KAAKzB,MAAMoN,mBACX3L,KAAKzB,MAAMqN,SAASnL,kBACpBT,KAAKzB,MAAMsN,wBACX7L,KAAKzB,MAAMkN,uBACXzL,KAAKzB,MAAMmN,qBAGf,OACI,qCACMjB,EACE,gBAAChO,GAAA,EAAD,CAAMC,MAAO,CAACxE,GAAOiD,QAAS,CAC1BrD,OAAQC,GAAiB,IACzB+G,UAAW/G,GAAiB,IAC5BS,WAAYT,GAAiB,IAC7BO,eAAgBkS,EAAe,gBAAkB,SAAUe,eAAgB,EAAGC,eAAgB,0BAJlG,UAMMhB,EA3CG,CAAC,QAAS,UAAW,UA4CTrT,KAAI,SAAC6J,GAAD,OACb,eAACjC,GAAA,EAAD,CAEArC,MAAO,CAACxE,GAAOiE,WAAa,CACxBvC,gBAAiBiH,EAAgBG,GAAS9I,GAAOmE,MAAMnD,MAAM,IAAM,QACnES,YAAasH,EAAY/I,GAAOmE,MAAMnD,MAAM,IAAMhB,GAAOmE,MAAMnD,MAC/DtB,MAAOG,GAAiB,MAE5BoJ,SAAWF,EACXpD,QAAS,WACLkD,EAAmBC,EAAnBD,GAA6BL,EAAcM,KAC3CF,EAAmB,OAAGE,GAAQ,KAElCI,UAAWL,EAAmBC,GAZ9B,SAcI,eAACrE,GAAA,EAAD,CAAMwC,YAAY,EAAOzC,MAAO,CAACxE,GAAOkE,gBAAiB,CAAClD,MAAO+H,EAAY/I,GAAOmE,MAAMnD,MAAM,IAAMhB,GAAOmE,MAAMnD,QAAnH,SAA6H8H,KAdjI,WACgBA,MAgBpB,KACJ,gBAACjC,GAAA,EAAD,CACAlB,QAAS,kBAAM,EAAK2I,SAAS,CAAEgE,cAAgBA,KAE/C9N,MAAO,CAAC9D,cAAe,MAAOL,WAAY,SAAUD,eAAgB,SAAUkB,gBAAiBzB,GAAiB,GAAIH,MAAOG,GAAiB,KAH5I,UAII,eAAC,OAAD,CAAM+E,KAAQ0N,EAA2C,qBAA5B,0BAAmDzN,KAAM7E,GAAOmE,MAAMnD,MAAOtB,MAAOG,GAAiB,IAAKD,OAAQC,GAAiB,MAChK,gBAAC4E,GAAA,EAAD,CAAMwC,YAAY,EAAOzC,MAAO,CAACxD,MAAOhB,GAAOmE,MAAMnD,MAAOF,SAAUjB,GAAiB,IAAKsB,WAAY,GAAxG,cAA8GmT,EAAU,QAAU,gBAGzI,S,sCAMjB,kCAAAhL,EAAAC,OAAA,oDAEoCgL,OAAOC,KAAK1M,KAAKzB,MAAMoO,oBAAoBzZ,SAAS+W,GAAWjK,KAAKV,MAAMqL,iBAF9G,uBAIQ3K,KAAKzB,MAAMoC,YAAY,0EAJ/B,0CASQX,KAAKzB,MAAM4N,eAAe,CAAET,sBAAsB,IAC9CpL,EAAON,KAAKzB,MAAMqN,SAAStL,KACzBsM,EAAa,CACf9P,KAAMmN,GAAWjK,KAAKV,MAAMqL,gBAC5BjM,KAAMsB,KAAKV,MAAMsL,oBACjBiC,OAAQ7M,KAAKV,MAAMuL,uBAGvBhL,QAAQC,IAAI,mCACRgN,EAAoB,CAACjL,IAAI,EAAOC,OAAQ,MAAOO,WAAY,yBACzD0K,EAAoB,CACtB5K,OAAQ,OACR0B,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAW4I,IAxBlC,YAAApL,EAAA,MA2BkCU,MAAOF,mDAA0B1B,EAAK2B,SAAW,YAAa8K,IA3BhG,WA2BQD,EA3BR,OA4BcE,EAAoB,WAAaF,EAAkBhL,OAAS,KAAOgL,EAAkBzK,YAEvFyK,EAAkBjL,GA9B9B,iBA+BYhC,QAAQC,IAAI,oCACZD,QAAQC,IAAIkN,GACZhN,KAAKwG,SAAS,CACVgE,cAAc,EACdC,sBAAsB,EACtBC,KAAM,SACNC,eAAgB,GAChBC,oBAAqB,KACrBC,sBAAuB,OAvCvC,8BA2CYhL,QAAQC,IAAI,kDACN,IAAIwC,MAAM0K,GA5C5B,0DAgDQhN,KAAKzB,MAAMoC,YAAY,wCACvBd,QAAQC,IAAI,mBACZD,QAAQC,IAAR,MAlDR,qBAqDQD,QAAQC,IAAI,kCACZE,KAAKzB,MAAM4N,eAAe,CAAET,sBAAsB,KAC9CoB,EAAkBjL,GAvD9B,oCAAAL,EAAA,MAwDkBxB,KAAKzB,MAAMqN,SAASrJ,gBAxDtC,QAyDYvC,KAAKzB,MAAM0O,iBAzDvB,qG,4CA8DA,gCAAAzL,EAAAC,OAAA,gEAGQzB,KAAKzB,MAAM4N,eAAe,CAAEe,4BAA4B,IACpD5M,EAAON,KAAKzB,MAAMqN,SAAStL,KAE/BT,QAAQC,IAAI,0CACRqN,EAA0B,CAACtL,IAAI,EAAOC,OAAQ,MAAOO,WAAY,yBAC/D+K,EAAwB,CAC1BjL,OAAQ,OACR0B,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAW,CAACf,OAAQjD,KAAKzB,MAAMyN,yBAbtD,WAAAxK,EAAA,MAewCU,MAAOF,mDAA0B1B,EAAK2B,SAAW,UAAWmL,IAfpG,UAeQD,EAfR,OAiBcE,EAA0B,WAAaF,EAAwBrL,OAAS,KAAOqL,EAAwB9K,YAEzG8K,EAAwBtL,GAnBpC,iBAoBYhC,QAAQC,IAAI,2CACZD,QAAQC,IAAIuN,GACZrN,KAAKwG,SAAS,CACVgE,cAAc,EACdC,sBAAsB,EACtBC,KAAM,SACNI,qBAAsB,OA1BtC,8BA8BYjL,QAAQC,IAAI,yDACN,IAAIwC,MAAM+K,GA/B5B,0DAmCQrN,KAAKzB,MAAMoC,YAAY,wCACvBd,QAAQC,IAAI,mBACZD,QAAQC,IAAR,MArCR,qBAwCQD,QAAQC,IAAI,yCACZE,KAAKzB,MAAM4N,eAAe,CAAEe,4BAA4B,KACpDC,EAAwBtL,GA1CpC,oCAAAL,EAAA,MA2CkBxB,KAAKzB,MAAMqN,SAASrJ,gBA3CtC,QA4CYvC,KAAKzB,MAAM0O,iBA5CvB,qG,0BAiDA,WAII,IAHA,IAAMzK,EAAgBxC,KAAKzB,MAAMqN,SAAStL,KAAKmC,SAASD,cAClDE,EAAYF,EAAgB,OAAS,OACrCG,EAAeH,EAAgB,OAAS,OAC9C,MAAkB,CAAC,SAAnB,eAA+B,CAA1B,IAAI9F,EAAK,KACVxE,GAAOwE,GAAP,SAAqBxE,GAAOwE,IAA5B,IAAoCxD,MAAOwJ,IAE/CxK,GAAOoE,SAASpD,MAAQyJ,I,oBAI5B,WACI,OACI,uCACI,oBAAMqI,oBAAN,IACA,oBAAMD,iBAAN,W,GArb0BlI,a,+/BCT1C,IAEMyK,GAAYvK,EAAQ,KAEtB7K,GAAS,CACXqV,WAAY,CACVlV,KAAM,EACNG,WAAYC,KAAUC,cACtBiC,cAAe5C,GAAiB,IAChCQ,WAAY,SACZD,eAAgB,iBAElBsC,WAAY,CACVhD,MAAO,QAGT4V,WAAY,CACV5V,MAAOG,GAAiB,KACxBoB,UAAW,UAEb0B,OAAQ,CACN/C,OAAQC,GAAiB,KACzBa,cAAe,MACfL,WAAY,SACZD,eAAgB,UAGlBmV,YAAa,CACX3V,OAAQC,GAAiB,IACzBwB,kBAAmBxB,GAAiB,IACpCa,cAAe,MACfL,WAAY,SACZD,eAAgB,gBAChBoB,aAAc3B,GAAiB,KAGjC2V,SAAU,CACR5V,OAAQC,GAAiB,KACzBwB,kBAAmB,EACnBI,YAAa,yBAEfgU,SAAU,CACR/V,MAAO,OACPE,OAAQC,GAAiB,IACzBwB,kBAAmBxB,GAAiB,IACpCa,cAAe,MACfL,WAAY,SACZD,eAAgB,gBAChB0C,kBAAmB,EACnBrB,YAAa,QACbD,aAAc3B,GAAiB,KAEjC6V,YAAa,CAEXhW,MAAOG,GAAiB,IACxBD,OAAQC,GAAiB,IACzB2B,aAAc3B,GAAiB,GAC/B4B,YAAa,SAEfkU,OAAQ,CACN/V,OAAQC,GAAiB,IACzBH,MAAOG,GAAiB,IACxB+G,UAAW,EACXrE,aAAc1C,GAAiB,IAC/BO,eAAgB,SAChBC,WAAY,UAIduV,GAAI,CACF9U,SAAUjB,GAAiB,IAC3BmB,MAAO,QAET6U,GAAI,CACF/U,SAAUjB,GAAiB,IAC3BmB,MAAO,QAET8U,GAAI,CACFhV,SAAUjB,GAAiB,IAC3BmB,MAAO,QAET+U,GAAI,CACFjV,SAAUjB,GAAiB,IAC3BmB,MAAO,SAIJ,SAASgV,GAAYC,GAA2B,IAAfC,EAAc,uDAAL,IAC/CD,GAAW,GACXlH,YAAW,WACTkH,GAAW,KACVC,GAGE,SAAeC,GAAa5L,EAAUR,GAAtC,mBAAAT,EAAAC,OAAA,gEAGJ5B,QAAQC,IAAI,oCACZD,QAAQC,IAAI,wDACZD,QAAQC,IAAIiE,KAAKC,UAAUvB,IACvB6L,EAAqB,CAACzM,IAAI,EAAOC,OAAQ,MAAOO,WAAY,yBAC1DkM,EAAmB,CACvBpM,OAAQ,OACR0B,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAWvB,IAZpB,WAAAjB,EAAA,MAeuBU,MAAUF,mDAAqBC,EAA1B,YAA+CsM,IAf3E,UAeJD,EAfI,OAgBEE,EAAqB,WAAaF,EAAmBxM,OAAS,KAAOwM,EAAmBjM,YAE1FiM,EAAmBzM,GAlBnB,iBAmBFhC,QAAQC,IAAI,qCACZD,QAAQC,IAAI0O,GApBV,8BAuBF3O,QAAQC,IAAI,mDACN,IAAIwC,MAAMkM,GAxBd,0DA2BJC,MAAM,wCACN5O,QAAQC,IAAI,mBACZD,QAAQC,IAAR,MA7BI,yBAgCJD,QAAQC,IAAI,mDAhCR,kBAiCGwO,GAjCH,uE,IAqCcI,G,iCAEnB,WAAYnQ,GAAQ,IAAD,sBACjB,cAAMA,IACDe,MAAQ,CACXqP,+BAA+B,EAC/BC,cAAe,KAEfC,iCAAiC,EACjCC,0BAA0B,EAC1BC,+BAA+B,EAC/BC,uBAAuB,EACvBC,oBAAoB,GAEtB,EAAKC,iBAAmB,EAAKA,iBAAiB1P,KAAtB,QACxB,EAAKI,aAAe,EAAKA,aAAaJ,KAAlB,QACpB,EAAK2P,mBAAqB,EAAKA,mBAAmB3P,KAAxB,QAC1B,EAAKkP,eAAiB,EAAKA,eAAelP,KAApB,QACtB,EAAK4P,eAAiB,EAAKA,eAAe5P,KAApB,QACtB,EAAK6P,mBAAqB,EAAKA,mBAAmB7P,KAAxB,QAC1B,EAAK8P,8BAAgC,EAAKA,8BAA8B9P,KAAnC,QACrC,EAAK+P,uBAAyB,EAAKA,uBAAuB/P,KAA5B,QAC9B,EAAKgQ,4BAA8B,EAAKA,4BAA4BhQ,KAAjC,QACnC,EAAKiQ,6BAA+B,EAAKA,6BAA6BjQ,KAAlC,QACpC,EAAKkQ,aAAe,EAAKA,aAAalQ,KAAlB,QACpB,EAAKmQ,aAAe,EAAKA,aAAanQ,KAAlB,QACpB,EAAKoQ,oBAAsB,EAAKA,oBAAoBpQ,KAAzB,QAC3B,EAAKqQ,sBAAwB,EAAKA,sBAAsBrQ,KAA3B,QAC7B,EAAKsQ,uBAAyB,EAAKA,uBAAuBtQ,KAA5B,QAC9B,EAAKuQ,wBAA0B,EAAKA,wBAAwBvQ,KAA7B,QAC/B,EAAKwQ,SAAW,EAAKA,SAASxQ,KAAd,QAChB,EAAKyB,UAAY,EAAKA,UAAUzB,KAAf,QACjB,EAAKyQ,gBAAkB,EAAKA,gBAAgBzQ,KAArB,QA9BN,E,6CAiCnB,WACEK,QAAQC,IAAI,wCACZE,KAAKkP,qB,kCAEP,WACErP,QAAQC,IAAI,gD,8BAGd,WACED,QAAQC,IAAI,yCACZE,KAAKJ,eACLI,KAAKmP,uB,0BAGP,WAGE,IAFA,IACMzM,EADW1C,KAAKzB,MAAMqN,SAAStL,KAAKmC,SACfD,cAAgB,OAAS,OACpD,MAAc,CAAC,KAAM,KAAM,KAAM,MAAjC,eAAwC,CAAnC,IAAI0N,EAAC,KACRhY,GAAOgY,GAAP,SAAiBhY,GAAOgY,IAAxB,IAA4BhX,MAAOwJ,O,gCAIvC,WACE,IAAMD,EAAWzC,KAAKzB,MAAMqN,SAAStL,KAAKmC,SAC1CzC,KAAKwG,SAAS,CACZoI,cAAenM,EAAS7I,kBAE1BoG,KAAKzB,MAAMU,WAAWgB,UAAU,CAAC2O,cAAenM,EAAS7I,oB,4BAG3D,WACE,IAAM6I,EAAWzC,KAAKzB,MAAMqN,SAAStL,KAAKmC,SACpCS,EAAkBT,EAASS,gBAC3BtJ,EAAkBoG,KAAKV,MAAMsP,cAC7B9L,EAASL,EAASU,wBAA0BD,EAAoBT,EAASW,qBAAuBF,EAAgBiN,KAAKC,IAAMlN,EAAgBiN,KAAKE,QAAoB,KAC1K,OACE,eAAChL,EAAA,EAAD,CACAnI,OAAQ,CAACC,IAAM2F,GACfpG,MAAO,CAAExE,GAAOqV,WAAY,CAAC3T,gBAAiBA,IAF9C,SAIE,eAAC0W,GAAA,EAAD,CAAY5T,MAAOxE,GAAO0C,WAA1B,SACE,gBAAC6B,GAAA,EAAD,CAAMC,MAAOxE,GAAOsV,WAApB,UACE,eAAC/Q,GAAA,EAAD,CAAMC,MAAOxE,GAAO2C,OAApB,SACE,eAAC8B,GAAA,EAAD,CAAMD,MAAOxE,GAAO4V,GAApB,mCAEF,oBAAMsB,eAAN,a,4BAOV,WACE,OACE,uCACE,oBAAMC,mBAAN,IACA,oBAAMC,8BAAN,IACA,oBAAME,4BAAN,IACA,oBAAMD,uBAAN,IACA,oBAAME,6BAAN,IACA,oBAAMC,aAAN,IACA,oBAAMO,gBAAN,S,gCAKN,WAAsB,IAAD,OACnB,EAAoEM,IAAM/S,UAAS,GAAnF,WAAOgT,EAAP,KAAmCC,EAAnC,KACI/N,EAAYxK,GAAO4V,GAAG5U,MAE1B,OACE,gBAAC6F,GAAA,EAAD,CACAqC,UAAW,kBAAM8M,GAAYuC,IAC7B5S,QAAS,kBAAM,EAAKU,MAAMU,WAAWC,SAAS,oBAC9CxC,MAAO,CAACxE,GAAOuV,YAAa,CAAC7T,gBAAiB4W,EAA6B,QAAU,OAHrF,UAKE,gBAAC/T,GAAA,EAAD,CAAMC,MAAO,CAAC9D,cAAe,MAAOL,WAAY,UAAhD,UACE,eAAC,OAAD,CAAMuE,KAAK,gBAAgBlF,MAAO,GAAIE,OAAQ,GAAIiF,KAAM2F,IACxD,eAAC/F,GAAA,EAAD,CAAMwC,YAAY,EAAOzC,MAAO,CAACxE,GAAO6V,GAAI,CAAC1U,WAAY,KAAzD,gCAGF,eAAC,OAAD,CACAzB,MAAOG,GAAiB,IAAKD,OAAQC,GAAiB,IACtD+E,KAAK,4BACLC,KAAO2F,S,2CAKb,WAAiC,IAAD,OAC9B,EAAoE6N,IAAM/S,UAAS,GAAnF,WAAOkT,EAAP,KAAmCC,EAAnC,KACMC,EAA8B5Q,KAAKzB,MAAMqN,SAAStL,KAAKmC,SAASU,uBAChElC,EAAYjB,KAAKV,MAAMuP,gCAC7B,OACE,gBAAC9P,GAAA,EAAD,CACAqC,UAAY,kBAAM8M,GAAYyC,IAC9BjU,MAAO,CAACxE,GAAOuV,YAAa,CAAC7T,gBAAiB8W,EAA6B,QAAU,OAFrF,UAIE,gBAACjU,GAAA,EAAD,CAAMC,MAAO,CAAC9D,cAAe,MAAOL,WAAY,UAAhD,UACE,eAAC,OAAD,CAAMuE,KAAK,cAAclF,MAAOG,GAAiB,IAAKD,OAAQC,GAAiB,IAAKgF,KAAM7E,GAAO4V,GAAG5U,QACpG,eAACyD,GAAA,EAAD,CAAMwC,YAAY,EAAOzC,MAAO,CAACxE,GAAO6V,GAAI,CAAC1U,WAAYtB,GAAiB,IAAK4D,YAAa5D,GAAiB,MAA7G,iCACEkJ,EAAY,eAACK,EAAA,EAAD,CAAmBpI,MAAM,SAAY,QAErD,eAAC8M,GAAA,EAAD,CACA7E,SAAUF,EACViF,WAAY,CAAEC,MAAO,UAAWC,KAAM,WACtCC,WAA0C,UAC1CC,oBAAoB,UACpBC,cAAe,WACb2H,GAAYyC,GACZ,EAAKE,gCAAgCD,IAEvChL,MAAOgL,S,yCAMb,WAA+B,IAAD,OAC5B,EAAsFL,IAAM/S,UAAS,GAArG,WAAOsT,EAAP,KAA4CC,EAA5C,KACMC,EAA4BhR,KAAKzB,MAAMqN,SAAStL,KAAKmC,SAASW,qBAC9DnC,EAAYjB,KAAKV,MAAMyP,8BAC7B,OACE,gBAAChQ,GAAA,EAAD,CACAqC,UAAY,kBAAM8M,GAAY6C,IAC9BrU,MAAO,CAACxE,GAAOuV,YAAa,CAAC7T,gBAAiBkX,EAAsC,QAAU,OAF9F,UAIE,gBAACrU,GAAA,EAAD,CAAMC,MAAO,CAAC9D,cAAe,MAAOL,WAAY,UAAhD,UAEE,eAAC,KAAD,CAAYuE,KAAK,kBAAkB9E,KAAMD,GAAiB,IAAKmB,MAAOhB,GAAO4V,GAAG5U,QAChF,eAACyD,GAAA,EAAD,CAAMwC,YAAY,EAAOzC,MAAO,CAACxE,GAAO6V,GAAI,CAAC1U,WAAYtB,GAAiB,IAAK4D,YAAa5D,GAAiB,MAA7G,kCACEkJ,EAAY,eAACK,EAAA,EAAD,CAAmBpI,MAAM,SAAY,QAErD,eAAC8M,GAAA,EAAD,CACA7E,SAAUF,EACViF,WAAY,CAAEC,MAAO,UAAWC,KAAM,WACtCC,WAAwC,UACxCC,oBAAoB,UACpBC,cAAe,WACb2H,GAAY6C,GACZ,EAAKE,8BAA8BD,IAErCpL,MAAOoL,S,oCAMb,WAA0B,IAAD,OACvB,EAA4ET,IAAM/S,UAAS,GAA3F,WAAO0T,EAAP,KAAuCC,EAAvC,KACMC,EAAuBpR,KAAKzB,MAAMqN,SAAStL,KAAKmC,SAASD,cACzDvB,EAAYjB,KAAKV,MAAMwP,yBAC7B,OACE,gBAAC/P,GAAA,EAAD,CACAqC,UAAY,kBAAM8M,GAAYiD,IAC9BzU,MAAO,CAACxE,GAAOuV,YAAa,CAAC7T,gBAAiBsX,EAAiC,QAAU,OAFzF,UAIE,gBAACzU,GAAA,EAAD,CAAMC,MAAO,CAAC9D,cAAe,MAAOL,WAAY,UAAhD,UACE,eAAC,OAAD,CAAMuE,KAAK,eAAelF,MAAOG,GAAiB,IAAKD,OAAQC,GAAiB,IAAKgF,KAAM7E,GAAO4V,GAAG5U,QACrG,eAACyD,GAAA,EAAD,CAAMwC,YAAY,EAAOzC,MAAO,CAACxE,GAAO6V,GAAI,CAAC1U,WAAYtB,GAAiB,IAAK4D,YAAa5D,GAAiB,MAA7G,0BACEkJ,EAAY,eAACK,EAAA,EAAD,CAAmBpI,MAAM,SAAY,QAErD,eAAC8M,GAAA,EAAD,CACA7E,SAAUF,EACViF,WAAY,CAAEC,MAAO,UAAWC,KAAM,WACtCC,WAAmC,UACnCC,oBAAoB,UACpBC,cAAe,WACb2H,GAAYiD,GACZ,EAAKpB,yBAAyBqB,IAEhCxL,MAAOwL,S,0CAMb,WAAgC,IAAD,OAC7B,EAAwDb,IAAM/S,UAAS,GAAvE,WAAO6T,EAAP,KAA6BC,EAA7B,KACM7O,EAAWzC,KAAKzB,MAAMqN,SAAStL,KAAKmC,SACpC8O,EAAqBvR,KAAKV,MAAMsP,eAAiBnM,EAAS7I,gBAC5D8I,EAAYxK,GAAO4V,GAAG5U,MACtBsY,EAAkB9O,EAAY,IAC5B+O,EAAehP,EAASU,uBAC9B,OACE,gBAACpE,GAAA,EAAD,CACAqC,UAAW,kBAAM8M,GAAYoD,IAC7BzT,QAAS,WACP,EAAK2I,SAAS,CAAEmI,+BAAgC,EAAKrP,MAAMqP,gCACtD4C,GAAoB,EAAKrC,oBAEhC/N,SAAUsQ,EACV/U,MAAO,CAACxE,GAAOuV,YAAa,CAAC7T,gBAAiByX,EAAuB,QAAU,OAP/E,UASE,gBAAC5U,GAAA,EAAD,CAAMC,MAAO,CAAC9D,cAAe,MAAOL,WAAY,UAAhD,UACE,eAAC,OAAD,CACAuE,KAAK,wBACLhF,OAAQC,GAAiB,IACzBH,MAAOG,GAAiB,IACxBgF,KAAO0U,EAAeD,EAAkB9O,EACxChG,MAAO,CAACf,YAAa,KAErB,eAACgB,GAAA,EAAD,CAAMwC,YAAY,EAAOzC,MAAO,CAACxE,GAAO6V,GAAI,CAAC7U,MAAOuY,EAAeD,EAAkB9O,EAAWrJ,WAAYtB,GAAiB,MAA7H,qBAEF,eAAC0E,GAAA,EAAD,CAAMC,MAAO,CAAC9D,cAAe,MAAOL,WAAY,UAAhD,SACE,eAAC,OAAD,CACAX,MAAOG,GAAiB,IAAKD,OAAQC,GAAiB,IACtD+E,KAAMkD,KAAKV,MAAMqP,8BAAgC,2BAA6B,6BAC9E5R,KAAO0U,EAAeD,EAAkB9O,W,0BAMhD,WAAgB,IAAD,OACb,OACE1C,KAAKV,MAAMqP,8BACT,uCACE,eAAC2B,GAAA,EAAD,CACAoB,qBAAmB,EACnBhV,MAAOxE,GAAOwV,SAFd,SAIIJ,GAAUnW,KAAI,SAAA+B,GACd,OACE,eAAC,EAAK8W,SAAN,CAAe9W,MAAOA,GAAY,SAAWA,QAInD,oBAAMyW,aAAN,OAGF,O,sBAKN,YAAmB,IAATzW,EAAQ,EAARA,MACR,EAAkDqX,IAAM/S,UAAS,GAAjE,WAAOmU,EAAP,KAA0BC,EAA1B,KACM3Q,EAAYjB,KAAKV,MAAM0P,sBAAwBhP,KAAKV,MAAM2P,mBAChE,OACE,gBAAClQ,GAAA,EAAD,CACAqC,UAAY,kBAAM8M,GAAY0D,EAAsB,MACpD/T,QAAUmC,KAAK6P,sBAAsB3W,GACrCiI,SAAUF,EACVvE,MAAO,CAACxE,GAAOyV,SAAU,CAAC/T,gBAAiB+X,EAAoB,QAAU,OAJzE,UAKE,eAAChV,GAAA,EAAD,CAAMwC,YAAY,EAAOzC,MAAO,CAC9BxE,GAAO8V,GACPhO,KAAKV,MAAMsP,eAAiB1V,EAC1B,CAAC2Y,UAAW,SAAUC,mBAAoB,aAC1C,CAACD,UAAW,SAAUC,mBAAoB,SAJ9C,SAKK7H,GAAW/Q,KAChB,eAACuD,GAAA,EAAD,CAAMC,MAAO,CAAExE,GAAO0V,YAAa,CAAEhU,gBAAiBV,EAAOO,YAAauG,KAAKV,MAAMsP,eAAe1V,EAAQ,EAAI,W,0BAKtH,WAAgB,IAAD,OACPqY,EAAqBvR,KAAKV,MAAMsP,eAAiB5O,KAAKzB,MAAMqN,SAAStL,KAAKmC,SAAS7I,gBACnFqH,EAAYjB,KAAKV,MAAM0P,sBAAwBhP,KAAKV,MAAM2P,mBAChE,OACE,gBAACxS,GAAA,EAAD,CAAMC,MAAO,CAACxE,GAAOuV,YAAa,CAACnV,eAAgB,kBAAnD,UACE,eAACyG,GAAA,EAAD,CACAoC,SAAUF,EAAYsQ,EACtB7U,MAAO,CAAEpE,eAAgB,SAAUC,WAAY,SAAUX,MAAOG,GAAiB,KAEjF8F,QAAS,WACP,EAAK2I,SAAS,CAACwI,uBAAuB,IACtC,EAAKE,mBACL,EAAK1I,SAAS,CAACwI,uBAAuB,KAPxC,SAUE,eAACrS,GAAA,EAAD,CAAMwC,YAAY,EAChBzC,MAAO,CAACxE,GAAO6V,GAAI,CACjBhV,UAAW,SACXG,MAAO+H,EAAYsQ,EAAqBrZ,GAAO4V,GAAG5U,MAAQ,IAAMhB,GAAO4V,GAAG5U,QAH9E,SAMI8G,KAAKV,MAAM0P,sBAAwB,eAAC1N,EAAA,EAAD,CAAmBpI,MAAM,SAAa,gBAI/E,eAAC6F,GAAA,EAAD,CACAoC,SAAUF,EAAYsQ,EACtB1T,QAASmC,KAAK8P,uBACdpT,MAAO,CAAEpE,eAAgB,SAAUC,WAAY,SAAUX,MAAOG,GAAiB,KAHjF,SAKE,eAAC4E,GAAA,EAAD,CAAMwC,YAAY,EAAOzC,MAAO,CAACxE,GAAO6V,GAAI,CAACnW,MAAOG,GAAiB,IAAKgB,UAAW,SAAUG,MAAO+H,EAAYsQ,EAAqBrZ,GAAO4V,GAAG5U,MAAQ,IAAMhB,GAAO4V,GAAG5U,QAAzK,SACI8G,KAAKV,MAAM2P,mBAAqB,eAAC3N,EAAA,EAAD,CAAmBpI,MAAM,SAAY,mB,uBAOjF,WACE,OACE8G,KAAKV,MAAMuP,gCACX7O,KAAKV,MAAMwP,yBACX9O,KAAKV,MAAM0P,sBACXhP,KAAKV,MAAMyP,8BACX/O,KAAKV,MAAM2P,qB,6BAIf,WAAmB,IAAD,OAChB,EAA4DsB,IAAM/S,UAAS,GAA3E,WAAQuU,EAAR,KAA+BC,EAA/B,KACM/Q,EAAYjB,KAAKiB,YACjBgR,EAAchR,EAAY/I,GAAO4V,GAAG5U,MAAM,IAAM,MACtD,OACE,gBAAC6F,GAAA,EAAD,CACAlB,QAAS,WACPqQ,GAAY8D,GACZ,EAAKpC,uBAEPzO,SAAUF,EACVvE,MAAO,CAAExE,GAAOuV,YAAa,CAC3BnV,eAAgB,aAChBmC,aAAc1C,GAAiB,IAC/B6B,gBAAiBmY,EAAwB7Z,GAAO4V,GAAG5U,MAAM,IAAM,OATjE,UAYE,eAAC,OAAD,CAAM4D,KAAK,UAAUlF,MAAOG,GAAiB,IAAKD,OAAQC,GAAiB,IAAKgF,KAAMkV,IACtF,eAACtV,GAAA,EAAD,CAAMwC,YAAY,EAAOzC,MAAO,CAACxE,GAAO6V,GAAI,CAAE1U,WAAYtB,GAAiB,IAAKmB,MAAO+Y,IAAvF,yB,mCAKN,SAAsB/Y,GAKpB,OAJA,WACE8G,KAAKwG,SAAS,CAAEoI,cAAe1V,IAC/B8G,KAAKzB,MAAMU,WAAWgB,UAAU,CAAC2O,cAAe1V,KAExBsG,KAAKQ,Q,4CAGjC,SAAqC4F,GAArC,eAAApE,EAAAC,OAAA,uDACEzB,KAAKwG,SAAS,CAAEqI,iCAAiC,IAC3CqD,EAAc,CAAC/O,uBAAwByC,GAF/C,WAAApE,EAAA,MAGkC6M,GAAa6D,EAAalS,KAAKzB,MAAMqN,SAAStL,KAAK2B,WAHrF,kBAIwBJ,GAJxB,kCAAAL,EAAA,MAMUxB,KAAKzB,MAAMqN,SAASrJ,gBAN9B,OAQEvC,KAAKwG,SAAS,CAAEqI,iCAAiC,IARnD,8D,qCAWA,SAA8BjJ,GAA9B,eAAApE,EAAAC,OAAA,uDACEzB,KAAKwG,SAAS,CAAEsI,0BAA0B,IACpCoD,EAAc,CAAC1P,cAAeoD,GAFtC,WAAApE,EAAA,MAGkC6M,GAAa6D,EAAalS,KAAKzB,MAAMqN,SAAStL,KAAK2B,WAHrF,kBAIwBJ,GAJxB,kCAAAL,EAAA,MAMUxB,KAAKzB,MAAMqN,SAASrJ,gBAN9B,OAQIvC,KAAKJ,eART,OAUEI,KAAKwG,SAAS,CAAEsI,0BAA0B,IAV5C,+D,0CAaA,SAAmClJ,GAAnC,eAAApE,EAAAC,OAAA,uDACEzB,KAAKwG,SAAS,CAAEuI,+BAA+B,IACzCmD,EAAc,CAAC9O,qBAAsBwC,GAF7C,WAAApE,EAAA,MAGyC6M,GAAa6D,EAAalS,KAAKzB,MAAMqN,SAAStL,KAAK2B,WAH5F,kBAI+BJ,GAJ/B,kCAAAL,EAAA,MAMUxB,KAAKzB,MAAMqN,SAASrJ,gBAN9B,OASEvC,KAAKwG,SAAS,CAAEuI,+BAA+B,IATjD,8D,oCAYA,0BAAAvN,EAAAC,OAAA,uDAEE5B,QAAQC,IAAI,iCACZE,KAAKwG,SAAS,CAAEyI,oBAAoB,IAC9BkD,EAAe,CACnBvY,gBAAiBoG,KAAKV,MAAMsP,eALhC,WAAApN,EAAA,MAOgC6M,GAAa8D,EAAcnS,KAAKzB,MAAMqN,SAAStL,KAAK2B,WAPpF,kBAQsBJ,GARtB,qBASQ7B,KAAKzB,MAAMqN,SAAStL,KAAKmC,SAASU,uBAT1C,oCAAA3B,EAAA,MAUYxB,KAAK6Q,gCAA+B,IAVhD,mDAAArP,EAAA,MAaYxB,KAAKzB,MAAMqN,SAASrJ,gBAbhC,QAgBIvC,KAAKkP,mBAhBT,QAkBErP,QAAQC,IAAI,gCACZE,KAAKwG,SAAS,CAAEyI,oBAAoB,IAnBtC,+D,iCAsBA,oBAAAzN,EAAAC,OAAA,kEAAAD,EAAA,MACQwD,GAAwB,OADhC,OAGEhF,KAAKzB,MAAMqN,SAASiC,SAHtB,8D,oBAMA,WAEE,OADAhO,QAAQC,IAAI,2CAEV,oBAAM4O,eAAN,Q,GArbsC7L,a,obCtHvBuP,G,iCAEjB,WAAY7T,GAAQ,IAAD,sBACf,cAAMA,IAiDV8T,qBAAuB,YAAa,IAAXzf,EAAU,EAAVA,KACrB,OACI,eAACmM,GAAA,EAAD,CAAWlB,QAAS,EAAKyU,kBAAkB1f,GAAO2f,QAASxa,GAAiB,IAA5E,SACI,eAAC,OAAD,CAAM+E,KAAa,QAANlK,EAAe,gBAAkB,aAAcgF,MAAOG,GAAiB,IAAKD,OAAQC,GAAiB,IAAKgF,KAAM7E,GAAOmE,MAAMnD,WAnDlJ,EAAKoG,MAAQ,CACT3M,KAAMX,IACNwgB,KAXItgB,OAAOC,WAAWC,MAAM,KACnB,GAWTuP,sBAAsB,EACtB8Q,SAAU,IAEd,EAAKH,kBAAoB,EAAKA,kBAAkB9S,KAAvB,QACzB,EAAKI,aAAe,EAAKA,aAAaJ,KAAlB,QACpB,EAAKmB,YAAc,EAAMA,YAAYnB,KAAlB,QACnB,EAAKkT,mBAAqB,EAAKA,mBAAmBlT,KAAxB,QAC1B,EAAKmT,WAAa,EAAKA,WAAWnT,KAAhB,QAZH,E,6CAenB,WACIK,QAAQC,IAAI,6C,kCAGhB,WACID,QAAQC,IAAI,+C,gCAGhB,WACI,OAAOE,KAAKV,Q,yBAGhB,SAAY5E,GAAM,IAAD,OACbsF,KAAKwG,SAAS,CAACiM,SAAU/X,IACzBuM,YAAY,kBAAM,EAAKT,SAAS,CAACiM,SAAU,OAAO,O,sBAGtD,WACI,OACI,eAAChW,GAAA,EAAD,CAAMC,MAAO,CAACxE,GAAOsC,OAAQwF,KAAKV,MAAMmT,SAAW,GAAK,CAACpX,OAAQ,EAAGrB,KAAM,EAAGlC,OAAQ,KAAMF,MAAO,KAAMgC,gBAAiB,cAAeD,YAAa,gBAArJ,SACI,eAACgD,GAAA,EAAD,CAAMD,MAAOxE,GAAOwC,IAApB,SAA0BsF,KAAKV,MAAMmT,e,+BAKjD,WAAgC,IAAd7f,EAAa,uDAAR,OACnB,SAASggB,IACL5S,KAAKzB,MAAMU,WAAWgB,UAAU,CAC5BC,gBAAiB,KACjBtB,aAAclM,EAAYsN,KAAKzB,MAAMsU,MAAMC,OAAOlU,aAAchM,KAGxE,OAAOggB,EAAgBpT,KAAKQ,Q,wBAWhC,WAAc,IAAD,OACT,EAAgDxC,oBAAS,GAAzD,WAAQuV,EAAR,KAAyBC,EAAzB,KACM/R,EAAYjB,KAAKzB,MAAMqN,SAASnL,kBAAoBT,KAAKV,MAAMqC,qBAC/DnD,EAAiB,CACnBC,aAAc,CAACC,KAAM,MAAO/L,KAAMX,IAAS2E,MAAO,OAGtD,OACI,eAACoI,GAAA,EAAD,CACAqC,UAAW,kBAAM8M,GAAY8E,EAAoB,MACjDnV,QAAS,WAAO,EAAKU,MAAMU,WAAWC,SAAU,eAAgBV,IAChE9B,MAAO,CAACxE,GAAOkD,WAAY,CAACxB,gBAAiBqH,EAAY,UAAc8R,EAAkB,QAAU,SACnG5R,SAAUF,EAJV,SAMEjB,KAAKzB,MAAMqN,SAASnL,kBACd,eAACa,EAAA,EAAD,CAAmBpI,MAAM,QAAQlB,KAAM,UAE3CgI,KAAKV,MAAMqC,qBACP,eAACL,EAAA,EAAD,CAAmBpI,MAAM,MAAMlB,KAAM,UAErC,eAAC,OAAD,CACA8E,KAAK,cACLlF,MAAOG,GAAiB,IACxBD,OAAQC,GAAiB,IACzBgF,KAAOgW,EAAkB,QAAU,UACnCrW,MAAOxE,GAAOoD,sB,0BAQ9B,WACI,IAAMoH,EAAY1C,KAAKzB,MAAMqN,SAAStL,KAAKmC,SAASD,cAAgB,OAAS,OAC7EtK,GAAOmE,MAAQ,CAACnD,MAAOwJ,K,oBAG3B,WACI7C,QAAQC,IAAI,0CACZE,KAAKJ,eAEL,IAAM6C,EAAWzC,KAAKzB,MAAMqN,SAAStL,KAAKmC,SACpCS,EAAkBT,EAASS,gBAC3BJ,EAAUL,EAASU,wBAA0BD,EAAoBT,EAASW,qBAAuBF,EAAgBiN,KAAKC,IAAMlN,EAAgBiN,KAAKE,QAAqB,KACtKzW,EAAkB6I,EAAS7I,gBAEjC,OACI,gBAACyL,EAAA,EAAD,CAAiBnI,OAAQ,CAACC,IAAK2F,GAASpG,MAAO,CAACxE,GAAOE,SAAU,CAACwB,gBAAiBA,IAAnF,UAEI,gBAAC0W,GAAA,EAAD,CAAY5T,MAAOxE,GAAO0C,WAA1B,UACQ,eAAC6B,GAAA,EAAD,CAAMC,MAAO,CAACxE,GAAO2C,QAArB,SACI,eAAC8B,GAAA,EAAD,CAAMD,MAAO,CAACxE,GAAOgD,aAAchD,GAAOmE,OAA1C,SAAoD,eAE5D,gBAACI,GAAA,EAAD,CAAMC,MAAOxE,GAAO6C,QAApB,UACI,gBAAC0B,GAAA,EAAD,CAAMC,MAAO,CAACxE,GAAOiD,QAASjD,GAAO4C,cAAe,CAACtB,gBAAiB,IAAtE,UACI,oBAAM6Y,qBAAN,CAA2BtW,KAAK,aAAanJ,KAAK,aAClD,gBAAC+J,GAAA,EAAD,CAAMD,MAAO,CAAC,CAAC1D,SAAUjB,GAAiB,KAAQG,GAAOmE,OAAzD,cAAoErG,EAAWgK,KAAKzB,MAAMsU,MAAMC,OAAOlU,cAAvG,OACA,oBAAMyT,qBAAN,CAA2BtW,KAAK,gBAAgBnJ,KAAK,YAEzD,eAAC,GAAD,CACA+L,YAAa,CACTC,aAAcoB,KAAKzB,MAAMsU,MAAMC,OAAOlU,aACtCsB,gBAAiBF,KAAKzB,MAAMsU,MAAMC,OAAO5S,gBACzCI,KAAMN,KAAKzB,MAAMqN,SAAStL,KAC1BG,kBAAmBT,KAAKzB,MAAMqN,SAASnL,kBACvCkB,qBAAsB3B,KAAKV,MAAMqC,sBAErC3C,YAAa,CACTC,WAAYe,KAAKzB,MAAMU,YAE3BsD,aAAcvC,KAAKzB,MAAMqN,SAASrJ,aAClCb,mBAAqB1B,KAAKwG,SAAShH,KAAKQ,MACxC0S,mBAAoB1S,KAAK0S,mBACzB/R,YAAeX,KAAKW,oBAK5B,oBAAMgS,WAAN,IACC3S,KAAKyS,kB,GA5IuB5P,a,oBCjB9BoQ,GALO,CAClBC,2BAA4B,0CAC5BC,0BAA2B,2C,+zDCM/Bjb,GAAOmE,MAAQ,GAAInE,GAAOoE,SAAW,GAKrC8W,KAAyBH,GAAcE,2BAEvC,IAGME,GAAQ,CAAC,cAAY,MAAO,UAAW,MAAO,YACvCC,GAAgB,CAAC,UAAW,UAAW,UAAW,UAAW,WACpEC,GAAiB,CAAC,uBAAwB,uBAAwB,yBAA0B,wBAAyB,sBAE9GC,GAAY,CAAC,gBAAiB,eAAgB,mBAAoB,iBAAkB,oBAG3FC,GAAqB,CAAE,iBAAkB,sBAAuB,iBAAkB,uBAClFC,GAAe,CAAC,WAAY,YAC5BC,GAAgB,CAAC,WAAY,iBAEnC,SAASC,GAAwB5V,GAE7B,IADA,IACA,EADI2O,EAAqB,GACzB,KAAqB3O,KAArB,aAA+B,CAC3B2O,EAD2B,QACA7P,OAAQ,EAEvC,OAAO6P,EAIX,IAAMkH,GAAY,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OACnFtf,GAAS,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAE5Euf,GAAe,CACjB,KAAM,UACN,KAAM,YACN,KAAM,WACN,KAAM,QACN,KAAM,OACN,KAAM,QACN,KAAM,QACN,KAAM,SACN,KAAM,WACN,GAAM,UACN,GAAM,WACN,GAAM,YAUV,SAAS9hB,KACL,IANqB+hB,EAMf9hB,EAAMC,OAAOC,WAAWC,MAAM,KAEpC,MADc,CAAEH,EAAI,IAPC8hB,EAOmB9hB,EAAI,GAN1BsC,GAAOsf,GAAU/gB,QAAQihB,KAMM9hB,EAAI,IAAKI,KAAK,KAInE,SAAS2hB,KAIL,OAFY9hB,OAAOC,WAAWC,MAAM,KACnB,GASrB,SAAS6hB,GAA6BthB,EAAM6f,GACxC,IANcjgB,EAMR2hB,EAAMvhB,EAAKP,MAAM,KACjB+hB,EAAIL,GAAcI,EAAI,IAC5B,OAPuB,MADT3hB,EAQG2hB,EAAI,IAPJ,GAAkB3hB,EAAaC,MAAM,EAAGD,EAAaE,QAC1DF,GAMgB,IAAM4hB,EAAI,IAAMD,EAAI,IAAM1B,EAAO,MAAQ,IAAMA,EAAKhgB,MAAM,EAAE,G,IAyDvE4hB,G,iCAEjB,WAAY7V,GAAQ,IAAD,sBACf,cAAMA,IAEDe,MAAQ,CACTgB,KAAM,EAAK/B,MAAMqN,SAAStL,KAE1B3N,KAAM,GACN2K,UAAW,GACX+W,QAAS,GACTC,UAAW,GACXC,WAAY,GAEZ1X,MAAM,EACN2X,aAAc,GACdxW,SAAU,GACVyW,YAAa,GACb9W,QAAS,GACT+W,SAAU,KACV1X,QAAS,KAETuE,cAAe,kBACfoT,gBAAgB,EAChBhI,mBAAoBiH,GAAwB,EAAKrV,MAAMqN,SAAStL,KAAKtC,UACrEgO,sBAAuB,EAAKzN,MAAMqN,SAAStL,KAAK2C,OAChD2R,6BAA6B,EAC7BjJ,oBAAoB,EACpBF,wBAAwB,EACxBC,sBAAsB,EACtBU,mBAAmB,EACnBP,yBAAyB,EAEzBgJ,mBAAoB,KACpBC,gBAAiB,KACjBpO,SAAU,IAGd,EAAKqO,gBAAkB,EAAKA,gBAAgBvV,KAArB,QACvB,EAAKwV,kBAAoB,EAAKA,kBAAkBxV,KAAvB,QACzB,EAAKiK,WAAa,EAAKA,WAAWjK,KAAhB,QAClB,EAAKoH,YAAc,EAAKA,YAAYpH,KAAjB,QACnB,EAAKyV,eAAiB,EAAKA,eAAezV,KAApB,QACtB,EAAK0V,YAAc,EAAKA,YAAY1V,KAAjB,QACnB,EAAK2V,gBAAkB,EAAKA,gBAAgB3V,KAArB,QACvB,EAAK4V,qBAAuB,EAAKA,qBAAqB5V,KAA1B,QAC5B,EAAK6V,kBAAoB,EAAKA,kBAAkB7V,KAAvB,QACzB,EAAK8V,cAAgB,EAAKA,cAAc9V,KAAnB,QACrB,EAAK+V,iBAAmB,EAAKA,iBAAiB/V,KAAtB,QACxB,EAAKgW,UAAY,EAAKA,UAAUhW,KAAf,QACjB,EAAKiW,YAAc,EAAKA,YAAYjW,KAAjB,QACnB,EAAKkW,kBAAoB,EAAKA,kBAAkBlW,KAAvB,QACzB,EAAKyN,eAAiB,EAAKA,eAAezN,KAApB,QACtB,EAAKmW,cAAgB,EAAKA,cAAcnW,KAAnB,QACrB,EAAKoW,yBAA2B,EAAKA,yBAAyBpW,KAA9B,QApDjB,E,6CAuDnB,WACIK,QAAQC,IAAI,oCACZE,KAAK+U,oB,6BAGT,WAAmB,IAAD,OACd,OACI,gBAACtY,GAAA,EAAD,CAAMC,MAAO,CAACxE,GAAOiD,QAAS,CAAC7C,eAAgB,kBAA/C,UACI,eAACyG,GAAA,EAAD,CAAWlB,QAAS,WAAO,EAAKU,MAAMU,WAAW4W,UAAWtD,QAASxa,GAAiB,IAAK2E,MAAOxE,GAAOkD,WAAzG,SACI,eAAC,OAAD,CAAM0B,KAAK,aAAaC,KAAM7E,GAAOmE,MAAMnD,MAAM,IAAKpB,OAAQC,GAAiB,IAAKH,MAAOG,GAAiB,QAEhH,gBAAC0E,GAAA,EAAD,CAAMC,MAAO,CAACxE,GAAO6R,sBAAuB,CAACnR,cAAe,MAAOL,WAAY,WAA/E,UACI,gBAACoE,GAAA,EAAD,CAAMD,MAAOxE,GAAO8R,cAApB,cAAsCiK,GAA6BjU,KAAKzB,MAAMsU,MAAMC,OAAOrU,aAAa9L,KAAMqN,KAAKV,MAAMhC,WAAzH,OACA,eAAC,OAAD,CAAMR,KAAK,OAAOC,KAAK,mBAAmBjF,OAAQC,GAAiB,IAAKH,MAAOG,GAAiB,SAEpG,eAACgH,GAAA,EAAD,CAAWlB,QAAS,WAAO,EAAK2I,SAAS,CAAC3J,MAAO,EAAKyC,MAAMzC,QAAU0V,QAASxa,GAAiB,IAAK2E,MAAOxE,GAAOkD,WAAnH,SACI,eAAC,OAAD,CAAM0B,KAAMkD,KAAKV,MAAMzC,KAAO,OAAS,eAAgBE,KAAMiD,KAAKV,MAAMzC,KAAO,OAAS3E,GAAOmE,MAAMnD,MAAM,IAAMpB,OAAQC,GAAiB,IAAKH,MAAOG,GAAiB,a,yBAMvL,WAAe,IAAD,OACV,OAAOsb,GAAMlc,KAAI,SAAC2e,EAAM3gB,GACpB,IAzMc4gB,EAyMRC,EAAW,EAAK1W,MAAMkV,cAAgBsB,EACtCnB,EAAiB,EAAKrV,MAAMqV,eAC5BsB,EAAW1C,GAAepe,GAChC,OACI,eAACsH,GAAA,EAAD,CAA0BC,MAAOxE,GAAOqR,WAAxC,SACI,eAAC,KAAD,CACAzM,KAAM0W,GAAUre,GAChB6C,KAAuBD,GAAjB4c,EAAkC,GAAOqB,EAA4B,GAAuB,IAClG9c,MAAQyb,GAA6BqB,EAAZC,GAjNnBF,EAiNsE,GAjN5D,CAAC,qBAAqBA,EAAtB,yBAAqDA,EAArD,2BAAsFA,EAAtF,0BAAsHA,EAAtH,uBAAmJA,EAAnJ,MAiNiE5gB,GACjF0I,QAAS,EAAKwX,kBAAkBS,MALzB,QAAQ3gB,Q,+BAY/B,SAAkB2gB,GACd,SAASI,IACDlW,KAAKV,MAAMkV,cAAcsB,EACzB9V,KAAKwG,SAAS,CAACgO,aAAc,KAAMG,gBAAgB,IAEnD3U,KAAKwG,SAAS,CAACgO,aAAcsB,EAAMnB,gBAAgB,IAI3D,OADAuB,EAAaA,EAAW1W,KAAKQ,Q,4BAIjC,SAAehC,GAAW,IAAD,OACrB,OAxHR,SAA0BmY,EAASC,GAC/B,IAAM1J,EAAOyJ,EAAQhf,KAAI,SAAAkf,GAAG,OAAIA,EAAID,MAC9BE,EAAa,KAAI5J,GAAM6J,OACzBC,EAAa,GAIjB,OAHAF,EAAWrhB,SAAQ,SAAAwhB,GACfD,EAAWrjB,KAAMgjB,EAAQzJ,EAAK5Z,QAAQ2jB,QAEnCD,EAiHIE,CAAiB1Y,EAAU,QAAQ7G,KAAK,SAAAgH,GAC3C,IAAMwY,EAAoB,EAAKrX,MAAMqN,mBAAmBxO,EAAQrB,MAChE,OACI,eAACiC,GAAA,EAAD,CAEAjG,MAAOqF,EAAQrB,KACfe,QAAS,EAAKuX,qBAAqBjX,EAAQrB,MAC3CuE,YAAa,EAAKuU,yBAAyBzX,EAAQrB,MACnD8Z,sBAAsB,EACtBzX,YAAY,EANZ,SAQI,eAACxC,GAAA,EAAD,CACAwC,YAAY,EAEZkC,YAAa,KACb3E,MAAO,CAACxE,GAAOwD,aAAc,CACzB9B,gBAAiB+c,EAAoB,YAAc,UACnDzd,MAAOyd,EAAoB,OAAS,SANxC,SAUKxY,EAAQrB,QAjBZ,WAAaqB,EAAQrB,W,kCAwBtC,SAAqBqB,GACjB,SAAS0Y,IACL7W,KAAKwG,SAAS,CACVmG,mBAAmB,SACZ3M,KAAKV,MAAMqN,oBADA,UAEbxO,GAAW6B,KAAKV,MAAMqN,mBAAmBxO,OAKtD,OADA0Y,EAAgBA,EAAcrX,KAAKQ,Q,sCAIvC,SAAyB7B,GACrB,SAAS0Y,IACD7W,KAAKV,MAAM8M,mBACXpM,KAAK2V,cAAcxX,GAI3B,OADA0Y,EAAgBA,EAAcrX,KAAKQ,Q,yBAIvC,WAAe,IAAD,OACV,OACI,eAACsF,GAAA,EAAD,CACAwR,WAAS,EACTC,eAAa,EACbxR,YAAY,kBACZ0G,qBAAqB,wBACrBxG,aAAc,SAAAlL,GAAI,OAAI,EAAKiM,SAAS,CAACiO,YAAala,KAClDqL,MAAO5F,KAAKV,MAAMmV,YAClB/X,MAAO,CAACxE,GAAOsR,WAAYtR,GAAOmE,W,2BAM1C,SAAc2a,EAAaC,EAAeC,GACtC,GAAIlX,KAAKV,MAAMiC,gBAAkByV,EAAa,CAC1C,GAAmB,iBAAfA,EAA0B,CAC1B,MA9NhB,SAAqBhZ,GAGjB,IAH2C,IAG3C,EAH2BiF,EAAe,uDAAR,OAC9BkU,EAA4B,QAARlU,EAAiB,CAAC,GAAG,GAAG,GAAG,IAAgB,UAARA,EAAmB,CAAC,IAAM,CAAC,GAAG,IACrFmU,EAAwB,QAARnU,EAAiBwQ,GAA+B,QAARxQ,EAAiByQ,GAAwB,UAARzQ,EAAmB,CAAC,IAAM0Q,GACvH,KAAoB3V,KAApB,aAA8B,CAAC,IAAtBG,EAAqB,QACd,QAAR8E,EACkB,YAAd9E,EAAQO,KACY,YAAhBP,EAAQ0O,OACRsK,EAAkB,GAAlB,eAA4BA,EAAkB,IAA9C,CAAkDhZ,IAC7B,iBAAhBA,EAAQ0O,SACbsK,EAAkB,GAAlB,eAA4BA,EAAkB,IAA9C,CAAkDhZ,KACjC,YAAdA,EAAQO,OACK,YAAhBP,EAAQ0O,OACRsK,EAAkB,GAAlB,eAA4BA,EAAkB,IAA9C,CAAkDhZ,IAC7B,iBAAhBA,EAAQ0O,SACbsK,EAAkB,GAAlB,eAA4BA,EAAkB,IAA9C,CAAkDhZ,MAE3C,QAAR8E,EACW,YAAd9E,EAAQO,KACRyY,EAAkB,GAAlB,eAA4BA,EAAkB,IAA9C,CAAkDhZ,IAC/B,YAAdA,EAAQO,OACbyY,EAAkB,GAAlB,eAA4BA,EAAkB,IAA9C,CAAkDhZ,KACvC,UAAR8E,EACa,YAAhB9E,EAAQ0O,OACRsK,EAAkB,GAAlB,eAA4BA,EAAkB,IAA9C,CAAkDhZ,IAC7B,iBAAhBA,EAAQ0O,SACbsK,EAAkB,GAAlB,eAA4BA,EAAkB,IAA9C,CAAkDhZ,KACvC,UAAR8E,IACPkU,EAAkB,GAAlB,eAA4BA,EAAkB,IAA9C,CAAkDhZ,KAG1D,MAAO,CAACgZ,EAAmBC,GAgM4BC,CAAYrX,KAAKzB,MAAMqN,SAAStL,KAAKtC,SAAUgC,KAAKV,MAAM0M,uBAArG,WAAOmL,EAAP,KAA0BC,EAA1B,KACA,OACI,uCACMD,EAAkBhgB,KAAI,SAAC6G,EAAU7I,GAAX,OACpB,gBAACsH,GAAA,EAAD,CAAqCC,MAAO,CAAC9E,MAAO,OAAQW,WAAY,SAAUsR,eAAgB9R,GAAiB,KAAnH,UACMqf,EAAcjiB,GACV,eAACwH,GAAA,EAAD,CAAMD,MAAO,CAAC1D,SAAUjB,GAAiB,IAAKmB,MAAOhB,GAAOmE,MAAMnD,MAAO2Q,eAAgB9R,GAAiB,IAA1G,SAAgHqf,EAAcjiB,KAC9H,KAEN,eAACsH,GAAA,EAAD,CAAkBC,MAAO,CAACxE,GAAOiD,QAAS8b,GAA1C,SACKC,EAAgBlZ,IADV7I,KALJ,iBAAmBA,MAUlC,eAAC,GAAD,YACI6K,KAAKzB,OACLyB,KAAKV,OAFT,IAGA6M,eAAgBnM,KAAKwG,SAAShH,KAAKQ,MACnCiN,eAAgBjN,KAAKiN,eACrBtM,YAAaX,KAAK4G,kBAM1B,OACI,eAACnK,GAAA,EAAD,CAAMC,MAAO,CAACxE,GAAOiD,QAAS8b,GAA9B,SACKC,IAKb,OACI,iC,uBAKZ,SAAUF,EAAajb,EAAMkb,EAAeC,GACxC,OACI,gBAACza,GAAA,EAAD,CAAMC,MAAO,CAACxE,GAAOoB,MAArB,UACI,gBAACyF,GAAA,EAAD,CAAWrC,MAAOxE,GAAOiD,QAAS0C,QAASmC,KAAKuV,iBAAiByB,GAAjE,UACI,eAAC,OAAD,CAAMla,KAAMf,EAAMgB,KAAM7E,GAAOmE,MAAMnD,MAAM,IAAKpB,OAAQC,GAAiB,IAAKH,MAAOG,GAAiB,IAAK2E,MAAOxE,GAAO8D,YACzH,gBAACW,GAAA,EAAD,CAAMwC,YAAY,EAAOzC,MAAOxE,GAAOoR,WAAvC,cAAqD0N,EAArD,UAEHhX,KAAKsV,cAAc0B,EAAaC,EAAeC,Q,8BAK5D,SAAkBvgB,GACd,SAAS2gB,IACLtX,KAAKwG,SAAU,CAACjF,cAAgBvB,KAAKV,MAAMiC,gBAAkB5K,EAAQ,KAAOA,IAGhF,OADA2gB,EAAcA,EAAY9X,KAAKQ,Q,sBAInC,WACI,OACE,eAACvD,GAAA,EAAD,CAAMC,MAAO,CAACxE,GAAOC,MAAMqC,OAAQwF,KAAKV,MAAMoH,SAAW,GAAK,CAAC5O,OAAQ,EAAG8B,gBAAiB,cAAeD,YAAa,gBAAvH,SACE,eAACgD,GAAA,EAAD,CAAMD,MAAOxE,GAAOC,MAAMuC,IAA1B,SAAgCsF,KAAKV,MAAMoH,e,yBAKnD,SAAYhM,GAAM,IAAD,OACbsF,KAAKwG,SAAS,CAACE,SAAUhM,IACzBuM,YAAY,kBAAM,EAAKT,SAAS,CAACE,SAAU,OAAO,O,6BAGtD,wCAAAlF,EAAAC,OAAA,gDACUhD,EAAeuB,KAAKzB,MAAMsU,MAAMC,OAAOrU,aACvC6B,EAAON,KAAKzB,MAAMqN,SAAStL,KAFrC,KAGY7B,EAAaC,KAHzB,OAIa,QAJb,OAkBa,gBAlBb,QA2Ba,SA3Bb,+BAKYmB,QAAQC,IAAI,wFACZE,KAAKwG,SAAS,CACV7T,KAAM8L,EAAa9L,KACnB2K,UAAW0W,KACXK,QAAS,GACTO,6BAA6B,IAV7C,WAAApT,EAAA,MAYkBxB,KAAKuX,0BAZvB,0BAAA/V,EAAA,MAakBxB,KAAKwX,sBAbvB,2BAAAhW,EAAA,MAckBxB,KAAKyX,gBAdvB,eAeYzX,KAAKwG,SAAS,CAACoO,6BAA6B,IAfxD,oCAmBY/U,QAAQC,IAAI,uEAAyErB,EAAa9L,MAClGqN,KAAKwG,SAAS,CACV7T,KAAM8L,EAAa9L,KACnB2K,UAAW,GACX+W,QAAS,KAvBzB,6BA+BY,IAHM1d,EAAQ8H,EAAa9H,MACrB+gB,EAAkB/gB,EAAMqH,SAAS7G,KAAI,SAAAgH,GAAO,OAAIA,EAAQrB,QAC1D6a,EAAwB,GAC5B,KAAqBrX,EAAKtC,YAA1B,aAAUG,EAA2B,QACjCwZ,EAAsBxZ,EAAQrB,MAAQ4a,EAAgBxkB,SAASiL,EAAQrB,MAhCvF,OAmCYkD,KAAKwG,SAAS,CACV7T,KAAMgE,EAAMhE,KACZ2K,UAAW3G,EAAM2G,UACjB+W,QAAS1d,EAAM0d,QACfC,UAAW3d,EAAM2d,UACjBC,WAAY5d,EAAM4d,WAClB1X,KAAMlG,EAAMkG,KACZ2X,aAAc7d,EAAMiG,KACpB+P,mBAAoBgL,EACpBlD,YAAa9d,EAAM0H,OACnBV,QAAShH,EAAMgH,QACf+W,SAAU/d,EAAM+d,SAChB1X,QAASrG,EAAMqG,QACf2X,gBAAgB,IAhDhC,wH,4BAyDA,WAAkB,IAAD,OACb9U,QAAQC,IAAI,iDACZE,KAAKwG,SAAS,CAACqF,yBAAyB,IACxC,IAAMvL,EAAON,KAAKzB,MAAMqN,SAAStL,KAE3BsX,EAAcnL,OAAOC,KAAK1M,KAAKV,MAAMqN,oBACrC+K,EAAkBpX,EAAKtC,SAAS7G,KAAI,SAAAgH,GAAO,OAAIA,EAAQrB,QAGvD+a,EAAsBjE,GAFR8D,EAAgBzgB,QAAO,SAAAkH,GAAO,OAAIyZ,EAAY1kB,SAASiL,OAG3EyZ,EAAY3iB,SAAQ,SAAAkJ,GACZuZ,EAAgBxkB,SAASiL,KACzB0Z,EAAoB1Z,GAAW,EAAKmB,MAAMqN,mBAAmBxO,OAGrE6B,KAAKwG,SAAS,CAEVmG,mBAAoBkL,EACpBhM,yBAAyB,M,wBAIjC,WACI,IAQI3S,EARE+M,EACFjG,KAAKV,MAAMsV,4BACX5U,KAAKV,MAAMqM,mBACX3L,KAAKV,MAAMoM,qBACX1L,KAAKV,MAAMmM,uBACXzL,KAAKzB,MAAMqN,SAASnL,kBACpBT,KAAKV,MAAMuM,wBAGf,QAAQ,GACJ,KAAK7L,KAAKV,MAAMsV,4BAIhB,KAAK5U,KAAKV,MAAMqM,mBACZzS,EAAQ,OACR,MACJ,KAAK8G,KAAKV,MAAMoM,qBACZxS,EAAQ,QACR,MACJ,KAAK8G,KAAKV,MAAMmM,uBACZvS,EAAQ,MACR,MACJ,KAAK8G,KAAKzB,MAAMqN,SAASnL,kBACrBvH,EAAQ,OACR,MACJ,KAAK8G,KAAKV,MAAMuM,wBACZ3S,EAAQ,QAMhB,OACI,eAAC6F,GAAA,EAAD,CACAlB,QAASmC,KAAKgV,kBACd7T,SAAU8E,EACVvJ,MAAO,CAACxE,GAAOuR,WAAY,CAAC7P,gBAAiBqM,EAAgB,QAAU,SAHvE,SAKMA,EACE,eAAC3E,EAAA,EAAD,CAAmBtJ,KAAK,QAAQkB,MAAOA,IAEvC,eAACyD,GAAA,EAAD,CAAMwC,YAAY,EAAOzC,MAAOxE,GAAO0R,gBAAvC,0B,+BAMhB,WAAqB,IAAD,OAChB,IAAK5J,KAAKV,MAAMkV,aAGZ,OAFAxU,KAAK4G,YAAY,qDACjB5G,KAAKwG,SAAS,CAACjF,cAAe,oBAGlC,IAEI+S,EAAWD,EAFT5V,EAAeuB,KAAKzB,MAAMsU,MAAMC,OAAOrU,aACzC8V,EAAaP,KAEjB,OAAQvV,EAAaC,MACjB,IAAK,MACD2V,EAAUE,EACVD,EAAYC,EACZ,MACJ,IAAK,cACDF,EAAUrU,KAAKV,MAAM+U,QACrBC,EAAYC,EACZ,MACJ,IAAK,OACDF,EAAUrU,KAAKV,MAAM+U,QACrBC,EAAYtU,KAAKV,MAAMgV,UAK/B,IAAMwD,EAAe,CACjBnlB,KAAMqN,KAAKV,MAAM3M,KACjB2K,UAAW0C,KAAKV,MAAMhC,UACtB+W,QAASA,EACTC,UAAWA,EACXC,WAAW,GAAD,YAAOvU,KAAKV,MAAMiV,YAAlB,CAA8B,CAAC5hB,KAAMX,KAASwgB,KAAM+B,KAC9D1X,KAAMmD,KAAKV,MAAMzC,KACjBD,KAAMoD,KAAKV,MAAMkV,aACjBxW,SAAUgC,KAAKzB,MAAMqN,SAAStL,KAAKtC,SAAS/G,QAAQ,SAAAkH,GAAO,OAAI,EAAKmB,MAAMqN,mBAAmBxO,EAAQrB,SACrGuB,OAAQ2B,KAAKV,MAAMmV,YACnB9W,QAASqC,KAAKV,MAAM3B,QACpB+W,SAAU1U,KAAKV,MAAMoV,SACrB1X,QAASgD,KAAKV,MAAMtC,SAExBgD,KAAK0V,kBAAkBoC,K,+BAG3B,SAAwBC,GAAxB,yBAAAvW,EAAAC,OAAA,uDACIzB,KAAKwG,SAAS,CAAEmF,oBAAoB,IAChCrL,EAAON,KAAKzB,MAAMqN,SAAStL,KACzB7B,EAAeuB,KAAKzB,MAAMsU,MAAMC,OAAOrU,aACvCuZ,EAAiC,SAAtBvZ,EAAaC,KAJlC,SAMQmB,QAAQC,IAAI,iCACRmY,EAAsB,CAACpW,IAAI,EAAOC,OAAQ,MAAOO,WAAY,yBAC3D0K,EAAoB,CACtB5K,OAAQ6V,EAAU,MAAQ,OAC1BnU,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAW+T,IAblC,YAAAvW,EAAA,MAgBoCU,MAAOF,mDAA0B1B,EAAK2B,SAAW,YAAc+V,EAAW,IAAIvZ,EAAa9H,MAAMwJ,IAAM,IAAK4M,IAhBhJ,WAgBQkL,EAhBR,OAiBcC,EAAsB,WAAaD,EAAoBnW,OAAS,KAAOmW,EAAoB5V,YAE7F4V,EAAoBpW,GAnBhC,iBAoBYhC,QAAQC,IAAI,kCACZD,QAAQC,IAAIoY,GArBxB,8BAwBYrY,QAAQC,IAAI,gDACN,IAAIwC,MAAM4V,GAzB5B,0DA6BQlY,KAAK4G,YAAY,wCACjB/G,QAAQC,IAAI,mBACZD,QAAQC,IAAR,MA/BR,yBAkCQD,QAAQC,IAAI,gCACZE,KAAKwG,SAAS,CAAEmF,oBAAoB,IAChCsM,EAAoBpW,KACpBhC,QAAQC,IAAI,6EACZE,KAAKzB,MAAMqN,SAASrJ,eAKpBvC,KAAKzB,MAAMU,WAAWC,SAAS,YAAa,CACxCgB,gBAAiB,KACjBtB,aAAcmZ,EAASplB,QA7CvC,sF,2BAmDA,SAAoBwL,GAApB,qBAAAqD,EAAAC,OAAA,uDACIzB,KAAKwG,SAAS,CAAEiF,wBAAwB,IACpCnL,EAAON,KAAKzB,MAAMqN,SAAStL,KAFnC,SAIQT,QAAQC,IAAI,qCACRgN,EAAoB,CAACjL,IAAI,EAAOC,OAAQ,MAAOO,WAAY,yBACzD0K,EAAoB,CACtB5K,OAAQ,SACR0B,QAAS,CACL,eAAgB,qBAThC,WAAArC,EAAA,MAakCU,MAAOF,mDAA0B1B,EAAK2B,SAAW,aAAe9D,EAAS4O,IAb3G,UAaQD,EAbR,OAccE,EAAoB,WAAaF,EAAkBhL,OAAS,KAAOgL,EAAkBzK,YAEvFyK,EAAkBjL,GAhB9B,iBAiBYhC,QAAQC,IAAI,sCACZD,QAAQC,IAAIkN,GAlBxB,8BAqBYnN,QAAQC,IAAI,oDACN,IAAIwC,MAAM0K,GAtB5B,0DA0BQhN,KAAK4G,YAAY,wCACjB/G,QAAQC,IAAI,mBACZD,QAAQC,IAAR,MA5BR,qBA+BQD,QAAQC,IAAI,oCACZE,KAAKwG,SAAS,CAAEiF,wBAAwB,KACpCqB,EAAkBjL,GAjC9B,oCAAAL,EAAA,MAkCkBxB,KAAKzB,MAAMqN,SAASrJ,gBAlCtC,QAmCYvC,KAAKiN,iBAnCjB,qG,0BAwCA,sCAAAzL,EAAAC,OAAA,6DAEYzB,KAAKV,MAAMwV,gBAFvB,wBAGYjV,QAAQC,IAAI,qCACNqY,EAASnY,KAAKV,MAAMwV,gBACpBrR,EAAc,CAChB2U,IAAKD,EAAOE,SACZC,IAAKH,EAAOI,UACZC,MAAO,UAEL5U,EAAe,CACjBzB,OAAQ,OACR0B,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CACjBP,YAAaA,KAhBjC,WAAAjC,EAAA,MAmBmCU,MAAMF,wDAA8B4B,IAnBvE,UAmBkB6U,EAnBlB,OAoBkBC,EAAY,WAAaD,EAAS3W,OAAS,kBAAoB2W,EAASpW,WACzEoW,EAAS5W,GArB1B,uBAsBsB,IAAIS,MAAMoW,GAtBhC,2BAAAlX,EAAA,MAwBsCiX,EAASvU,QAxB/C,QAwBsBlH,EAxBtB,OAyBgB6C,QAAQC,IAAI,qCACN6Y,EAAc,CAChBR,OAAQnb,EAAQ4b,MAChB9b,KAAME,EAAQF,KACdE,QAASA,EAAQA,QAAQ,GACzBI,KAAMJ,EAAQI,KACdyb,OAAQ7b,EAAQ6b,OAChBC,KAAM9b,EAAQ8b,KACdC,WAAY/b,EAAQ+b,YAExB/Y,KAAKwG,SAAS,CAACxJ,QAAS2b,IAnCxC,gCAuCQ9Y,QAAQC,IAAI,uEAvCpB,0DA0CQE,KAAK4G,YAAY,wFACjB/G,QAAQC,IAAI,iDACZD,QAAQC,IAAR,MA5CR,yBA+CQD,QAAQC,IAAI,mCA/CpB,sF,oCAoDA,oBAAA0B,EAAAC,OAAA,gEAGQ5B,QAAQC,IAAI,qEAHpB,WAAA0B,EAAA,MAI4B4R,QAJ5B,cAUYvT,QAAQC,IAAI,mEAHZD,QAAQC,IAAI,4EACZE,KAAK4G,YAAY,kJAR7B,gDAcQ5G,KAAK4G,YAAY,oHACjB/G,QAAQC,IAAI,+GAfpB,yBAkBQD,QAAQC,IAAI,wCAlBpB,qF,gCAuBA,sCAAA0B,EAAAC,OAAA,4DAI8C,YAAlCzB,KAAKV,MAAMuV,mBAJvB,gBAKYhV,QAAQC,IAAI,mFALxB,8BAOYD,QAAQC,IAAI,kEAPxB,WAAA0B,EAAA,MAQmC4R,QARnC,mBAQkBtR,EARlB,EAQkBA,OAEN9B,KAAKwG,SAAS,CAACqO,mBAAoB/S,IAEpB,YAAXA,EAZhB,wBAagBjC,QAAQC,IAAI,2DACZE,KAAK4G,YAAY,gKAdjC,2BAkBgB/G,QAAQC,IAAI,uDAlB5B,eAsBQD,QAAQC,IAAI,uEAtBpB,YAAA0B,EAAA,MAuB+B4R,QAvB/B,sBAuBc+E,EAvBd,EAuBcA,QAvBd,wBA0BYtY,QAAQC,IAAR,yEAAqFuY,EAArF,eAA4GE,GAC5G1Y,QAAQC,IAAI,mEACZE,KAAKwG,SAAS,CAACsO,gBAAiBqD,IACxBE,EAAwBF,EAAxBE,SAAUE,EAAcJ,EAAdI,UA7B9B,YAAA/W,EAAA,MA8BiC4R,KAA6B,CAAEiF,WAAUE,eA9B1E,SA8BgBE,EA9BhB,SAiCgB5Y,QAAQC,IAAI,wFACZE,KAAKwG,SAAS,CAAE7I,SAlqBVqb,EAkqBoCP,EAAS,IAhqB7DO,EAAKC,OAASD,EAAKC,OAAS,KAAO,KACnCD,EAAKE,aAAeF,EAAKE,aAAe,MAAQ,KAChDF,EAAKG,SAAWH,EAAKG,SAAW,KAAO,KACvCH,EAAKI,UAAYJ,EAAKI,UAAY,KAAO,KACzCJ,EAAKK,OAASL,EAAKK,OAAS,KAAO,KACnCL,EAAKM,eAAiBN,EAAKM,eAAiB,IAAQ,KA2pBc5E,SAAU,CAAE3a,SAAUoe,EAAQxa,QAAS8a,EAAS,QAGxG5Y,QAAQC,IAAI,sFACZD,QAAQC,IAAI2Y,IAtC5B,wBAyCY5Y,QAAQC,IAAR,6GAzCZ,0DA4CQE,KAAK4G,YAAY,sFACjB/G,QAAQC,IAAI,uEACZD,QAAQC,IAAR,MA9CR,yBAiDQD,QAAQC,IAAI,0FAjDpB,+CAhoBJ,IAA0BkZ,IAgoBtB,oC,0BAqDA,WAII,IAHA,IAAMxW,EAAgBxC,KAAKzB,MAAMqN,SAAStL,KAAKmC,SAASD,cAClDE,EAAYF,EAAgB,OAAS,OACrCG,EAAeH,EAAgB,OAAS,OAC9C,MAAkB,CAAC,QAAS,cAA5B,eAA2C,CAAtC,IAAI9F,EAAK,KACVxE,GAAOwE,GAAP,SAAqBxE,GAAOwE,IAA5B,IAAoCxD,MAAOwJ,IAE/CxK,GAAOoE,SAASpD,MAAQyJ,EACxBzK,GAAOoE,SAAS1C,gBAAkB+I,I,oBAGtC,WACI9C,QAAQC,IAAI,sCACZE,KAAKJ,eACL,IAAM6C,EAAWzC,KAAKzB,MAAMqN,SAAStL,KAAKmC,SACpC7I,EAAkB6I,EAAS7I,gBAC3BsJ,EAAkBT,EAASS,gBAC3BJ,EAAUL,EAASU,wBAA0BD,EAAoBT,EAASW,qBAAuBF,EAAgBiN,KAAKC,IAAMlN,EAAgBiN,KAAKE,QAAqB,KAC5K,OACI,gBAAChL,EAAA,EAAD,CAAiBnI,OAAQ,CAAC,IAAQ4F,GAASpG,MAAO,CAACxE,GAAOE,SAAU,CAACwB,gBAAiBA,IAAtF,UACI,eAAC0W,GAAA,EAAD,CAAY5T,MAAOxE,GAAO0C,WAA1B,SACI,gBAAC6B,GAAA,EAAD,CAAMC,MAAOxE,GAAO6C,QAApB,UACSiF,KAAKmV,kBACLnV,KAAKwV,UAAU,kBAAa,eAAgB,CAACld,eAAgB,iBAAkB0H,KAAKkV,eACpFlV,KAAKwV,UAAU,gBAAW,2BAA4B,CAACvX,SAAU,OAAQ3F,eAAgB,UAAW0H,KAAKiV,gBACzGjV,KAAKwV,UAAU,SAAU,OAAQ,CAAC5c,cAAe,SAAUC,UAAWd,GAAiB,MAAOiI,KAAKyV,oBAGhH,oBAAMhM,WAAN,IACCzJ,KAAK0G,kB,GA5pB0B7D,a,mqBCzIhD,IAAM0W,GAA6B,WAAjB/hB,KAKlB,SAASgiB,GAAgB1c,GACvB,OAAOmN,GAAWnN,EAAK1K,MAAM,KAAKC,KAAK,MASzC,IAAM6F,GAAS,CACbE,SAAU,CACRN,OAAQ,OACRF,MAAO,QAGT6hB,WAAY,CACV3hB,OAAQ,OACRF,MAAO,QAETkW,GAAI,CACF9U,SAAU,GACVG,UAAW,UAGb0B,OAAQ,CACNd,SAAU,WACV+D,IAAK,EACLtF,WAAYC,KAAUC,cACtBd,MAAO,OACPE,OAAQ,MACR8B,gBAAiB,wBACjBtB,eAAgB,eAChBC,WAAY,UAEdmhB,YAAa,CAEX9hB,MAAO,MACPoB,SAAU,GACVG,UAAW,SACXJ,UAAW,UAEb+I,OAAQ,CACNlI,gBAAiB,mBACjBhC,MAAO,OACPE,OAAQ,MACR4B,aAAc,GACdnB,WAAY,SACZD,eAAgB,UAElB+J,WAAY,CACVrJ,SAAU,GACVE,MAAO,SAETygB,MAAO,CACL/hB,MAAO,OACPE,OAAQ,OACRS,WAAY,SACZD,eAAgB,WAIpB,SAAeshB,GAAYC,EAAU/G,GAArC,qBAAAtR,EAAAC,OAAA,uDACE5B,QAAQC,IAAI,0CACNga,EAAY,CAChB3X,OAAQ,OACR0B,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CACnB6V,SAAUA,EACVpW,YAAaqP,KATnB,oBAAAtR,EAAA,MAcmBU,MAAMF,yDAA+B8X,IAdxD,YAcIC,EAdJ,QAeelY,GAff,wBAgBMhC,QAAQC,IAAR,gDAhBN,YAAA0B,EAAA,MAsC0BuY,EAAO7V,QAtCjC,WAsCM8V,EAtCN,SAuCMC,EAAUD,EAAYvnB,QAvC5B,wBAyCQoN,QAAQC,IAAR,8DAA0Ema,EAA1E,cAzCR,kBA0CeD,GA1Cf,eA6CQna,QAAQC,IAAR,qEACAD,QAAQC,IAAIka,GA9CpB,kBA+Ce,MA/Cf,gCAkDMna,QAAQC,IAAR,0DAAsEia,EAAOjY,OAA7E,WAA8FiY,EAAO1X,WAArG,MAlDN,iEAqDIxC,QAAQC,IAAI,+DACZD,QAAQC,IAAR,MAtDJ,kBAuDW,MAvDX,iEA2DA,IAAMoa,GAAO,SAAC3b,GACZ,IAAM4b,EAAmC,mBAApB5b,EAAMsU,MAAM/V,KAC3Bsd,EAAWD,EAAe5b,EAAMuX,KAAKuE,YAAYlK,KAAKE,QAAU9R,EAAMuX,KAAK3F,KAAKE,QAChFiK,EAAiBH,EAAe,aAAe,gBAE/CtiB,EAAe0G,EAAMgc,cAA+B,OAAfjjB,IAASC,GAAckB,KAAUC,cAAgB,GACtF8hB,EAAcL,EAAiBZ,GAAY1hB,EAAa,EAAKA,EAAa,EAAoBA,EAAa,EAC3G4iB,EAAaN,GAAiBZ,GAAY,aAAuC,MACvF,OACE,eAACxa,GAAA,EAAD,CACElB,QAAS,kBAAMU,EAAMU,WAAWC,SAAUob,EAAiB,CAAEI,cAAenc,EAAMuX,QAClFpZ,MAAO,CAAC,CAAE7D,UAAW,GAAIf,OAAQ0iB,EAAa5iB,MAAO6iB,EAAYE,OAAQ,IAF3E,SAIE,eAACtV,EAAA,EAAD,CAAiBnI,OAAQ,CAAEC,IAAMid,GAAY1d,MAAOxE,GAAOyhB,MAA3D,SACE,eAAChd,GAAA,EAAD,CAAMD,MAAO,CAACxE,GAAO4V,GAAI,CAAClW,MAAO,MAAOsB,MAAO,QAASH,UAAW,WAAnE,SAAiFohB,EAAeX,GAAgBjb,EAAMuX,KAAK8E,MAAQ,UAM9HC,GAAb,iCAEE,WAAYtc,GAAQ,IAAD,sBACjB,cAAMA,IAwDRuc,WAAa,gBAAGhF,EAAH,EAAGA,KAAH,OACX,eAAC,G,mWAAD,EAAMA,KAAMA,EAAMyE,aAAc,EAAKjb,MAAMib,cAAkB,EAAKhc,SA1DjD,EAmGnBwc,UAAY,WAYV,OAVAC,qBAAU,WACR,IAAMC,EAAevjB,KAAWwjB,iBAAiB,UAAU,YAAyB,IAAtBC,EAAqB,EAArBA,OAAqB,EAAbC,OACrCC,KAAKC,IAAI,EAAKhc,MAAMib,aAAaY,EAAOrjB,QACzC,KAC5B,EAAK0O,SAAS,CAAC+T,aAAcY,EAAOrjB,YAGxC,OAAO,wBAAMmjB,OAAN,EAAMA,EAAcM,aAI3B,eAACC,GAAA,EAAD,CACEC,KAAO,EAAKnc,MAAMoc,OAClBZ,WAAa,EAAKA,WAClBa,aAAe,SAAA7F,GAAI,OAAIA,EAAK7Q,IAC5B2W,WAAarC,GAAY,EAAK,EAC9BsC,mBAAqB,KACrBC,aAAwC,mBAAzB,EAAKvd,MAAMsU,MAAM/V,KAA4B,KAAO,EAAKif,wBACxEC,WAAa,EAAK1c,MAAM2c,mBArH5B,EAAK3c,MAAM,CACToc,OAAQ,KACRQ,KAAM,KACN3B,aAAc7iB,KAAWC,IAAI,UAAUG,OACvCmkB,iBAAiB,EACjBE,YAAY,GAEd,EAAKC,sBAAwB,EAAKA,sBAAsB5c,KAA3B,QAC7B,EAAK6c,qBAAuB,EAAKA,qBAAqB7c,KAA1B,QAC5B,EAAK8c,iBAAmB,EAAKA,iBAAiB9c,KAAtB,QACxB,EAAKsb,WAAa,EAAKA,WAAWtb,KAAhB,QAClB,EAAKub,UAAY,EAAKA,UAAUvb,KAAf,QACjB,EAAK+c,eAAiB,EAAKA,eAAe/c,KAApB,QACtB,EAAKuc,wBAA0B,EAAKA,wBAAwBvc,KAA7B,QAfd,EAFrB,6CAoBE,WACEK,QAAQC,IAAI,uCAEZE,KAAKoc,0BAvBT,mCA0BE,gCAAA5a,EAAAC,OAAA,mDACEzB,KAAKwG,SAAS,CAACyV,iBAAiB,IAEhB,oBADZpJ,EAAQ7S,KAAKzB,MAAMsU,OACb/V,KAHZ,kCAAA0E,EAAA,MAI4BoY,GAAY,SAAU,CAACsC,KAAM,EAAGM,SAAU,GAAIC,SAAU,cAJpF,OAIQC,EAJR,OAKI1c,KAAKwG,SAAS,CAACkV,OAAQgB,IAL3B,8BAQQ7C,EARR,UAQ6BhH,EAAMC,OAAO4H,cAAczV,GARxD,sBAAAzD,EAAA,MAS4BoY,GAAYC,EAAU,CAACqC,KAAM,EAAGM,SAAU,GAAIC,SAAU,UAAWE,YAAa,cAT5G,QASQD,EATR,OAUI1c,KAAKwG,SAAS,CAACkV,OAAO,CAAG7I,EAAMC,OAAO4H,cAAcL,aAA/B,YAA+CqC,IAAeR,KAAM,IAV7F,QAYElc,KAAKwG,SAAS,CAACyV,iBAAiB,IAZlC,+DA1BF,qCAyCE,4BAAAza,EAAAC,OAAA,uDACE5B,QAAQC,IAAI,6CACZE,KAAKwG,SAAS,CAACyV,iBAAiB,IAC5BpC,EAHN,UAG2B7Z,KAAKzB,MAAMsU,MAAMC,OAAO4H,cAAczV,GAHjE,qBAAAzD,EAAA,MAI0BoY,GAAYC,EAAU,CAACqC,KAAMlc,KAAKV,MAAM4c,KAAK,EAAGM,SAAU,GAAIC,SAAU,UAAWE,YAAa,cAJ1H,QAIMD,EAJN,SAMI7c,QAAQC,IAAI,8CACZE,KAAKwG,UAAS,SAACoW,GAAD,MAAgB,CAC1BlB,OAAO,GAAD,YAAOkB,EAAUlB,QAAjB,KAA4BgB,IAClCR,KAAMU,EAAUV,KAAK,OAGzBrc,QAAQC,IAAI,0CAEZD,QAAQC,IAAI,4CACZE,KAAKwG,SAAS,CAACyV,iBAAiB,IAfpC,8DAzCF,8BA+DE,WAAqB,IAAD,OACZE,EAAanc,KAAKV,MAAM6c,WACxBhC,EAAwC,mBAAzBna,KAAKzB,MAAMsU,MAAM/V,KACtC,OACGqf,EAQC,KAPA,eAACpd,GAAA,EAAD,CACArC,MAAO,CAAExE,GAAO2C,OAAQ,CAAC/C,OAAQqiB,EAAe,MAAQ,QACxDtc,QAAS,WAAO,EAAK2I,SAAS,CAAE2V,YAAY,IAAStc,QAAQC,IAAI,4BAFjE,SAIE,oBAAMuc,qBAAN,CAA2BF,WAAYA,QAxEjD,kCAgFE,WACE,IAAMhC,EAAsC,mBAAvBna,KAAKzB,MAAMsU,MAAM/V,KACtC,OACEkD,KAAKV,MAAM2c,gBACT,eAAC3a,EAAA,EAAD,CAAmBtJ,KAAK,QAAQkB,MAAM,UAEtC8G,KAAKV,MAAMoc,OACT,uCACKvB,EAAkH,KAAnG,eAACxd,GAAA,EAAD,CAAMD,MAAO,CAACxE,GAAO4V,IAArB,SAA4B0L,GAAgBxZ,KAAKzB,MAAMsU,MAAMC,OAAO4H,cAAcE,QACpG,eAACje,GAAA,EAAD,CACAD,MAAO,CAACxE,GAAOwhB,YAAa,CAAC1gB,SAAUmhB,EAAe,GAAK,KAD3D,SAGIna,KAAKzB,MAAMsU,MAAMC,OAAO+J,gBAG9B,eAAClgB,GAAA,EAAD,CAAMD,MAAOxE,GAAOwhB,YAApB,2CA/FV,4BA8HE,WAAkB,IAAD,OACToD,EAAW,CACfhf,IAAoB,OAAfxG,IAASC,GAAckB,KAAUC,cAAgB,EACtDqkB,MAAO,EACPpC,OAAQ,OACR/gB,gBAAiB,SAGnB,OACGoG,KAAKV,MAAM6c,WAiBV,KAhBA,eAACpd,GAAA,EAAD,CACArC,MAAO,CAAC,CACN3C,SAAU,WACVnC,MAAO,GACPE,OAAQ,GACRS,WAAY,SACZD,eAAgB,SAChBoB,aAAc,IAEhBojB,GAEAjf,QAAS,kBAAM,EAAK2I,SAAS,CAAC2V,YAAY,KAX1C,SAaE,eAAC,OAAD,CAAMrf,KAAK,QAAQlF,MAAO,GAAIE,OAAQ,GAAIiF,KAAK,aArJzD,oBA6JE,WACE8C,QAAQC,IAAI,uCACZ,IAAM2C,EAAWzC,KAAKzB,MAAMqN,SAAStL,KAAKmC,SAC1C,OACE,eAACua,GAAA,EAAD,CAActgB,MAAOxE,GAAOE,SAA5B,SACE,gBAAC4kB,GAAA,EAAD,CAActgB,MAAO,CAACxE,GAAOuhB,WAAY,CAAC7f,gBAAiB6I,EAAS7I,kBAApE,UACE,oBAAMmhB,UAAN,IACA,oBAAMuB,iBAAN,IACA,oBAAMC,eAAN,aArKV,GAAyC1Z,a,UClJ1Boa,GAFKC,0B,qkBCIpB,IAAIhlB,GAAS,CACXilB,OAAQ,CACNpjB,SAAU,WACVsB,OAAQ,EACRvD,OAAQ,MACRF,MAAO,OACPU,eAAgB,gBAElB8kB,YAAa,CAEXxkB,cAAe,MACfN,eAAgB,eAChBC,WAAY,UAEd8kB,gBAAiB,CAEfzkB,cAAe,MACfN,eAAgB,SAChBC,WAAY,UAEf+kB,cAAe,CACZ1lB,MAAO,MACPE,OAAQ,GACR2B,YAAa,EACbC,aAAc,GACdE,gBAAiB,UACjBrB,WAAY,SACZD,eAAgB,UAElBilB,mBAAoB,CAClBrkB,MAAO,OACPF,SAAU,GACVC,WAAY,QAEdukB,iBAAkB,CAChB5lB,MAAO,GACPE,OAAQ,GACR4B,aAAc,IAEhB+jB,iBAAkB,CAChBvkB,MAAO,QACPF,SAAU,GACV6Y,UAAW,SACXzX,YAAa,GACbrB,UAAW,OACX2kB,SAAU,OAEZC,eAAgB,CACd7L,mBAAoB,cAUlB8L,GAAkB,WACtBC,KAAQC,QAAQ,sEAGlB,SAASC,GAAT,GAAqD,IAA7BjlB,EAA4B,EAA5BA,MAAO+E,EAAqB,EAArBA,QAASoD,EAAY,EAAZA,UACtC,EAAoCzD,oBAAS,GAA7C,WAAQwgB,EAAR,KAAmBC,EAAnB,KACA,OACE,eAAClf,GAAA,EAAD,CACAqC,UAAW,kBAAM8M,GAAY+P,EAAc,MAC3CpgB,QAASA,EACTnB,MAAO,CAACxE,GAAOolB,cAAe,CAC5B1jB,gBAAiB1B,GAAOolB,cAAc1jB,gBAAgBpH,MAAM,EAAE,IAAOwrB,EAAY,IAAM,KACvFrkB,YAAazB,GAAOolB,cAAc3jB,YAAYnH,MAAM,EAAE,IAAOwrB,EAAY,IAAM,OALjF,SAQG/c,EACC,eAACK,EAAA,EAAD,CAAmBpI,MAAM,SAEzB,eAACyD,GAAA,EAAD,CAAMwC,YAAY,EAAOzC,MAAO,CAACxE,GAAOqlB,mBAAoB,CAC1DrkB,MAAOhB,GAAOqlB,mBAAmBrkB,OAAU8kB,EAAY,IAAM,OAD/D,SAIIllB,MAQL,SAASolB,GAAc3f,GAE5B,IAAMqN,EAAWuS,qBAAWlB,IACtBxa,EAAWmJ,EAAStL,KAAKmC,SAC/B,EAAoD8N,IAAM/S,UAAS,GAAnE,WAAO4gB,EAAP,KAA2BC,EAA3B,KA2BAxe,QAAQC,IAAI,0CAKZ,IAHA,IAAM0C,EAAgBC,EAASD,cACzBE,EAAYF,EAAgB,OAAS,OACrCG,EAAeH,EAAgB,OAAS,OAC9C,MAAkB,CAAC,mBAAoB,sBAAvC,eAA8D,CAAzD,IAAIxB,EAAK,KACZ9I,GAAO8I,GAAP,SAAqB9I,GAAO8I,IAA5B,IAAoC9H,MAAOwJ,IAE7CxK,GAAOolB,cAAP,SAA4BplB,GAAOolB,eAAnC,IAAkD1jB,gBAAiB+I,EAAe,IAAKhJ,YAAa+I,EAAY,MAEhH,IA7E0B4b,EA6EpB5D,EAAgBnc,EAAMsU,MAAMC,OAAO4H,cACnC5X,EAASL,EAASW,qBAAuBsX,EAAcvK,KAAKC,IAAMsK,EAAcvK,KAAKE,QAE3F,OACE,eAAChL,EAAA,EAAD,CACEnI,OAAQ,CAAEC,IAAK2F,GACfpG,MAAO,CAAErE,KAAM,EAAGuB,gBAAiB6I,EAAS7I,iBAF9C,SAIE,gBAAC6C,GAAA,EAAD,CAAMC,MAAOxE,GAAOilB,OAApB,UACE,gBAAC1gB,GAAA,EAAD,CAAMC,MAAOxE,GAAOklB,YAApB,UACE,eAACW,GAAD,CACAjlB,MAAO,SACP+E,QAASU,EAAMU,WAAW4W,OAC1B5U,WAAW,IAEX,eAAC8c,GAAD,CACAjlB,MAAO,UACP+E,QApDR,0BAAA2D,EAAAC,OAAA,uDAEE5B,QAAQC,IAAI,iCACZue,GAAsB,GAChBE,EAAe,CACnBrb,gBAAiB3E,EAAMsU,MAAMC,OAAO4H,eALxC,WAAAlZ,EAAA,MAQgC6M,GAAakQ,EAAc3S,EAAStL,KAAK2B,WARzE,kBASsBJ,GATtB,oBAWSY,EAASU,uBAXlB,oCAAA3B,EAAA,MAYY6M,GAAa,CAAClL,wBAAwB,GAAOyI,EAAStL,KAAK2B,WAZvE,2BAAAT,EAAA,MAeUjD,EAAMqN,SAASrJ,gBAfzB,QAiBI8b,GAAsB,GACtB9f,EAAMU,WAAWC,SAAS,YAlB9B,wBAoBImf,GAAsB,GApB1B,QAsBExe,QAAQC,IAAI,gCAtBd,8DAqDQmB,UAAWmd,OAGb,gBAAC3hB,GAAA,EAAD,CAAMC,MAAOxE,GAAOmlB,gBAApB,UACE,eAACpgB,GAAA,EAAD,CACAC,OAAQ,CAAEC,IAAKud,EAAcpa,KAAKke,cAAcC,OAChD/hB,MAAOxE,GAAOslB,mBACd,gBAAC7gB,GAAA,EAAD,CAAMD,MAAOxE,GAAOulB,iBAApB,UACG,YACD,eAAC9gB,GAAA,EAAD,CACAkB,SAzGgBygB,EAyGY5D,EAAcpa,KAAKoe,MAAMC,KAxGxD,WACLd,KAAQC,QAASQ,EAAsB,kDAwG/B5hB,MAAOxE,GAAOylB,eAFd,SAEiCjD,EAAcpa,KAAKxD,OACnD,OACD,eAACH,GAAA,EAAD,CACAkB,QAAS+f,GACTlhB,MAAOxE,GAAOylB,eAFd,SAEgC,wB,cCxK5C9d,QAAQC,IAAI,+BAEG8e,U,00BCSR,SAASC,GAAepD,EAAM9oB,EAAMgC,GACzC,IACImqB,EAAQC,EADRC,EAAkB/qB,EAAUgD,OAAOP,EAAkB/D,EAAMgC,IAShE,OAPC8mB,EAAKxmB,SAAQ,SAAC0B,EAAOxB,GACnB,IARqBqd,EAQfyM,GAAgB,IAAI/sB,KAAKyE,EAAMhE,MAAU,IAAIT,KAAK8sB,EAAgB,GAAGrsB,OAAvD,MARC6f,EASI7b,EAAM2G,UAA/BwhB,EAR+B,KAA1BnrB,SAAS6e,EAAKhgB,MAAM,EAAE,IAAqC,GAA1BmB,SAAS6e,EAAKhgB,MAAM,EAAE,IAASmB,SAAS6e,EAAKhgB,MAAM,EAAE,IAS3FusB,EAASE,EAAcH,EAAM,MAC7BrD,EAAKtmB,GAAL,OAAwB2pB,EACxBrD,EAAKtmB,GAAL,OAAwB4pB,KAEpBtD,EAGD,SAASyD,GAASzD,GAAoC,IAA9B0D,EAA6B,uDAA1B,SAAUC,IAAgB,yDAC1D,OAAO3D,EAAKlF,MAAK,SAAC/U,EAAG6d,GACnB,OAAID,EACK5d,EAAE2d,GAAME,EAAEF,GAEVE,EAAEF,GAAM3d,EAAE2d,MAIvB,SAASG,KAGP,IAH8B,IAAjBC,EAAgB,uDAAd,EAAGC,EAAW,uDAAT,GAAIrL,EAAK,uDAAH,EACpBsL,EAAO,GACTtqB,EAAM,EACD2gB,EAAOyJ,EAAGzJ,EAAO0J,EAAG1J,GAAM3B,EACjCsL,EAAKtqB,GAAS2gB,EAAM3gB,GAAS,EAE/B,OAAOsqB,EAGT,SAASC,GAAkB/sB,EAAMgC,GAC/B,IAAMgrB,EAAY1rB,EAAUgD,OAAOP,EAAkB/D,EAAMgC,IAC3D,OAAOgrB,EAAUA,EAAUltB,OAAO,GAAGiB,IAsBhC,SAASksB,GAAUnE,GAA6B,IAAvB0D,EAAsB,uDAAnB,SAAUU,EAAS,uDAAH,EACjD,GAAIpE,EAAK,GAAI,CACX,IAAIqE,EAAQrE,EAAK,GAAG0D,GAChBY,EAAQtE,EAAKA,EAAKhpB,OAAO,GAAG0sB,GAC5Ba,GAASD,EAAQD,GAASD,EAC1BI,EAAQ,CAAEH,EAAQE,EAAOD,EAAQC,GAErC,OADIC,EAAM,GAAK,IAAKA,EAAM,GAAK,GACxBA,EACF,OAAIxE,EAAK,GACP,CAAe,EAAdA,EAAK,GAAG0D,GAAU,EAAiB,KAAd1D,EAAK,GAAG0D,IAE9B,CAAC,EAAE,GAId,SAASe,GAAUzE,EAAM9oB,EAAMgC,GAC7B,MAAO,CACP,UAAa,kBA1BR,SAAuBhC,EAAMgC,GAClC,MAAO,CACL,IAAO,iBAAM,CAAC,EAAE,IAChB,KAAQ,iBAAM,CAAC,EAAG,IAClB,MAAS,iBAAM,CAAC,EAAI+qB,GAAkB/sB,EAAMgC,KAC5C,KAAS,iBAAM,CAAC,EAAG,OACnBA,KAoBiBwrB,CAAcxtB,EAAMgC,IACvC,SAAY,kBAAMirB,GAAUnE,EAAM,SAAU,KAC5C,SAAY,kBAAMmE,GAAUnE,EAAM,SAAU,KAI9C,IAAM2E,GAAa,CACjB,IAAO,OACP,KAAQ,gBACR,MAAS,gBACT,KAAQ,UAYV,IAAM5sB,GAAU,CACd,KAAQ,SAAAmD,GAAK,MAAK,CAAE,KAAQhD,SAASgD,EAAM2G,UAAU9K,MAAM,EAAE,IAAK,KAAQmE,EAAMhE,OAChF,IAAO,SAAAgE,GAAK,OAAIA,EAAMhE,MACtB,KAAQ,SAAAgE,GAAK,MAAK,CAChB,KAAQlC,EAAYkC,EAAMhE,MAAMmB,KAChC,KAAQW,EAAYkC,EAAMhE,MAAMM,OAElC,MAAS,SAAA0D,GAAK,MAAK,CACjB,MAASlC,EAAYkC,EAAMhE,MAAMoB,MACjC,KAAQU,EAAYkC,EAAMhE,MAAMM,OAElC,KAAQ,SAAA0D,GAAK,OAAIlC,EAAYkC,EAAMhE,MAAMM,OAa3C,SAASotB,GAAelK,EAASgJ,GAC/B,IAAImB,EAAM,EAEV,OADAnK,EAAQlhB,SAAQ,SAAAohB,GAAG,OAAIiK,GAAOjK,EAAI8I,MAC3BmB,EAAMnK,EAAQ1jB,OAUvB,SAAS8tB,GAAaC,EAAMC,GAC1B,IAAIC,GAAQ,EACZ,GAAkB,iBAAPF,EACLA,GAAMC,IAAMC,GAAQ,QAExB,cAAgBjU,OAAOC,KAAK8T,GAA5B,eAAmC,CAA9B,IAAI/J,EAAG,KACN+J,EAAK/J,IAAQgK,EAAKhK,KACpBiK,GAAQ,GAId,OAAOA,EAGF,SAASC,GAAgBxK,EAASE,GAEvC,IADA,IACA,EADInjB,GAAW,EACf,KAAoBijB,KAApB,aAA6B,CACvBoK,GADuB,QACDlK,KACxBnjB,GAAS,GAGb,OAAOA,EAGT,SAAS0tB,GAAYnF,EAAMoF,EAAYpK,EAAK9jB,EAAMgC,GAChD,IAAMmsB,EAAsB7sB,EAAUgD,OAAOP,EAAkB/D,EAAMgC,IAAS,GAAGhC,KAC7EouB,EAAc,GAClBtF,EAAKxmB,SAAQ,SAAA0B,GACX,IAAIqqB,EAAaxtB,GAAQijB,GAAK9f,GACzBgqB,GAAgBI,EAAaC,IAAaD,EAAY5tB,KAAK6tB,MAGlE,IAAIC,EAAU,GACV9rB,EAAQ,EACN+rB,EAAsBL,EAAa,EAAI,EAsB7C,OArBAE,EAAY9rB,SAAQ,SAAA+rB,GAClB,IAAMG,EAAa1F,EAAKxkB,OA3D5B,SAAuBtE,EAAM8jB,GAC3B,MAAO,CACL,KAAQ,SAAA9f,GAAK,OAAIhD,SAASgD,EAAM2G,UAAU9K,MAAM,EAAE,KAAOG,EAAKyuB,MAAQzqB,EAAMhE,MAAQA,EAAKA,MACzF,IAAO,SAAAgE,GAAK,OAAIA,EAAMhE,MAAQA,GAC9B,KAAQ,SAAAgE,GAAK,OAAIlC,EAAYkC,EAAMhE,MAAMmB,MAAQnB,EAAKmB,MAAQW,EAAYkC,EAAMhE,MAAMM,MAAQN,EAAKM,MACnG,MAAS,SAAA0D,GAAK,OAAIlC,EAAYkC,EAAMhE,MAAMoB,OAASpB,EAAKoB,OAASU,EAAYkC,EAAMhE,MAAMM,MAAQN,EAAKM,MACtG,KAAQ,SAAA0D,GAAK,OAAIlC,EAAYkC,EAAMhE,MAAMM,MAAQN,IAC/C8jB,GAoD6B4K,CAAcL,EAAYvK,IACzD,GAAI0K,EAAW1uB,QAAUyuB,EAAqB,CAC5C,IAAMI,EAAgBT,EA7C5B,SAAyB1K,EAASgJ,GAChC,IAAMoC,EAAMlB,GAAelK,EAASgJ,GAChCmB,EAAM,EAEV,OADAnK,EAAQlhB,SAAQ,SAAAohB,GAAG,OAAIiK,GAAG,SAAKiB,EAAMlL,EAAI8I,GAAM,MACxCmB,GAAOnK,EAAQ1jB,OAAS,GA0CvB+uB,CAAgBL,EAAY,KAC5Bd,GAAec,EAAY,KACzBM,EAAsBxtB,EAAUgD,OAAOP,EAAkB,OAAE+f,EAAMuK,GAAavK,IAAM,GAAG9jB,KACzFosB,EAASnoB,EAASkqB,EAAqBW,GAClC,QAALhL,IACFsI,GAA+B,EAArBiC,EAAU,KAAa,IAE/BjC,EAAS,IACXkC,EAAQ9tB,KAAK,CACXuuB,EAAGvsB,EACHwsB,EAAGL,EACHvC,OAAQA,IAEV5pB,GAAS,OAIR8rB,EAGF,SAASW,GAAT,GAA0G,IAA9EnG,EAA6E,EAA7EA,KAAMoG,EAAuE,EAAvEA,cAAelvB,EAAwD,EAAxDA,KAAMgC,EAAkD,EAAlDA,OAAQ+V,EAA0C,EAA1CA,KAAMoX,EAAoC,EAApCA,QAASC,EAA2B,EAA3BA,UAA2B,EAAhBC,aAM9FvG,EAAOoD,GAHPpD,EAAOA,EAAKxkB,QAAO,SAAAN,GAAK,OAAIA,EAAM2G,aAGN3K,EAAMgC,GAGlC,IAAMksB,EAAsB,gBAATiB,EACN,gBAATA,GACEC,IACFtG,EAAOmF,GAAYnF,EAAMoF,EAAYoB,GAAWF,GAAYpvB,EAAMgC,IAKtE,IAAMwqB,EAAK,SACX1D,EAAOyD,GAASzD,EAAM0D,GAGtB,IA9HmB+C,EA8HbC,EA/KD,SAAgBxvB,EAAMgC,EAAQ+V,GACnC,IAAI0X,EAAW,CAAC,WAAY,YAAYlvB,SAASwX,GAAQ,EAAI,EAC7D,MAAO,CACL,IAAO,kBAAM4U,GAAM,EAAG,EAAG8C,EAAS,KAClC,MAAS,kBAAM9C,GAAM,EAAGI,GAAkB/sB,EAAMgC,GAASytB,IACzD,KAAQ,kBAAM9C,GAAM,EAAG,IACvB,KAAQ,kBAAMvoB,IACdpC,KAwKkB0tB,CAAO1vB,EAAMgC,EAAQ+V,GAGnC4X,EAAWpC,GAAUzE,EAAM9oB,EAAMgC,GAAQ+V,KACzC6X,EAAW1B,EAAa,CAAC,EAAG,KAAO,CAAC,EAAG,KAGvC2B,EAAc,CAClBC,MAAO,CACLxqB,KAAM,CAAEyqB,OAAQ,SAChBC,KAAM,CAAED,OAAQxqB,GAAO4V,GAAG5U,MAAQ,KAClC0pB,WAAY,CACV5pB,SAAUjB,GAAiB,IAC3B8qB,QAAS9qB,GAAiB,IAC1BgF,KAAM7E,GAAO4V,GAAG5U,QAGpB4pB,MAAO,CAELH,KAAM,CAAED,OAAQ,SAChBzqB,KAAM,CAAEyqB,OAAQ,SAChBK,UAAW,CACTF,QAAS9qB,GAAkB0jB,EAAK,GAAU,GAAL,IACrCziB,SAAUd,GAAO8V,GAAGhV,SACpB+D,KAAM7E,GAAO4V,GAAG5U,OAGlBgpB,MAAO,CACLQ,OAAQxqB,GAAO4V,GAAG5U,OAAUuiB,EAAK,GAAW,GAAN,KACtCzjB,KAAMD,GAAiB,KAEzB6qB,WAAY,CACV5pB,SAAUjB,GAAiB,IAC3B8qB,QAAS9qB,GAAiB,GAC1BgF,KAAM0e,EAAK,GAAKvjB,GAAO4V,GAAG5U,MAAQ,UAGtC8pB,KAAM,CACJvH,KAAM,CACJiH,OAAQxqB,GAAO4V,GAAG5U,MAClB+pB,YAAa,IAGjBC,QAAS,CACPzH,KAAM,CAAE1e,KAAM,gBAAGomB,EAAH,EAAGA,MAAH,OAAe7P,GAAc+H,KAAK+H,MAAMD,EAAMxB,EAAI,QAI9D0B,EAAgB,CACpBC,MAAO,CACLtpB,KAAMjC,GAAiB,IACvBglB,MAAOhlB,GAAiB,IACxB+F,IAAK/F,GAAiB,GACtBsD,OAAQtD,GAAiB,MAI7B,OACE,gBAAC,GAAQwrB,aAAT,CACA3rB,MAAOG,GAAiB,KACxBD,OAAQC,GAAiB8oB,EAAa,IAAM,KAC5CgC,QAASQ,EAAcC,MACvBE,OAAQ,CAAE9B,EAAGY,EAAUX,EAAGY,GAC1BkB,QAAS,CACPC,SAAU,IACVC,OAAQ,CAACD,SAAU,MAPrB,UAUE,eAAC,GAAQE,YAAT,CACAC,eAAa,EACbC,WAAYxE,GAAOuB,EAAa,EAAI,EAAI,EAAG,GAC3CkD,WAAY,SAAAC,GAAI,OAAIrwB,SAASqwB,IAC7BtnB,MAAO8lB,EAAYC,QAEnB,eAAC,GAAQmB,YAAT,CACA5iB,MAAOya,EAAK,GAAK2E,GAAWzrB,GAArB,mCAAmE,QAARA,EAAiB,QAAU,SAAtF,IAAiGsvB,GAAUtvB,GAAQuvB,cAAnH,IACPC,cAAe,eAAC,GAAQC,YAAT,CAAqBC,GAAItsB,GAAkB8oB,EAAa,IAAM,KAAOyD,GAAIvsB,GAAkB8oB,EAAa,IAAM,OAC7HiD,WAAYrI,EAAK,GAAK0G,EAAc,KACpC4B,WAAYtI,EAAK,IA5MFyG,EA4MmBC,EA3M/B,CACL,IAAQ,SAAA6B,GAAI,OAAI3I,KAAK+H,MAAW,GAALY,IAC3B,KAAQ,SAAAA,GAAI,OAAIzuB,EAAcyuB,IAC9B,MAAS,SAAAA,GAAI,OAAIrwB,SAASqwB,EAAK,IAC/B,KAAQ,SAAAA,GAAI,OAAIjuB,EAAoBmsB,EAAMpvB,QAAQkxB,OAuMDrvB,GAAU,KACzD4vB,mBAAoB,eAAC,GAAQC,aAAT,CAAsBC,OAAQ,GAAIC,GAAI3sB,IAAkB,IAAK4sB,GAAI5sB,IAAkB,KACvG2E,MAAO8lB,EAAYM,QAEA,WAAjBjB,EAA6B,KAC7B,eAAC,GAAQ+C,YAAT,CACAnJ,KAAMA,EACNiG,EAAGvC,EAAIwC,EAAE,IACTE,cAAeA,EACfnlB,MAAO8lB,EAAYQ,OAGrB,eAAC,GAAQ6B,eAAT,CACApJ,KAAMA,EACNiG,EAAGvC,EAAIwC,EAAE,IACT3pB,KAAM,CAAC,QAAS,QAAQ9E,SAASyB,GAAU,IAAM,IACjD+H,MAAO8lB,EAAYU,a,+4CCpTzB,SAAS4B,GAAY3O,EAASM,GAE5B,IADA,IACA,EADIsO,EAAQ,GACZ,KAAgB5O,KAAhB,aACE,IADwB,IACxB,OADuB,QACFM,MAArB,aAA2B,CAAC,IAAnBX,EAAkB,QACpB6K,GAAgBoE,EAAOjP,IAASiP,EAAM5xB,KAAK2iB,GAGpD,OAAOiP,EAeF,SAASC,GAAT,GAAwD,IAA/BzkB,EAA8B,EAA9BA,QAAe5L,GAAe,EAArBhC,KAAqB,EAAfgC,QAAQ+V,EAAO,EAAPA,KAE/Cua,EAAiBH,GAAYvkB,EAAS,YACtC2kB,EAfR,SAAoB/O,EAASM,GAC3B,IAAI0O,EAAmB,GACTL,GAAY3O,EAASM,GAC7BxhB,SAAQ,SAAA6gB,GAAI,OAAIqP,EAAiBrP,EAAKhZ,MAAQ,KACpD,eAAgBqZ,KAAhB,aACE,IADwB,IACxB,OADuB,QACFM,MAArB,aAA2B,CAAC,IAAnBX,EAAkB,QACzBqP,EAAiBrP,EAAKhZ,OAAS,EAGnC,OAAOqoB,EAMcC,CAAW7kB,EAAS,YACrC8kB,EAAuB,EAC3BJ,EAAehwB,SAAQ,SAAAkJ,GAAO,OAAIknB,GAAwBH,EAAa/mB,EAAQrB,SAC/E,IAAI2e,EAAOwJ,EAAe9tB,KAAI,SAACgH,EAAShJ,GAAV,MAAqB,CACjDusB,EAAGvsB,EAAM,EACTwsB,EAAGuD,EAAa/mB,EAAQrB,MACxBwoB,kBAAmBJ,EAAa/mB,EAAQrB,MAAQyD,EAAQ9N,OACxD8yB,yBAA0BL,EAAa/mB,EAAQrB,MAAQuoB,EACvDlnB,QAASA,EAAQrB,KACjB4B,KAAMP,EAAQO,KACdmO,OAAQ1O,EAAQ0O,WAGZ8U,EAAU,YAANjX,EAAmB,IAAc,cAANA,EAAqB,oBAAsB,2BAChF+Q,EAAOyD,GAASzD,EAAMkG,GAEtB,MAAoBnkB,mBAAS,wBAA7B,WAAO2hB,EAAP,KAAWqG,EAAX,KAEA,OACE,gBAAC/oB,GAAA,EAAD,CAAMC,MAAO,CAAC9E,MAAO,OAASW,WAAY,SAAUD,eAAgB,UAApE,UACE,eAACmE,GAAA,EAAD,CAAMC,MAAO,CAAC9E,MAAO,OAASW,WAAY,SAAUD,eAAgB,SAAUR,OAAQ2jB,EAAK,GAAK,KAAO,KAAvG,SACMA,EAAK,GACH,eAACgK,GAAD,CAAYhK,KAAMA,EAAMkG,EAAGA,EAAGjX,KAAMA,EAAMyU,GAAIA,IAE9C,eAACxiB,GAAA,EAAD,CACAD,MAAO,CAACxE,GAAO8V,GAAI,CAACpW,MAAO,MAAOmB,UAAW,SAAUI,UAAW,WADlE,wDAG8C,QAARxE,EAAiB,QAAU,SAHjE,IAG4EsvB,GAAUtvB,GAAQuvB,cAH9F,QAQR,eAACwB,GAAD,CACAC,eAAgB,CAAC7tB,OAAQ,GAAIgH,UAAW,GAIxC8mB,KAAMzG,EACN0G,QAASL,EACTM,YAAa,CAAC,uBAAwB,kCAM5C,IAAMC,GAAe,SAACxnB,GAClB,IAAMynB,EAAWznB,EAAMkd,KAAKld,EAAMkd,KAAKhpB,OAAO,GAAG8L,EAAM0nB,UAIjDC,GAHc3nB,EAAM4kB,MAAMhlB,QAAQ1L,OAAS,EAAI,GACrBsF,GAAiB,IAAMA,GAAiB,IACtDwG,EAAM4kB,MAAM5kB,EAAM0nB,WAA6B,KAAhB1nB,EAAM0nB,SAAgBD,EAAW,GAAMjuB,GAAiB,KAEzG,OAAO,eAAC,GAAQysB,aAAT,SAA0BjmB,GAA1B,IAAiC2nB,aAAcA,EAAcC,WAAaD,EAAe,QAAU,MAAQxB,GAAI3sB,GAAiBmuB,EAAe,IAAM,QAGzJ,SAAST,GAAT,GAA0C,IAArBhK,EAAoB,EAApBA,KAAM/Q,EAAc,EAAdA,KAAMiX,EAAQ,EAARA,EAAGxC,EAAK,EAALA,GACnCiH,EAAkB,CACtBC,OAAQ,GACR5K,KAAM,CACJ1e,KAAM,gBAAGomB,EAAH,EAAGA,MAAH,OAAgB7P,IAAoB,wBAAJ6L,EAAyC,YAAZgE,EAAMzkB,KAAiC,iBAAdykB,EAAMtW,QAAgC,wBAAJsS,EAA6B,EAAI,EAAU,wBAAJA,EAA6B,EAAI,KAExMmH,OAAQ,CACNttB,SAAUd,GAAO8V,GAAGhV,SACpBC,WAAY,MACZ8D,KAAM,SAACwB,GAAD,MAAgB,wBAAJ4gB,GAAkD,iBAApB5gB,EAAM4kB,MAAMtW,QAA4BtO,EAAM2nB,aAAyBhuB,GAAO4V,GAAG5U,MAAnB,UAK5GqpB,EAAW,CAAC,EAAS,YAAN7X,EAAmB+Q,EAAKA,EAAKhpB,OAAO,GAAGkvB,EAAI,GAEhE,OACE,eAAC,GAAQ4E,WAAT,CACAC,YAAU,EACV/K,KAAMA,EACNiG,EAAE,UAAUC,EAAGA,EACf8B,QAAS,CAACC,SAAU,IAAMC,OAAQ,CAACD,SAAU,MAC7CF,OAAQ,CAAC7B,EAAGY,GACZzqB,OAAQC,GAA+B,GAAd0jB,EAAKhpB,OAAc,GAC5CmF,MAAOG,GAAiB,KAExB0uB,SAAU1uB,GAAiB,IAC3B8qB,QAAS,CAAC/kB,IAAK/F,GAAiB,IAAKsD,OAAQtD,GAAiB,IAAKiC,KAAMjC,GAAiB,GAAIglB,MAAOhlB,GAAiB,IACtHuuB,OAfkB,SAAC,GAAD,IAAEnD,EAAF,EAAEA,MAAF,OAAgBA,EAAMhlB,QAAtB,KAAqC,KAAHwjB,EAAShuB,SAASwvB,EAAMxB,IAAI,IAAMtG,KAAK+H,MAAe,IAATD,EAAMxB,IAAQ,MAgB/G+E,eAAgB,eAAC,GAAD,CAAchc,KAAMA,EAAMub,SAAUtE,IACpDjlB,MAAO0pB,EACPO,aAAc,CAAC7oB,IAAK,EAAGzC,OAAQ,K,q/BCtGnC,IAAIurB,GAAgB,GACpBtT,GAAcre,SAAQ,SAACiE,EAAO/D,GAC5ByxB,GAAczxB,EAAM,GAAK+D,KAGpB,IAAIhB,GAAS,CAClBqV,WAAY,CACVlV,KAAM,EACNG,WAAYC,KAAUC,cACtBiC,cAAe5C,GAAiB,IAChCQ,WAAY,SACZD,eAAgB,iBAElBkV,WAAY,CACV5V,MAAOG,GAAiB,KACxB4C,cAAe5C,GAAiB,KAElC8C,OAAQ,CACN/C,OAAQC,GAAiB,KACzBa,cAAe,MACfL,WAAY,SACZD,eAAgB,UAElBwC,cAAe,CACbxC,eAAgB,gBAChBR,OAAQC,GAAiB,IACzBQ,WAAY,cAEdsuB,cAAe,CACbjvB,MAAO,OACP6C,aAAc,MAEhBnB,KAAM,CACJE,gBAAiBzB,GAAiB,GAClCwB,kBAAmBxB,GAAiB,IACpC2B,aAAc3B,GAAiB,IAC/B6B,gBAAiB,mBAEnBuB,QAAS,CACPvC,cAAe,MAEfL,WAAY,UAEdsB,WAAY,CACV/B,OAAQC,GAAiB,IACzBO,eAAgB,iBAGlBwuB,aAAc,CACZlvB,MAAO,MACPE,OAAQC,GAAiB,IACzBgC,SAAU,WACVsB,OAAQtD,GAAiB,IAEzBoB,UAAW,SACXP,cAAe,MACfL,WAAY,SACZD,eAAgB,SAChBmB,YAAa,EACbC,aAAc3B,GAAiB,IAC/B6B,gBAAiB,QAEnBmtB,UAAW,CACTjoB,UAAW/G,GAAiB,GAC5B0C,aAAc1C,GAAiB,GAC/BQ,WAAY,SACZD,eAAgB,UAElB0uB,WAAY,CACZpvB,MAAO,OACPE,OAAQC,GAAiB,IAEzBa,cAAe,MACfL,WAAY,SACZD,eAAgB,iBAEhB2uB,iBAAkB,CAChBruB,cAAe,MACfd,OAAQC,GAAiB,IACzBO,eAAgB,WAChBC,WAAY,UAEd2uB,YAAa,CACXtvB,MAAOG,GAAiB,KACxBD,OAAQC,GAAiB,KACzBa,cAAe,MACfL,WAAY,SACZC,WAAYT,GAAiB,GAC7B4C,cAAe5C,GAAiB,KAElCovB,mBAAoB,CAClBrvB,OAAQ,OACRF,MAAO,MACPW,WAAY,SACZD,eAAgB,UAElB8uB,iBAAkB,CAChBxvB,MAAOG,GAAiB,KACxBD,OAAQC,GAAiB,KACzBQ,WAAY,SACZD,eAAgB,iBAElB+uB,YAAa,CACXzvB,MAAO,OACPE,OAAQC,GAAiB,IACzBa,cAAe,MACfL,WAAY,SACZD,eAAgB,iBAElBgvB,aAAc,CACZ1vB,MAAO,MACPW,WAAY,SACZD,eAAgB,UAGlBivB,gBAAiB,CACfhvB,WAAY,SACZD,eAAgB,SAChBV,MAAOG,GAAiB,IACxBD,OAAQC,GAAiB,IACzB2B,aAAc3B,GAAiB,KAEjC+V,GAAI,CACF9U,SAAUjB,GAAiB,IAC3BmB,MAAO,QAET6U,GAAI,CACF/U,SAAUjB,GAAiB,IAC3BmB,MAAO,QAET8U,GAAI,CACFhV,SAAUjB,GAAiB,IAC3BmB,MAAO,QAET+U,GAAI,CACFjV,SAAUjB,GAAiB,IAC3BmB,MAAO,QAETsuB,GAAI,CACFxuB,SAAUjB,GAAiB,IAC3BmB,MAAO,QAEToD,SAAU,CACRpD,MAAO,SAILma,GAAQ,CAAC,EAAE,EAAE,EAAE,EAAE,GACVoU,GAAU,CACrB,cAAY,EACZ,IAAO,EACP,QAAW,EACX,IAAO,EACP,WAAS,GAGLC,GAAU,CAAC,MAAO,OAAQ,QAAS,QAC5BzD,GAAY,CACvB,IAAO,MACP,KAAQ,SACR,MAAQ,SACR,KAAQ,OAGV,SAAS0D,GAAT,GAAqC,IAAT7uB,EAAQ,EAARA,MAC1B,OACE,eAAC2D,GAAA,EAAD,CAAMC,MAAOxE,GAAO2C,OAApB,SACE,eAAC8B,GAAA,EAAD,CAAMD,MAAOxE,GAAO4V,GAApB,SAA0BhV,MAWzB,IAAM8uB,GAAQ,CAAE,eAAa,WAAS,gBAChCC,GAAU,CAAE,OAAQ,MAAO,SAAU,UAC5CC,GAAc,CAAE,YAAa,WAAY,YAClC7F,GAAa,CACxB,eAAa,eACb,KAAQ,OACR,IAAO,MACP,OAAU,OACV,SAAO,SAGT,SAAS8F,GAAT,GAAyD,IAApCjlB,EAAmC,EAAnCA,OAAQlJ,EAA2B,EAA3BA,gBAAiB2G,EAAU,EAAVA,QAEtCynB,EAAe,CACnB,IAAOh2B,IACP,KAAQ,CAAE8B,KAAMY,EAAQ,QAASzB,KAAMyB,EAAQ,SAC/C,MAAS,CAAEX,MAAOW,EAAQ,SAAUzB,KAAMyB,EAAQ,SAClD,KAAQA,EAAQ,SAGlB,EAA8B8I,mBAAS,OAAvC,WAAQ7I,EAAR,KAAgBszB,EAAhB,KACA,EAA0BzqB,mBAASwqB,GAAnC,WAAQr1B,EAAR,KAAcu1B,EAAd,KAEA,OACE,gBAAC7iB,EAAA,EAAD,CACAnI,OAAQ,CAACC,IAAM2F,GACfpG,MAAO,CAAExE,GAAOqV,WAAY,CAAC3T,gBAAiBA,IAF9C,UAIE,eAAC0W,GAAA,EAAD,CAAY5T,MAAO,CAAC9E,MAAO,QAA3B,SACE,gBAAC6E,GAAA,EAAD,CAAMC,MAAO,CAACxE,GAAOsV,WAAY,CAACrU,UAAW,WAA7C,UACE,eAACwuB,GAAD,CAAmB7uB,MAAO,WAC1B,eAACqvB,GAAD,CAAex1B,KAAMA,EAAMu1B,QAASA,EAASvzB,OAAQA,IACrD,eAAC,GAAD,CACAmE,MAAO,qBAA0B,QAARnE,EAAiB,MAAQ,OAAWsvB,GAAUtvB,GAAQuvB,cAC/EkE,MAAOC,GACP9nB,QAASA,EACT5N,KAAMA,EACNgC,OAAQA,EACR2zB,YAAY,YACZC,MAAOT,GACPU,eAAe,eACfC,SAAUb,GACVc,iBAAiB,OACjBC,WAAYd,KAEZ,eAAC,GAAD,CACA/uB,MAAM,wCACNsvB,MAAOQ,GACProB,QAASA,EACT5N,KAAMA,EACNgC,OAAQA,EACR2zB,YAAa,KACbC,MAAO,OAEP,eAAC,GAAD,CACAzvB,MAAO,kBAAuB,QAARnE,EAAiB,MAAQ,OAAWsvB,GAAUtvB,GAAQuvB,cAC5EkE,MAAOpD,GACPzkB,QAASA,EACT5N,KAAMA,EACNgC,OAAQA,EACR2zB,YAAY,WACZC,MAAO,CAAC,WAAY,aAAc,6BAItC,eAACM,GAAD,CAAcl0B,OAAQA,EAAQszB,UAAWA,OAK/C,SAASY,GAAT,GAA4C,IAArBl0B,EAAoB,EAApBA,OAAQszB,EAAY,EAAZA,UAC7B,EAAoCzqB,oBAAS,GAA7C,WAAQwgB,EAAR,KAAmBC,EAAnB,KACA,OACE,gBAAClf,GAAA,EAAD,CACArC,MAAO,CAACxE,GAAO4uB,aAAc,CAC3BltB,gBAAiB1B,GAAOoE,SAASpD,OAAU8kB,EAAY,IAAM,KAC7DrkB,YAAazB,GAAO4V,GAAG5U,OAAU8kB,EAAY,IAAM,OAErD5c,UAAW,kBAAM8M,GAAY+P,EAAc,MAC3CpgB,QAAS,kBAAMoqB,EAAUP,GAASA,GAAQA,GAAQj1B,OAAO,IAAIkC,EAAS,EAAI+yB,GAAQ50B,QAAQ6B,GAAQ,KANlG,UAQE,eAAC,OAAD,CAAMmI,KAAK,eAAelF,MAAO,GAAIE,OAAQ,GAAIiF,KAAM7E,GAAO4V,GAAG5U,OAAW8kB,EAAY,IAAM,OAC9F,eAACrhB,GAAA,EAAD,CAAMwC,YAAY,EAAOzC,MAAO,CAACxE,GAAO8V,GAAI,CAAC9U,MAAOhB,GAAO4V,GAAG5U,OAAY8kB,EAAY,IAAM,KAAO/kB,WAAY,SAA/G,SAA2H,IAAMgrB,GAAUtvB,QAKjJ,SAASwzB,GAAT,GAAiD,IAAzBx1B,EAAwB,EAAxBA,KAAMu1B,EAAkB,EAAlBA,QAASvzB,EAAS,EAATA,OACrC,OACE,gBAAC8H,GAAA,EAAD,CAAMC,MAAO,CAACxE,GAAOiD,QAASjD,GAAO4C,eAArC,UACE,eAACuX,GAAD,CACAtW,KAAK,aACLnJ,KAAK,WACLD,KAAMA,EACNu1B,QAASA,EACTvzB,OAAQA,IAER,eAACgI,GAAA,EAAD,CAAMD,MAAO,CAACxE,GAAO6V,IAArB,SAA4B9X,EAAiBtB,GAAQhC,EAAKgC,MAC1D,eAAC0d,GAAD,CACAtW,KAAK,gBACLnJ,KAAK,OACLD,KAAMA,EACNu1B,QAASA,EACTvzB,OAAQA,OAMd,SAAS0d,GAAT,GAAoE,IAArCtW,EAAoC,EAApCA,KAAMnJ,EAA8B,EAA9BA,KAAMD,EAAwB,EAAxBA,KAAMu1B,EAAkB,EAAlBA,QAASvzB,EAAS,EAATA,OACxD,EAAoC6I,oBAAS,GAA7C,WAAQwgB,EAAR,KAAmBC,EAAnB,KACA,OACE,eAAClf,GAAA,EAAD,CACAqC,UAAW,kBAAM8M,GAAY+P,EAAc,MAC3CpgB,QAAS,kBAAMqqB,EAAQ,SAClBv1B,GADiB,UAEnBgC,EAASE,EAAQlC,EAAKgC,GAAS/B,EAAM+B,OAExC4d,QAASxa,GAAiB,IAN1B,SAQE,eAAC,OAAD,CACA+E,KAAMf,EACNnE,MAAOG,GAAiB,IACxBD,OAAQC,GAAiB,IACzBgF,KAAQ7E,GAAO4V,GAAG5U,OAAS8kB,EAAY,IAAM,QAWnD,IAAM8K,GAAY,SAAC,GAAuH,IAAtHhwB,EAAqH,EAArHA,MAAOsvB,EAA8G,EAA9GA,MAAO7nB,EAAuG,EAAvGA,QAAS5N,EAA8F,EAA9FA,KAAMgC,EAAwF,EAAxFA,OAAQ2zB,EAAgF,EAAhFA,YAAaC,EAAmE,EAAnEA,MAAOC,EAA4D,EAA5DA,eAAgBC,EAA4C,EAA5CA,SAAUC,EAAkC,EAAlCA,iBAAkBC,EAAgB,EAAhBA,WACjH1xB,EAASP,EAAkB/D,EAAMgC,GACvC4L,EAAUA,EAAQtJ,OAAOA,GAEzB,MAA0BuG,mBAAS8qB,GAAnC,WAAQ5d,EAAR,KAAcqe,EAAd,KACA,EAAgCvrB,mBAASgrB,GAAzC,WAAQ1G,EAAR,KAAiBkH,EAAjB,KACA,EAAoCxrB,mBAASkrB,GAA7C,WAAQ3G,EAAR,KAAmBC,EAAnB,KACA,EAAkCxkB,mBAAS,YAA3C,WAAQyrB,EAAR,KAAkBC,EAAlB,KACA,OACE,gBAACzsB,GAAA,EAAD,CAAMC,MAAOxE,GAAO2uB,cAApB,UACE,gBAACpqB,GAAA,EAAD,CAAMC,MAAOxE,GAAOoB,KAApB,UACE,gBAACmD,GAAA,EAAD,CAAMC,MAAO,CAACxE,GAAOiD,QAASjD,GAAO2B,YAArC,UACE,eAAC8C,GAAA,EAAD,CAAMD,MAAOxE,GAAO6V,GAApB,SAA0BjV,IACxBwvB,GACc,YAAVW,EACA,eAACE,GAAD,CAAgBze,KAAMA,EAAMqe,QAASA,EAASR,MAAQA,IAGxD,QAGN,eAAC9rB,GAAA,EAAD,CAAMC,MAAOxE,GAAO6uB,UAApB,SACE,eAACqB,EAAD,CACA7nB,QAASA,EACT5N,KAAMA,EACNgC,OAAQA,EACR+V,KAAMA,EACNqe,QAASA,EACTjH,QAASA,EACTkH,WAAYA,EACZjH,UAAWA,EACXC,aAAcA,EACdiH,SAAUA,EACVC,YAAaA,SAIH,YAAVD,GACInH,EAEA,eAAC4D,GAAD,CACAC,eAAc,SAAOztB,GAAO+uB,kBAAd,IAAgC3uB,eAAgB,gBAAiBiB,kBAAmBxB,GAAiB,MACnHqxB,KAAMtH,EACNuH,QAASL,EACTM,YAAab,EACb7C,KAAM7D,EACN8D,QAAS7D,EACT8D,YAAa6C,IAGb,SAMP,SAASjD,GAAennB,GAC7B,OAAOA,EAAM6qB,MAAQ7qB,EAAMqnB,KACzB,gBAACnpB,GAAA,EAAD,CAAMC,MAAO,CAACxE,GAAO8uB,WAAYzoB,EAAMonB,gBAAvC,UACIpnB,EAAM6qB,KAAO,eAACD,GAAD,CAAgBze,KAAMnM,EAAM6qB,KAAML,QAASxqB,EAAM8qB,QAASd,MAAOhqB,EAAM+qB,cAAkB,KACtG/qB,EAAMqnB,KAAO,eAACuD,GAAD,CAAgBze,KAAMnM,EAAMqnB,KAAMmD,QAASxqB,EAAMsnB,QAAS0C,MAAOhqB,EAAMunB,cAAkB,QAExG,KAGN,SAASqD,GAAT,GAAiD,IAAxBze,EAAuB,EAAvBA,KAAMqe,EAAiB,EAAjBA,QAASR,EAAQ,EAARA,MACtC,EAAwC/qB,oBAAS,GAAjD,WAAQ+rB,EAAR,KAAqBC,EAArB,KACA,OACE,gBAACzqB,GAAA,EAAD,CACArC,MAAOxE,GAAOiD,QACdiG,UAAW,kBAAM8M,GAAYsb,EAAgB,MAC7C3rB,QAAS,WACPkrB,EA7EN,SAAcr0B,EAAS+qB,GACrB,IAAItqB,EAAQsqB,EAAK3sB,QAAQ4B,GACzB,OAAO+qB,EAAMtqB,GAASsqB,EAAKhtB,OAAO,EAAI,EAAI0C,EAAM,GA2EpCvC,CAAK8X,EAAM6d,KAJrB,UAOE,eAAC,OAAD,CACAzrB,KAAK,eACLlF,MAAOG,GAAiB,IACxBD,OAAQC,GAAiB,IACzBgF,KAAO7E,GAAO4V,GAAG5U,OAASqwB,EAAc,IAAM,MAE9C,eAAC5sB,GAAA,EAAD,CAAMwC,YAAY,EAAOzC,MAAO,CAACxE,GAAO8V,GAAI,CAAE9U,MAAOhB,GAAO4V,GAAG5U,OAASqwB,EAAc,IAAM,MAA5F,SAAuG,IAAMtf,GAAWS,QAoB9H,IAAM+e,GAAiB,CAAE,aAAc,SAAU,UAAW,OAAQ,QAAQ,WAAY,WAExF,SAASpB,GAAT,GAAoI,IAA7G9nB,EAA4G,EAA5GA,QAAS5N,EAAmG,EAAnGA,KAAMgC,EAA6F,EAA7FA,OAAQ+V,EAAqF,EAArFA,KAAMqe,EAA+E,EAA/EA,QAASjH,EAAsE,EAAtEA,QAASkH,EAA6D,EAA7DA,WAAYjH,EAAiD,EAAjDA,UAAWC,EAAsC,EAAtCA,aAAciH,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,YAEnH,EAA0C1rB,mBAAS,cAAnD,WAAOqkB,EAAP,KAAsB6H,EAAtB,KACKnpB,EAAQ,KACXwoB,EAAQ,aAAcC,EAAW,iBArBrC,SAA0BW,EAAMxK,EAAIqG,EAAO7wB,GAC/B,gBAANg1B,EACFnE,EAAM,MACIrG,EAGVuI,GAAQzyB,SAAQ,SAAC20B,EAAKz0B,GAChBR,GAAQi1B,GACL/B,GAAQr1B,MAAM2C,EAAM,EAAG,GAAGjC,SAASisB,IACtCqG,EAAM,WALZA,EAAM,QAmBRqE,CAAiB/H,EAASC,EAAWC,EAAcrtB,GAEnD,IAAM8mB,EAAOlb,EAAQpJ,KAAI,SAACR,EAAOxB,GAC/B,MAAO,CACLusB,EAAGvsB,EAAM,EACTwsB,EAAG8F,GAAQ9wB,EAAMiG,MACjBjK,KAAMgE,EAAMhE,KACZ2K,UAAW3G,EAAM2G,cAIrB,OACE,gBAACb,GAAA,EAAD,CAAMC,MAAO,CAAC9E,MAAO,OAASW,WAAY,SAAUD,eAAgB,UAApE,UACE,eAACmE,GAAA,EAAD,CAAMC,MAAO,CAAC9E,MAAO,OAASW,WAAY,SAAUD,eAAgB,UAApE,SACc,YAAV2wB,EACE,eAACrH,GAAD,CACAnG,KAAMA,EAAMoG,cAAeA,EAC3BlvB,KAAMA,EAAMgC,OAAQA,EAAQ+V,KAAMA,EAAMoX,QAASA,EACjDC,UAAWA,EAAWC,aAAcA,IAEpC,eAAC8H,GAAD,CAAUrO,KAAMA,EAAMoG,cAAeA,EAAelvB,KAAMA,EAAMgC,OAAQA,MAG9E,eAAC+wB,GAAD,CACAC,eAAgB,CAAC7tB,OAAQ,IACzBsxB,KAAMvH,EACNwH,QAASK,EACTJ,YAAaG,GACb7D,KAAMqD,EACNpD,QAASqD,EACTpD,YAAa,CAAC,WAAY,kBAMhC,SAASgE,GAAT,GAAwD,IAArCrO,EAAoC,EAApCA,KAAM9oB,EAA8B,EAA9BA,KAAMgC,EAAwB,EAAxBA,OAAQktB,EAAgB,EAAhBA,cAMrC,OADApG,EAAOyD,GAFPzD,EAAOoD,GADPpD,GADAA,EAAOA,EAAKxkB,QAAO,SAAAN,GAAK,OAAIA,EAAM2G,cACtBnG,KAAI,SAACR,EAAOxB,GAAR,UAAC,MAAuBwB,GAAxB,IAA+B+qB,EAAEvsB,EAAM,OAC3BxC,EAAMgC,GACvB,UAGT,gBAAC,GAAQ4uB,aAAT,CACA3rB,MAAOG,GAAiB,KACxBD,OAAQC,GAAiB,KACzB8qB,QAAS,CAAC7oB,KAAMjC,GAAiB,IAAKglB,MAAOhlB,GAAiB,IAAK+F,IAAK/F,GAAiB,GAAIsD,OAAQtD,GAAiB,IACtHyrB,OAAQ,CAAC9B,EAAG,CAAE,GAAKjG,EAAKhpB,OAAS,IAAOkvB,EAAG,CAAC,GAAK,MACjD8B,QAAS,CAACC,SAAU,IAAMC,OAAQ,CAACD,SAAU,MAL7C,UAOE,eAAC,GAAQE,YAAT,CACAC,eAAa,EACbL,OAAQ,CAAC,GAAK,KACdO,WAAa,SAAAC,GAAI,OAAIrwB,SAASqwB,IAC9BtnB,MAAO,CACLzE,KAAM,CAACyqB,OAAQ,SACfC,KAAM,CAACD,OAAQxqB,GAAO4V,GAAG5U,MAAQ,KACjC0pB,WAAY,CAAC5pB,SAAUjB,GAAiB,IAAK8qB,QAAS9qB,GAAiB,IAAKgF,KAAM7E,GAAO4V,GAAG5U,UAG3E,WAAjB2oB,EAA6B,KAC7B,eAAC,GAAQ+C,YAAT,CACAnJ,KAAMA,EACNiG,EAAE,IAAIC,EAAE,IACRE,cAAeA,EACfnlB,MAAO,CACL+e,KAAM,CACJiH,OAAQxqB,GAAO4V,GAAG5U,MAClB+pB,YAAa,MAKnB,eAAC,GAAQ4B,eAAT,CACApJ,KAAMA,EACNzjB,KAAM,CAAC,QAAS,QAAQ9E,SAASyB,GAAU,IAAM,IACjD+H,MAAO,CAAE+e,KAAM,CAAE1e,KAAM,gBAAEomB,EAAF,EAAEA,MAAF,OAAa7P,GAAc6P,EAAMxB,EAAE,WAMhE,SAASiH,GAAT,GAAyC,IAAnBroB,EAAkB,EAAlBA,QAAS5L,EAAS,EAATA,OACzBo1B,EAAY,CAAEt0B,EAAG,EAAGC,EAAG,EAAGC,EAAG,EAAGC,EAAG,EAAGC,EAAG,GAC7C0K,EAAQtL,SAAQ,SAAC0B,GACfozB,EAAUtC,GAAQ9wB,EAAMiG,QAAU,KAEpC,IAAIotB,EAAc,GAMlB,OALA3W,GAAMpe,SAAQ,SAAA2H,GACRmtB,EAAUntB,IACZotB,EAAY72B,KAAK,CAAEuuB,EAAG9kB,EAAM+kB,EAAGoI,EAAUntB,QAI3C,eAACH,GAAA,EAAD,CAAMC,MAAO,CAACxE,GAAOgvB,YAAa,CAAC5uB,eAAgBiI,EAAQ,GAAK,aAAe,WAA/E,SACMA,EAAQ,GAEN,uCACE,eAAC9D,GAAA,EAAD,CAAMC,MAAOxE,GAAOivB,mBAApB,SACE,eAAC8C,GAAD,CAASxO,KAAMuO,MAEjB,eAACvtB,GAAA,EAAD,CAAMC,MAAOxE,GAAOivB,mBAApB,SACE,eAAC+C,GAAD,CAAczO,KAAMuO,EAAaG,SAAU5pB,EAAQ9N,cAIvD,eAACkK,GAAA,EAAD,CAAMD,MAAO,CAACxE,GAAO8V,GAAI,CAACpW,MAAO,MAAOmB,UAAW,SAAUI,UAAW,WAAxE,4CAA0H,QAARxE,EAAiB,QAAU,SAA7I,IAAwJsvB,GAAUtvB,GAAQuvB,cAA1K,QAMZ,SAAS+F,GAAT,GAA0B,IAARxO,EAAO,EAAPA,KACZ2O,EAAa,GAEjB,OADA3O,EAAKxmB,SAAQ,SAAAo1B,GAAQD,EAAWj3B,KAAKmgB,GAAc+W,EAAI3I,EAAE,OAEvD,eAAC,GAAQ4I,WAAT,CACA7O,KAAMA,EACNiG,EAAE,IAAIC,EAAE,IACR/pB,MAAOG,GAAiB,KACxBD,OAAQC,GAAiB,KACzB8qB,QAAS,CAAC7oB,KAAM,EAAG+iB,MAAO,EAAGjf,IAAK,EAAGzC,OAAQ,GAC7CkvB,YAAaxyB,GAAiB,IAC9ByyB,SAAU,EACV7D,aAAc,EACdyD,WAAYA,EACZ9D,OAAQ,GACR7C,QAAS,CAACC,SAAU,IAAMC,OAAQ,CAACD,SAAU,QAKjD,SAASwG,GAAT,GAAyC,IAAlBzO,EAAiB,EAAjBA,KAAM0O,EAAW,EAAXA,SACrBM,EAAa,CAAC,EAAE,EAAE,EAAE,EAAE,GAAGxzB,QAAO,SAAA2F,GAAI,OAAI6e,EAAKxkB,QAAO,SAAAyzB,GAAQ,OAAIA,EAAShJ,GAAG9kB,KAAM,MACxF,OACE,eAACH,GAAA,EAAD,CAAMC,MAAO,CAACxE,GAAOkvB,iBAAkB,CAACtvB,OAAQC,GAAkB,GAAK0yB,EAAWh4B,UAAlF,SACI,CAAC,EAAE,EAAE,EAAE,EAAE,GAAG0E,KAAI,SAAAyF,GAAI,OAAI,eAAC+tB,GAAD,CAAqB/tB,KAAMA,EAAM6e,KAAMA,EAAM0O,SAAUA,GAAxCvtB,QAK/C,SAAS+tB,GAAT,GAA2C,IAAxB/tB,EAAuB,EAAvBA,KAAM6e,EAAiB,EAAjBA,KAAM0O,EAAW,EAAXA,SACvBS,EAAenP,EAAKxkB,QAAO,SAAAyzB,GAAQ,OAAIA,EAAShJ,GAAG9kB,KAAM,GACzDmtB,EAAYa,EAAeA,EAAajJ,EAAI,EAC5CkJ,EAAWxP,KAAK+H,MAAM,IAAI2G,EAAUI,GAC1C,OAAkB,GAAXJ,EAAe,KACpB,gBAACttB,GAAA,EAAD,CAAMC,MAAOxE,GAAOmvB,YAApB,UACE,eAAC5qB,GAAA,EAAD,CAAMC,MAAO,CAACxE,GAAOovB,cAArB,SACE,eAAC7qB,GAAA,EAAD,CAAMC,MAAO,CAAExE,GAAOqvB,gBAAiB,CAAC3tB,gBAAiBgtB,GAAchqB,KAAvE,SACE,eAACD,GAAA,EAAD,CAAMD,MAAO,CAACxE,GAAO+V,GAAI,CAAC/U,MAAO,SAAjC,SAA4C0D,QAGhD,eAACH,GAAA,EAAD,CAAMC,MAAO,CAACxE,GAAOovB,aAAc,CAAC1vB,MAAO,OAA3C,SACE,eAAC+E,GAAA,EAAD,CAAMD,MAAOxE,GAAO+V,GAApB,SAA4B8b,EAA5B,IAAyCI,MAE3C,eAAC1tB,GAAA,EAAD,CAAMC,MAAO,CAACxE,GAAOovB,aAAc,CAAC1vB,MAAO,QAA3C,SACE,eAAC,OAAD,CAAMkF,KAAK,wBAAwBlF,MAAOG,GAAiB,IAAKD,OAAQC,GAAiB,IAAKgF,KAAM7E,GAAO4V,GAAG5U,UAEhH,eAACuD,GAAA,EAAD,CAAMC,MAAO,CAACxE,GAAOovB,aAAe,CAAC1vB,MAAO,QAA5C,SACE,eAAC+E,GAAA,EAAD,CAAMD,MAAOxE,GAAO+V,GAApB,UAA2B4c,GAAsB,GAAK,W,IAMzCC,G,iCACnB,WAAYvsB,GAAQ,IAAD,sBACjB,cAAMA,IACDe,MAAQ,GACb,EAAKM,aAAe,EAAKA,aAAaJ,KAAlB,QACpB,EAAKurB,aAAe,EAAKA,aAAavrB,KAAlB,QAJH,E,wCAOnB,WACE,IAAMiD,EAAWzC,KAAKzB,MAAMqN,SAAStL,KAAKmC,SACpCS,EAAkBT,EAASS,gBAC3BJ,EAAUL,EAASU,wBACrBD,EACET,EAASW,qBACTF,EAAgBiN,KAAKC,IACrBlN,EAAgBiN,KAAKE,QAEvB,KACEzW,EAAkB6I,EAAS7I,gBAC7B2G,EAAUP,KAAKzB,MAAMqN,SAAStL,KAAKC,QACvC,OACE,eAACwnB,GAAD,CACAjlB,OAAQA,EACRlJ,gBAAiBA,EACjB2G,QAASA,M,0BAKb,SAAarH,GACXhB,GAAM,SAAe,CAACgB,MAAc,QAAPA,EAAgB,OAAS,QACtD,cAAc,CAAC,KAAM,KAAM,KAAM,MAAjC,eAAwC,CAAnC,IAAIgX,EAAC,KACRhY,GAAOgY,GAAP,SACKhY,GAAOgY,IADZ,UAEG,QAAUhX,O,oBAKjB,WAGE,OAFA2G,QAAQC,IAAI,0CACZE,KAAKJ,aAAaI,KAAKzB,MAAMqN,SAAStL,KAAKmC,SAASD,cAAgB,OAAS,QACtE,oBAAMuoB,aAAN,Q,GA1CyBloB,a,+/BCpkBpC,IAAMmoB,GAAU,CACdC,SAAU,CAACpN,KAAkB,KAAM,gDACnCqN,OAAQ,CACNC,QAAS,CACPC,KAAM,CACJD,QAAS,CACPE,UAAW,YACXC,SAAU,aAGdC,aAAc,eACdC,gBAAiB,kBACjBC,WAAY,aACZvN,cAAe,mBAIfwN,GAAe,CACnBT,SAAU,CAACpN,KAAkB,KAAM,gDACnCqN,OAAQ,CACNC,QAAS,CACPQ,MAAO,WAIb9rB,QAAQC,IAAI,eAAiB+d,KAAkB,MAG/C,IAEM+N,GAAgB,kBACpB,eAACvmB,EAAA,EAAD,CAAiBnI,OAAQ6F,EAAQ,KAA2BrG,MAAO,CAACrE,KAAM,EAAGE,WAAY,SAAUD,eAAgB,UAAnH,SACE,eAACgJ,EAAA,EAAD,CAAmBtJ,KAAK,QAAQkB,MAAM,YAIpC2yB,GAAyB,SAACttB,GAC9B,IAAMqN,EAAWuS,qBAAWlB,IAC5B,OACE,eAAC,GAAD,IAAiBrR,SAAUA,GAAcrN,KAIvCutB,GAA0B,SAACvtB,GAC/B,IAAMqN,EAAWuS,qBAAWlB,IAC5B,OACE,eAAC,GAAD,IAAkBrR,SAAUA,GAAcrN,KAIxCwtB,GAA6B,SAACxtB,GAClC,IAAMqN,EAAWuS,qBAAWlB,IAC5B,OACE,eAAC,GAAD,IAAqBrR,SAAUA,GAAcrN,KAI3CytB,GAA2B,SAACztB,GAChC,IAAMqN,EAAWuS,qBAAWlB,IAC5B,OACE,eAAC,GAAD,IAAsBrR,SAAUA,GAAcrN,KAI5C0tB,GAA8B,SAAC1tB,GACnC,IAAMqN,EAAWuS,qBAAWlB,IAC5B,OACE,eAACiB,GAAD,IAAetS,SAAUA,GAAcrN,KAIrC2tB,GAAuB,SAAC3tB,GAC5B,IAAMqN,EAAWuS,qBAAWlB,IAC5B,OACE,eAAC,GAAD,IAAQrR,SAAUA,GAAcrN,KAI9B4tB,GAAkB,CACtB,UAAa,WACb,SAAY,sBACZ,OAAU,UAENC,GAAiB,CACrB,UAAa,QACb,SAAY,aACZ,OAAU,aAeZ,IAAMC,GAA8B,SAAC5pB,GACnC,IAAMC,EAAYD,EAASD,cAAgB,OAAS,OACpD,OAAO,YAAgB,IAdL8pB,EAcRzZ,EAAY,EAAZA,MACR,MACE,CACE0Z,aAAa,EACbC,sBAAsB,EACtBC,YAAaN,GAAgBtZ,EAAM/V,MACnC4vB,oBAAqB,aACrBC,iBAAkB,CAACtxB,OAAQtD,GAAiB,GAAI4C,cAA4B,OAAbrD,IAASC,GAAYQ,GAAiB,GAAK,GAC1G60B,iBAAiB,EACjBC,YAvBYP,EAuBWF,GAAevZ,EAAM/V,MAtBjC,SAAC,GAA8B,IAA5BgwB,EAA2B,EAA3BA,QAAS5zB,EAAkB,EAAlBA,MAAOlB,EAAW,EAAXA,KAC9B+0B,EAAcD,EAChBR,EACAA,EAAW,WACb,OAAO,eAAC,OAAD,CAAMxvB,KAAMiwB,EAAan1B,MAAOI,EAAMF,OAAQE,EAAM+E,KAAM7D,EACjEwD,MAAO,CAAG1B,kBAAmB8xB,EAAU,IAAM,EAAGnzB,YAAaT,OAoBzD8zB,sBAAuBtqB,EACvBuqB,wBAAyBvqB,EAAY,IACrCwqB,4BAA6B,QAC7BC,8BAA+B,QAC/BC,gBAAiB,CAAC1zB,aAAc,IAChC2zB,YAAa,CACXtzB,SAAU,WACVuzB,UAAW,EACXx1B,OAAQC,GAAiB,IACzB6B,gBAAiB,QACjB2R,eAAgB,MAOpBgiB,GAAQC,cACRC,GAAMC,cAENC,GAAU,SAACpvB,GACf,IAAMkE,EAAW0b,qBAAWlB,IAAa3c,KAAKmC,SAC9C,OACE,gBAACgrB,GAAIG,UAAL,CACAC,iBAAiB,YACjBC,cAAezB,GAA4B5pB,GAF3C,UAIE,eAACgrB,GAAIM,OAAL,CACAjxB,KAAK,YACLkxB,UAAWlC,GACXmC,cAAe,CACbrvB,aAAc5M,IACdkO,gBAAiB,QAGnB,eAACutB,GAAIM,OAAL,CACAjxB,KAAK,SACLkxB,UAAW9B,KAEX,eAACuB,GAAIM,OAAL,CACAjxB,KAAK,WACLkxB,UAAWnC,GACXoC,cAAe,CACbrf,cAAenM,EAASmM,eAE1Bsf,QAAS,SAQTC,GAAY,WAChBtuB,QAAQC,IAAI,uCACZ,IAAM8L,EAAWuS,qBAAWlB,IAC5B,OACE,gBAACsQ,GAAMK,UAAP,CACAC,iBAAiB,OACjBC,cAAe,CACbvB,aAAa,GAHf,UAME,eAACgB,GAAMQ,OAAP,CACAjxB,KAAK,OACLkxB,UAAWL,GACXM,cAAe,CACbxrB,SAAUmJ,EAAStL,KAAKmC,YAG1B,eAAC8qB,GAAMQ,OAAP,CACAjxB,KAAK,eACLkxB,UAAWjC,GACXkC,cAAe,CACbxvB,aAAc,CAACC,KAAM,MAAO/L,KAAMX,IAAS2E,MAAO,SAGpD,eAAC42B,GAAMQ,OAAP,CACAjxB,KAAK,kBACLkxB,UAAWhC,GACXiC,cAAe,CACbpR,WAAY,gBAGd,eAAC0Q,GAAMQ,OAAP,CACAjxB,KAAK,aACLkxB,UAAWhC,GACXiC,cAAe,CACbpR,WAAY,uCAGd,eAAC0Q,GAAMQ,OAAP,CACAjxB,KAAK,gBACLkxB,UAAW/B,SAMImC,G,iCAEnB,WAAY7vB,GAAQ,IAAD,sBACjB,cAAMA,IAEDe,MAAQ,CACXgB,KAAM,KACNqG,YAAY,EACZlG,mBAAmB,GAGrB,EAAKoN,OAAS,EAAKA,OAAOrO,KAAZ,QACd,EAAK6uB,YAAc,EAAKA,YAAY7uB,KAAjB,QACnB,EAAK+C,aAAe,EAAKA,aAAa/C,KAAlB,QACpB,EAAKmsB,MAAQ,EAAKA,MAAMnsB,KAAX,QACb,EAAK8uB,eAAiB,EAAKA,eAAe9uB,KAApB,QACtB,EAAK+uB,gBAAkB,EAAKA,gBAAgB/uB,KAArB,QAdN,E,6CAiBnB,WACEK,QAAQC,IAAI,gC,oBAGd,WACED,QAAQC,IAAI,mDACZE,KAAKwG,SAAS,CAACG,YAAY,EAAOrG,KAAM,S,yBAG1C,WACE,OAAON,KAAKV,Q,0BAGd,8BAAAkC,EAAAC,OAAA,uDACE5B,QAAQC,IAAI,qCACZE,KAAKwG,SAAS,CAAE/F,mBAAmB,IAFrC,oBAAAe,EAAA,MAI6BU,MAAOF,mDAA0BhC,KAAKV,MAAMgB,KAAK2B,SAAU,CAAEE,OAAQ,SAJlG,UAIUqsB,EAJV,OAKYC,EAAc,WAAaD,EAAW1sB,OAAS,KAAO0sB,EAAWnsB,YACnEmsB,EAAW3sB,GANrB,wBAOUhC,QAAQC,IAAI,+CACZD,QAAQC,IAAI2uB,GACZ5uB,QAAQC,IAAI,sCATtB,YAAA0B,EAAA,MAU6BgtB,EAAWtqB,QAVxC,QAUgB5D,EAVhB,OAWUN,KAAKwG,SAAS,CAAClG,KAAMA,IAX/B,8BAcUT,QAAQC,IAAK,IAAIwC,MAAM,gEACjB,IAAIA,MAAMmsB,GAf1B,0DAkBU5uB,QAAQC,IAAI,4DACZD,QAAQC,IAAR,MACA2O,MAAM,wEApBhB,yBAuBMzO,KAAKwG,SAAS,CAAE/F,mBAAmB,IACnCZ,QAAQC,IAAI,oCAxBlB,sF,mBA4BA,WACE,OACE,eAAC,GAAD,CACAQ,KAAMN,KAAKV,MAAMgB,KACjB+tB,YAAaruB,KAAKquB,YAClB1lB,YAAa3I,KAAKwG,SAAShH,KAAKQ,U,4BAKpC,WACE,OACE,eAAC0uB,EAAA,EAAD,CACA1D,QAASU,GACTiD,SAAU,eAAC,GAAD,IAFV,SAIE,eAACpB,GAAMK,UAAP,CACAC,iBAAiB,QACjBC,cAAe,CACbvB,aAAa,GAHf,SAME,eAACgB,GAAMQ,OAAP,CACAjxB,KAAK,QACLkxB,UAAWhuB,KAAK2rB,c,6BAOxB,WACE,OACE,eAAC,GAAYiD,SAAb,CACAhpB,MAAK,SACA5F,KAAKV,OADL,IAEHuO,OAAQ7N,KAAK6N,OACblF,YAAa3I,KAAKwG,SAAShH,KAAKQ,MAChCuC,aAAcvC,KAAKuC,eALrB,SAOI,eAACmsB,EAAA,EAAD,CACA1D,QAASA,GACT2D,SAAU,eAAC,GAAD,IAFV,SAIE,eAAC,GAAD,U,oBAKV,WAEE,OADA9uB,QAAQC,IAAI,gCACJE,KAAKV,MAAMqH,WAGjB,oBAAM4nB,gBAAN,IAFA,oBAAMD,eAAN,Q,GAhH2BzrB,c,iLC5NjC,IAhBA,IAcInE,EAAMmO,EAEV,EATMgiB,EAAgB,CALG,CAAC,YAAU,QAAS,WAAY,uBAAkB,mBAAc,UAAW,MAAO,cAAe,mBAAc,eAAa,gBAK5GtY,OANX,CAAC,iBAAY,qBAAgB,oBAAe,kBAAa,WAMhBA,OAH/C,CAAC,eAAa,UAAW,aAAW,WAAW,cAAY,cAAY,iBAAe,aAAW,YAG1BA,OAJlE,CAAC,oBAAe,YAAa,YAAa,mBAAc,qBAAgB,kBAAa,OAAQ,WAAY,oBAAe,iBAAe,oBAAqB,aAI7DA,QAGtH7C,EAAe,CAAC,WAAY,YAC5BC,EAAgB,CAAC,WAAY,iBAE/Bmb,EAAkB,GAGtB,E,0tBAAA,CARmB,YAAQD,EAAc,IAAtB,EAA6BA,EAAc,IAA3C,EAAkDA,EAAc,IAAhE,EAAuEA,EAAc,QAQxG,aAAmC,CAAC,IAA3B1wB,EAA0B,QAC/BO,EAAOmwB,EAAc,GAAG37B,SAASiL,IAAY0wB,EAAc,GAAG37B,SAASiL,GAAWuV,EAAa,GAAKA,EAAa,GACjH7G,EAASgiB,EAAc,GAAG37B,SAASiL,IAAY0wB,EAAc,GAAG37B,SAASiL,GAAWwV,EAAc,GAAKA,EAAc,GACrHmb,EAAgB37B,KAAK,CAAC2J,KAAMqB,EAASO,KAAMA,EAAMmO,OAAQA,IAK7Djb,EAAOC,QAAUi9B,G","file":"static/js/app.6e58ac1f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/wallpaper.219bc3cc.png\";","const dateRange = [\r\n    \"2020-01-01\",\r\n    \"2020-01-02\",\r\n    \"2020-01-03\",\r\n    \"2020-01-04\",\r\n    \"2020-01-05\",\r\n    \"2020-01-06\",\r\n    \"2020-01-07\",\r\n    \"2020-01-08\",\r\n    \"2020-01-09\",\r\n    \"2020-01-10\",\r\n    \"2020-01-11\",\r\n    \"2020-01-12\",\r\n    \"2020-01-13\",\r\n    \"2020-01-14\",\r\n    \"2020-01-15\",\r\n    \"2020-01-16\",\r\n    \"2020-01-17\",\r\n    \"2020-01-18\",\r\n    \"2020-01-19\",\r\n    \"2020-01-20\",\r\n    \"2020-01-21\",\r\n    \"2020-01-22\",\r\n    \"2020-01-23\",\r\n    \"2020-01-24\",\r\n    \"2020-01-25\",\r\n    \"2020-01-26\",\r\n    \"2020-01-27\",\r\n    \"2020-01-28\",\r\n    \"2020-01-29\",\r\n    \"2020-01-30\",\r\n    \"2020-01-31\",\r\n    \"2020-02-01\",\r\n    \"2020-02-02\",\r\n    \"2020-02-03\",\r\n    \"2020-02-04\",\r\n    \"2020-02-05\",\r\n    \"2020-02-06\",\r\n    \"2020-02-07\",\r\n    \"2020-02-08\",\r\n    \"2020-02-09\",\r\n    \"2020-02-10\",\r\n    \"2020-02-11\",\r\n    \"2020-02-12\",\r\n    \"2020-02-13\",\r\n    \"2020-02-14\",\r\n    \"2020-02-15\",\r\n    \"2020-02-16\",\r\n    \"2020-02-17\",\r\n    \"2020-02-18\",\r\n    \"2020-02-19\",\r\n    \"2020-02-20\",\r\n    \"2020-02-21\",\r\n    \"2020-02-22\",\r\n    \"2020-02-23\",\r\n    \"2020-02-24\",\r\n    \"2020-02-25\",\r\n    \"2020-02-26\",\r\n    \"2020-02-27\",\r\n    \"2020-02-28\",\r\n    \"2020-02-29\",\r\n    \"2020-03-01\",\r\n    \"2020-03-02\",\r\n    \"2020-03-03\",\r\n    \"2020-03-04\",\r\n    \"2020-03-05\",\r\n    \"2020-03-06\",\r\n    \"2020-03-07\",\r\n    \"2020-03-08\",\r\n    \"2020-03-09\",\r\n    \"2020-03-10\",\r\n    \"2020-03-11\",\r\n    \"2020-03-12\",\r\n    \"2020-03-13\",\r\n    \"2020-03-14\",\r\n    \"2020-03-15\",\r\n    \"2020-03-16\",\r\n    \"2020-03-17\",\r\n    \"2020-03-18\",\r\n    \"2020-03-19\",\r\n    \"2020-03-20\",\r\n    \"2020-03-21\",\r\n    \"2020-03-22\",\r\n    \"2020-03-23\",\r\n    \"2020-03-24\",\r\n    \"2020-03-25\",\r\n    \"2020-03-26\",\r\n    \"2020-03-27\",\r\n    \"2020-03-28\",\r\n    \"2020-03-29\",\r\n    \"2020-03-30\",\r\n    \"2020-03-31\",\r\n    \"2020-04-01\",\r\n    \"2020-04-02\",\r\n    \"2020-04-03\",\r\n    \"2020-04-04\",\r\n    \"2020-04-05\",\r\n    \"2020-04-06\",\r\n    \"2020-04-07\",\r\n    \"2020-04-08\",\r\n    \"2020-04-09\",\r\n    \"2020-04-10\",\r\n    \"2020-04-11\",\r\n    \"2020-04-12\",\r\n    \"2020-04-13\",\r\n    \"2020-04-14\",\r\n    \"2020-04-15\",\r\n    \"2020-04-16\",\r\n    \"2020-04-17\",\r\n    \"2020-04-18\",\r\n    \"2020-04-19\",\r\n    \"2020-04-20\",\r\n    \"2020-04-21\",\r\n    \"2020-04-22\",\r\n    \"2020-04-23\",\r\n    \"2020-04-24\",\r\n    \"2020-04-25\",\r\n    \"2020-04-26\",\r\n    \"2020-04-27\",\r\n    \"2020-04-28\",\r\n    \"2020-04-29\",\r\n    \"2020-04-30\",\r\n    \"2020-05-01\",\r\n    \"2020-05-02\",\r\n    \"2020-05-03\",\r\n    \"2020-05-04\",\r\n    \"2020-05-05\",\r\n    \"2020-05-06\",\r\n    \"2020-05-07\",\r\n    \"2020-05-08\",\r\n    \"2020-05-09\",\r\n    \"2020-05-10\",\r\n    \"2020-05-11\",\r\n    \"2020-05-12\",\r\n    \"2020-05-13\",\r\n    \"2020-05-14\",\r\n    \"2020-05-15\",\r\n    \"2020-05-16\",\r\n    \"2020-05-17\",\r\n    \"2020-05-18\",\r\n    \"2020-05-19\",\r\n    \"2020-05-20\",\r\n    \"2020-05-21\",\r\n    \"2020-05-22\",\r\n    \"2020-05-23\",\r\n    \"2020-05-24\",\r\n    \"2020-05-25\",\r\n    \"2020-05-26\",\r\n    \"2020-05-27\",\r\n    \"2020-05-28\",\r\n    \"2020-05-29\",\r\n    \"2020-05-30\",\r\n    \"2020-05-31\",\r\n    \"2020-06-01\",\r\n    \"2020-06-02\",\r\n    \"2020-06-03\",\r\n    \"2020-06-04\",\r\n    \"2020-06-05\",\r\n    \"2020-06-06\",\r\n    \"2020-06-07\",\r\n    \"2020-06-08\",\r\n    \"2020-06-09\",\r\n    \"2020-06-10\",\r\n    \"2020-06-11\",\r\n    \"2020-06-12\",\r\n    \"2020-06-13\",\r\n    \"2020-06-14\",\r\n    \"2020-06-15\",\r\n    \"2020-06-16\",\r\n    \"2020-06-17\",\r\n    \"2020-06-18\",\r\n    \"2020-06-19\",\r\n    \"2020-06-20\",\r\n    \"2020-06-21\",\r\n    \"2020-06-22\",\r\n    \"2020-06-23\",\r\n    \"2020-06-24\",\r\n    \"2020-06-25\",\r\n    \"2020-06-26\",\r\n    \"2020-06-27\",\r\n    \"2020-06-28\",\r\n    \"2020-06-29\",\r\n    \"2020-06-30\",\r\n    \"2020-07-01\",\r\n    \"2020-07-02\",\r\n    \"2020-07-03\",\r\n    \"2020-07-04\",\r\n    \"2020-07-05\",\r\n    \"2020-07-06\",\r\n    \"2020-07-07\",\r\n    \"2020-07-08\",\r\n    \"2020-07-09\",\r\n    \"2020-07-10\",\r\n    \"2020-07-11\",\r\n    \"2020-07-12\",\r\n    \"2020-07-13\",\r\n    \"2020-07-14\",\r\n    \"2020-07-15\",\r\n    \"2020-07-16\",\r\n    \"2020-07-17\",\r\n    \"2020-07-18\",\r\n    \"2020-07-19\",\r\n    \"2020-07-20\",\r\n    \"2020-07-21\",\r\n    \"2020-07-22\",\r\n    \"2020-07-23\",\r\n    \"2020-07-24\",\r\n    \"2020-07-25\",\r\n    \"2020-07-26\",\r\n    \"2020-07-27\",\r\n    \"2020-07-28\",\r\n    \"2020-07-29\",\r\n    \"2020-07-30\",\r\n    \"2020-07-31\",\r\n    \"2020-08-01\",\r\n    \"2020-08-02\",\r\n    \"2020-08-03\",\r\n    \"2020-08-04\",\r\n    \"2020-08-05\",\r\n    \"2020-08-06\",\r\n    \"2020-08-07\",\r\n    \"2020-08-08\",\r\n    \"2020-08-09\",\r\n    \"2020-08-10\",\r\n    \"2020-08-11\",\r\n    \"2020-08-12\",\r\n    \"2020-08-13\",\r\n    \"2020-08-14\",\r\n    \"2020-08-15\",\r\n    \"2020-08-16\",\r\n    \"2020-08-17\",\r\n    \"2020-08-18\",\r\n    \"2020-08-19\",\r\n    \"2020-08-20\",\r\n    \"2020-08-21\",\r\n    \"2020-08-22\",\r\n    \"2020-08-23\",\r\n    \"2020-08-24\",\r\n    \"2020-08-25\",\r\n    \"2020-08-26\",\r\n    \"2020-08-27\",\r\n    \"2020-08-28\",\r\n    \"2020-08-29\",\r\n    \"2020-08-30\",\r\n    \"2020-08-31\",\r\n    \"2020-09-01\",\r\n    \"2020-09-02\",\r\n    \"2020-09-03\",\r\n    \"2020-09-04\",\r\n    \"2020-09-05\",\r\n    \"2020-09-06\",\r\n    \"2020-09-07\",\r\n    \"2020-09-08\",\r\n    \"2020-09-09\",\r\n    \"2020-09-10\",\r\n    \"2020-09-11\",\r\n    \"2020-09-12\",\r\n    \"2020-09-13\",\r\n    \"2020-09-14\",\r\n    \"2020-09-15\",\r\n    \"2020-09-16\",\r\n    \"2020-09-17\",\r\n    \"2020-09-18\",\r\n    \"2020-09-19\",\r\n    \"2020-09-20\",\r\n    \"2020-09-21\",\r\n    \"2020-09-22\",\r\n    \"2020-09-23\",\r\n    \"2020-09-24\",\r\n    \"2020-09-25\",\r\n    \"2020-09-26\",\r\n    \"2020-09-27\",\r\n    \"2020-09-28\",\r\n    \"2020-09-29\",\r\n    \"2020-09-30\",\r\n    \"2020-10-01\",\r\n    \"2020-10-02\",\r\n    \"2020-10-03\",\r\n    \"2020-10-04\",\r\n    \"2020-10-05\",\r\n    \"2020-10-06\",\r\n    \"2020-10-07\",\r\n    \"2020-10-08\",\r\n    \"2020-10-09\",\r\n    \"2020-10-10\",\r\n    \"2020-10-11\",\r\n    \"2020-10-12\",\r\n    \"2020-10-13\",\r\n    \"2020-10-14\",\r\n    \"2020-10-15\",\r\n    \"2020-10-16\",\r\n    \"2020-10-17\",\r\n    \"2020-10-18\",\r\n    \"2020-10-19\",\r\n    \"2020-10-20\",\r\n    \"2020-10-21\",\r\n    \"2020-10-22\",\r\n    \"2020-10-23\",\r\n    \"2020-10-24\",\r\n    \"2020-10-25\",\r\n    \"2020-10-26\",\r\n    \"2020-10-27\",\r\n    \"2020-10-28\",\r\n    \"2020-10-29\",\r\n    \"2020-10-30\",\r\n    \"2020-10-31\",\r\n    \"2020-11-01\",\r\n    \"2020-11-02\",\r\n    \"2020-11-03\",\r\n    \"2020-11-04\",\r\n    \"2020-11-05\",\r\n    \"2020-11-06\",\r\n    \"2020-11-07\",\r\n    \"2020-11-08\",\r\n    \"2020-11-09\",\r\n    \"2020-11-10\",\r\n    \"2020-11-11\",\r\n    \"2020-11-12\",\r\n    \"2020-11-13\",\r\n    \"2020-11-14\",\r\n    \"2020-11-15\",\r\n    \"2020-11-16\",\r\n    \"2020-11-17\",\r\n    \"2020-11-18\",\r\n    \"2020-11-19\",\r\n    \"2020-11-20\",\r\n    \"2020-11-21\",\r\n    \"2020-11-22\",\r\n    \"2020-11-23\",\r\n    \"2020-11-24\",\r\n    \"2020-11-25\",\r\n    \"2020-11-26\",\r\n    \"2020-11-27\",\r\n    \"2020-11-28\",\r\n    \"2020-11-29\",\r\n    \"2020-11-30\",\r\n    \"2020-12-01\",\r\n    \"2020-12-02\",\r\n    \"2020-12-03\",\r\n    \"2020-12-04\",\r\n    \"2020-12-05\",\r\n    \"2020-12-06\",\r\n    \"2020-12-07\",\r\n    \"2020-12-08\",\r\n    \"2020-12-09\",\r\n    \"2020-12-10\",\r\n    \"2020-12-11\",\r\n    \"2020-12-12\",\r\n    \"2020-12-13\",\r\n    \"2020-12-14\",\r\n    \"2020-12-15\",\r\n    \"2020-12-16\",\r\n    \"2020-12-17\",\r\n    \"2020-12-18\",\r\n    \"2020-12-19\",\r\n    \"2020-12-20\",\r\n    \"2020-12-21\",\r\n    \"2020-12-22\",\r\n    \"2020-12-23\",\r\n    \"2020-12-24\",\r\n    \"2020-12-25\",\r\n    \"2020-12-26\",\r\n    \"2020-12-27\",\r\n    \"2020-12-28\",\r\n    \"2020-12-29\",\r\n    \"2020-12-30\",\r\n    \"2020-12-31\",\r\n    \"2021-01-01\",\r\n    \"2021-01-02\",\r\n    \"2021-01-03\",\r\n    \"2021-01-04\",\r\n    \"2021-01-05\",\r\n    \"2021-01-06\",\r\n    \"2021-01-07\",\r\n    \"2021-01-08\",\r\n    \"2021-01-09\",\r\n    \"2021-01-10\",\r\n    \"2021-01-11\",\r\n    \"2021-01-12\",\r\n    \"2021-01-13\",\r\n    \"2021-01-14\",\r\n    \"2021-01-15\",\r\n    \"2021-01-16\",\r\n    \"2021-01-17\",\r\n    \"2021-01-18\",\r\n    \"2021-01-19\",\r\n    \"2021-01-20\",\r\n    \"2021-01-21\",\r\n    \"2021-01-22\",\r\n    \"2021-01-23\",\r\n    \"2021-01-24\",\r\n    \"2021-01-25\",\r\n    \"2021-01-26\",\r\n    \"2021-01-27\",\r\n    \"2021-01-28\",\r\n    \"2021-01-29\",\r\n    \"2021-01-30\",\r\n    \"2021-01-31\",\r\n    \"2021-02-01\",\r\n    \"2021-02-02\",\r\n    \"2021-02-03\",\r\n    \"2021-02-04\",\r\n    \"2021-02-05\",\r\n    \"2021-02-06\",\r\n    \"2021-02-07\",\r\n    \"2021-02-08\",\r\n    \"2021-02-09\",\r\n    \"2021-02-10\",\r\n    \"2021-02-11\",\r\n    \"2021-02-12\",\r\n    \"2021-02-13\",\r\n    \"2021-02-14\",\r\n    \"2021-02-15\",\r\n    \"2021-02-16\",\r\n    \"2021-02-17\",\r\n    \"2021-02-18\",\r\n    \"2021-02-19\",\r\n    \"2021-02-20\",\r\n    \"2021-02-21\",\r\n    \"2021-02-22\",\r\n    \"2021-02-23\",\r\n    \"2021-02-24\",\r\n    \"2021-02-25\",\r\n    \"2021-02-26\",\r\n    \"2021-02-27\",\r\n    \"2021-02-28\",\r\n    \"2021-03-01\",\r\n    \"2021-03-02\",\r\n    \"2021-03-03\",\r\n    \"2021-03-04\",\r\n    \"2021-03-05\",\r\n    \"2021-03-06\",\r\n    \"2021-03-07\",\r\n    \"2021-03-08\",\r\n    \"2021-03-09\",\r\n    \"2021-03-10\",\r\n    \"2021-03-11\",\r\n    \"2021-03-12\",\r\n    \"2021-03-13\",\r\n    \"2021-03-14\",\r\n    \"2021-03-15\",\r\n    \"2021-03-16\",\r\n    \"2021-03-17\",\r\n    \"2021-03-18\",\r\n    \"2021-03-19\",\r\n    \"2021-03-20\",\r\n    \"2021-03-21\",\r\n    \"2021-03-22\",\r\n    \"2021-03-23\",\r\n    \"2021-03-24\",\r\n    \"2021-03-25\",\r\n    \"2021-03-26\",\r\n    \"2021-03-27\",\r\n    \"2021-03-28\",\r\n    \"2021-03-29\",\r\n    \"2021-03-30\",\r\n    \"2021-03-31\",\r\n    \"2021-04-01\",\r\n    \"2021-04-02\",\r\n    \"2021-04-03\",\r\n    \"2021-04-04\",\r\n    \"2021-04-05\",\r\n    \"2021-04-06\",\r\n    \"2021-04-07\",\r\n    \"2021-04-08\",\r\n    \"2021-04-09\",\r\n    \"2021-04-10\",\r\n    \"2021-04-11\",\r\n    \"2021-04-12\",\r\n    \"2021-04-13\",\r\n    \"2021-04-14\",\r\n    \"2021-04-15\",\r\n    \"2021-04-16\",\r\n    \"2021-04-17\",\r\n    \"2021-04-18\",\r\n    \"2021-04-19\",\r\n    \"2021-04-20\",\r\n    \"2021-04-21\",\r\n    \"2021-04-22\",\r\n    \"2021-04-23\",\r\n    \"2021-04-24\",\r\n    \"2021-04-25\",\r\n    \"2021-04-26\",\r\n    \"2021-04-27\",\r\n    \"2021-04-28\",\r\n    \"2021-04-29\",\r\n    \"2021-04-30\",\r\n    \"2021-05-01\",\r\n    \"2021-05-02\",\r\n    \"2021-05-03\",\r\n    \"2021-05-04\",\r\n    \"2021-05-05\",\r\n    \"2021-05-06\",\r\n    \"2021-05-07\",\r\n    \"2021-05-08\",\r\n    \"2021-05-09\",\r\n    \"2021-05-10\",\r\n    \"2021-05-11\",\r\n    \"2021-05-12\",\r\n    \"2021-05-13\",\r\n    \"2021-05-14\",\r\n    \"2021-05-15\",\r\n    \"2021-05-16\",\r\n    \"2021-05-17\",\r\n    \"2021-05-18\",\r\n    \"2021-05-19\",\r\n    \"2021-05-20\",\r\n    \"2021-05-21\",\r\n    \"2021-05-22\",\r\n    \"2021-05-23\",\r\n    \"2021-05-24\",\r\n    \"2021-05-25\",\r\n    \"2021-05-26\",\r\n    \"2021-05-27\",\r\n    \"2021-05-28\",\r\n    \"2021-05-29\",\r\n    \"2021-05-30\",\r\n    \"2021-05-31\",\r\n    \"2021-06-01\",\r\n    \"2021-06-02\",\r\n    \"2021-06-03\",\r\n    \"2021-06-04\",\r\n    \"2021-06-05\",\r\n    \"2021-06-06\",\r\n    \"2021-06-07\",\r\n    \"2021-06-08\",\r\n    \"2021-06-09\",\r\n    \"2021-06-10\",\r\n    \"2021-06-11\",\r\n    \"2021-06-12\",\r\n    \"2021-06-13\",\r\n    \"2021-06-14\",\r\n    \"2021-06-15\",\r\n    \"2021-06-16\",\r\n    \"2021-06-17\",\r\n    \"2021-06-18\",\r\n    \"2021-06-19\",\r\n    \"2021-06-20\",\r\n    \"2021-06-21\",\r\n    \"2021-06-22\",\r\n    \"2021-06-23\",\r\n    \"2021-06-24\",\r\n    \"2021-06-25\",\r\n    \"2021-06-26\",\r\n    \"2021-06-27\",\r\n    \"2021-06-28\",\r\n    \"2021-06-29\",\r\n    \"2021-06-30\",\r\n    \"2021-07-01\",\r\n    \"2021-07-02\",\r\n    \"2021-07-03\",\r\n    \"2021-07-04\",\r\n    \"2021-07-05\",\r\n    \"2021-07-06\",\r\n    \"2021-07-07\",\r\n    \"2021-07-08\",\r\n    \"2021-07-09\",\r\n    \"2021-07-10\",\r\n    \"2021-07-11\",\r\n    \"2021-07-12\",\r\n    \"2021-07-13\",\r\n    \"2021-07-14\",\r\n    \"2021-07-15\",\r\n    \"2021-07-16\",\r\n    \"2021-07-17\",\r\n    \"2021-07-18\",\r\n    \"2021-07-19\",\r\n    \"2021-07-20\",\r\n    \"2021-07-21\",\r\n    \"2021-07-22\",\r\n    \"2021-07-23\",\r\n    \"2021-07-24\",\r\n    \"2021-07-25\",\r\n    \"2021-07-26\",\r\n    \"2021-07-27\",\r\n    \"2021-07-28\",\r\n    \"2021-07-29\",\r\n    \"2021-07-30\",\r\n    \"2021-07-31\",\r\n    \"2021-08-01\",\r\n    \"2021-08-02\",\r\n    \"2021-08-03\",\r\n    \"2021-08-04\",\r\n    \"2021-08-05\",\r\n    \"2021-08-06\",\r\n    \"2021-08-07\",\r\n    \"2021-08-08\",\r\n    \"2021-08-09\",\r\n    \"2021-08-10\",\r\n    \"2021-08-11\",\r\n    \"2021-08-12\",\r\n    \"2021-08-13\",\r\n    \"2021-08-14\",\r\n    \"2021-08-15\",\r\n    \"2021-08-16\",\r\n    \"2021-08-17\",\r\n    \"2021-08-18\",\r\n    \"2021-08-19\",\r\n    \"2021-08-20\",\r\n    \"2021-08-21\",\r\n    \"2021-08-22\",\r\n    \"2021-08-23\",\r\n    \"2021-08-24\",\r\n    \"2021-08-25\",\r\n    \"2021-08-26\",\r\n    \"2021-08-27\",\r\n    \"2021-08-28\",\r\n    \"2021-08-29\",\r\n    \"2021-08-30\",\r\n    \"2021-08-31\",\r\n    \"2021-09-01\",\r\n    \"2021-09-02\",\r\n    \"2021-09-03\",\r\n    \"2021-09-04\",\r\n    \"2021-09-05\",\r\n    \"2021-09-06\",\r\n    \"2021-09-07\",\r\n    \"2021-09-08\",\r\n    \"2021-09-09\",\r\n    \"2021-09-10\",\r\n    \"2021-09-11\",\r\n    \"2021-09-12\",\r\n    \"2021-09-13\",\r\n    \"2021-09-14\",\r\n    \"2021-09-15\",\r\n    \"2021-09-16\",\r\n    \"2021-09-17\",\r\n    \"2021-09-18\",\r\n    \"2021-09-19\",\r\n    \"2021-09-20\",\r\n    \"2021-09-21\",\r\n    \"2021-09-22\",\r\n    \"2021-09-23\",\r\n    \"2021-09-24\",\r\n    \"2021-09-25\",\r\n    \"2021-09-26\",\r\n    \"2021-09-27\",\r\n    \"2021-09-28\",\r\n    \"2021-09-29\",\r\n    \"2021-09-30\",\r\n    \"2021-10-01\",\r\n    \"2021-10-02\",\r\n    \"2021-10-03\",\r\n    \"2021-10-04\",\r\n    \"2021-10-05\",\r\n    \"2021-10-06\",\r\n    \"2021-10-07\",\r\n    \"2021-10-08\",\r\n    \"2021-10-09\",\r\n    \"2021-10-10\",\r\n    \"2021-10-11\",\r\n    \"2021-10-12\",\r\n    \"2021-10-13\",\r\n    \"2021-10-14\",\r\n    \"2021-10-15\",\r\n    \"2021-10-16\",\r\n    \"2021-10-17\",\r\n    \"2021-10-18\",\r\n    \"2021-10-19\",\r\n    \"2021-10-20\",\r\n    \"2021-10-21\",\r\n    \"2021-10-22\",\r\n    \"2021-10-23\",\r\n    \"2021-10-24\",\r\n    \"2021-10-25\",\r\n    \"2021-10-26\",\r\n    \"2021-10-27\",\r\n    \"2021-10-28\",\r\n    \"2021-10-29\",\r\n    \"2021-10-30\",\r\n    \"2021-10-31\",\r\n    \"2021-11-01\",\r\n    \"2021-11-02\",\r\n    \"2021-11-03\",\r\n    \"2021-11-04\",\r\n    \"2021-11-05\",\r\n    \"2021-11-06\",\r\n    \"2021-11-07\",\r\n    \"2021-11-08\",\r\n    \"2021-11-09\",\r\n    \"2021-11-10\",\r\n    \"2021-11-11\",\r\n    \"2021-11-12\",\r\n    \"2021-11-13\",\r\n    \"2021-11-14\",\r\n    \"2021-11-15\",\r\n    \"2021-11-16\",\r\n    \"2021-11-17\",\r\n    \"2021-11-18\",\r\n    \"2021-11-19\",\r\n    \"2021-11-20\",\r\n    \"2021-11-21\",\r\n    \"2021-11-22\",\r\n    \"2021-11-23\",\r\n    \"2021-11-24\",\r\n    \"2021-11-25\",\r\n    \"2021-11-26\",\r\n    \"2021-11-27\",\r\n    \"2021-11-28\",\r\n    \"2021-11-29\",\r\n    \"2021-11-30\",\r\n    \"2021-12-01\",\r\n    \"2021-12-02\",\r\n    \"2021-12-03\",\r\n    \"2021-12-04\",\r\n    \"2021-12-05\",\r\n    \"2021-12-06\",\r\n    \"2021-12-07\",\r\n    \"2021-12-08\",\r\n    \"2021-12-09\",\r\n    \"2021-12-10\",\r\n    \"2021-12-11\",\r\n    \"2021-12-12\",\r\n    \"2021-12-13\",\r\n    \"2021-12-14\",\r\n    \"2021-12-15\",\r\n    \"2021-12-16\",\r\n    \"2021-12-17\",\r\n    \"2021-12-18\",\r\n    \"2021-12-19\",\r\n    \"2021-12-20\",\r\n    \"2021-12-21\",\r\n    \"2021-12-22\",\r\n    \"2021-12-23\",\r\n    \"2021-12-24\",\r\n    \"2021-12-25\",\r\n    \"2021-12-26\",\r\n    \"2021-12-27\",\r\n    \"2021-12-28\",\r\n    \"2021-12-29\",\r\n    \"2021-12-30\",\r\n    \"2021-12-31\",\r\n    \"2022-01-01\",\r\n    \"2022-01-02\",\r\n    \"2022-01-03\",\r\n    \"2022-01-04\",\r\n    \"2022-01-05\",\r\n    \"2022-01-06\",\r\n    \"2022-01-07\",\r\n    \"2022-01-08\",\r\n    \"2022-01-09\",\r\n    \"2022-01-10\",\r\n    \"2022-01-11\",\r\n    \"2022-01-12\",\r\n    \"2022-01-13\",\r\n    \"2022-01-14\",\r\n    \"2022-01-15\",\r\n    \"2022-01-16\",\r\n    \"2022-01-17\",\r\n    \"2022-01-18\",\r\n    \"2022-01-19\",\r\n    \"2022-01-20\",\r\n    \"2022-01-21\",\r\n    \"2022-01-22\",\r\n    \"2022-01-23\",\r\n    \"2022-01-24\",\r\n    \"2022-01-25\",\r\n    \"2022-01-26\",\r\n    \"2022-01-27\",\r\n    \"2022-01-28\",\r\n    \"2022-01-29\",\r\n    \"2022-01-30\",\r\n    \"2022-01-31\",\r\n    \"2022-02-01\",\r\n    \"2022-02-02\",\r\n    \"2022-02-03\",\r\n    \"2022-02-04\",\r\n    \"2022-02-05\",\r\n    \"2022-02-06\",\r\n    \"2022-02-07\",\r\n    \"2022-02-08\",\r\n    \"2022-02-09\",\r\n    \"2022-02-10\",\r\n    \"2022-02-11\",\r\n    \"2022-02-12\",\r\n    \"2022-02-13\",\r\n    \"2022-02-14\",\r\n    \"2022-02-15\",\r\n    \"2022-02-16\",\r\n    \"2022-02-17\",\r\n    \"2022-02-18\",\r\n    \"2022-02-19\",\r\n    \"2022-02-20\",\r\n    \"2022-02-21\",\r\n    \"2022-02-22\",\r\n    \"2022-02-23\",\r\n    \"2022-02-24\",\r\n    \"2022-02-25\",\r\n    \"2022-02-26\",\r\n    \"2022-02-27\",\r\n    \"2022-02-28\",\r\n    \"2022-03-01\",\r\n    \"2022-03-02\",\r\n    \"2022-03-03\",\r\n    \"2022-03-04\",\r\n    \"2022-03-05\",\r\n    \"2022-03-06\",\r\n    \"2022-03-07\",\r\n    \"2022-03-08\",\r\n    \"2022-03-09\",\r\n    \"2022-03-10\",\r\n    \"2022-03-11\",\r\n    \"2022-03-12\",\r\n    \"2022-03-13\",\r\n    \"2022-03-14\",\r\n    \"2022-03-15\",\r\n    \"2022-03-16\",\r\n    \"2022-03-17\",\r\n    \"2022-03-18\",\r\n    \"2022-03-19\",\r\n    \"2022-03-20\",\r\n    \"2022-03-21\",\r\n    \"2022-03-22\",\r\n    \"2022-03-23\",\r\n    \"2022-03-24\",\r\n    \"2022-03-25\",\r\n    \"2022-03-26\",\r\n    \"2022-03-27\",\r\n    \"2022-03-28\",\r\n    \"2022-03-29\",\r\n    \"2022-03-30\",\r\n    \"2022-03-31\",\r\n    \"2022-04-01\",\r\n    \"2022-04-02\",\r\n    \"2022-04-03\",\r\n    \"2022-04-04\",\r\n    \"2022-04-05\",\r\n    \"2022-04-06\",\r\n    \"2022-04-07\",\r\n    \"2022-04-08\",\r\n    \"2022-04-09\",\r\n    \"2022-04-10\",\r\n    \"2022-04-11\",\r\n    \"2022-04-12\",\r\n    \"2022-04-13\",\r\n    \"2022-04-14\",\r\n    \"2022-04-15\",\r\n    \"2022-04-16\",\r\n    \"2022-04-17\",\r\n    \"2022-04-18\",\r\n    \"2022-04-19\",\r\n    \"2022-04-20\",\r\n    \"2022-04-21\",\r\n    \"2022-04-22\",\r\n    \"2022-04-23\",\r\n    \"2022-04-24\",\r\n    \"2022-04-25\",\r\n    \"2022-04-26\",\r\n    \"2022-04-27\",\r\n    \"2022-04-28\",\r\n    \"2022-04-29\",\r\n    \"2022-04-30\",\r\n    \"2022-05-01\",\r\n    \"2022-05-02\",\r\n    \"2022-05-03\",\r\n    \"2022-05-04\",\r\n    \"2022-05-05\",\r\n    \"2022-05-06\",\r\n    \"2022-05-07\",\r\n    \"2022-05-08\",\r\n    \"2022-05-09\",\r\n    \"2022-05-10\",\r\n    \"2022-05-11\",\r\n    \"2022-05-12\",\r\n    \"2022-05-13\",\r\n    \"2022-05-14\",\r\n    \"2022-05-15\",\r\n    \"2022-05-16\",\r\n    \"2022-05-17\",\r\n    \"2022-05-18\",\r\n    \"2022-05-19\",\r\n    \"2022-05-20\",\r\n    \"2022-05-21\",\r\n    \"2022-05-22\",\r\n    \"2022-05-23\",\r\n    \"2022-05-24\",\r\n    \"2022-05-25\",\r\n    \"2022-05-26\",\r\n    \"2022-05-27\",\r\n    \"2022-05-28\",\r\n    \"2022-05-29\",\r\n    \"2022-05-30\",\r\n    \"2022-05-31\",\r\n    \"2022-06-01\",\r\n    \"2022-06-02\",\r\n    \"2022-06-03\",\r\n    \"2022-06-04\",\r\n    \"2022-06-05\",\r\n    \"2022-06-06\",\r\n    \"2022-06-07\",\r\n    \"2022-06-08\",\r\n    \"2022-06-09\",\r\n    \"2022-06-10\",\r\n    \"2022-06-11\",\r\n    \"2022-06-12\",\r\n    \"2022-06-13\",\r\n    \"2022-06-14\",\r\n    \"2022-06-15\",\r\n    \"2022-06-16\",\r\n    \"2022-06-17\",\r\n    \"2022-06-18\",\r\n    \"2022-06-19\",\r\n    \"2022-06-20\",\r\n    \"2022-06-21\",\r\n    \"2022-06-22\",\r\n    \"2022-06-23\",\r\n    \"2022-06-24\",\r\n    \"2022-06-25\",\r\n    \"2022-06-26\",\r\n    \"2022-06-27\",\r\n    \"2022-06-28\",\r\n    \"2022-06-29\",\r\n    \"2022-06-30\",\r\n    \"2022-07-01\",\r\n    \"2022-07-02\",\r\n    \"2022-07-03\",\r\n    \"2022-07-04\",\r\n    \"2022-07-05\",\r\n    \"2022-07-06\",\r\n    \"2022-07-07\",\r\n    \"2022-07-08\",\r\n    \"2022-07-09\",\r\n    \"2022-07-10\",\r\n    \"2022-07-11\",\r\n    \"2022-07-12\",\r\n    \"2022-07-13\",\r\n    \"2022-07-14\",\r\n    \"2022-07-15\",\r\n    \"2022-07-16\",\r\n    \"2022-07-17\",\r\n    \"2022-07-18\",\r\n    \"2022-07-19\",\r\n    \"2022-07-20\",\r\n    \"2022-07-21\",\r\n    \"2022-07-22\",\r\n    \"2022-07-23\",\r\n    \"2022-07-24\",\r\n    \"2022-07-25\",\r\n    \"2022-07-26\",\r\n    \"2022-07-27\",\r\n    \"2022-07-28\",\r\n    \"2022-07-29\",\r\n    \"2022-07-30\",\r\n    \"2022-07-31\",\r\n    \"2022-08-01\",\r\n    \"2022-08-02\",\r\n    \"2022-08-03\",\r\n    \"2022-08-04\",\r\n    \"2022-08-05\",\r\n    \"2022-08-06\",\r\n    \"2022-08-07\",\r\n    \"2022-08-08\",\r\n    \"2022-08-09\",\r\n    \"2022-08-10\",\r\n    \"2022-08-11\",\r\n    \"2022-08-12\",\r\n    \"2022-08-13\",\r\n    \"2022-08-14\",\r\n    \"2022-08-15\",\r\n    \"2022-08-16\",\r\n    \"2022-08-17\",\r\n    \"2022-08-18\",\r\n    \"2022-08-19\",\r\n    \"2022-08-20\",\r\n    \"2022-08-21\",\r\n    \"2022-08-22\",\r\n    \"2022-08-23\",\r\n    \"2022-08-24\",\r\n    \"2022-08-25\",\r\n    \"2022-08-26\",\r\n    \"2022-08-27\",\r\n    \"2022-08-28\",\r\n    \"2022-08-29\",\r\n    \"2022-08-30\",\r\n    \"2022-08-31\",\r\n    \"2022-09-01\",\r\n    \"2022-09-02\",\r\n    \"2022-09-03\",\r\n    \"2022-09-04\",\r\n    \"2022-09-05\",\r\n    \"2022-09-06\",\r\n    \"2022-09-07\",\r\n    \"2022-09-08\",\r\n    \"2022-09-09\",\r\n    \"2022-09-10\",\r\n    \"2022-09-11\",\r\n    \"2022-09-12\",\r\n    \"2022-09-13\",\r\n    \"2022-09-14\",\r\n    \"2022-09-15\",\r\n    \"2022-09-16\",\r\n    \"2022-09-17\",\r\n    \"2022-09-18\",\r\n    \"2022-09-19\",\r\n    \"2022-09-20\",\r\n    \"2022-09-21\",\r\n    \"2022-09-22\",\r\n    \"2022-09-23\",\r\n    \"2022-09-24\",\r\n    \"2022-09-25\",\r\n    \"2022-09-26\",\r\n    \"2022-09-27\",\r\n    \"2022-09-28\",\r\n    \"2022-09-29\",\r\n    \"2022-09-30\",\r\n    \"2022-10-01\",\r\n    \"2022-10-02\",\r\n    \"2022-10-03\",\r\n    \"2022-10-04\",\r\n    \"2022-10-05\",\r\n    \"2022-10-06\",\r\n    \"2022-10-07\",\r\n    \"2022-10-08\",\r\n    \"2022-10-09\",\r\n    \"2022-10-10\",\r\n    \"2022-10-11\",\r\n    \"2022-10-12\",\r\n    \"2022-10-13\",\r\n    \"2022-10-14\",\r\n    \"2022-10-15\",\r\n    \"2022-10-16\",\r\n    \"2022-10-17\",\r\n    \"2022-10-18\",\r\n    \"2022-10-19\",\r\n    \"2022-10-20\",\r\n    \"2022-10-21\",\r\n    \"2022-10-22\",\r\n    \"2022-10-23\",\r\n    \"2022-10-24\",\r\n    \"2022-10-25\",\r\n    \"2022-10-26\",\r\n    \"2022-10-27\",\r\n    \"2022-10-28\",\r\n    \"2022-10-29\",\r\n    \"2022-10-30\",\r\n    \"2022-10-31\",\r\n    \"2022-11-01\",\r\n    \"2022-11-02\",\r\n    \"2022-11-03\",\r\n    \"2022-11-04\",\r\n    \"2022-11-05\",\r\n    \"2022-11-06\",\r\n    \"2022-11-07\",\r\n    \"2022-11-08\",\r\n    \"2022-11-09\",\r\n    \"2022-11-10\",\r\n    \"2022-11-11\",\r\n    \"2022-11-12\",\r\n    \"2022-11-13\",\r\n    \"2022-11-14\",\r\n    \"2022-11-15\",\r\n    \"2022-11-16\",\r\n    \"2022-11-17\",\r\n    \"2022-11-18\",\r\n    \"2022-11-19\",\r\n    \"2022-11-20\",\r\n    \"2022-11-21\",\r\n    \"2022-11-22\",\r\n    \"2022-11-23\",\r\n    \"2022-11-24\",\r\n    \"2022-11-25\",\r\n    \"2022-11-26\",\r\n    \"2022-11-27\",\r\n    \"2022-11-28\",\r\n    \"2022-11-29\",\r\n    \"2022-11-30\",\r\n    \"2022-12-01\",\r\n    \"2022-12-02\",\r\n    \"2022-12-03\",\r\n    \"2022-12-04\",\r\n    \"2022-12-05\",\r\n    \"2022-12-06\",\r\n    \"2022-12-07\",\r\n    \"2022-12-08\",\r\n    \"2022-12-09\",\r\n    \"2022-12-10\",\r\n    \"2022-12-11\",\r\n    \"2022-12-12\",\r\n    \"2022-12-13\",\r\n    \"2022-12-14\",\r\n    \"2022-12-15\",\r\n    \"2022-12-16\",\r\n    \"2022-12-17\",\r\n    \"2022-12-18\",\r\n    \"2022-12-19\",\r\n    \"2022-12-20\",\r\n    \"2022-12-21\",\r\n    \"2022-12-22\",\r\n    \"2022-12-23\",\r\n    \"2022-12-24\",\r\n    \"2022-12-25\",\r\n    \"2022-12-26\",\r\n    \"2022-12-27\",\r\n    \"2022-12-28\",\r\n    \"2022-12-29\",\r\n    \"2022-12-30\",\r\n    \"2022-12-31\",\r\n    \"2023-01-01\",\r\n    \"2023-01-02\",\r\n    \"2023-01-03\",\r\n    \"2023-01-04\",\r\n    \"2023-01-05\",\r\n    \"2023-01-06\",\r\n    \"2023-01-07\",\r\n    \"2023-01-08\",\r\n    \"2023-01-09\",\r\n    \"2023-01-10\",\r\n    \"2023-01-11\",\r\n    \"2023-01-12\",\r\n    \"2023-01-13\",\r\n    \"2023-01-14\",\r\n    \"2023-01-15\",\r\n    \"2023-01-16\",\r\n    \"2023-01-17\",\r\n    \"2023-01-18\",\r\n    \"2023-01-19\",\r\n    \"2023-01-20\",\r\n    \"2023-01-21\",\r\n    \"2023-01-22\",\r\n    \"2023-01-23\",\r\n    \"2023-01-24\",\r\n    \"2023-01-25\",\r\n    \"2023-01-26\",\r\n    \"2023-01-27\",\r\n    \"2023-01-28\",\r\n    \"2023-01-29\",\r\n    \"2023-01-30\",\r\n    \"2023-01-31\",\r\n    \"2023-02-01\",\r\n    \"2023-02-02\",\r\n    \"2023-02-03\",\r\n    \"2023-02-04\",\r\n    \"2023-02-05\",\r\n    \"2023-02-06\",\r\n    \"2023-02-07\",\r\n    \"2023-02-08\",\r\n    \"2023-02-09\",\r\n    \"2023-02-10\",\r\n    \"2023-02-11\",\r\n    \"2023-02-12\",\r\n    \"2023-02-13\",\r\n    \"2023-02-14\",\r\n    \"2023-02-15\",\r\n    \"2023-02-16\",\r\n    \"2023-02-17\",\r\n    \"2023-02-18\",\r\n    \"2023-02-19\",\r\n    \"2023-02-20\",\r\n    \"2023-02-21\",\r\n    \"2023-02-22\",\r\n    \"2023-02-23\",\r\n    \"2023-02-24\",\r\n    \"2023-02-25\",\r\n    \"2023-02-26\",\r\n    \"2023-02-27\",\r\n    \"2023-02-28\",\r\n    \"2023-03-01\",\r\n    \"2023-03-02\",\r\n    \"2023-03-03\",\r\n    \"2023-03-04\",\r\n    \"2023-03-05\",\r\n    \"2023-03-06\",\r\n    \"2023-03-07\",\r\n    \"2023-03-08\",\r\n    \"2023-03-09\",\r\n    \"2023-03-10\",\r\n    \"2023-03-11\",\r\n    \"2023-03-12\",\r\n    \"2023-03-13\",\r\n    \"2023-03-14\",\r\n    \"2023-03-15\",\r\n    \"2023-03-16\",\r\n    \"2023-03-17\",\r\n    \"2023-03-18\",\r\n    \"2023-03-19\",\r\n    \"2023-03-20\",\r\n    \"2023-03-21\",\r\n    \"2023-03-22\",\r\n    \"2023-03-23\",\r\n    \"2023-03-24\",\r\n    \"2023-03-25\",\r\n    \"2023-03-26\",\r\n    \"2023-03-27\",\r\n    \"2023-03-28\",\r\n    \"2023-03-29\",\r\n    \"2023-03-30\",\r\n    \"2023-03-31\",\r\n    \"2023-04-01\",\r\n    \"2023-04-02\",\r\n    \"2023-04-03\",\r\n    \"2023-04-04\",\r\n    \"2023-04-05\",\r\n    \"2023-04-06\",\r\n    \"2023-04-07\",\r\n    \"2023-04-08\",\r\n    \"2023-04-09\",\r\n    \"2023-04-10\",\r\n    \"2023-04-11\",\r\n    \"2023-04-12\",\r\n    \"2023-04-13\",\r\n    \"2023-04-14\",\r\n    \"2023-04-15\",\r\n    \"2023-04-16\",\r\n    \"2023-04-17\",\r\n    \"2023-04-18\",\r\n    \"2023-04-19\",\r\n    \"2023-04-20\",\r\n    \"2023-04-21\",\r\n    \"2023-04-22\",\r\n    \"2023-04-23\",\r\n    \"2023-04-24\",\r\n    \"2023-04-25\",\r\n    \"2023-04-26\",\r\n    \"2023-04-27\",\r\n    \"2023-04-28\",\r\n    \"2023-04-29\",\r\n    \"2023-04-30\",\r\n    \"2023-05-01\",\r\n    \"2023-05-02\",\r\n    \"2023-05-03\",\r\n    \"2023-05-04\",\r\n    \"2023-05-05\",\r\n    \"2023-05-06\",\r\n    \"2023-05-07\",\r\n    \"2023-05-08\",\r\n    \"2023-05-09\",\r\n    \"2023-05-10\",\r\n    \"2023-05-11\",\r\n    \"2023-05-12\",\r\n    \"2023-05-13\",\r\n    \"2023-05-14\",\r\n    \"2023-05-15\",\r\n    \"2023-05-16\",\r\n    \"2023-05-17\",\r\n    \"2023-05-18\",\r\n    \"2023-05-19\",\r\n    \"2023-05-20\",\r\n    \"2023-05-21\",\r\n    \"2023-05-22\",\r\n    \"2023-05-23\",\r\n    \"2023-05-24\",\r\n    \"2023-05-25\",\r\n    \"2023-05-26\",\r\n    \"2023-05-27\",\r\n    \"2023-05-28\",\r\n    \"2023-05-29\",\r\n    \"2023-05-30\",\r\n    \"2023-05-31\",\r\n    \"2023-06-01\",\r\n    \"2023-06-02\",\r\n    \"2023-06-03\",\r\n    \"2023-06-04\",\r\n    \"2023-06-05\",\r\n    \"2023-06-06\",\r\n    \"2023-06-07\",\r\n    \"2023-06-08\",\r\n    \"2023-06-09\",\r\n    \"2023-06-10\",\r\n    \"2023-06-11\",\r\n    \"2023-06-12\",\r\n    \"2023-06-13\",\r\n    \"2023-06-14\",\r\n    \"2023-06-15\",\r\n    \"2023-06-16\",\r\n    \"2023-06-17\",\r\n    \"2023-06-18\",\r\n    \"2023-06-19\",\r\n    \"2023-06-20\",\r\n    \"2023-06-21\",\r\n    \"2023-06-22\",\r\n    \"2023-06-23\",\r\n    \"2023-06-24\",\r\n    \"2023-06-25\",\r\n    \"2023-06-26\",\r\n    \"2023-06-27\",\r\n    \"2023-06-28\",\r\n    \"2023-06-29\",\r\n    \"2023-06-30\",\r\n    \"2023-07-01\",\r\n    \"2023-07-02\",\r\n    \"2023-07-03\",\r\n    \"2023-07-04\",\r\n    \"2023-07-05\",\r\n    \"2023-07-06\",\r\n    \"2023-07-07\",\r\n    \"2023-07-08\",\r\n    \"2023-07-09\",\r\n    \"2023-07-10\",\r\n    \"2023-07-11\",\r\n    \"2023-07-12\",\r\n    \"2023-07-13\",\r\n    \"2023-07-14\",\r\n    \"2023-07-15\",\r\n    \"2023-07-16\",\r\n    \"2023-07-17\",\r\n    \"2023-07-18\",\r\n    \"2023-07-19\",\r\n    \"2023-07-20\",\r\n    \"2023-07-21\",\r\n    \"2023-07-22\",\r\n    \"2023-07-23\",\r\n    \"2023-07-24\",\r\n    \"2023-07-25\",\r\n    \"2023-07-26\",\r\n    \"2023-07-27\",\r\n    \"2023-07-28\",\r\n    \"2023-07-29\",\r\n    \"2023-07-30\",\r\n    \"2023-07-31\",\r\n    \"2023-08-01\",\r\n    \"2023-08-02\",\r\n    \"2023-08-03\",\r\n    \"2023-08-04\",\r\n    \"2023-08-05\",\r\n    \"2023-08-06\",\r\n    \"2023-08-07\",\r\n    \"2023-08-08\",\r\n    \"2023-08-09\",\r\n    \"2023-08-10\",\r\n    \"2023-08-11\",\r\n    \"2023-08-12\",\r\n    \"2023-08-13\",\r\n    \"2023-08-14\",\r\n    \"2023-08-15\",\r\n    \"2023-08-16\",\r\n    \"2023-08-17\",\r\n    \"2023-08-18\",\r\n    \"2023-08-19\",\r\n    \"2023-08-20\",\r\n    \"2023-08-21\",\r\n    \"2023-08-22\",\r\n    \"2023-08-23\",\r\n    \"2023-08-24\",\r\n    \"2023-08-25\",\r\n    \"2023-08-26\",\r\n    \"2023-08-27\",\r\n    \"2023-08-28\",\r\n    \"2023-08-29\",\r\n    \"2023-08-30\",\r\n    \"2023-08-31\",\r\n    \"2023-09-01\",\r\n    \"2023-09-02\",\r\n    \"2023-09-03\",\r\n    \"2023-09-04\",\r\n    \"2023-09-05\",\r\n    \"2023-09-06\",\r\n    \"2023-09-07\",\r\n    \"2023-09-08\",\r\n    \"2023-09-09\",\r\n    \"2023-09-10\",\r\n    \"2023-09-11\",\r\n    \"2023-09-12\",\r\n    \"2023-09-13\",\r\n    \"2023-09-14\",\r\n    \"2023-09-15\",\r\n    \"2023-09-16\",\r\n    \"2023-09-17\",\r\n    \"2023-09-18\",\r\n    \"2023-09-19\",\r\n    \"2023-09-20\",\r\n    \"2023-09-21\",\r\n    \"2023-09-22\",\r\n    \"2023-09-23\",\r\n    \"2023-09-24\",\r\n    \"2023-09-25\",\r\n    \"2023-09-26\",\r\n    \"2023-09-27\",\r\n    \"2023-09-28\",\r\n    \"2023-09-29\",\r\n    \"2023-09-30\",\r\n    \"2023-10-01\",\r\n    \"2023-10-02\",\r\n    \"2023-10-03\",\r\n    \"2023-10-04\",\r\n    \"2023-10-05\",\r\n    \"2023-10-06\",\r\n    \"2023-10-07\",\r\n    \"2023-10-08\",\r\n    \"2023-10-09\",\r\n    \"2023-10-10\",\r\n    \"2023-10-11\",\r\n    \"2023-10-12\",\r\n    \"2023-10-13\",\r\n    \"2023-10-14\",\r\n    \"2023-10-15\",\r\n    \"2023-10-16\",\r\n    \"2023-10-17\",\r\n    \"2023-10-18\",\r\n    \"2023-10-19\",\r\n    \"2023-10-20\",\r\n    \"2023-10-21\",\r\n    \"2023-10-22\",\r\n    \"2023-10-23\",\r\n    \"2023-10-24\",\r\n    \"2023-10-25\",\r\n    \"2023-10-26\",\r\n    \"2023-10-27\",\r\n    \"2023-10-28\",\r\n    \"2023-10-29\",\r\n    \"2023-10-30\",\r\n    \"2023-10-31\",\r\n    \"2023-11-01\",\r\n    \"2023-11-02\",\r\n    \"2023-11-03\",\r\n    \"2023-11-04\",\r\n    \"2023-11-05\",\r\n    \"2023-11-06\",\r\n    \"2023-11-07\",\r\n    \"2023-11-08\",\r\n    \"2023-11-09\",\r\n    \"2023-11-10\",\r\n    \"2023-11-11\",\r\n    \"2023-11-12\",\r\n    \"2023-11-13\",\r\n    \"2023-11-14\",\r\n    \"2023-11-15\",\r\n    \"2023-11-16\",\r\n    \"2023-11-17\",\r\n    \"2023-11-18\",\r\n    \"2023-11-19\",\r\n    \"2023-11-20\",\r\n    \"2023-11-21\",\r\n    \"2023-11-22\",\r\n    \"2023-11-23\",\r\n    \"2023-11-24\",\r\n    \"2023-11-25\",\r\n    \"2023-11-26\",\r\n    \"2023-11-27\",\r\n    \"2023-11-28\",\r\n    \"2023-11-29\",\r\n    \"2023-11-30\",\r\n    \"2023-12-01\",\r\n    \"2023-12-02\",\r\n    \"2023-12-03\",\r\n    \"2023-12-04\",\r\n    \"2023-12-05\",\r\n    \"2023-12-06\",\r\n    \"2023-12-07\",\r\n    \"2023-12-08\",\r\n    \"2023-12-09\",\r\n    \"2023-12-10\",\r\n    \"2023-12-11\",\r\n    \"2023-12-12\",\r\n    \"2023-12-13\",\r\n    \"2023-12-14\",\r\n    \"2023-12-15\",\r\n    \"2023-12-16\",\r\n    \"2023-12-17\",\r\n    \"2023-12-18\",\r\n    \"2023-12-19\",\r\n    \"2023-12-20\",\r\n    \"2023-12-21\",\r\n    \"2023-12-22\",\r\n    \"2023-12-23\",\r\n    \"2023-12-24\",\r\n    \"2023-12-25\",\r\n    \"2023-12-26\",\r\n    \"2023-12-27\",\r\n    \"2023-12-28\",\r\n    \"2023-12-29\",\r\n    \"2023-12-30\",\r\n    \"2023-12-31\",\r\n    \"2024-01-01\",\r\n    \"2024-01-02\",\r\n    \"2024-01-03\",\r\n    \"2024-01-04\",\r\n    \"2024-01-05\",\r\n    \"2024-01-06\",\r\n    \"2024-01-07\",\r\n    \"2024-01-08\",\r\n    \"2024-01-09\",\r\n    \"2024-01-10\",\r\n    \"2024-01-11\",\r\n    \"2024-01-12\",\r\n    \"2024-01-13\",\r\n    \"2024-01-14\",\r\n    \"2024-01-15\",\r\n    \"2024-01-16\",\r\n    \"2024-01-17\",\r\n    \"2024-01-18\",\r\n    \"2024-01-19\",\r\n    \"2024-01-20\",\r\n    \"2024-01-21\",\r\n    \"2024-01-22\",\r\n    \"2024-01-23\",\r\n    \"2024-01-24\",\r\n    \"2024-01-25\",\r\n    \"2024-01-26\",\r\n    \"2024-01-27\",\r\n    \"2024-01-28\",\r\n    \"2024-01-29\",\r\n    \"2024-01-30\",\r\n    \"2024-01-31\",\r\n    \"2024-02-01\",\r\n    \"2024-02-02\",\r\n    \"2024-02-03\",\r\n    \"2024-02-04\",\r\n    \"2024-02-05\",\r\n    \"2024-02-06\",\r\n    \"2024-02-07\",\r\n    \"2024-02-08\",\r\n    \"2024-02-09\",\r\n    \"2024-02-10\",\r\n    \"2024-02-11\",\r\n    \"2024-02-12\",\r\n    \"2024-02-13\",\r\n    \"2024-02-14\",\r\n    \"2024-02-15\",\r\n    \"2024-02-16\",\r\n    \"2024-02-17\",\r\n    \"2024-02-18\",\r\n    \"2024-02-19\",\r\n    \"2024-02-20\",\r\n    \"2024-02-21\",\r\n    \"2024-02-22\",\r\n    \"2024-02-23\",\r\n    \"2024-02-24\",\r\n    \"2024-02-25\",\r\n    \"2024-02-26\",\r\n    \"2024-02-27\",\r\n    \"2024-02-28\",\r\n    \"2024-02-29\",\r\n    \"2024-03-01\",\r\n    \"2024-03-02\",\r\n    \"2024-03-03\",\r\n    \"2024-03-04\",\r\n    \"2024-03-05\",\r\n    \"2024-03-06\",\r\n    \"2024-03-07\",\r\n    \"2024-03-08\",\r\n    \"2024-03-09\",\r\n    \"2024-03-10\",\r\n    \"2024-03-11\",\r\n    \"2024-03-12\",\r\n    \"2024-03-13\",\r\n    \"2024-03-14\",\r\n    \"2024-03-15\",\r\n    \"2024-03-16\",\r\n    \"2024-03-17\",\r\n    \"2024-03-18\",\r\n    \"2024-03-19\",\r\n    \"2024-03-20\",\r\n    \"2024-03-21\",\r\n    \"2024-03-22\",\r\n    \"2024-03-23\",\r\n    \"2024-03-24\",\r\n    \"2024-03-25\",\r\n    \"2024-03-26\",\r\n    \"2024-03-27\",\r\n    \"2024-03-28\",\r\n    \"2024-03-29\",\r\n    \"2024-03-30\",\r\n    \"2024-03-31\",\r\n    \"2024-04-01\",\r\n    \"2024-04-02\",\r\n    \"2024-04-03\",\r\n    \"2024-04-04\",\r\n    \"2024-04-05\",\r\n    \"2024-04-06\",\r\n    \"2024-04-07\",\r\n    \"2024-04-08\",\r\n    \"2024-04-09\",\r\n    \"2024-04-10\",\r\n    \"2024-04-11\",\r\n    \"2024-04-12\",\r\n    \"2024-04-13\",\r\n    \"2024-04-14\",\r\n    \"2024-04-15\",\r\n    \"2024-04-16\",\r\n    \"2024-04-17\",\r\n    \"2024-04-18\",\r\n    \"2024-04-19\",\r\n    \"2024-04-20\",\r\n    \"2024-04-21\",\r\n    \"2024-04-22\",\r\n    \"2024-04-23\",\r\n    \"2024-04-24\",\r\n    \"2024-04-25\",\r\n    \"2024-04-26\",\r\n    \"2024-04-27\",\r\n    \"2024-04-28\",\r\n    \"2024-04-29\",\r\n    \"2024-04-30\",\r\n    \"2024-05-01\",\r\n    \"2024-05-02\",\r\n    \"2024-05-03\",\r\n    \"2024-05-04\",\r\n    \"2024-05-05\",\r\n    \"2024-05-06\",\r\n    \"2024-05-07\",\r\n    \"2024-05-08\",\r\n    \"2024-05-09\",\r\n    \"2024-05-10\",\r\n    \"2024-05-11\",\r\n    \"2024-05-12\",\r\n    \"2024-05-13\",\r\n    \"2024-05-14\",\r\n    \"2024-05-15\",\r\n    \"2024-05-16\",\r\n    \"2024-05-17\",\r\n    \"2024-05-18\",\r\n    \"2024-05-19\",\r\n    \"2024-05-20\",\r\n    \"2024-05-21\",\r\n    \"2024-05-22\",\r\n    \"2024-05-23\",\r\n    \"2024-05-24\",\r\n    \"2024-05-25\",\r\n    \"2024-05-26\",\r\n    \"2024-05-27\",\r\n    \"2024-05-28\",\r\n    \"2024-05-29\",\r\n    \"2024-05-30\",\r\n    \"2024-05-31\",\r\n    \"2024-06-01\",\r\n    \"2024-06-02\",\r\n    \"2024-06-03\",\r\n    \"2024-06-04\",\r\n    \"2024-06-05\",\r\n    \"2024-06-06\",\r\n    \"2024-06-07\",\r\n    \"2024-06-08\",\r\n    \"2024-06-09\",\r\n    \"2024-06-10\",\r\n    \"2024-06-11\",\r\n    \"2024-06-12\",\r\n    \"2024-06-13\",\r\n    \"2024-06-14\",\r\n    \"2024-06-15\",\r\n    \"2024-06-16\",\r\n    \"2024-06-17\",\r\n    \"2024-06-18\",\r\n    \"2024-06-19\",\r\n    \"2024-06-20\",\r\n    \"2024-06-21\",\r\n    \"2024-06-22\",\r\n    \"2024-06-23\",\r\n    \"2024-06-24\",\r\n    \"2024-06-25\",\r\n    \"2024-06-26\",\r\n    \"2024-06-27\",\r\n    \"2024-06-28\",\r\n    \"2024-06-29\",\r\n    \"2024-06-30\",\r\n    \"2024-07-01\",\r\n    \"2024-07-02\",\r\n    \"2024-07-03\",\r\n    \"2024-07-04\",\r\n    \"2024-07-05\",\r\n    \"2024-07-06\",\r\n    \"2024-07-07\",\r\n    \"2024-07-08\",\r\n    \"2024-07-09\",\r\n    \"2024-07-10\",\r\n    \"2024-07-11\",\r\n    \"2024-07-12\",\r\n    \"2024-07-13\",\r\n    \"2024-07-14\",\r\n    \"2024-07-15\",\r\n    \"2024-07-16\",\r\n    \"2024-07-17\",\r\n    \"2024-07-18\",\r\n    \"2024-07-19\",\r\n    \"2024-07-20\",\r\n    \"2024-07-21\",\r\n    \"2024-07-22\",\r\n    \"2024-07-23\",\r\n    \"2024-07-24\",\r\n    \"2024-07-25\",\r\n    \"2024-07-26\",\r\n    \"2024-07-27\",\r\n    \"2024-07-28\",\r\n    \"2024-07-29\",\r\n    \"2024-07-30\",\r\n    \"2024-07-31\",\r\n    \"2024-08-01\",\r\n    \"2024-08-02\",\r\n    \"2024-08-03\",\r\n    \"2024-08-04\",\r\n    \"2024-08-05\",\r\n    \"2024-08-06\",\r\n    \"2024-08-07\",\r\n    \"2024-08-08\",\r\n    \"2024-08-09\",\r\n    \"2024-08-10\",\r\n    \"2024-08-11\",\r\n    \"2024-08-12\",\r\n    \"2024-08-13\",\r\n    \"2024-08-14\",\r\n    \"2024-08-15\",\r\n    \"2024-08-16\",\r\n    \"2024-08-17\",\r\n    \"2024-08-18\",\r\n    \"2024-08-19\",\r\n    \"2024-08-20\",\r\n    \"2024-08-21\",\r\n    \"2024-08-22\",\r\n    \"2024-08-23\",\r\n    \"2024-08-24\",\r\n    \"2024-08-25\",\r\n    \"2024-08-26\",\r\n    \"2024-08-27\",\r\n    \"2024-08-28\",\r\n    \"2024-08-29\",\r\n    \"2024-08-30\",\r\n    \"2024-08-31\",\r\n    \"2024-09-01\",\r\n    \"2024-09-02\",\r\n    \"2024-09-03\",\r\n    \"2024-09-04\",\r\n    \"2024-09-05\",\r\n    \"2024-09-06\",\r\n    \"2024-09-07\",\r\n    \"2024-09-08\",\r\n    \"2024-09-09\",\r\n    \"2024-09-10\",\r\n    \"2024-09-11\",\r\n    \"2024-09-12\",\r\n    \"2024-09-13\",\r\n    \"2024-09-14\",\r\n    \"2024-09-15\",\r\n    \"2024-09-16\",\r\n    \"2024-09-17\",\r\n    \"2024-09-18\",\r\n    \"2024-09-19\",\r\n    \"2024-09-20\",\r\n    \"2024-09-21\",\r\n    \"2024-09-22\",\r\n    \"2024-09-23\",\r\n    \"2024-09-24\",\r\n    \"2024-09-25\",\r\n    \"2024-09-26\",\r\n    \"2024-09-27\",\r\n    \"2024-09-28\",\r\n    \"2024-09-29\",\r\n    \"2024-09-30\",\r\n    \"2024-10-01\",\r\n    \"2024-10-02\",\r\n    \"2024-10-03\",\r\n    \"2024-10-04\",\r\n    \"2024-10-05\",\r\n    \"2024-10-06\",\r\n    \"2024-10-07\",\r\n    \"2024-10-08\",\r\n    \"2024-10-09\",\r\n    \"2024-10-10\",\r\n    \"2024-10-11\",\r\n    \"2024-10-12\",\r\n    \"2024-10-13\",\r\n    \"2024-10-14\",\r\n    \"2024-10-15\",\r\n    \"2024-10-16\",\r\n    \"2024-10-17\",\r\n    \"2024-10-18\",\r\n    \"2024-10-19\",\r\n    \"2024-10-20\",\r\n    \"2024-10-21\",\r\n    \"2024-10-22\",\r\n    \"2024-10-23\",\r\n    \"2024-10-24\",\r\n    \"2024-10-25\",\r\n    \"2024-10-26\",\r\n    \"2024-10-27\",\r\n    \"2024-10-28\",\r\n    \"2024-10-29\",\r\n    \"2024-10-30\",\r\n    \"2024-10-31\",\r\n    \"2024-11-01\",\r\n    \"2024-11-02\",\r\n    \"2024-11-03\",\r\n    \"2024-11-04\",\r\n    \"2024-11-05\",\r\n    \"2024-11-06\",\r\n    \"2024-11-07\",\r\n    \"2024-11-08\",\r\n    \"2024-11-09\",\r\n    \"2024-11-10\",\r\n    \"2024-11-11\",\r\n    \"2024-11-12\",\r\n    \"2024-11-13\",\r\n    \"2024-11-14\",\r\n    \"2024-11-15\",\r\n    \"2024-11-16\",\r\n    \"2024-11-17\",\r\n    \"2024-11-18\",\r\n    \"2024-11-19\",\r\n    \"2024-11-20\",\r\n    \"2024-11-21\",\r\n    \"2024-11-22\",\r\n    \"2024-11-23\",\r\n    \"2024-11-24\",\r\n    \"2024-11-25\",\r\n    \"2024-11-26\",\r\n    \"2024-11-27\",\r\n    \"2024-11-28\",\r\n    \"2024-11-29\",\r\n    \"2024-11-30\",\r\n    \"2024-12-01\",\r\n    \"2024-12-02\",\r\n    \"2024-12-03\",\r\n    \"2024-12-04\",\r\n    \"2024-12-05\",\r\n    \"2024-12-06\",\r\n    \"2024-12-07\",\r\n    \"2024-12-08\",\r\n    \"2024-12-09\",\r\n    \"2024-12-10\",\r\n    \"2024-12-11\",\r\n    \"2024-12-12\",\r\n    \"2024-12-13\",\r\n    \"2024-12-14\",\r\n    \"2024-12-15\",\r\n    \"2024-12-16\",\r\n    \"2024-12-17\",\r\n    \"2024-12-18\",\r\n    \"2024-12-19\",\r\n    \"2024-12-20\",\r\n    \"2024-12-21\",\r\n    \"2024-12-22\",\r\n    \"2024-12-23\",\r\n    \"2024-12-24\",\r\n    \"2024-12-25\",\r\n    \"2024-12-26\",\r\n    \"2024-12-27\",\r\n    \"2024-12-28\",\r\n    \"2024-12-29\",\r\n    \"2024-12-30\",\r\n    \"2024-12-31\",\r\n    \"2025-01-01\",\r\n    \"2025-01-02\",\r\n    \"2025-01-03\",\r\n    \"2025-01-04\",\r\n    \"2025-01-05\",\r\n    \"2025-01-06\",\r\n    \"2025-01-07\",\r\n    \"2025-01-08\",\r\n    \"2025-01-09\",\r\n    \"2025-01-10\",\r\n    \"2025-01-11\",\r\n    \"2025-01-12\",\r\n    \"2025-01-13\",\r\n    \"2025-01-14\",\r\n    \"2025-01-15\",\r\n    \"2025-01-16\",\r\n    \"2025-01-17\",\r\n    \"2025-01-18\",\r\n    \"2025-01-19\",\r\n    \"2025-01-20\",\r\n    \"2025-01-21\",\r\n    \"2025-01-22\",\r\n    \"2025-01-23\",\r\n    \"2025-01-24\",\r\n    \"2025-01-25\",\r\n    \"2025-01-26\",\r\n    \"2025-01-27\",\r\n    \"2025-01-28\",\r\n    \"2025-01-29\",\r\n    \"2025-01-30\",\r\n    \"2025-01-31\",\r\n    \"2025-02-01\",\r\n    \"2025-02-02\",\r\n    \"2025-02-03\",\r\n    \"2025-02-04\",\r\n    \"2025-02-05\",\r\n    \"2025-02-06\",\r\n    \"2025-02-07\",\r\n    \"2025-02-08\",\r\n    \"2025-02-09\",\r\n    \"2025-02-10\",\r\n    \"2025-02-11\",\r\n    \"2025-02-12\",\r\n    \"2025-02-13\",\r\n    \"2025-02-14\",\r\n    \"2025-02-15\",\r\n    \"2025-02-16\",\r\n    \"2025-02-17\",\r\n    \"2025-02-18\",\r\n    \"2025-02-19\",\r\n    \"2025-02-20\",\r\n    \"2025-02-21\",\r\n    \"2025-02-22\",\r\n    \"2025-02-23\",\r\n    \"2025-02-24\",\r\n    \"2025-02-25\",\r\n    \"2025-02-26\",\r\n    \"2025-02-27\",\r\n    \"2025-02-28\",\r\n    \"2025-03-01\",\r\n    \"2025-03-02\",\r\n    \"2025-03-03\",\r\n    \"2025-03-04\",\r\n    \"2025-03-05\",\r\n    \"2025-03-06\",\r\n    \"2025-03-07\",\r\n    \"2025-03-08\",\r\n    \"2025-03-09\",\r\n    \"2025-03-10\",\r\n    \"2025-03-11\",\r\n    \"2025-03-12\",\r\n    \"2025-03-13\",\r\n    \"2025-03-14\",\r\n    \"2025-03-15\",\r\n    \"2025-03-16\",\r\n    \"2025-03-17\",\r\n    \"2025-03-18\",\r\n    \"2025-03-19\",\r\n    \"2025-03-20\",\r\n    \"2025-03-21\",\r\n    \"2025-03-22\",\r\n    \"2025-03-23\",\r\n    \"2025-03-24\",\r\n    \"2025-03-25\",\r\n    \"2025-03-26\",\r\n    \"2025-03-27\",\r\n    \"2025-03-28\",\r\n    \"2025-03-29\",\r\n    \"2025-03-30\",\r\n    \"2025-03-31\",\r\n    \"2025-04-01\",\r\n    \"2025-04-02\",\r\n    \"2025-04-03\",\r\n    \"2025-04-04\",\r\n    \"2025-04-05\",\r\n    \"2025-04-06\",\r\n    \"2025-04-07\",\r\n    \"2025-04-08\",\r\n    \"2025-04-09\",\r\n    \"2025-04-10\",\r\n    \"2025-04-11\",\r\n    \"2025-04-12\",\r\n    \"2025-04-13\",\r\n    \"2025-04-14\",\r\n    \"2025-04-15\",\r\n    \"2025-04-16\",\r\n    \"2025-04-17\",\r\n    \"2025-04-18\",\r\n    \"2025-04-19\",\r\n    \"2025-04-20\",\r\n    \"2025-04-21\",\r\n    \"2025-04-22\",\r\n    \"2025-04-23\",\r\n    \"2025-04-24\",\r\n    \"2025-04-25\",\r\n    \"2025-04-26\",\r\n    \"2025-04-27\",\r\n    \"2025-04-28\",\r\n    \"2025-04-29\",\r\n    \"2025-04-30\",\r\n    \"2025-05-01\",\r\n    \"2025-05-02\",\r\n    \"2025-05-03\",\r\n    \"2025-05-04\",\r\n    \"2025-05-05\",\r\n    \"2025-05-06\",\r\n    \"2025-05-07\",\r\n    \"2025-05-08\",\r\n    \"2025-05-09\",\r\n    \"2025-05-10\",\r\n    \"2025-05-11\",\r\n    \"2025-05-12\",\r\n    \"2025-05-13\",\r\n    \"2025-05-14\",\r\n    \"2025-05-15\",\r\n    \"2025-05-16\",\r\n    \"2025-05-17\",\r\n    \"2025-05-18\",\r\n    \"2025-05-19\",\r\n    \"2025-05-20\",\r\n    \"2025-05-21\",\r\n    \"2025-05-22\",\r\n    \"2025-05-23\",\r\n    \"2025-05-24\",\r\n    \"2025-05-25\",\r\n    \"2025-05-26\",\r\n    \"2025-05-27\",\r\n    \"2025-05-28\",\r\n    \"2025-05-29\",\r\n    \"2025-05-30\",\r\n    \"2025-05-31\",\r\n    \"2025-06-01\",\r\n    \"2025-06-02\",\r\n    \"2025-06-03\",\r\n    \"2025-06-04\",\r\n    \"2025-06-05\",\r\n    \"2025-06-06\",\r\n    \"2025-06-07\",\r\n    \"2025-06-08\",\r\n    \"2025-06-09\",\r\n    \"2025-06-10\",\r\n    \"2025-06-11\",\r\n    \"2025-06-12\",\r\n    \"2025-06-13\",\r\n    \"2025-06-14\",\r\n    \"2025-06-15\",\r\n    \"2025-06-16\",\r\n    \"2025-06-17\",\r\n    \"2025-06-18\",\r\n    \"2025-06-19\",\r\n    \"2025-06-20\",\r\n    \"2025-06-21\",\r\n    \"2025-06-22\",\r\n    \"2025-06-23\",\r\n    \"2025-06-24\",\r\n    \"2025-06-25\",\r\n    \"2025-06-26\",\r\n    \"2025-06-27\",\r\n    \"2025-06-28\",\r\n    \"2025-06-29\",\r\n    \"2025-06-30\",\r\n    \"2025-07-01\",\r\n    \"2025-07-02\",\r\n    \"2025-07-03\",\r\n    \"2025-07-04\",\r\n    \"2025-07-05\",\r\n    \"2025-07-06\",\r\n    \"2025-07-07\",\r\n    \"2025-07-08\",\r\n    \"2025-07-09\",\r\n    \"2025-07-10\",\r\n    \"2025-07-11\",\r\n    \"2025-07-12\",\r\n    \"2025-07-13\",\r\n    \"2025-07-14\",\r\n    \"2025-07-15\",\r\n    \"2025-07-16\",\r\n    \"2025-07-17\",\r\n    \"2025-07-18\",\r\n    \"2025-07-19\",\r\n    \"2025-07-20\",\r\n    \"2025-07-21\",\r\n    \"2025-07-22\",\r\n    \"2025-07-23\",\r\n    \"2025-07-24\",\r\n    \"2025-07-25\",\r\n    \"2025-07-26\",\r\n    \"2025-07-27\",\r\n    \"2025-07-28\",\r\n    \"2025-07-29\",\r\n    \"2025-07-30\",\r\n    \"2025-07-31\",\r\n    \"2025-08-01\",\r\n    \"2025-08-02\",\r\n    \"2025-08-03\",\r\n    \"2025-08-04\",\r\n    \"2025-08-05\",\r\n    \"2025-08-06\",\r\n    \"2025-08-07\",\r\n    \"2025-08-08\",\r\n    \"2025-08-09\",\r\n    \"2025-08-10\",\r\n    \"2025-08-11\",\r\n    \"2025-08-12\",\r\n    \"2025-08-13\",\r\n    \"2025-08-14\",\r\n    \"2025-08-15\",\r\n    \"2025-08-16\",\r\n    \"2025-08-17\",\r\n    \"2025-08-18\",\r\n    \"2025-08-19\",\r\n    \"2025-08-20\",\r\n    \"2025-08-21\",\r\n    \"2025-08-22\",\r\n    \"2025-08-23\",\r\n    \"2025-08-24\",\r\n    \"2025-08-25\",\r\n    \"2025-08-26\",\r\n    \"2025-08-27\",\r\n    \"2025-08-28\",\r\n    \"2025-08-29\",\r\n    \"2025-08-30\",\r\n    \"2025-08-31\",\r\n    \"2025-09-01\",\r\n    \"2025-09-02\",\r\n    \"2025-09-03\",\r\n    \"2025-09-04\",\r\n    \"2025-09-05\",\r\n    \"2025-09-06\",\r\n    \"2025-09-07\",\r\n    \"2025-09-08\",\r\n    \"2025-09-09\",\r\n    \"2025-09-10\",\r\n    \"2025-09-11\",\r\n    \"2025-09-12\",\r\n    \"2025-09-13\",\r\n    \"2025-09-14\",\r\n    \"2025-09-15\",\r\n    \"2025-09-16\",\r\n    \"2025-09-17\",\r\n    \"2025-09-18\",\r\n    \"2025-09-19\",\r\n    \"2025-09-20\",\r\n    \"2025-09-21\",\r\n    \"2025-09-22\",\r\n    \"2025-09-23\",\r\n    \"2025-09-24\",\r\n    \"2025-09-25\",\r\n    \"2025-09-26\",\r\n    \"2025-09-27\",\r\n    \"2025-09-28\",\r\n    \"2025-09-29\",\r\n    \"2025-09-30\",\r\n    \"2025-10-01\",\r\n    \"2025-10-02\",\r\n    \"2025-10-03\",\r\n    \"2025-10-04\",\r\n    \"2025-10-05\",\r\n    \"2025-10-06\",\r\n    \"2025-10-07\",\r\n    \"2025-10-08\",\r\n    \"2025-10-09\",\r\n    \"2025-10-10\",\r\n    \"2025-10-11\",\r\n    \"2025-10-12\",\r\n    \"2025-10-13\",\r\n    \"2025-10-14\",\r\n    \"2025-10-15\",\r\n    \"2025-10-16\",\r\n    \"2025-10-17\",\r\n    \"2025-10-18\",\r\n    \"2025-10-19\",\r\n    \"2025-10-20\",\r\n    \"2025-10-21\",\r\n    \"2025-10-22\",\r\n    \"2025-10-23\",\r\n    \"2025-10-24\",\r\n    \"2025-10-25\",\r\n    \"2025-10-26\",\r\n    \"2025-10-27\",\r\n    \"2025-10-28\",\r\n    \"2025-10-29\",\r\n    \"2025-10-30\",\r\n    \"2025-10-31\",\r\n    \"2025-11-01\",\r\n    \"2025-11-02\",\r\n    \"2025-11-03\",\r\n    \"2025-11-04\",\r\n    \"2025-11-05\",\r\n    \"2025-11-06\",\r\n    \"2025-11-07\",\r\n    \"2025-11-08\",\r\n    \"2025-11-09\",\r\n    \"2025-11-10\",\r\n    \"2025-11-11\",\r\n    \"2025-11-12\",\r\n    \"2025-11-13\",\r\n    \"2025-11-14\",\r\n    \"2025-11-15\",\r\n    \"2025-11-16\",\r\n    \"2025-11-17\",\r\n    \"2025-11-18\",\r\n    \"2025-11-19\",\r\n    \"2025-11-20\",\r\n    \"2025-11-21\",\r\n    \"2025-11-22\",\r\n    \"2025-11-23\",\r\n    \"2025-11-24\",\r\n    \"2025-11-25\",\r\n    \"2025-11-26\",\r\n    \"2025-11-27\",\r\n    \"2025-11-28\",\r\n    \"2025-11-29\",\r\n    \"2025-11-30\",\r\n    \"2025-12-01\",\r\n    \"2025-12-02\",\r\n    \"2025-12-03\",\r\n    \"2025-12-04\",\r\n    \"2025-12-05\",\r\n    \"2025-12-06\",\r\n    \"2025-12-07\",\r\n    \"2025-12-08\",\r\n    \"2025-12-09\",\r\n    \"2025-12-10\",\r\n    \"2025-12-11\",\r\n    \"2025-12-12\",\r\n    \"2025-12-13\",\r\n    \"2025-12-14\",\r\n    \"2025-12-15\",\r\n    \"2025-12-16\",\r\n    \"2025-12-17\",\r\n    \"2025-12-18\",\r\n    \"2025-12-19\",\r\n    \"2025-12-20\",\r\n    \"2025-12-21\",\r\n    \"2025-12-22\",\r\n    \"2025-12-23\",\r\n    \"2025-12-24\",\r\n    \"2025-12-25\",\r\n    \"2025-12-26\",\r\n    \"2025-12-27\",\r\n    \"2025-12-28\",\r\n    \"2025-12-29\",\r\n    \"2025-12-30\",\r\n    \"2025-12-31\",\r\n    \"2026-01-01\",\r\n    \"2026-01-02\",\r\n    \"2026-01-03\",\r\n    \"2026-01-04\",\r\n    \"2026-01-05\",\r\n    \"2026-01-06\",\r\n    \"2026-01-07\",\r\n    \"2026-01-08\",\r\n    \"2026-01-09\",\r\n    \"2026-01-10\",\r\n    \"2026-01-11\",\r\n    \"2026-01-12\",\r\n    \"2026-01-13\",\r\n    \"2026-01-14\",\r\n    \"2026-01-15\",\r\n    \"2026-01-16\",\r\n    \"2026-01-17\",\r\n    \"2026-01-18\",\r\n    \"2026-01-19\",\r\n    \"2026-01-20\",\r\n    \"2026-01-21\",\r\n    \"2026-01-22\",\r\n    \"2026-01-23\",\r\n    \"2026-01-24\",\r\n    \"2026-01-25\",\r\n    \"2026-01-26\",\r\n    \"2026-01-27\",\r\n    \"2026-01-28\",\r\n    \"2026-01-29\",\r\n    \"2026-01-30\",\r\n    \"2026-01-31\",\r\n    \"2026-02-01\",\r\n    \"2026-02-02\",\r\n    \"2026-02-03\",\r\n    \"2026-02-04\",\r\n    \"2026-02-05\",\r\n    \"2026-02-06\",\r\n    \"2026-02-07\",\r\n    \"2026-02-08\",\r\n    \"2026-02-09\",\r\n    \"2026-02-10\",\r\n    \"2026-02-11\",\r\n    \"2026-02-12\",\r\n    \"2026-02-13\",\r\n    \"2026-02-14\",\r\n    \"2026-02-15\",\r\n    \"2026-02-16\",\r\n    \"2026-02-17\",\r\n    \"2026-02-18\",\r\n    \"2026-02-19\",\r\n    \"2026-02-20\",\r\n    \"2026-02-21\",\r\n    \"2026-02-22\",\r\n    \"2026-02-23\",\r\n    \"2026-02-24\",\r\n    \"2026-02-25\",\r\n    \"2026-02-26\",\r\n    \"2026-02-27\",\r\n    \"2026-02-28\",\r\n    \"2026-03-01\",\r\n    \"2026-03-02\",\r\n    \"2026-03-03\",\r\n    \"2026-03-04\",\r\n    \"2026-03-05\",\r\n    \"2026-03-06\",\r\n    \"2026-03-07\",\r\n    \"2026-03-08\",\r\n    \"2026-03-09\",\r\n    \"2026-03-10\",\r\n    \"2026-03-11\",\r\n    \"2026-03-12\",\r\n    \"2026-03-13\",\r\n    \"2026-03-14\",\r\n    \"2026-03-15\",\r\n    \"2026-03-16\",\r\n    \"2026-03-17\",\r\n    \"2026-03-18\",\r\n    \"2026-03-19\",\r\n    \"2026-03-20\",\r\n    \"2026-03-21\",\r\n    \"2026-03-22\",\r\n    \"2026-03-23\",\r\n    \"2026-03-24\",\r\n    \"2026-03-25\",\r\n    \"2026-03-26\",\r\n    \"2026-03-27\",\r\n    \"2026-03-28\",\r\n    \"2026-03-29\",\r\n    \"2026-03-30\",\r\n    \"2026-03-31\",\r\n    \"2026-04-01\",\r\n    \"2026-04-02\",\r\n    \"2026-04-03\",\r\n    \"2026-04-04\",\r\n    \"2026-04-05\",\r\n    \"2026-04-06\",\r\n    \"2026-04-07\",\r\n    \"2026-04-08\",\r\n    \"2026-04-09\",\r\n    \"2026-04-10\",\r\n    \"2026-04-11\",\r\n    \"2026-04-12\",\r\n    \"2026-04-13\",\r\n    \"2026-04-14\",\r\n    \"2026-04-15\",\r\n    \"2026-04-16\",\r\n    \"2026-04-17\",\r\n    \"2026-04-18\",\r\n    \"2026-04-19\",\r\n    \"2026-04-20\",\r\n    \"2026-04-21\",\r\n    \"2026-04-22\",\r\n    \"2026-04-23\",\r\n    \"2026-04-24\",\r\n    \"2026-04-25\",\r\n    \"2026-04-26\",\r\n    \"2026-04-27\",\r\n    \"2026-04-28\",\r\n    \"2026-04-29\",\r\n    \"2026-04-30\",\r\n    \"2026-05-01\",\r\n    \"2026-05-02\",\r\n    \"2026-05-03\",\r\n    \"2026-05-04\",\r\n    \"2026-05-05\",\r\n    \"2026-05-06\",\r\n    \"2026-05-07\",\r\n    \"2026-05-08\",\r\n    \"2026-05-09\",\r\n    \"2026-05-10\",\r\n    \"2026-05-11\",\r\n    \"2026-05-12\",\r\n    \"2026-05-13\",\r\n    \"2026-05-14\",\r\n    \"2026-05-15\",\r\n    \"2026-05-16\",\r\n    \"2026-05-17\",\r\n    \"2026-05-18\",\r\n    \"2026-05-19\",\r\n    \"2026-05-20\",\r\n    \"2026-05-21\",\r\n    \"2026-05-22\",\r\n    \"2026-05-23\",\r\n    \"2026-05-24\",\r\n    \"2026-05-25\",\r\n    \"2026-05-26\",\r\n    \"2026-05-27\",\r\n    \"2026-05-28\",\r\n    \"2026-05-29\",\r\n    \"2026-05-30\",\r\n    \"2026-05-31\",\r\n    \"2026-06-01\",\r\n    \"2026-06-02\",\r\n    \"2026-06-03\",\r\n    \"2026-06-04\",\r\n    \"2026-06-05\",\r\n    \"2026-06-06\",\r\n    \"2026-06-07\",\r\n    \"2026-06-08\",\r\n    \"2026-06-09\",\r\n    \"2026-06-10\",\r\n    \"2026-06-11\",\r\n    \"2026-06-12\",\r\n    \"2026-06-13\",\r\n    \"2026-06-14\",\r\n    \"2026-06-15\",\r\n    \"2026-06-16\",\r\n    \"2026-06-17\",\r\n    \"2026-06-18\",\r\n    \"2026-06-19\",\r\n    \"2026-06-20\",\r\n    \"2026-06-21\",\r\n    \"2026-06-22\",\r\n    \"2026-06-23\",\r\n    \"2026-06-24\",\r\n    \"2026-06-25\",\r\n    \"2026-06-26\",\r\n    \"2026-06-27\",\r\n    \"2026-06-28\",\r\n    \"2026-06-29\",\r\n    \"2026-06-30\",\r\n    \"2026-07-01\",\r\n    \"2026-07-02\",\r\n    \"2026-07-03\",\r\n    \"2026-07-04\",\r\n    \"2026-07-05\",\r\n    \"2026-07-06\",\r\n    \"2026-07-07\",\r\n    \"2026-07-08\",\r\n    \"2026-07-09\",\r\n    \"2026-07-10\",\r\n    \"2026-07-11\",\r\n    \"2026-07-12\",\r\n    \"2026-07-13\",\r\n    \"2026-07-14\",\r\n    \"2026-07-15\",\r\n    \"2026-07-16\",\r\n    \"2026-07-17\",\r\n    \"2026-07-18\",\r\n    \"2026-07-19\",\r\n    \"2026-07-20\",\r\n    \"2026-07-21\",\r\n    \"2026-07-22\",\r\n    \"2026-07-23\",\r\n    \"2026-07-24\",\r\n    \"2026-07-25\",\r\n    \"2026-07-26\",\r\n    \"2026-07-27\",\r\n    \"2026-07-28\",\r\n    \"2026-07-29\",\r\n    \"2026-07-30\",\r\n    \"2026-07-31\",\r\n    \"2026-08-01\",\r\n    \"2026-08-02\",\r\n    \"2026-08-03\",\r\n    \"2026-08-04\",\r\n    \"2026-08-05\",\r\n    \"2026-08-06\",\r\n    \"2026-08-07\",\r\n    \"2026-08-08\",\r\n    \"2026-08-09\",\r\n    \"2026-08-10\",\r\n    \"2026-08-11\",\r\n    \"2026-08-12\",\r\n    \"2026-08-13\",\r\n    \"2026-08-14\",\r\n    \"2026-08-15\",\r\n    \"2026-08-16\",\r\n    \"2026-08-17\",\r\n    \"2026-08-18\",\r\n    \"2026-08-19\",\r\n    \"2026-08-20\",\r\n    \"2026-08-21\",\r\n    \"2026-08-22\",\r\n    \"2026-08-23\",\r\n    \"2026-08-24\",\r\n    \"2026-08-25\",\r\n    \"2026-08-26\",\r\n    \"2026-08-27\",\r\n    \"2026-08-28\",\r\n    \"2026-08-29\",\r\n    \"2026-08-30\",\r\n    \"2026-08-31\",\r\n    \"2026-09-01\",\r\n    \"2026-09-02\",\r\n    \"2026-09-03\",\r\n    \"2026-09-04\",\r\n    \"2026-09-05\",\r\n    \"2026-09-06\",\r\n    \"2026-09-07\",\r\n    \"2026-09-08\",\r\n    \"2026-09-09\",\r\n    \"2026-09-10\",\r\n    \"2026-09-11\",\r\n    \"2026-09-12\",\r\n    \"2026-09-13\",\r\n    \"2026-09-14\",\r\n    \"2026-09-15\",\r\n    \"2026-09-16\",\r\n    \"2026-09-17\",\r\n    \"2026-09-18\",\r\n    \"2026-09-19\",\r\n    \"2026-09-20\",\r\n    \"2026-09-21\",\r\n    \"2026-09-22\",\r\n    \"2026-09-23\",\r\n    \"2026-09-24\",\r\n    \"2026-09-25\",\r\n    \"2026-09-26\",\r\n    \"2026-09-27\",\r\n    \"2026-09-28\",\r\n    \"2026-09-29\",\r\n    \"2026-09-30\",\r\n    \"2026-10-01\",\r\n    \"2026-10-02\",\r\n    \"2026-10-03\",\r\n    \"2026-10-04\",\r\n    \"2026-10-05\",\r\n    \"2026-10-06\",\r\n    \"2026-10-07\",\r\n    \"2026-10-08\",\r\n    \"2026-10-09\",\r\n    \"2026-10-10\",\r\n    \"2026-10-11\",\r\n    \"2026-10-12\",\r\n    \"2026-10-13\",\r\n    \"2026-10-14\",\r\n    \"2026-10-15\",\r\n    \"2026-10-16\",\r\n    \"2026-10-17\",\r\n    \"2026-10-18\",\r\n    \"2026-10-19\",\r\n    \"2026-10-20\",\r\n    \"2026-10-21\",\r\n    \"2026-10-22\",\r\n    \"2026-10-23\",\r\n    \"2026-10-24\",\r\n    \"2026-10-25\",\r\n    \"2026-10-26\",\r\n    \"2026-10-27\",\r\n    \"2026-10-28\",\r\n    \"2026-10-29\",\r\n    \"2026-10-30\",\r\n    \"2026-10-31\",\r\n    \"2026-11-01\",\r\n    \"2026-11-02\",\r\n    \"2026-11-03\",\r\n    \"2026-11-04\",\r\n    \"2026-11-05\",\r\n    \"2026-11-06\",\r\n    \"2026-11-07\",\r\n    \"2026-11-08\",\r\n    \"2026-11-09\",\r\n    \"2026-11-10\",\r\n    \"2026-11-11\",\r\n    \"2026-11-12\",\r\n    \"2026-11-13\",\r\n    \"2026-11-14\",\r\n    \"2026-11-15\",\r\n    \"2026-11-16\",\r\n    \"2026-11-17\",\r\n    \"2026-11-18\",\r\n    \"2026-11-19\",\r\n    \"2026-11-20\",\r\n    \"2026-11-21\",\r\n    \"2026-11-22\",\r\n    \"2026-11-23\",\r\n    \"2026-11-24\",\r\n    \"2026-11-25\",\r\n    \"2026-11-26\",\r\n    \"2026-11-27\",\r\n    \"2026-11-28\",\r\n    \"2026-11-29\",\r\n    \"2026-11-30\",\r\n    \"2026-12-01\",\r\n    \"2026-12-02\",\r\n    \"2026-12-03\",\r\n    \"2026-12-04\",\r\n    \"2026-12-05\",\r\n    \"2026-12-06\",\r\n    \"2026-12-07\",\r\n    \"2026-12-08\",\r\n    \"2026-12-09\",\r\n    \"2026-12-10\",\r\n    \"2026-12-11\",\r\n    \"2026-12-12\",\r\n    \"2026-12-13\",\r\n    \"2026-12-14\",\r\n    \"2026-12-15\",\r\n    \"2026-12-16\",\r\n    \"2026-12-17\",\r\n    \"2026-12-18\",\r\n    \"2026-12-19\",\r\n    \"2026-12-20\",\r\n    \"2026-12-21\",\r\n    \"2026-12-22\",\r\n    \"2026-12-23\",\r\n    \"2026-12-24\",\r\n    \"2026-12-25\",\r\n    \"2026-12-26\",\r\n    \"2026-12-27\",\r\n    \"2026-12-28\",\r\n    \"2026-12-29\",\r\n    \"2026-12-30\",\r\n    \"2026-12-31\",\r\n    \"2027-01-01\",\r\n    \"2027-01-02\",\r\n    \"2027-01-03\",\r\n    \"2027-01-04\",\r\n    \"2027-01-05\",\r\n    \"2027-01-06\",\r\n    \"2027-01-07\",\r\n    \"2027-01-08\",\r\n    \"2027-01-09\",\r\n    \"2027-01-10\",\r\n    \"2027-01-11\",\r\n    \"2027-01-12\",\r\n    \"2027-01-13\",\r\n    \"2027-01-14\",\r\n    \"2027-01-15\",\r\n    \"2027-01-16\",\r\n    \"2027-01-17\",\r\n    \"2027-01-18\",\r\n    \"2027-01-19\",\r\n    \"2027-01-20\",\r\n    \"2027-01-21\",\r\n    \"2027-01-22\",\r\n    \"2027-01-23\",\r\n    \"2027-01-24\",\r\n    \"2027-01-25\",\r\n    \"2027-01-26\",\r\n    \"2027-01-27\",\r\n    \"2027-01-28\",\r\n    \"2027-01-29\",\r\n    \"2027-01-30\",\r\n    \"2027-01-31\",\r\n    \"2027-02-01\",\r\n    \"2027-02-02\",\r\n    \"2027-02-03\",\r\n    \"2027-02-04\",\r\n    \"2027-02-05\",\r\n    \"2027-02-06\",\r\n    \"2027-02-07\",\r\n    \"2027-02-08\",\r\n    \"2027-02-09\",\r\n    \"2027-02-10\",\r\n    \"2027-02-11\",\r\n    \"2027-02-12\",\r\n    \"2027-02-13\",\r\n    \"2027-02-14\",\r\n    \"2027-02-15\",\r\n    \"2027-02-16\",\r\n    \"2027-02-17\",\r\n    \"2027-02-18\",\r\n    \"2027-02-19\",\r\n    \"2027-02-20\",\r\n    \"2027-02-21\",\r\n    \"2027-02-22\",\r\n    \"2027-02-23\",\r\n    \"2027-02-24\",\r\n    \"2027-02-25\",\r\n    \"2027-02-26\",\r\n    \"2027-02-27\",\r\n    \"2027-02-28\",\r\n    \"2027-03-01\",\r\n    \"2027-03-02\",\r\n    \"2027-03-03\",\r\n    \"2027-03-04\",\r\n    \"2027-03-05\",\r\n    \"2027-03-06\",\r\n    \"2027-03-07\",\r\n    \"2027-03-08\",\r\n    \"2027-03-09\",\r\n    \"2027-03-10\",\r\n    \"2027-03-11\",\r\n    \"2027-03-12\",\r\n    \"2027-03-13\",\r\n    \"2027-03-14\",\r\n    \"2027-03-15\",\r\n    \"2027-03-16\",\r\n    \"2027-03-17\",\r\n    \"2027-03-18\",\r\n    \"2027-03-19\",\r\n    \"2027-03-20\",\r\n    \"2027-03-21\",\r\n    \"2027-03-22\",\r\n    \"2027-03-23\",\r\n    \"2027-03-24\",\r\n    \"2027-03-25\",\r\n    \"2027-03-26\",\r\n    \"2027-03-27\",\r\n    \"2027-03-28\",\r\n    \"2027-03-29\",\r\n    \"2027-03-30\",\r\n    \"2027-03-31\",\r\n    \"2027-04-01\",\r\n    \"2027-04-02\",\r\n    \"2027-04-03\",\r\n    \"2027-04-04\",\r\n    \"2027-04-05\",\r\n    \"2027-04-06\",\r\n    \"2027-04-07\",\r\n    \"2027-04-08\",\r\n    \"2027-04-09\",\r\n    \"2027-04-10\",\r\n    \"2027-04-11\",\r\n    \"2027-04-12\",\r\n    \"2027-04-13\",\r\n    \"2027-04-14\",\r\n    \"2027-04-15\",\r\n    \"2027-04-16\",\r\n    \"2027-04-17\",\r\n    \"2027-04-18\",\r\n    \"2027-04-19\",\r\n    \"2027-04-20\",\r\n    \"2027-04-21\",\r\n    \"2027-04-22\",\r\n    \"2027-04-23\",\r\n    \"2027-04-24\",\r\n    \"2027-04-25\",\r\n    \"2027-04-26\",\r\n    \"2027-04-27\",\r\n    \"2027-04-28\",\r\n    \"2027-04-29\",\r\n    \"2027-04-30\",\r\n    \"2027-05-01\",\r\n    \"2027-05-02\",\r\n    \"2027-05-03\",\r\n    \"2027-05-04\",\r\n    \"2027-05-05\",\r\n    \"2027-05-06\",\r\n    \"2027-05-07\",\r\n    \"2027-05-08\",\r\n    \"2027-05-09\",\r\n    \"2027-05-10\",\r\n    \"2027-05-11\",\r\n    \"2027-05-12\",\r\n    \"2027-05-13\",\r\n    \"2027-05-14\",\r\n    \"2027-05-15\",\r\n    \"2027-05-16\",\r\n    \"2027-05-17\",\r\n    \"2027-05-18\",\r\n    \"2027-05-19\",\r\n    \"2027-05-20\",\r\n    \"2027-05-21\",\r\n    \"2027-05-22\",\r\n    \"2027-05-23\",\r\n    \"2027-05-24\",\r\n    \"2027-05-25\",\r\n    \"2027-05-26\",\r\n    \"2027-05-27\",\r\n    \"2027-05-28\",\r\n    \"2027-05-29\",\r\n    \"2027-05-30\",\r\n    \"2027-05-31\",\r\n    \"2027-06-01\",\r\n    \"2027-06-02\",\r\n    \"2027-06-03\",\r\n    \"2027-06-04\",\r\n    \"2027-06-05\",\r\n    \"2027-06-06\",\r\n    \"2027-06-07\",\r\n    \"2027-06-08\",\r\n    \"2027-06-09\",\r\n    \"2027-06-10\",\r\n    \"2027-06-11\",\r\n    \"2027-06-12\",\r\n    \"2027-06-13\",\r\n    \"2027-06-14\",\r\n    \"2027-06-15\",\r\n    \"2027-06-16\",\r\n    \"2027-06-17\",\r\n    \"2027-06-18\",\r\n    \"2027-06-19\",\r\n    \"2027-06-20\",\r\n    \"2027-06-21\",\r\n    \"2027-06-22\",\r\n    \"2027-06-23\",\r\n    \"2027-06-24\",\r\n    \"2027-06-25\",\r\n    \"2027-06-26\",\r\n    \"2027-06-27\",\r\n    \"2027-06-28\",\r\n    \"2027-06-29\",\r\n    \"2027-06-30\",\r\n    \"2027-07-01\",\r\n    \"2027-07-02\",\r\n    \"2027-07-03\",\r\n    \"2027-07-04\",\r\n    \"2027-07-05\",\r\n    \"2027-07-06\",\r\n    \"2027-07-07\",\r\n    \"2027-07-08\",\r\n    \"2027-07-09\",\r\n    \"2027-07-10\",\r\n    \"2027-07-11\",\r\n    \"2027-07-12\",\r\n    \"2027-07-13\",\r\n    \"2027-07-14\",\r\n    \"2027-07-15\",\r\n    \"2027-07-16\",\r\n    \"2027-07-17\",\r\n    \"2027-07-18\",\r\n    \"2027-07-19\",\r\n    \"2027-07-20\",\r\n    \"2027-07-21\",\r\n    \"2027-07-22\",\r\n    \"2027-07-23\",\r\n    \"2027-07-24\",\r\n    \"2027-07-25\",\r\n    \"2027-07-26\",\r\n    \"2027-07-27\",\r\n    \"2027-07-28\",\r\n    \"2027-07-29\",\r\n    \"2027-07-30\",\r\n    \"2027-07-31\",\r\n    \"2027-08-01\",\r\n    \"2027-08-02\",\r\n    \"2027-08-03\",\r\n    \"2027-08-04\",\r\n    \"2027-08-05\",\r\n    \"2027-08-06\",\r\n    \"2027-08-07\",\r\n    \"2027-08-08\",\r\n    \"2027-08-09\",\r\n    \"2027-08-10\",\r\n    \"2027-08-11\",\r\n    \"2027-08-12\",\r\n    \"2027-08-13\",\r\n    \"2027-08-14\",\r\n    \"2027-08-15\",\r\n    \"2027-08-16\",\r\n    \"2027-08-17\",\r\n    \"2027-08-18\",\r\n    \"2027-08-19\",\r\n    \"2027-08-20\",\r\n    \"2027-08-21\",\r\n    \"2027-08-22\",\r\n    \"2027-08-23\",\r\n    \"2027-08-24\",\r\n    \"2027-08-25\",\r\n    \"2027-08-26\",\r\n    \"2027-08-27\",\r\n    \"2027-08-28\",\r\n    \"2027-08-29\",\r\n    \"2027-08-30\",\r\n    \"2027-08-31\",\r\n    \"2027-09-01\",\r\n    \"2027-09-02\",\r\n    \"2027-09-03\",\r\n    \"2027-09-04\",\r\n    \"2027-09-05\",\r\n    \"2027-09-06\",\r\n    \"2027-09-07\",\r\n    \"2027-09-08\",\r\n    \"2027-09-09\",\r\n    \"2027-09-10\",\r\n    \"2027-09-11\",\r\n    \"2027-09-12\",\r\n    \"2027-09-13\",\r\n    \"2027-09-14\",\r\n    \"2027-09-15\",\r\n    \"2027-09-16\",\r\n    \"2027-09-17\",\r\n    \"2027-09-18\",\r\n    \"2027-09-19\",\r\n    \"2027-09-20\",\r\n    \"2027-09-21\",\r\n    \"2027-09-22\",\r\n    \"2027-09-23\",\r\n    \"2027-09-24\",\r\n    \"2027-09-25\",\r\n    \"2027-09-26\",\r\n    \"2027-09-27\",\r\n    \"2027-09-28\",\r\n    \"2027-09-29\",\r\n    \"2027-09-30\",\r\n    \"2027-10-01\",\r\n    \"2027-10-02\",\r\n    \"2027-10-03\",\r\n    \"2027-10-04\",\r\n    \"2027-10-05\",\r\n    \"2027-10-06\",\r\n    \"2027-10-07\",\r\n    \"2027-10-08\",\r\n    \"2027-10-09\",\r\n    \"2027-10-10\",\r\n    \"2027-10-11\",\r\n    \"2027-10-12\",\r\n    \"2027-10-13\",\r\n    \"2027-10-14\",\r\n    \"2027-10-15\",\r\n    \"2027-10-16\",\r\n    \"2027-10-17\",\r\n    \"2027-10-18\",\r\n    \"2027-10-19\",\r\n    \"2027-10-20\",\r\n    \"2027-10-21\",\r\n    \"2027-10-22\",\r\n    \"2027-10-23\",\r\n    \"2027-10-24\",\r\n    \"2027-10-25\",\r\n    \"2027-10-26\",\r\n    \"2027-10-27\",\r\n    \"2027-10-28\",\r\n    \"2027-10-29\",\r\n    \"2027-10-30\",\r\n    \"2027-10-31\",\r\n    \"2027-11-01\",\r\n    \"2027-11-02\",\r\n    \"2027-11-03\",\r\n    \"2027-11-04\",\r\n    \"2027-11-05\",\r\n    \"2027-11-06\",\r\n    \"2027-11-07\",\r\n    \"2027-11-08\",\r\n    \"2027-11-09\",\r\n    \"2027-11-10\",\r\n    \"2027-11-11\",\r\n    \"2027-11-12\",\r\n    \"2027-11-13\",\r\n    \"2027-11-14\",\r\n    \"2027-11-15\",\r\n    \"2027-11-16\",\r\n    \"2027-11-17\",\r\n    \"2027-11-18\",\r\n    \"2027-11-19\",\r\n    \"2027-11-20\",\r\n    \"2027-11-21\",\r\n    \"2027-11-22\",\r\n    \"2027-11-23\",\r\n    \"2027-11-24\",\r\n    \"2027-11-25\",\r\n    \"2027-11-26\",\r\n    \"2027-11-27\",\r\n    \"2027-11-28\",\r\n    \"2027-11-29\",\r\n    \"2027-11-30\",\r\n    \"2027-12-01\",\r\n    \"2027-12-02\",\r\n    \"2027-12-03\",\r\n    \"2027-12-04\",\r\n    \"2027-12-05\",\r\n    \"2027-12-06\",\r\n    \"2027-12-07\",\r\n    \"2027-12-08\",\r\n    \"2027-12-09\",\r\n    \"2027-12-10\",\r\n    \"2027-12-11\",\r\n    \"2027-12-12\",\r\n    \"2027-12-13\",\r\n    \"2027-12-14\",\r\n    \"2027-12-15\",\r\n    \"2027-12-16\",\r\n    \"2027-12-17\",\r\n    \"2027-12-18\",\r\n    \"2027-12-19\",\r\n    \"2027-12-20\",\r\n    \"2027-12-21\",\r\n    \"2027-12-22\",\r\n    \"2027-12-23\",\r\n    \"2027-12-24\",\r\n    \"2027-12-25\",\r\n    \"2027-12-26\",\r\n    \"2027-12-27\",\r\n    \"2027-12-28\",\r\n    \"2027-12-29\",\r\n    \"2027-12-30\",\r\n    \"2027-12-31\",\r\n    \"2028-01-01\",\r\n    \"2028-01-02\",\r\n    \"2028-01-03\",\r\n    \"2028-01-04\",\r\n    \"2028-01-05\",\r\n    \"2028-01-06\",\r\n    \"2028-01-07\",\r\n    \"2028-01-08\",\r\n    \"2028-01-09\",\r\n    \"2028-01-10\",\r\n    \"2028-01-11\",\r\n    \"2028-01-12\",\r\n    \"2028-01-13\",\r\n    \"2028-01-14\",\r\n    \"2028-01-15\",\r\n    \"2028-01-16\",\r\n    \"2028-01-17\",\r\n    \"2028-01-18\",\r\n    \"2028-01-19\",\r\n    \"2028-01-20\",\r\n    \"2028-01-21\",\r\n    \"2028-01-22\",\r\n    \"2028-01-23\",\r\n    \"2028-01-24\",\r\n    \"2028-01-25\",\r\n    \"2028-01-26\",\r\n    \"2028-01-27\",\r\n    \"2028-01-28\",\r\n    \"2028-01-29\",\r\n    \"2028-01-30\",\r\n    \"2028-01-31\",\r\n    \"2028-02-01\",\r\n    \"2028-02-02\",\r\n    \"2028-02-03\",\r\n    \"2028-02-04\",\r\n    \"2028-02-05\",\r\n    \"2028-02-06\",\r\n    \"2028-02-07\",\r\n    \"2028-02-08\",\r\n    \"2028-02-09\",\r\n    \"2028-02-10\",\r\n    \"2028-02-11\",\r\n    \"2028-02-12\",\r\n    \"2028-02-13\",\r\n    \"2028-02-14\",\r\n    \"2028-02-15\",\r\n    \"2028-02-16\",\r\n    \"2028-02-17\",\r\n    \"2028-02-18\",\r\n    \"2028-02-19\",\r\n    \"2028-02-20\",\r\n    \"2028-02-21\",\r\n    \"2028-02-22\",\r\n    \"2028-02-23\",\r\n    \"2028-02-24\",\r\n    \"2028-02-25\",\r\n    \"2028-02-26\",\r\n    \"2028-02-27\",\r\n    \"2028-02-28\",\r\n    \"2028-02-29\",\r\n    \"2028-03-01\",\r\n    \"2028-03-02\",\r\n    \"2028-03-03\",\r\n    \"2028-03-04\",\r\n    \"2028-03-05\",\r\n    \"2028-03-06\",\r\n    \"2028-03-07\",\r\n    \"2028-03-08\",\r\n    \"2028-03-09\",\r\n    \"2028-03-10\",\r\n    \"2028-03-11\",\r\n    \"2028-03-12\",\r\n    \"2028-03-13\",\r\n    \"2028-03-14\",\r\n    \"2028-03-15\",\r\n    \"2028-03-16\",\r\n    \"2028-03-17\",\r\n    \"2028-03-18\",\r\n    \"2028-03-19\",\r\n    \"2028-03-20\",\r\n    \"2028-03-21\",\r\n    \"2028-03-22\",\r\n    \"2028-03-23\",\r\n    \"2028-03-24\",\r\n    \"2028-03-25\",\r\n    \"2028-03-26\",\r\n    \"2028-03-27\",\r\n    \"2028-03-28\",\r\n    \"2028-03-29\",\r\n    \"2028-03-30\",\r\n    \"2028-03-31\",\r\n    \"2028-04-01\",\r\n    \"2028-04-02\",\r\n    \"2028-04-03\",\r\n    \"2028-04-04\",\r\n    \"2028-04-05\",\r\n    \"2028-04-06\",\r\n    \"2028-04-07\",\r\n    \"2028-04-08\",\r\n    \"2028-04-09\",\r\n    \"2028-04-10\",\r\n    \"2028-04-11\",\r\n    \"2028-04-12\",\r\n    \"2028-04-13\",\r\n    \"2028-04-14\",\r\n    \"2028-04-15\",\r\n    \"2028-04-16\",\r\n    \"2028-04-17\",\r\n    \"2028-04-18\",\r\n    \"2028-04-19\",\r\n    \"2028-04-20\",\r\n    \"2028-04-21\",\r\n    \"2028-04-22\",\r\n    \"2028-04-23\",\r\n    \"2028-04-24\",\r\n    \"2028-04-25\",\r\n    \"2028-04-26\",\r\n    \"2028-04-27\",\r\n    \"2028-04-28\",\r\n    \"2028-04-29\",\r\n    \"2028-04-30\",\r\n    \"2028-05-01\",\r\n    \"2028-05-02\",\r\n    \"2028-05-03\",\r\n    \"2028-05-04\",\r\n    \"2028-05-05\",\r\n    \"2028-05-06\",\r\n    \"2028-05-07\",\r\n    \"2028-05-08\",\r\n    \"2028-05-09\",\r\n    \"2028-05-10\",\r\n    \"2028-05-11\",\r\n    \"2028-05-12\",\r\n    \"2028-05-13\",\r\n    \"2028-05-14\",\r\n    \"2028-05-15\",\r\n    \"2028-05-16\",\r\n    \"2028-05-17\",\r\n    \"2028-05-18\",\r\n    \"2028-05-19\",\r\n    \"2028-05-20\",\r\n    \"2028-05-21\",\r\n    \"2028-05-22\",\r\n    \"2028-05-23\",\r\n    \"2028-05-24\",\r\n    \"2028-05-25\",\r\n    \"2028-05-26\",\r\n    \"2028-05-27\",\r\n    \"2028-05-28\",\r\n    \"2028-05-29\",\r\n    \"2028-05-30\",\r\n    \"2028-05-31\",\r\n    \"2028-06-01\",\r\n    \"2028-06-02\",\r\n    \"2028-06-03\",\r\n    \"2028-06-04\",\r\n    \"2028-06-05\",\r\n    \"2028-06-06\",\r\n    \"2028-06-07\",\r\n    \"2028-06-08\",\r\n    \"2028-06-09\",\r\n    \"2028-06-10\",\r\n    \"2028-06-11\",\r\n    \"2028-06-12\",\r\n    \"2028-06-13\",\r\n    \"2028-06-14\",\r\n    \"2028-06-15\",\r\n    \"2028-06-16\",\r\n    \"2028-06-17\",\r\n    \"2028-06-18\",\r\n    \"2028-06-19\",\r\n    \"2028-06-20\",\r\n    \"2028-06-21\",\r\n    \"2028-06-22\",\r\n    \"2028-06-23\",\r\n    \"2028-06-24\",\r\n    \"2028-06-25\",\r\n    \"2028-06-26\",\r\n    \"2028-06-27\",\r\n    \"2028-06-28\",\r\n    \"2028-06-29\",\r\n    \"2028-06-30\",\r\n    \"2028-07-01\",\r\n    \"2028-07-02\",\r\n    \"2028-07-03\",\r\n    \"2028-07-04\",\r\n    \"2028-07-05\",\r\n    \"2028-07-06\",\r\n    \"2028-07-07\",\r\n    \"2028-07-08\",\r\n    \"2028-07-09\",\r\n    \"2028-07-10\",\r\n    \"2028-07-11\",\r\n    \"2028-07-12\",\r\n    \"2028-07-13\",\r\n    \"2028-07-14\",\r\n    \"2028-07-15\",\r\n    \"2028-07-16\",\r\n    \"2028-07-17\",\r\n    \"2028-07-18\",\r\n    \"2028-07-19\",\r\n    \"2028-07-20\",\r\n    \"2028-07-21\",\r\n    \"2028-07-22\",\r\n    \"2028-07-23\",\r\n    \"2028-07-24\",\r\n    \"2028-07-25\",\r\n    \"2028-07-26\",\r\n    \"2028-07-27\",\r\n    \"2028-07-28\",\r\n    \"2028-07-29\",\r\n    \"2028-07-30\",\r\n    \"2028-07-31\",\r\n    \"2028-08-01\",\r\n    \"2028-08-02\",\r\n    \"2028-08-03\",\r\n    \"2028-08-04\",\r\n    \"2028-08-05\",\r\n    \"2028-08-06\",\r\n    \"2028-08-07\",\r\n    \"2028-08-08\",\r\n    \"2028-08-09\",\r\n    \"2028-08-10\",\r\n    \"2028-08-11\",\r\n    \"2028-08-12\",\r\n    \"2028-08-13\",\r\n    \"2028-08-14\",\r\n    \"2028-08-15\",\r\n    \"2028-08-16\",\r\n    \"2028-08-17\",\r\n    \"2028-08-18\",\r\n    \"2028-08-19\",\r\n    \"2028-08-20\",\r\n    \"2028-08-21\",\r\n    \"2028-08-22\",\r\n    \"2028-08-23\",\r\n    \"2028-08-24\",\r\n    \"2028-08-25\",\r\n    \"2028-08-26\",\r\n    \"2028-08-27\",\r\n    \"2028-08-28\",\r\n    \"2028-08-29\",\r\n    \"2028-08-30\",\r\n    \"2028-08-31\",\r\n    \"2028-09-01\",\r\n    \"2028-09-02\",\r\n    \"2028-09-03\",\r\n    \"2028-09-04\",\r\n    \"2028-09-05\",\r\n    \"2028-09-06\",\r\n    \"2028-09-07\",\r\n    \"2028-09-08\",\r\n    \"2028-09-09\",\r\n    \"2028-09-10\",\r\n    \"2028-09-11\",\r\n    \"2028-09-12\",\r\n    \"2028-09-13\",\r\n    \"2028-09-14\",\r\n    \"2028-09-15\",\r\n    \"2028-09-16\",\r\n    \"2028-09-17\",\r\n    \"2028-09-18\",\r\n    \"2028-09-19\",\r\n    \"2028-09-20\",\r\n    \"2028-09-21\",\r\n    \"2028-09-22\",\r\n    \"2028-09-23\",\r\n    \"2028-09-24\",\r\n    \"2028-09-25\",\r\n    \"2028-09-26\",\r\n    \"2028-09-27\",\r\n    \"2028-09-28\",\r\n    \"2028-09-29\",\r\n    \"2028-09-30\",\r\n    \"2028-10-01\",\r\n    \"2028-10-02\",\r\n    \"2028-10-03\",\r\n    \"2028-10-04\",\r\n    \"2028-10-05\",\r\n    \"2028-10-06\",\r\n    \"2028-10-07\",\r\n    \"2028-10-08\",\r\n    \"2028-10-09\",\r\n    \"2028-10-10\",\r\n    \"2028-10-11\",\r\n    \"2028-10-12\",\r\n    \"2028-10-13\",\r\n    \"2028-10-14\",\r\n    \"2028-10-15\",\r\n    \"2028-10-16\",\r\n    \"2028-10-17\",\r\n    \"2028-10-18\",\r\n    \"2028-10-19\",\r\n    \"2028-10-20\",\r\n    \"2028-10-21\",\r\n    \"2028-10-22\",\r\n    \"2028-10-23\",\r\n    \"2028-10-24\",\r\n    \"2028-10-25\",\r\n    \"2028-10-26\",\r\n    \"2028-10-27\",\r\n    \"2028-10-28\",\r\n    \"2028-10-29\",\r\n    \"2028-10-30\",\r\n    \"2028-10-31\",\r\n    \"2028-11-01\",\r\n    \"2028-11-02\",\r\n    \"2028-11-03\",\r\n    \"2028-11-04\",\r\n    \"2028-11-05\",\r\n    \"2028-11-06\",\r\n    \"2028-11-07\",\r\n    \"2028-11-08\",\r\n    \"2028-11-09\",\r\n    \"2028-11-10\",\r\n    \"2028-11-11\",\r\n    \"2028-11-12\",\r\n    \"2028-11-13\",\r\n    \"2028-11-14\",\r\n    \"2028-11-15\",\r\n    \"2028-11-16\",\r\n    \"2028-11-17\",\r\n    \"2028-11-18\",\r\n    \"2028-11-19\",\r\n    \"2028-11-20\",\r\n    \"2028-11-21\",\r\n    \"2028-11-22\",\r\n    \"2028-11-23\",\r\n    \"2028-11-24\",\r\n    \"2028-11-25\",\r\n    \"2028-11-26\",\r\n    \"2028-11-27\",\r\n    \"2028-11-28\",\r\n    \"2028-11-29\",\r\n    \"2028-11-30\",\r\n    \"2028-12-01\",\r\n    \"2028-12-02\",\r\n    \"2028-12-03\",\r\n    \"2028-12-04\",\r\n    \"2028-12-05\",\r\n    \"2028-12-06\",\r\n    \"2028-12-07\",\r\n    \"2028-12-08\",\r\n    \"2028-12-09\",\r\n    \"2028-12-10\",\r\n    \"2028-12-11\",\r\n    \"2028-12-12\",\r\n    \"2028-12-13\",\r\n    \"2028-12-14\",\r\n    \"2028-12-15\",\r\n    \"2028-12-16\",\r\n    \"2028-12-17\",\r\n    \"2028-12-18\",\r\n    \"2028-12-19\",\r\n    \"2028-12-20\",\r\n    \"2028-12-21\",\r\n    \"2028-12-22\",\r\n    \"2028-12-23\",\r\n    \"2028-12-24\",\r\n    \"2028-12-25\",\r\n    \"2028-12-26\",\r\n    \"2028-12-27\",\r\n    \"2028-12-28\",\r\n    \"2028-12-29\",\r\n    \"2028-12-30\",\r\n    \"2028-12-31\",\r\n    \"2029-01-01\",\r\n    \"2029-01-02\",\r\n    \"2029-01-03\",\r\n    \"2029-01-04\",\r\n    \"2029-01-05\",\r\n    \"2029-01-06\",\r\n    \"2029-01-07\",\r\n    \"2029-01-08\",\r\n    \"2029-01-09\",\r\n    \"2029-01-10\",\r\n    \"2029-01-11\",\r\n    \"2029-01-12\",\r\n    \"2029-01-13\",\r\n    \"2029-01-14\",\r\n    \"2029-01-15\",\r\n    \"2029-01-16\",\r\n    \"2029-01-17\",\r\n    \"2029-01-18\",\r\n    \"2029-01-19\",\r\n    \"2029-01-20\",\r\n    \"2029-01-21\",\r\n    \"2029-01-22\",\r\n    \"2029-01-23\",\r\n    \"2029-01-24\",\r\n    \"2029-01-25\",\r\n    \"2029-01-26\",\r\n    \"2029-01-27\",\r\n    \"2029-01-28\",\r\n    \"2029-01-29\",\r\n    \"2029-01-30\",\r\n    \"2029-01-31\",\r\n    \"2029-02-01\",\r\n    \"2029-02-02\",\r\n    \"2029-02-03\",\r\n    \"2029-02-04\",\r\n    \"2029-02-05\",\r\n    \"2029-02-06\",\r\n    \"2029-02-07\",\r\n    \"2029-02-08\",\r\n    \"2029-02-09\",\r\n    \"2029-02-10\",\r\n    \"2029-02-11\",\r\n    \"2029-02-12\",\r\n    \"2029-02-13\",\r\n    \"2029-02-14\",\r\n    \"2029-02-15\",\r\n    \"2029-02-16\",\r\n    \"2029-02-17\",\r\n    \"2029-02-18\",\r\n    \"2029-02-19\",\r\n    \"2029-02-20\",\r\n    \"2029-02-21\",\r\n    \"2029-02-22\",\r\n    \"2029-02-23\",\r\n    \"2029-02-24\",\r\n    \"2029-02-25\",\r\n    \"2029-02-26\",\r\n    \"2029-02-27\",\r\n    \"2029-02-28\",\r\n    \"2029-03-01\",\r\n    \"2029-03-02\",\r\n    \"2029-03-03\",\r\n    \"2029-03-04\",\r\n    \"2029-03-05\",\r\n    \"2029-03-06\",\r\n    \"2029-03-07\",\r\n    \"2029-03-08\",\r\n    \"2029-03-09\",\r\n    \"2029-03-10\",\r\n    \"2029-03-11\",\r\n    \"2029-03-12\",\r\n    \"2029-03-13\",\r\n    \"2029-03-14\",\r\n    \"2029-03-15\",\r\n    \"2029-03-16\",\r\n    \"2029-03-17\",\r\n    \"2029-03-18\",\r\n    \"2029-03-19\",\r\n    \"2029-03-20\",\r\n    \"2029-03-21\",\r\n    \"2029-03-22\",\r\n    \"2029-03-23\",\r\n    \"2029-03-24\",\r\n    \"2029-03-25\",\r\n    \"2029-03-26\",\r\n    \"2029-03-27\",\r\n    \"2029-03-28\",\r\n    \"2029-03-29\",\r\n    \"2029-03-30\",\r\n    \"2029-03-31\",\r\n    \"2029-04-01\",\r\n    \"2029-04-02\",\r\n    \"2029-04-03\",\r\n    \"2029-04-04\",\r\n    \"2029-04-05\",\r\n    \"2029-04-06\",\r\n    \"2029-04-07\",\r\n    \"2029-04-08\",\r\n    \"2029-04-09\",\r\n    \"2029-04-10\",\r\n    \"2029-04-11\",\r\n    \"2029-04-12\",\r\n    \"2029-04-13\",\r\n    \"2029-04-14\",\r\n    \"2029-04-15\",\r\n    \"2029-04-16\",\r\n    \"2029-04-17\",\r\n    \"2029-04-18\",\r\n    \"2029-04-19\",\r\n    \"2029-04-20\",\r\n    \"2029-04-21\",\r\n    \"2029-04-22\",\r\n    \"2029-04-23\",\r\n    \"2029-04-24\",\r\n    \"2029-04-25\",\r\n    \"2029-04-26\",\r\n    \"2029-04-27\",\r\n    \"2029-04-28\",\r\n    \"2029-04-29\",\r\n    \"2029-04-30\",\r\n    \"2029-05-01\",\r\n    \"2029-05-02\",\r\n    \"2029-05-03\",\r\n    \"2029-05-04\",\r\n    \"2029-05-05\",\r\n    \"2029-05-06\",\r\n    \"2029-05-07\",\r\n    \"2029-05-08\",\r\n    \"2029-05-09\",\r\n    \"2029-05-10\",\r\n    \"2029-05-11\",\r\n    \"2029-05-12\",\r\n    \"2029-05-13\",\r\n    \"2029-05-14\",\r\n    \"2029-05-15\",\r\n    \"2029-05-16\",\r\n    \"2029-05-17\",\r\n    \"2029-05-18\",\r\n    \"2029-05-19\",\r\n    \"2029-05-20\",\r\n    \"2029-05-21\",\r\n    \"2029-05-22\",\r\n    \"2029-05-23\",\r\n    \"2029-05-24\",\r\n    \"2029-05-25\",\r\n    \"2029-05-26\",\r\n    \"2029-05-27\",\r\n    \"2029-05-28\",\r\n    \"2029-05-29\",\r\n    \"2029-05-30\",\r\n    \"2029-05-31\",\r\n    \"2029-06-01\",\r\n    \"2029-06-02\",\r\n    \"2029-06-03\",\r\n    \"2029-06-04\",\r\n    \"2029-06-05\",\r\n    \"2029-06-06\",\r\n    \"2029-06-07\",\r\n    \"2029-06-08\",\r\n    \"2029-06-09\",\r\n    \"2029-06-10\",\r\n    \"2029-06-11\",\r\n    \"2029-06-12\",\r\n    \"2029-06-13\",\r\n    \"2029-06-14\",\r\n    \"2029-06-15\",\r\n    \"2029-06-16\",\r\n    \"2029-06-17\",\r\n    \"2029-06-18\",\r\n    \"2029-06-19\",\r\n    \"2029-06-20\",\r\n    \"2029-06-21\",\r\n    \"2029-06-22\",\r\n    \"2029-06-23\",\r\n    \"2029-06-24\",\r\n    \"2029-06-25\",\r\n    \"2029-06-26\",\r\n    \"2029-06-27\",\r\n    \"2029-06-28\",\r\n    \"2029-06-29\",\r\n    \"2029-06-30\",\r\n    \"2029-07-01\",\r\n    \"2029-07-02\",\r\n    \"2029-07-03\",\r\n    \"2029-07-04\",\r\n    \"2029-07-05\",\r\n    \"2029-07-06\",\r\n    \"2029-07-07\",\r\n    \"2029-07-08\",\r\n    \"2029-07-09\",\r\n    \"2029-07-10\",\r\n    \"2029-07-11\",\r\n    \"2029-07-12\",\r\n    \"2029-07-13\",\r\n    \"2029-07-14\",\r\n    \"2029-07-15\",\r\n    \"2029-07-16\",\r\n    \"2029-07-17\",\r\n    \"2029-07-18\",\r\n    \"2029-07-19\",\r\n    \"2029-07-20\",\r\n    \"2029-07-21\",\r\n    \"2029-07-22\",\r\n    \"2029-07-23\",\r\n    \"2029-07-24\",\r\n    \"2029-07-25\",\r\n    \"2029-07-26\",\r\n    \"2029-07-27\",\r\n    \"2029-07-28\",\r\n    \"2029-07-29\",\r\n    \"2029-07-30\",\r\n    \"2029-07-31\",\r\n    \"2029-08-01\",\r\n    \"2029-08-02\",\r\n    \"2029-08-03\",\r\n    \"2029-08-04\",\r\n    \"2029-08-05\",\r\n    \"2029-08-06\",\r\n    \"2029-08-07\",\r\n    \"2029-08-08\",\r\n    \"2029-08-09\",\r\n    \"2029-08-10\",\r\n    \"2029-08-11\",\r\n    \"2029-08-12\",\r\n    \"2029-08-13\",\r\n    \"2029-08-14\",\r\n    \"2029-08-15\",\r\n    \"2029-08-16\",\r\n    \"2029-08-17\",\r\n    \"2029-08-18\",\r\n    \"2029-08-19\",\r\n    \"2029-08-20\",\r\n    \"2029-08-21\",\r\n    \"2029-08-22\",\r\n    \"2029-08-23\",\r\n    \"2029-08-24\",\r\n    \"2029-08-25\",\r\n    \"2029-08-26\",\r\n    \"2029-08-27\",\r\n    \"2029-08-28\",\r\n    \"2029-08-29\",\r\n    \"2029-08-30\",\r\n    \"2029-08-31\",\r\n    \"2029-09-01\",\r\n    \"2029-09-02\",\r\n    \"2029-09-03\",\r\n    \"2029-09-04\",\r\n    \"2029-09-05\",\r\n    \"2029-09-06\",\r\n    \"2029-09-07\",\r\n    \"2029-09-08\",\r\n    \"2029-09-09\",\r\n    \"2029-09-10\",\r\n    \"2029-09-11\",\r\n    \"2029-09-12\",\r\n    \"2029-09-13\",\r\n    \"2029-09-14\",\r\n    \"2029-09-15\",\r\n    \"2029-09-16\",\r\n    \"2029-09-17\",\r\n    \"2029-09-18\",\r\n    \"2029-09-19\",\r\n    \"2029-09-20\",\r\n    \"2029-09-21\",\r\n    \"2029-09-22\",\r\n    \"2029-09-23\",\r\n    \"2029-09-24\",\r\n    \"2029-09-25\",\r\n    \"2029-09-26\",\r\n    \"2029-09-27\",\r\n    \"2029-09-28\",\r\n    \"2029-09-29\",\r\n    \"2029-09-30\",\r\n    \"2029-10-01\",\r\n    \"2029-10-02\",\r\n    \"2029-10-03\",\r\n    \"2029-10-04\",\r\n    \"2029-10-05\",\r\n    \"2029-10-06\",\r\n    \"2029-10-07\",\r\n    \"2029-10-08\",\r\n    \"2029-10-09\",\r\n    \"2029-10-10\",\r\n    \"2029-10-11\",\r\n    \"2029-10-12\",\r\n    \"2029-10-13\",\r\n    \"2029-10-14\",\r\n    \"2029-10-15\",\r\n    \"2029-10-16\",\r\n    \"2029-10-17\",\r\n    \"2029-10-18\",\r\n    \"2029-10-19\",\r\n    \"2029-10-20\",\r\n    \"2029-10-21\",\r\n    \"2029-10-22\",\r\n    \"2029-10-23\",\r\n    \"2029-10-24\",\r\n    \"2029-10-25\",\r\n    \"2029-10-26\",\r\n    \"2029-10-27\",\r\n    \"2029-10-28\",\r\n    \"2029-10-29\",\r\n    \"2029-10-30\",\r\n    \"2029-10-31\",\r\n    \"2029-11-01\",\r\n    \"2029-11-02\",\r\n    \"2029-11-03\",\r\n    \"2029-11-04\",\r\n    \"2029-11-05\",\r\n    \"2029-11-06\",\r\n    \"2029-11-07\",\r\n    \"2029-11-08\",\r\n    \"2029-11-09\",\r\n    \"2029-11-10\",\r\n    \"2029-11-11\",\r\n    \"2029-11-12\",\r\n    \"2029-11-13\",\r\n    \"2029-11-14\",\r\n    \"2029-11-15\",\r\n    \"2029-11-16\",\r\n    \"2029-11-17\",\r\n    \"2029-11-18\",\r\n    \"2029-11-19\",\r\n    \"2029-11-20\",\r\n    \"2029-11-21\",\r\n    \"2029-11-22\",\r\n    \"2029-11-23\",\r\n    \"2029-11-24\",\r\n    \"2029-11-25\",\r\n    \"2029-11-26\",\r\n    \"2029-11-27\",\r\n    \"2029-11-28\",\r\n    \"2029-11-29\",\r\n    \"2029-11-30\",\r\n    \"2029-12-01\",\r\n    \"2029-12-02\",\r\n    \"2029-12-03\",\r\n    \"2029-12-04\",\r\n    \"2029-12-05\",\r\n    \"2029-12-06\",\r\n    \"2029-12-07\",\r\n    \"2029-12-08\",\r\n    \"2029-12-09\",\r\n    \"2029-12-10\",\r\n    \"2029-12-11\",\r\n    \"2029-12-12\",\r\n    \"2029-12-13\",\r\n    \"2029-12-14\",\r\n    \"2029-12-15\",\r\n    \"2029-12-16\",\r\n    \"2029-12-17\",\r\n    \"2029-12-18\",\r\n    \"2029-12-19\",\r\n    \"2029-12-20\",\r\n    \"2029-12-21\",\r\n    \"2029-12-22\",\r\n    \"2029-12-23\",\r\n    \"2029-12-24\",\r\n    \"2029-12-25\",\r\n    \"2029-12-26\",\r\n    \"2029-12-27\",\r\n    \"2029-12-28\",\r\n    \"2029-12-29\",\r\n    \"2029-12-30\",\r\n    \"2029-12-31\",\r\n    \"2030-01-01\",\r\n    \"2030-01-02\",\r\n    \"2030-01-03\",\r\n    \"2030-01-04\",\r\n    \"2030-01-05\",\r\n    \"2030-01-06\",\r\n    \"2030-01-07\",\r\n    \"2030-01-08\",\r\n    \"2030-01-09\",\r\n    \"2030-01-10\",\r\n    \"2030-01-11\",\r\n    \"2030-01-12\",\r\n    \"2030-01-13\",\r\n    \"2030-01-14\",\r\n    \"2030-01-15\",\r\n    \"2030-01-16\",\r\n    \"2030-01-17\",\r\n    \"2030-01-18\",\r\n    \"2030-01-19\",\r\n    \"2030-01-20\",\r\n    \"2030-01-21\",\r\n    \"2030-01-22\",\r\n    \"2030-01-23\",\r\n    \"2030-01-24\",\r\n    \"2030-01-25\",\r\n    \"2030-01-26\",\r\n    \"2030-01-27\",\r\n    \"2030-01-28\",\r\n    \"2030-01-29\",\r\n    \"2030-01-30\",\r\n    \"2030-01-31\",\r\n    \"2030-02-01\",\r\n    \"2030-02-02\",\r\n    \"2030-02-03\",\r\n    \"2030-02-04\",\r\n    \"2030-02-05\",\r\n    \"2030-02-06\",\r\n    \"2030-02-07\",\r\n    \"2030-02-08\",\r\n    \"2030-02-09\",\r\n    \"2030-02-10\",\r\n    \"2030-02-11\",\r\n    \"2030-02-12\",\r\n    \"2030-02-13\",\r\n    \"2030-02-14\",\r\n    \"2030-02-15\",\r\n    \"2030-02-16\",\r\n    \"2030-02-17\",\r\n    \"2030-02-18\",\r\n    \"2030-02-19\",\r\n    \"2030-02-20\",\r\n    \"2030-02-21\",\r\n    \"2030-02-22\",\r\n    \"2030-02-23\",\r\n    \"2030-02-24\",\r\n    \"2030-02-25\",\r\n    \"2030-02-26\",\r\n    \"2030-02-27\",\r\n    \"2030-02-28\",\r\n    \"2030-03-01\",\r\n    \"2030-03-02\",\r\n    \"2030-03-03\",\r\n    \"2030-03-04\",\r\n    \"2030-03-05\",\r\n    \"2030-03-06\",\r\n    \"2030-03-07\",\r\n    \"2030-03-08\",\r\n    \"2030-03-09\",\r\n    \"2030-03-10\",\r\n    \"2030-03-11\",\r\n    \"2030-03-12\",\r\n    \"2030-03-13\",\r\n    \"2030-03-14\",\r\n    \"2030-03-15\",\r\n    \"2030-03-16\",\r\n    \"2030-03-17\",\r\n    \"2030-03-18\",\r\n    \"2030-03-19\",\r\n    \"2030-03-20\",\r\n    \"2030-03-21\",\r\n    \"2030-03-22\",\r\n    \"2030-03-23\",\r\n    \"2030-03-24\",\r\n    \"2030-03-25\",\r\n    \"2030-03-26\",\r\n    \"2030-03-27\",\r\n    \"2030-03-28\",\r\n    \"2030-03-29\",\r\n    \"2030-03-30\",\r\n    \"2030-03-31\",\r\n    \"2030-04-01\",\r\n    \"2030-04-02\",\r\n    \"2030-04-03\",\r\n    \"2030-04-04\",\r\n    \"2030-04-05\",\r\n    \"2030-04-06\",\r\n    \"2030-04-07\",\r\n    \"2030-04-08\",\r\n    \"2030-04-09\",\r\n    \"2030-04-10\",\r\n    \"2030-04-11\",\r\n    \"2030-04-12\",\r\n    \"2030-04-13\",\r\n    \"2030-04-14\",\r\n    \"2030-04-15\",\r\n    \"2030-04-16\",\r\n    \"2030-04-17\",\r\n    \"2030-04-18\",\r\n    \"2030-04-19\",\r\n    \"2030-04-20\",\r\n    \"2030-04-21\",\r\n    \"2030-04-22\",\r\n    \"2030-04-23\",\r\n    \"2030-04-24\",\r\n    \"2030-04-25\",\r\n    \"2030-04-26\",\r\n    \"2030-04-27\",\r\n    \"2030-04-28\",\r\n    \"2030-04-29\",\r\n    \"2030-04-30\",\r\n    \"2030-05-01\",\r\n    \"2030-05-02\",\r\n    \"2030-05-03\",\r\n    \"2030-05-04\",\r\n    \"2030-05-05\",\r\n    \"2030-05-06\",\r\n    \"2030-05-07\",\r\n    \"2030-05-08\",\r\n    \"2030-05-09\",\r\n    \"2030-05-10\",\r\n    \"2030-05-11\",\r\n    \"2030-05-12\",\r\n    \"2030-05-13\",\r\n    \"2030-05-14\",\r\n    \"2030-05-15\",\r\n    \"2030-05-16\",\r\n    \"2030-05-17\",\r\n    \"2030-05-18\",\r\n    \"2030-05-19\",\r\n    \"2030-05-20\",\r\n    \"2030-05-21\",\r\n    \"2030-05-22\",\r\n    \"2030-05-23\",\r\n    \"2030-05-24\",\r\n    \"2030-05-25\",\r\n    \"2030-05-26\",\r\n    \"2030-05-27\",\r\n    \"2030-05-28\",\r\n    \"2030-05-29\",\r\n    \"2030-05-30\",\r\n    \"2030-05-31\",\r\n    \"2030-06-01\",\r\n    \"2030-06-02\",\r\n    \"2030-06-03\",\r\n    \"2030-06-04\",\r\n    \"2030-06-05\",\r\n    \"2030-06-06\",\r\n    \"2030-06-07\",\r\n    \"2030-06-08\",\r\n    \"2030-06-09\",\r\n    \"2030-06-10\",\r\n    \"2030-06-11\",\r\n    \"2030-06-12\",\r\n    \"2030-06-13\",\r\n    \"2030-06-14\",\r\n    \"2030-06-15\",\r\n    \"2030-06-16\",\r\n    \"2030-06-17\",\r\n    \"2030-06-18\",\r\n    \"2030-06-19\",\r\n    \"2030-06-20\",\r\n    \"2030-06-21\",\r\n    \"2030-06-22\",\r\n    \"2030-06-23\",\r\n    \"2030-06-24\",\r\n    \"2030-06-25\",\r\n    \"2030-06-26\",\r\n    \"2030-06-27\",\r\n    \"2030-06-28\",\r\n    \"2030-06-29\",\r\n    \"2030-06-30\",\r\n    \"2030-07-01\",\r\n    \"2030-07-02\",\r\n    \"2030-07-03\",\r\n    \"2030-07-04\",\r\n    \"2030-07-05\",\r\n    \"2030-07-06\",\r\n    \"2030-07-07\",\r\n    \"2030-07-08\",\r\n    \"2030-07-09\",\r\n    \"2030-07-10\",\r\n    \"2030-07-11\",\r\n    \"2030-07-12\",\r\n    \"2030-07-13\",\r\n    \"2030-07-14\",\r\n    \"2030-07-15\",\r\n    \"2030-07-16\",\r\n    \"2030-07-17\",\r\n    \"2030-07-18\",\r\n    \"2030-07-19\",\r\n    \"2030-07-20\",\r\n    \"2030-07-21\",\r\n    \"2030-07-22\",\r\n    \"2030-07-23\",\r\n    \"2030-07-24\",\r\n    \"2030-07-25\",\r\n    \"2030-07-26\",\r\n    \"2030-07-27\",\r\n    \"2030-07-28\",\r\n    \"2030-07-29\",\r\n    \"2030-07-30\",\r\n    \"2030-07-31\",\r\n    \"2030-08-01\",\r\n    \"2030-08-02\",\r\n    \"2030-08-03\",\r\n    \"2030-08-04\",\r\n    \"2030-08-05\",\r\n    \"2030-08-06\",\r\n    \"2030-08-07\",\r\n    \"2030-08-08\",\r\n    \"2030-08-09\",\r\n    \"2030-08-10\",\r\n    \"2030-08-11\",\r\n    \"2030-08-12\",\r\n    \"2030-08-13\",\r\n    \"2030-08-14\",\r\n    \"2030-08-15\",\r\n    \"2030-08-16\",\r\n    \"2030-08-17\",\r\n    \"2030-08-18\",\r\n    \"2030-08-19\",\r\n    \"2030-08-20\",\r\n    \"2030-08-21\",\r\n    \"2030-08-22\",\r\n    \"2030-08-23\",\r\n    \"2030-08-24\",\r\n    \"2030-08-25\",\r\n    \"2030-08-26\",\r\n    \"2030-08-27\",\r\n    \"2030-08-28\",\r\n    \"2030-08-29\",\r\n    \"2030-08-30\",\r\n    \"2030-08-31\",\r\n    \"2030-09-01\",\r\n    \"2030-09-02\",\r\n    \"2030-09-03\",\r\n    \"2030-09-04\",\r\n    \"2030-09-05\",\r\n    \"2030-09-06\",\r\n    \"2030-09-07\",\r\n    \"2030-09-08\",\r\n    \"2030-09-09\",\r\n    \"2030-09-10\",\r\n    \"2030-09-11\",\r\n    \"2030-09-12\",\r\n    \"2030-09-13\",\r\n    \"2030-09-14\",\r\n    \"2030-09-15\",\r\n    \"2030-09-16\",\r\n    \"2030-09-17\",\r\n    \"2030-09-18\",\r\n    \"2030-09-19\",\r\n    \"2030-09-20\",\r\n    \"2030-09-21\",\r\n    \"2030-09-22\",\r\n    \"2030-09-23\",\r\n    \"2030-09-24\",\r\n    \"2030-09-25\",\r\n    \"2030-09-26\",\r\n    \"2030-09-27\",\r\n    \"2030-09-28\",\r\n    \"2030-09-29\",\r\n    \"2030-09-30\",\r\n    \"2030-10-01\",\r\n    \"2030-10-02\",\r\n    \"2030-10-03\",\r\n    \"2030-10-04\",\r\n    \"2030-10-05\",\r\n    \"2030-10-06\",\r\n    \"2030-10-07\",\r\n    \"2030-10-08\",\r\n    \"2030-10-09\",\r\n    \"2030-10-10\",\r\n    \"2030-10-11\",\r\n    \"2030-10-12\",\r\n    \"2030-10-13\",\r\n    \"2030-10-14\",\r\n    \"2030-10-15\",\r\n    \"2030-10-16\",\r\n    \"2030-10-17\",\r\n    \"2030-10-18\",\r\n    \"2030-10-19\",\r\n    \"2030-10-20\",\r\n    \"2030-10-21\",\r\n    \"2030-10-22\",\r\n    \"2030-10-23\",\r\n    \"2030-10-24\",\r\n    \"2030-10-25\",\r\n    \"2030-10-26\",\r\n    \"2030-10-27\",\r\n    \"2030-10-28\",\r\n    \"2030-10-29\",\r\n    \"2030-10-30\",\r\n    \"2030-10-31\",\r\n    \"2030-11-01\",\r\n    \"2030-11-02\",\r\n    \"2030-11-03\",\r\n    \"2030-11-04\",\r\n    \"2030-11-05\",\r\n    \"2030-11-06\",\r\n    \"2030-11-07\",\r\n    \"2030-11-08\",\r\n    \"2030-11-09\",\r\n    \"2030-11-10\",\r\n    \"2030-11-11\",\r\n    \"2030-11-12\",\r\n    \"2030-11-13\",\r\n    \"2030-11-14\",\r\n    \"2030-11-15\",\r\n    \"2030-11-16\",\r\n    \"2030-11-17\",\r\n    \"2030-11-18\",\r\n    \"2030-11-19\",\r\n    \"2030-11-20\",\r\n    \"2030-11-21\",\r\n    \"2030-11-22\",\r\n    \"2030-11-23\",\r\n    \"2030-11-24\",\r\n    \"2030-11-25\",\r\n    \"2030-11-26\",\r\n    \"2030-11-27\",\r\n    \"2030-11-28\",\r\n    \"2030-11-29\",\r\n    \"2030-11-30\",\r\n    \"2030-12-01\",\r\n    \"2030-12-02\",\r\n    \"2030-12-03\",\r\n    \"2030-12-04\",\r\n    \"2030-12-05\",\r\n    \"2030-12-06\",\r\n    \"2030-12-07\",\r\n    \"2030-12-08\",\r\n    \"2030-12-09\",\r\n    \"2030-12-10\",\r\n    \"2030-12-11\",\r\n    \"2030-12-12\",\r\n    \"2030-12-13\",\r\n    \"2030-12-14\",\r\n    \"2030-12-15\",\r\n    \"2030-12-16\",\r\n    \"2030-12-17\",\r\n    \"2030-12-18\",\r\n    \"2030-12-19\",\r\n    \"2030-12-20\",\r\n    \"2030-12-21\",\r\n    \"2030-12-22\",\r\n    \"2030-12-23\",\r\n    \"2030-12-24\",\r\n    \"2030-12-25\",\r\n    \"2030-12-26\",\r\n    \"2030-12-27\",\r\n    \"2030-12-28\",\r\n    \"2030-12-29\",\r\n    \"2030-12-30\",\r\n    \"2030-12-31\"\r\n]\r\nexport default dateRange;","// 1. Imports\r\n\r\nimport dateRange from \"./dateRange\"\r\n\r\n// 2. Definitions\r\n\r\nconst monthDict = {\r\n  'Jan': '01', 'Feb': '02', 'Mar': '03',\r\n  'Apr': '04', 'May': '05', 'Jun': '06',\r\n  'Jul': '07', 'Ago': '08', 'Sep': '09',\r\n  'Oct': '10', 'Nov': '11', 'Dec': '12'\r\n}\r\n\r\nexport function Today() {\r\n    const now = new Date().toString().split(' ')\r\n    const today = [ now[3], monthDict[now[1]], now[2] ].join('-')\r\n    return today\r\n}\r\n\r\nexport function oneDigit(stringNumber) {\r\n    if (stringNumber[0] == '0') return stringNumber.slice(1, stringNumber.length)\r\n    else return stringNumber\r\n}\r\n\r\nexport function getNextDate(date, next='next') {\r\n    const nextDate = dateRange[dateRange.indexOf(date) + (next=='previous' ? -1 : 1)]\r\n    return nextDate\r\n}\r\n\r\nfunction getUniqueYears() {\r\n    var uniqueYears = []\r\n  for (let date of dateRange) {\r\n    let year = date.slice(0,4)\r\n    if (!uniqueYears.includes(year)) {\r\n      uniqueYears.push(year)\r\n    }\r\n  }\r\n  return uniqueYears\r\n}\r\n\r\nfunction fullDates() {\r\n  var dates = []\r\n  var currentYear = getUniqueYears()[0]\r\n  var currentWeek = 1\r\n  for (let date of dateRange) {\r\n    const dateObj = new Date(date)\r\n    var newDate = {\r\n      date: date,\r\n      day: parseInt(oneDigit(date.slice(8,10))),\r\n      weekday: dateObj.getDay(),\r\n      week: null ,\r\n      month: parseInt(oneDigit(date.slice(5,7))),\r\n      year: parseInt(date.slice(0,4)),\r\n    }\r\n\r\n    if (newDate.year != currentYear) {\r\n      currentYear = newDate.year\r\n      currentWeek = 1\r\n    } else {\r\n      if (newDate.weekday==0) {\r\n        currentWeek += 1\r\n      }\r\n    }\r\n    newDate.week = currentWeek\r\n    dates.push(newDate)\r\n  }\r\n  return dates\r\n}\r\n\r\nfunction getWeeks() {\r\n  const FullDates = fullDates()\r\n  var weeks = [ {week: FullDates[0].week, year: FullDates[0].year} ]\r\n  for (let fullDate of FullDates) {\r\n    if ( fullDate.week != weeks[weeks.length-1].week ) {\r\n      weeks.push({\r\n          week: fullDate.week,\r\n          year: fullDate.year\r\n      })\r\n    }\r\n  }\r\n  return weeks\r\n}\r\n\r\nexport function getMonths() {\r\n  const FullDates = fullDates()\r\n  var months = [ {month: FullDates[0].month, year: FullDates[0].year} ]\r\n  for (let fullDate of FullDates) {\r\n      if ( fullDate.month != months[months.length-1].month ) {\r\n      months.push({\r\n        month: fullDate.month,\r\n        year: fullDate.year\r\n      })\r\n    }\r\n  }\r\n  return months\r\n}\r\n\r\nexport const Years = getUniqueYears()\r\nexport const FullDates = fullDates()\r\nexport const Weeks = getWeeks()\r\nexport const Months = getMonths()\r\n\r\nexport function fullDateMap(date) {\r\n  return FullDates[dateRange.indexOf(date)]\r\n}\r\n\r\nexport function current(period) {\r\n  return fullDateMap(Today())[period]\r\n}\r\n\r\nexport const dateCollections = {\r\n  'day': dateRange,\r\n  'week': Weeks,\r\n  'month': Months,\r\n  'year': Years\r\n  }\r\n  \r\nexport function getNext(date, next='next', period) {\r\n  const dateCollection = dateCollections[period]\r\n  const nDates = dateCollection.length\r\n  var currentIndex\r\n  if (['day', 'year'].includes(period))\r\n    currentIndex = dateCollection.indexOf(date.toString())\r\n  else {\r\n    dateCollection.forEach((collDate, index) => {\r\n    if (collDate[period]==date[period] && collDate.year==date.year )\r\n      currentIndex = index\r\n    })\r\n  }\r\n  const lastDateIndex = next=='next' ? nDates-1 : 0\r\n  const isInLastDateIndex = currentIndex==lastDateIndex\r\n  const nextIndex = isInLastDateIndex\r\n  ? ( next=='next' ? 0 : nDates-1 )\r\n  : currentIndex + (next=='next' ? 1 : -1)\r\n\r\n  return dateCollection[nextIndex]\r\n}\r\n\r\nexport const intWeekDayMap = {\r\n  0: 'Seg',\r\n  1: 'Ter',\r\n  2: 'Qua',\r\n  3: 'Qui',\r\n  4: 'Sex',\r\n  5: 'Sab',\r\n  6: 'Dom',\r\n}\r\n\r\nexport const portugueseMonthSigs = [\r\n  'Jan', 'Fev', 'Mar', 'Abr',\r\n  'Mai', 'Jun', 'Jul', 'Ago',\r\n  'Set', 'Out', 'Nov', 'Dez'\r\n]\r\n\r\nexport function formatDate(date) {\r\n  const newDate = new Date(date)\r\n  const weekday = intWeekDayMap[newDate.getDay()]\r\n  const day = parseInt(oneDigit(date.slice(8,10)))\r\n  const month = portugueseMonthSigs[parseInt(oneDigit(date.slice(5,7)))-1]\r\n  var prefix\r\n  if (date === Today()) prefix = 'Hoje, '\r\n  else if (date === getNextDate(Today(), 'previous')) prefix = 'Ontem, '\r\n  else prefix = weekday + ', '\r\n  return prefix + day + ' ' + month  \r\n}\r\n\r\nexport function formatWeek(date) {\r\n  const thisWeek = {week: current('week'), year: current('year')}\r\n  const lastWeek = getNext(thisWeek, 'previous', 'week')\r\n  const isThisWeek = date.week==thisWeek.week && date.year==thisWeek.year\r\n  const isLastWeek = date.week==lastWeek.week && date.year==lastWeek.year\r\n  if (isThisWeek) return `Esta semana, ${date.year}`\r\n  else if (isLastWeek) return `Semana passada, ${date.year}`\r\n  else return `Semana ${date.week}, ${date.year}`\r\n}\r\n\r\nexport function formatMonth(date) {\r\n  const thisMonth = {month: current('month'), year: current('year')}\r\n  const lastMonth = getNext(thisMonth, 'previous', 'month')\r\n  const isThisMonth = date.month==thisMonth.month && date.year==thisMonth.year\r\n  const isLastMonth = date.month==lastMonth.month && date.year==lastMonth.year\r\n  const month = portugueseMonthSigs[date.month-1]\r\n  if (isThisMonth) return `Este mês, ${month} ${date.year}`\r\n  else if (isLastMonth) return `Mês passado, ${month} ${date.year}`\r\n  else return `${month}, ${date.year}`\r\n}\r\n\r\nexport const formatPeriodDate = {\r\n  'day': formatDate,\r\n  'week': formatWeek,\r\n  'month': formatMonth,\r\n  'year': date => `Ano ${date}`\r\n}\r\n\r\nexport function datePeriodFilters(date, period) {\r\n  return {\r\n    'hour': entry => entry.date == date[period].date,\r\n    'day': entry => entry.date == date[period],\r\n    'week': entry => fullDateMap(entry.date).week==date[period].week && fullDateMap(entry.date).year==date[period].year,\r\n    'month': entry => fullDateMap(entry.date).month==date[period].month && fullDateMap(entry.date).year==date[period].year,\r\n    'year': entry => fullDateMap(entry.date).year==date[period]\r\n  }[period]\r\n}\r\n\r\nexport function dateDiff(date0, date1) {\r\n  return ((new Date(date1)) - (new Date(date0))) / (1000*60*60*24) // Date difference in days\r\n}\r\n\r\nfunction yearTicks() {\r\n  const firstDayOfEachMonth = FullDates.filter(datePeriodFilters({'year': 2021}, 'year')).filter(date => date.day==1)\r\n  const firstDayOfTheYear = firstDayOfEachMonth.filter(fullDate => fullDate.day == 1 && fullDate.month == 1 )[0].date\r\n  return firstDayOfEachMonth.map(fullDate => dateDiff(firstDayOfTheYear, fullDate.date))\r\n}\r\n\r\nexport const YearTicks = yearTicks()","import { Platform, Dimensions, StatusBar } from 'react-native';\r\nimport * as Device from 'expo-device';\r\n\r\nconst isWindowsBroswer = Platform.OS=='web' & (Device.osName!='iOS' & Device.osName!='Android')\r\nconst screenWidth = Dimensions.get('screen').width\r\nconst screenHeight = Dimensions.get('screen').height\r\n\r\nexport function relativeToScreen(size, axis='width') {\r\n    if (typeof(size)=='string') {\r\n        return parseInt(size.slice(0, size.length-1)) / 100 * ( axis=='width' ? screenWidth : screenHeight )\r\n    } else {\r\n        return isWindowsBroswer ? size : size * ( axis=='width' ? screenWidth/392.72 : screenHeight/850.9 )\r\n    }\r\n}\r\n\r\nvar styles = {\r\n    login: {\r\n        mainView: {\r\n            flex: 1,\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n            // paddingHorizontal: Platform.OS != 'web' ? '5%' : '5%',\r\n            paddingTop: StatusBar.currentHeight,\r\n        },\r\n        titleView: {\r\n            flexDirection: 'row',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n            minHeight: relativeToScreen(50, 'height'),\r\n        },\r\n        title: {\r\n            // width: '70%',\r\n            textAlign: 'center',\r\n            fontSize: relativeToScreen(30),\r\n            fontWeight: 'bold',\r\n            color: 'white',\r\n            alignSelf: 'center',\r\n        },\r\n        titleIcon: {\r\n            width: relativeToScreen(30),\r\n            height: relativeToScreen(30),\r\n            marginLeft: relativeToScreen(6),\r\n            paddingTop: relativeToScreen(3),\r\n        },\r\n        card: {\r\n            height: relativeToScreen(440),\r\n            minHeight: relativeToScreen(430),\r\n            width: relativeToScreen(350),\r\n            paddingHorizontal: relativeToScreen(10),\r\n            paddingVertical: relativeToScreen(10),\r\n            borderWidth: relativeToScreen(4),\r\n            borderRadius: relativeToScreen(10),\r\n            borderColor: 'rgba(0,0,0,0.1)',\r\n            justifyContent: 'space-between',\r\n            backgroundColor: 'azure',\r\n        },\r\n        cardHeader: {\r\n            height: '21.42%',\r\n            width: '100%',\r\n            justifyContent: 'center'\r\n            // borderWidth: 1\r\n        },\r\n        cardTitle: {\r\n            position: 'relative',\r\n            left: relativeToScreen(5),\r\n            fontSize: relativeToScreen(24),\r\n            fontWeight: 'bold',\r\n            color: 'black',\r\n        },\r\n        cardSection: {\r\n            height: '20.5%',\r\n            justifyContent: 'space-between',\r\n            alignItems: 'center',\r\n            // borderWidth: 1\r\n        },\r\n        loadingIcon: {\r\n            alignSelf: 'center'\r\n        },\r\n        inputField: {\r\n            // minHeight: 40,\r\n            height: '47%',\r\n            width: '100%',\r\n            paddingLeft: relativeToScreen(10),\r\n            fontSize: relativeToScreen(14),\r\n            borderWidth: 1,\r\n            borderRadius: relativeToScreen(5),\r\n            borderColor: 'rgba(0,0,0,0.1)',\r\n            backgroundColor: 'white'\r\n        },\r\n        button: {\r\n            height: '29%',\r\n            width: '100%',\r\n            textAlign: 'center',\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n            borderWidth: 1,\r\n            borderRadius: 5,\r\n            borderColor: 'rgba(0,0,0,0)',\r\n            backgroundColor: 'lightblue',        \r\n        },\r\n        buttonLabel: {\r\n            fontSize: relativeToScreen(15),\r\n            fontWeight: 'bold',\r\n            color: 'black',\r\n        },\r\n        text: {\r\n            fontSize: relativeToScreen(15),\r\n            textAlign: 'center',\r\n        },\r\n        msgBox: {\r\n            width: relativeToScreen(300),\r\n            paddingVertical: relativeToScreen(5),\r\n            paddingHorizontal: relativeToScreen(3),\r\n            marginBottom: relativeToScreen(3),\r\n            justifyContent: 'center',\r\n            backgroundColor: 'rgb(30,30,30)',\r\n            borderWidth: 1,\r\n            borderColor: 'rgb(40,40,40)',\r\n            \r\n        },\r\n        msg: {\r\n            textAlign: 'center',\r\n            color: 'white',\r\n            // paddingHorizontal: 20,\r\n        },\r\n    }\r\n};\r\nexport default styles;","// import { StatusBar } from 'expo-status-bar';\r\nimport { Platform, StatusBar } from 'react-native';\r\nimport { relativeToScreen } from './loginStyles';\r\n\r\nvar styles = {\r\n    mainView: {\r\n        flex: 1,                 \r\n        paddingTop: StatusBar.currentHeight,\r\n        paddingBottom: relativeToScreen(55)\r\n    },\r\n    scrollView: {\r\n        flex: 1,\r\n    },\r\n    header: {\r\n        height: relativeToScreen(120),\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    navigationRow: {\r\n        height: relativeToScreen(60),\r\n        justifyContent: 'space-between',\r\n        alignItems: 'flex-start'\r\n    },\r\n    section: {\r\n        width: relativeToScreen(350),\r\n        paddingBottom: '16%',\r\n        borderBottomWidth: 1,\r\n        borderColor: '#fff3',\r\n        alignSelf: 'center',\r\n    },\r\n    sectionHeader: {\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        height: relativeToScreen(100)\r\n    },\r\n    sectionTitle: {\r\n        fontSize: relativeToScreen(25),\r\n        color: 'white',\r\n        // fontWeight: '400',   \r\n    },\r\n    card: {\r\n        marginBottom: '5%',\r\n        paddingVertical: relativeToScreen(5),\r\n        paddingHorizontal: relativeToScreen(10),\r\n        borderRadius: relativeToScreen(20),\r\n        backgroundColor: 'rgba(0,0,0,0.3)',\r\n    },\r\n    cardRow: {\r\n        flexDirection: 'row',\r\n        paddingVertical: relativeToScreen(5),\r\n        alignItems: 'center',\r\n    },\r\n    postButton: {\r\n        position: 'absolute',\r\n        height: relativeToScreen(59),\r\n        width: relativeToScreen(59),\r\n        borderRadius: relativeToScreen(30),\r\n        bottom: relativeToScreen(25 + 55),\r\n        // bottom: '2%',\r\n        alignSelf: 'center',\r\n        backgroundColor: 'rgba(0,0,0,1)',\r\n        justifyContent: 'center',\r\n    },\r\n    postButtonLabel: {\r\n        alignSelf: 'center',\r\n    },\r\n    moodBadge: {\r\n        height: Platform.OS=='web' ? null : relativeToScreen(30),\r\n        paddingVertical: Platform.OS=='web' ? 5 : null,\r\n        borderRadius: relativeToScreen(30),\r\n        width: relativeToScreen(130),\r\n        fontSize: relativeToScreen(15),\r\n        textAlign: 'center',\r\n        textAlignVertical: 'center'\r\n    },\r\n    moodHeaderItem: {\r\n        height: relativeToScreen(30),\r\n        alignItems: 'flex-end',\r\n        justifyContent: 'center',\r\n    },\r\n    emotionBadge: {\r\n        // fontFamily: 'sans-serif',\r\n        height: Platform.OS=='web' ? null : relativeToScreen(29),\r\n        backgroundColor: '#f4f3f4',\r\n        borderRadius: relativeToScreen(14.5),\r\n        paddingVertical: Platform.OS=='web' ? 5 : null,\r\n        paddingHorizontal: relativeToScreen(12.5),\r\n        marginRight: relativeToScreen(6),\r\n        fontSize: relativeToScreen(14),\r\n        textAlign: 'center',\r\n        textAlignVertical: 'center',\r\n    },\r\n    textBadge: {\r\n        backgroundColor: 'aliceblue',\r\n        borderRadius: relativeToScreen(17),\r\n        paddingTop: relativeToScreen(5),\r\n        paddingBottom: relativeToScreen(8),\r\n        paddingHorizontal: relativeToScreen(11),\r\n        width: '100%',\r\n        fontSize: relativeToScreen(15),\r\n        lineHeight: relativeToScreen(22),\r\n        textAlign: 'left',\r\n        textAlignVertical: 'top',\r\n},\r\n    text: {\r\n        // fontFamily: 'sans-serif',\r\n        fontSize: relativeToScreen(14),\r\n        color: 'white'\r\n    },\r\n    spaceBetween: {\r\n        justifyContent: 'space-between',\r\n    },\r\n    icon: {\r\n        paddingHorizontal: relativeToScreen(12),\r\n    },\r\n    entryIcon: {\r\n        paddingRight: 0,\r\n        borderWidth: 1,\r\n    },\r\n    editButtonsView: {\r\n        flexDirection: 'row',\r\n        height: relativeToScreen(50),\r\n        paddingBottom: relativeToScreen(5),\r\n        alignItems: 'flex-end',\r\n        justifyContent: 'space-between'\r\n    },\r\n    editButton: {\r\n        height: relativeToScreen(34),\r\n        width: relativeToScreen(102),\r\n        borderWidth: 1,\r\n        borderColor: 'aliceblue',\r\n        borderRadius: relativeToScreen(17),\r\n        alignItems: 'center',\r\n        justifyContent: 'center'\r\n    },\r\n    editButtonLabel: {\r\n        fontSize: relativeToScreen(15),\r\n        fontWeight: '400',\r\n        color: 'white',\r\n    },\r\n    msgBox: {\r\n        position: 'absolute',\r\n        alignSelf: 'center',\r\n        bottom: relativeToScreen(110),\r\n        width: relativeToScreen(300),\r\n        paddingVertical: relativeToScreen(10),\r\n        paddingHorizontal: relativeToScreen(10),\r\n        // height: 36,\r\n        justifyContent: 'center',\r\n        backgroundColor: 'rgb(30,30,30)',\r\n        borderWidth: 1,\r\n        borderColor: 'rgb(40,40,40)',\r\n    },\r\n    msg: {\r\n        textAlign: 'center',\r\n        color: 'white',\r\n        // paddingHorizontal: 20,\r\n    },\r\n};\r\n\r\nexport default styles;","// Module import\r\nimport React, { Component, useState } from 'react';\r\nimport { Platform, View, Text, Pressable, Image, ActivityIndicator } from 'react-native';\r\nimport { Icon } from 'react-native-eva-icons'\r\nimport { relativeToScreen } from '../../styles/loginStyles';\r\n\r\n// Local import\r\nimport styles from '../../styles/entrancesStyles'\r\nstyles.theme = {}; styles.altTheme = {}; \r\n\r\nconst appServerURI = 'https://mood-tracker-server.herokuapp.com/'\r\n\r\n// OpenWeatherMap API weather icons URI:\r\nfunction openWeatherMapIconsURI (icon) {\r\n    if (Platform.OS === 'android') {\r\n        return `http://openweathermap.org/img/wn/${icon}@2x.png`\r\n\r\n    } else if (Platform.OS === 'web') {\r\n        return `https://openweathermap.org/img/wn/${icon}@2x.png`\r\n    }\r\n}\r\n\r\n// Defining mood colors schema\r\nconst moodColors = {'Horrível': '#ff3333', 'Mal': '#0099cc', 'Regular': '#add8e6', 'Bem': '#ffff33', 'Ótimo': '#00cc00'};\r\n\r\nconst monthDict = {'Jan': '01', 'Feb': '02', 'Mar': '03', 'Apr': '04', 'May': '05', 'Jun': '06', 'Jul': '07', 'Ago': '08', 'Sep': '09', 'Oct': '10', 'Nov': '11', 'Dec': '12'}\r\nfunction Today() {\r\n    const now = Date().toString().split(' ')\r\n    const today = [ now[3], monthDict[now[1]], now[2] ].join('-')\r\n    return today\r\n}\r\n\r\nfunction MoodHeader({entry}) {\r\n    return(\r\n        <View style={ [styles.cardRow, styles.spaceBetween] }>\r\n            <View style={ [{flexDirection: 'row', alignItems: 'flex-start'} ] }>\r\n            <Text style={[styles.moodBadge, {backgroundColor: moodColors[entry.mood]}]}>{entry.mood}</Text>\r\n                    { entry.star ? (\r\n                    <View style={[styles.moodHeaderItem, {width: relativeToScreen(42)}]}>\r\n                        <Icon name='star' fill='gold' width={relativeToScreen(28)} height={relativeToScreen(28)} />\r\n                    </View>\r\n                    ) : null }                    \r\n                    { entry.weather ? (\r\n                        <View style={[styles.moodHeaderItem, {width: relativeToScreen(50)}]}>\r\n                            <Image\r\n                            source={{uri: openWeatherMapIconsURI(entry.weather.weather.icon)}}\r\n                            style={{width: relativeToScreen(40), height: relativeToScreen(40)}}\r\n                            />\r\n                        </View>\r\n                    ) : null }                    \r\n                    { entry.weather ? (\r\n                        <View style={[styles.moodHeaderItem, {width: relativeToScreen(35)}]}>\r\n                            <Text style={[styles.theme, {fontSize: relativeToScreen(14)}]}>\r\n                                { entry.weather.main.temp.toString().slice(0,2) + '°C' }\r\n                            </Text>\r\n                        </View>\r\n                    ) : null }                \r\n                \r\n            </View>\r\n            <View style={[styles.cardRow]}>\r\n                <Icon name='edit' height={relativeToScreen(18)} width={relativeToScreen(18)} fill='rgba(255,255,255,0.75)' style={{marginRight: relativeToScreen(6)}} />\r\n                <Text style={styles.text}>{entry.startTime.slice(0,5)}</Text>\r\n            </View>\r\n        </View>\r\n\r\n    )\r\n}\r\n\r\nfunction Address ({entry}) {\r\n    const [isCollapsed, setIsCollapsed] = useState( 1 );\r\n    if (entry.address) {\r\n        return(\r\n            <View style={styles.cardRow}>\r\n                <Text numberOfLines={ isCollapsed } onPress={ () => { setIsCollapsed( isCollapsed ? 0 : 1 ) }} style={styles.text}>\r\n                    <Icon name='pin' height={relativeToScreen(17)} width={relativeToScreen(17)} fill='rgba(255,255,255,0.75)' style={{position: 'relative', marginRight: relativeToScreen(5), top: relativeToScreen(2)}} />\r\n                    {entry.address}\r\n                </Text>\r\n            </View>        \r\n        )\r\n    } else {\r\n        return <></>\r\n    }\r\n}\r\n\r\nfunction Emotions ({entry}) {\r\n    if (entry.emotions.length > 0) {\r\n        return (\r\n            <View style={[styles.cardRow, {flexWrap: 'wrap', justifyContent: 'flex-start', paddingTop: 2, PaddingBottom: 0}]}>\r\n                { entry.emotions.map((emotion, index) => {\r\n                    if (emotion.name) {\r\n                        emotion = emotion.name\r\n                    }\r\n                    return(\r\n                        <View\r\n                        key={'emotion-' + emotion}\r\n                        style={{paddingVertical: relativeToScreen(5), paddingHorizontal: relativeToScreen(2)}}\r\n                        >\r\n                            <Text style={[styles.emotionBadge]}>{emotion}</Text>\r\n                        </View>\r\n                    )\r\n                })}\r\n            </View>\r\n        )\r\n    } else {\r\n        return (\r\n            <></>\r\n        )\r\n    }\r\n}\r\n\r\nfunction Jornal({ entry }) {\r\n    if (entry.jornal) {\r\n        return(\r\n            <View style={styles.cardRow}>\r\n                <Text style={styles.textBadge}>\r\n                    <Icon\r\n                    name='book-open'\r\n                    height={relativeToScreen(20)}\r\n                    width={relativeToScreen(20)}\r\n                    fill='rgba(0,0,0,0.25)'\r\n                    style={{position: 'relative', top: relativeToScreen(4), left: 1, marginRight: relativeToScreen(6)}}\r\n                    />\r\n                    {entry.jornal}\r\n                </Text>\r\n            </View>\r\n        )\r\n    } else {\r\n        return <></>\r\n    }\r\n}\r\n\r\nfunction EmptyCard(props) {\r\n    const today = props.parentState.selectedDate == Today()\r\n    const navigateParams = {\r\n        currentEntry: {\r\n            type: today ? 'new' : 'custom-date',\r\n            date: props.parentState.selectedDate,\r\n            entry: null\r\n        },\r\n        // setMainScreenState: props.setMainScreenState,\r\n        // getMainScreenState: props.getMainScreenState,\r\n\r\n    }\r\n    const textStyle = [{fontSize: relativeToScreen(16), textAlign: 'center', marginTop: relativeToScreen(7)}, styles.theme]\r\n    return (\r\n        <Pressable\r\n        onPress={ () => props.parentProps.navigation.navigate('PostEntrance', navigateParams) }\r\n        style={[styles.card, {alignItems: 'center', justifyContent: 'center', fontSize: relativeToScreen(16), height: relativeToScreen(145)}]}\r\n        >\r\n            <Icon name='inbox' fill='rgba(255,255,255,0.3)' width={relativeToScreen(25)} height={relativeToScreen(25)} />\r\n            <Text selectable={false} style={textStyle}> Nenhuma entrada encontrada. </Text>\r\n            <Text selectable={false} style={textStyle}> Pressione aqui para adicionar uma a este dia! </Text>\r\n        </Pressable>\r\n    );\r\n}\r\n\r\nfunction CardsLoadingMessage() {\r\n    return(\r\n        <View style={[styles.card, {alignItems: 'center', justifyContent: 'center', height: relativeToScreen(85)}]}>\r\n            <Icon name='sync-outline' fill='rgba(255,255,255,1)' width={relativeToScreen(25)} height={relativeToScreen(25)} />\r\n            <Text style={[styles.theme, {marginTop: relativeToScreen(10), fontSize: relativeToScreen(16)}]}>Sincronizando entradas...</Text>\r\n        </View>\r\n    )\r\n}\r\n\r\nexport default class UserEntryCards extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n        \r\n        this.EntryCard = this.EntryCard.bind(this);\r\n        this.EditEntryButtons = this.EditEntryButtons.bind(this);\r\n        this.editUserEntry = this.editUserEntry.bind(this);\r\n        this.deleteUserEntry = this.deleteUserEntry.bind(this);\r\n        this.setFontColor = this.setFontColor.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log('Subcomponent \"UserEntryCards\" did mount...')\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        console.log('\"UserEntryCards\" sub-component will unmount...')\r\n      }\r\n    \r\n    EntryCard({ entry, lastCard }) {\r\n        function onEntryCardPress() {\r\n            this.props.parentProps.navigation.setParams({ selectedEntryId: this.props.parentState.selectedEntryId === entry._id ? null : entry._id })\r\n        }\r\n        return (\r\n        <Pressable\r\n        onPress={onEntryCardPress.bind(this)}\r\n        style={[styles.card, {marginBottom: lastCard ? 0 : styles.card.marginBottom }]}>\r\n            <MoodHeader entry={entry} />\r\n            <Emotions entry={entry} />\r\n            <Address entry={entry} />\r\n            <Jornal entry={entry} />\r\n            <this.EditEntryButtons entryId={entry._id} />\r\n        </Pressable>\r\n        );\r\n    }\r\n\r\n    UserEntryCardsList() {\r\n        const selDateEntries = this.props.parentState.user.entries.filter( entry => entry.date === this.props.parentState.selectedDate ).reverse()\r\n        // console.log('LOGGING USER ENTRIES:')\r\n        // console.log(selDateEntries)\r\n        if (selDateEntries.length) {\r\n            return(\r\n                <>\r\n                    { this.props.parentState.isUserDataSyncing ? <CardsLoadingMessage /> : null }\r\n                    { selDateEntries.map( entry => <this.EntryCard key={'entry-card-'+entry.startTime} entry={entry} />) }\r\n                </>\r\n            )\r\n        } else if (this.props.parentState.isUserDataSyncing) {\r\n            return <CardsLoadingMessage />\r\n            \r\n        } else {\r\n            return <EmptyCard {...this.props} />\r\n        }\r\n    }\r\n\r\n    EditEntryButtons(props) {\r\n        const buttonLabels = ['Editar', 'Excluir']\r\n        const onButtonPress = {\r\n            'Editar': this.editUserEntry,\r\n            'Excluir': () => {this.props.setAlertMsg('Pressione e segure para excluir uma entrada.')}\r\n        }\r\n        const onButtonLongPress = { 'Editar': () => {}, 'Excluir': this.deleteUserEntry }\r\n\r\n        const [isButtonPressed, setIsButtonPressed] = useState({\r\n            'Editar': false,\r\n            'Excluir': false,\r\n        })\r\n\r\n        function highlightButtonFor(label) {\r\n            function highlightButton() {\r\n                setIsButtonPressed({ ...isButtonPressed, [label]: !isButtonPressed[label] })\r\n            }\r\n            return highlightButton.bind(this);\r\n        }\r\n\r\n        const isLoading = this.props.parentState.isDeleteLoading | this.props.parentState.isUserDataSyncing\r\n        const buttonLabel = (label) => <Text selectable={false} style={[styles.editButtonLabel, {color: label=='Excluir' ? 'red' : styles.theme.color }]}>{label}</Text>\r\n        if (this.props.parentState.selectedEntryId == props.entryId) {\r\n            return(\r\n                <View style={styles.editButtonsView}>\r\n                    { buttonLabels.map( (label) => (\r\n                        <Pressable\r\n                        key={`edit-${label}-${props.entryId}`}\r\n                        style={[ styles.editButton, {\r\n                            backgroundColor: isButtonPressed[label] ? styles.theme.color + '4' : '#0000',\r\n                            borderColor: label=='Excluir' ? 'red' : styles.theme.color\r\n                        }]}\r\n                        disabled={ isLoading }\r\n                        onPress={ () => {highlightButtonFor(label)(); onButtonPress[label]()} }\r\n                        onPressIn={highlightButtonFor(label)}\r\n                        onLongPress={() => {highlightButtonFor(label)(); onButtonLongPress[label]()}}\r\n                        >\r\n                            { label=='Excluir' ? (\r\n                                this.props.parentState.isDeleteLoading ? <ActivityIndicator color='red' /> : buttonLabel(label)\r\n                                \r\n                            ) : buttonLabel(label) }\r\n                                                \r\n                        </Pressable>\r\n                    )) }\r\n            </View>\r\n            )\r\n        } else {\r\n            return null\r\n        }\r\n    }\r\n\r\n    editUserEntry() {\r\n        const selectedEntry = this.props.parentState.user.entries.filter( (entry) => entry._id == this.props.parentState.selectedEntryId )[0]\r\n        const navigateParams = {\r\n            currentEntry: {\r\n                type: 'edit',\r\n                date: selectedEntry.date,\r\n                entry: selectedEntry\r\n            },\r\n            // setMainScreenState: this.props.setMainScreenState,\r\n            // getMainScreenState: this.props.getMainScreenState,\r\n    \r\n        }\r\n        this.props.parentProps.navigation.navigate('PostEntrance', navigateParams)\r\n    }\r\n\r\n    async deleteUserEntry() {\r\n\r\n        console.log('DELETE USER ENTRY STATUS: Started...')\r\n        this.props.setMainScreenState({ isDeleteEntryLoading: true });\r\n\r\n        try {\r\n            var UsersResult = {ok: false, status: 999}\r\n            const parentState = this.props.parentState\r\n            const deleteEntryURI = appServerURI + 'Users/' + parentState.user.username + '/entries/' + parentState.selectedEntryId\r\n            UsersResult = await fetch( deleteEntryURI, { method: 'DELETE' });\r\n            // var UsersResult = await fetch( 'https://localhost:3000/' + 'Users/' + this.props.parentState.user.username + '/entries/' + this.props.parentState.selectedEntryId, { method: 'DELETE' });\r\n            const usersStatus =  'Status ' + UsersResult.status + ', ' + UsersResult.statusText\r\n\r\n            if (UsersResult.ok) {\r\n                // const users = await UsersResult.json();\r\n                console.log('fetch DELETE request for user entry successful.')\r\n                console.log(usersStatus)\r\n                console.log('DELETE USER ENTRY STATUS: Successful.')\r\n\r\n            } else {\r\n                console.log( new Error('\"fetch\" DELETE request for user entry failed. Throwing error...') )\r\n                throw new Error(usersStatus)\r\n            }\r\n    \r\n        } catch (error) {\r\n                console.log('DELETE USER ENTRY STATUS: Error captured. Printing error...')\r\n                console.log(error);\r\n                this.props.setAlertMsg('Não foi possível deletar a entrada. Tente novamente.')\r\n\r\n        } finally {\r\n            this.props.setMainScreenState({ isDeleteEntryLoading: false });\r\n            // this.props.setMainScreenState({ selectedEntryId: null })\r\n            console.log('DELETE USER ENTRY STATUS: FINISHED.' + UsersResult.ok ? 'Proceeding to sync user entries...' : 'Delete failed, skipping sync of user entries...')\r\n            if (UsersResult.ok) {\r\n                await this.props.syncUserData();\r\n                this.props.parentProps.navigation.setParams({ selectedEntryId: null })\r\n            }\r\n        }    \r\n    }\r\n\r\n    setFontColor() {\r\n        const fontColorDark = this.props.parentState.user.settings.fontColorDark\r\n        const fontColor = fontColorDark ? '#000' : '#fff'\r\n        const altFontColor = fontColorDark ? '#fff' : '#000'\r\n        for (let style of ['theme', 'text']) {\r\n            styles[style] = { ...styles[style], color: fontColor }\r\n        }\r\n        styles.altTheme.color = altFontColor\r\n        styles.altTheme.backgroundColor = altFontColor\r\n    }\r\n\r\n    render() {\r\n        console.log('\"Rendering \"UserEntryCards\" sub-component...\"')\r\n        this.setFontColor()\r\n        return this.UserEntryCardsList()\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { View, Text, ImageBackground, TextInput, Pressable, Platform, ActivityIndicator, Switch } from 'react-native';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport NetInfo from \"@react-native-community/netinfo\";\r\nimport * as Device from 'expo-device';\r\nimport { Icon } from 'react-native-eva-icons'\r\n\r\nimport styles, { relativeToScreen } from '../styles/loginStyles'\r\nlet backgroundColor = \"#5926a6\"\r\nlet imgURI = require('../assets/wallpaper.png')\r\n\r\nconst defaultEmotions = require('../shared/emotionsConfig')\r\nconst userScheme = {\r\n  emotions: defaultEmotions,\r\n  entries: [],\r\n  layout: 'grid',\r\n  settings: {\r\n    backgroundColor: \"#5926a6\",\r\n    backgroundImage: require('../shared/defaultWallpaper.json'),\r\n    displayBackgroundImage: true,\r\n    enableHighResolution: false,\r\n    fontColorDark: false,\r\n  }\r\n}\r\n\r\n// App server connection settings\r\nconst appServerURI = 'https://mood-tracker-server.herokuapp.com/'\r\n\r\n// Email Validation settings\r\nconst falseParams = ['validateDNS', 'checkCatchAll', 'checkFree', 'checkDisposable']\r\n\r\nasync function validateEmail(email) {\r\n  console.log('EMAIL VERIFICATION STATUS: Fetching email verification api...')\r\n  var emailStatus = {ok: false, status: 'Email não verificado.'}\r\n  try {\r\n    var queryParams = {\r\n      emailAddress: email,\r\n    }\r\n    falseParams.forEach(param => queryParams[param]='false')\r\n    const fetchOptions = {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },    \r\n        body: JSON.stringify({\r\n          queryParams: queryParams\r\n        }),\r\n    }\r\n    const apiResp = await fetch(appServerURI + 'api/email', fetchOptions)\r\n  \r\n    if (apiResp.ok) {  \r\n      console.log('EMAIL VERIFICATION STATUS: Api fetch request successful.')\r\n      const apiRespJson = await apiResp.json()\r\n      if ( apiRespJson.formatCheck!='true' ) {\r\n        emailStatus.status = 'Email inválido.'\r\n      } else if ( apiRespJson.smtpCheck!='true' ) {\r\n        emailStatus.status = 'Email não existe.'\r\n      } else {\r\n        emailStatus = {ok: true, status: 'Email válido.'}\r\n      }\r\n      return emailStatus\r\n  \r\n    } else {\r\n      console.log('EMAIL VERIFICATION STATUS: Api fetch request failed. Throwing error...')\r\n      throw new Error('Status: ' + apiResp.status + ', Status Text: ' + apiResp.statusText)\r\n    }\r\n  } finally {\r\n    console.log('EMAIL VERIFICATION STATUS: Concluído')\r\n  }\r\n}\r\n\r\nfunction validatePassword(password) {\r\n  console.log('VALIDATING PASSWORD FOR SIGNUP...')\r\n  const hasMinLength = password.length > 5\r\n  var res\r\n  if (!hasMinLength) {\r\n    res = {ok: false, status: 'A senha deve ter no mínimo 6 caractéres.'}\r\n  } else {\r\n    res = {ok: true, status: 'Senha válida.'}\r\n  }\r\n  return res\r\n}\r\n\r\n// async function fetchUsers() {\r\n//   var UsersResponse = await fetch( appServerURI + 'Users', { method: 'GET' });\r\n//   const UsersStatus = 'Status: ' + UsersResponse.status + ', ' + 'Status Text: ' + UsersResponse.statusText\r\n//   if (UsersResponse.ok) {\r\n//     console.log('fetch GET request for users data at signin successful.');\r\n//     console.log(UsersStatus)\r\n\r\n//     const Users = await UsersResponse.json();\r\n//     return Users\r\n//   } else {\r\n//     console.log('fetch GET request for users data at signin failed. Printing fetch response...')\r\n//     console.log(JSON.stringify(UsersResponse))\r\n//     console.log('Returning null...')\r\n//     return null\r\n//   }\r\n// }\r\n\r\nasync function registerLocallyIfUserIsNewToDevice(user) {\r\n  var localAuthInfo = await AsyncStorage.getItem('LocalAuthenticationInfo')\r\n  localAuthInfo = JSON.parse(localAuthInfo)  \r\n  if ( !localAuthInfo.users.filter(localUser => localUser._id == user._id)[0] ) {\r\n    console.log('SIGNIN STATUS: Primeiro login do usuário nesse aparelho. Adicionando informações do usuário no armazenamento local...')\r\n    const updatedLocalAuthInfo = {\r\n      ...localAuthInfo,\r\n      users: [ \r\n        ...localAuthInfo.users,\r\n        {\r\n          _id: user._id,\r\n          username: user.username,\r\n          email: user.email,\r\n          password: user.password,\r\n        }\r\n      ]\r\n    }\r\n    await AsyncStorage.setItem('LocalAuthenticationInfo', JSON.stringify(updatedLocalAuthInfo))\r\n    console.log('SIGNIN STATUS: Informações do usuário adicionadas no aparelho.')\r\n  } else {\r\n    console.log('SIGNIN STATUS: Informações do usuário já registradas nesse aparelho. Pulando registro do usuário no armazenamento local...')\r\n  } \r\n}\r\n\r\nexport async function keepUserConnectionAlive(id) {\r\n  var localAuthInfo = await AsyncStorage.getItem('LocalAuthenticationInfo')\r\n  localAuthInfo = JSON.parse(localAuthInfo)\r\n\r\n  if ( localAuthInfo.keepConnected.userId != id ) {\r\n    console.log(`SIGNIN STATUS: Usuário optou por ${id ? 'manter conexão ativa. Configurando conexão ativa para o usuário...' : 'desativar conexão ativa. Desativando...' }`)\r\n    const updatedLocalAuthInfo = {\r\n      ...localAuthInfo,\r\n      keepConnected: {\r\n        status: id ? true : false,\r\n        userId: id\r\n      }\r\n    }\r\n    await AsyncStorage.setItem('LocalAuthenticationInfo', JSON.stringify(updatedLocalAuthInfo))\r\n  } else {\r\n    console.log('SIGNIN STATUS: Fazendo login via conexã ativa. Pulando configuração de conexão ativa para o usuário...')\r\n  }\r\n}\r\n\r\nclass LoginScreen extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      userInfo: {\r\n        password: '',\r\n        email: '',\r\n        username: '',\r\n        settings: null,\r\n      },\r\n      keepConnected: true,\r\n      loginMsg: '',\r\n      isUserAuth: false,\r\n      isDataLoading: false,\r\n    }\r\n    this.onChangeText = this.onChangeText.bind(this);\r\n    this.submitButton = this.submitButton.bind(this);\r\n    this.loginMsg = this.loginMsg.bind(this);\r\n    this.setLoginMsg = this.setLoginMsg.bind(this);\r\n    this.onSignIn = this.onSignIn.bind(this);\r\n    this.onSignUp = this.onSignUp.bind(this);\r\n    this.LoginScreen = this.LoginScreen.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log('\"LoginScreen\" component did mount...')\r\n    this.restoreUserToken()\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    console.log('\"LoginScreen\" component will unmount...')\r\n  }\r\n\r\n  LoginIcon() {  \r\n    if (this.state.isDataLoading) {\r\n      return <ActivityIndicator color='#000000' />\r\n    } else {\r\n      return <Icon name='log-in-outline' animation='pulse' fill='#000' width={relativeToScreen(30)} height={relativeToScreen(30)} />\r\n    }\r\n  }\r\n\r\n  setLoginMsg(msg) {\r\n    this.setState({loginMsg: msg})\r\n    setTimeout( () => this.setState({loginMsg: ''}) , 1000 * 5 )\r\n  }\r\n\r\n  loginMsg() {\r\n      return(\r\n        <View style={[styles.login.msgBox, this.state.loginMsg ? {} : {backgroundColor: 'transparent', borderColor: 'transparent'} ]}>\r\n          <Text style={styles.login.msg}>{this.state.loginMsg}</Text>\r\n        </View>\r\n      )\r\n  }\r\n\r\n  onChangeText(textField) {\r\n    function setField(text) {\r\n      this.setState( { userInfo: { ...this.state.userInfo, [textField] : text}} )\r\n    }\r\n    setField = setField.bind(this);\r\n    return setField\r\n  }\r\n\r\n  submitButton(sign) {\r\n    const signIn = sign == 'signin'\r\n    return(\r\n      <Pressable\r\n      disabled={this.state.isDataLoading}\r\n      onPress={signIn ? this.onSignIn : this.onSignUp}\r\n      style={[styles.login.button]}\r\n      >\r\n        <Text selectable={false} style={styles.login.buttonLabel}>{ signIn ? 'Entrar' : 'Cadastrar' }</Text>\r\n      </Pressable>\r\n    )\r\n  }\r\n\r\n  LoginScreen = () => {\r\n  return(\r\n      <ImageBackground\r\n      source={imgURI}\r\n      style={[styles.login.mainView, {backgroundColor: backgroundColor, justifyContent: 'space-evenly'}]}\r\n      >\r\n        \r\n        <View style={styles.login.titleView}>\r\n          <Text style={styles.login.title}>Rastreador de humor</Text>\r\n        </View>\r\n\r\n        <View style={styles.login.card}>\r\n          <View style={styles.login.cardHeader} >\r\n            <Text style={styles.login.cardTitle}>Entrar</Text>\r\n          </View>\r\n          <View style={styles.login.cardSection}>\r\n            <TextInput\r\n            placeholder='Email'\r\n            textContentType='emailAddress'\r\n            style={styles.login.inputField}\r\n            onChangeText={this.onChangeText('email')}\r\n            autoComplete='email'\r\n            importantForAutofill='yes'\r\n            value={this.state.userInfo.email}\r\n            />\r\n            <TextInput\r\n            placeholder='Senha'\r\n            textContentType='password'\r\n            secureTextEntry={true}\r\n            style={styles.login.inputField}\r\n            onChangeText={this.onChangeText('password')}\r\n            autoComplete='password'\r\n            importantForAutofill='yes'\r\n            value={this.state.userInfo.password}\r\n            />\r\n          </View>\r\n          <View style={[styles.login.cardSection, {height: '33.0%'}]}>\r\n            {this.submitButton('signin')}\r\n            {this.submitButton('signup')}\r\n            <View style={{flexDirection: 'row', height: relativeToScreen(48), alignSelf: 'stretch', alignItems: 'center', justifyContent: 'flex-end'}}>\r\n              <Text style={{marginRight: Platform.OS=='web' ? relativeToScreen(10) : null }}>Manter-me conectado</Text>\r\n              <Switch\r\n                disabled={this.state.isDataLoading}\r\n                trackColor={{ false: \"#767577\", true: \"#81b0ff\" }}\r\n                thumbColor={this.state.keepConnected ? \"#f4f3f4\" : \"#f4f3f4\"}\r\n                ios_backgroundColor=\"#3e3e3e\" \r\n                onValueChange={() => this.setState({keepConnected: !this.state.keepConnected})}\r\n                value={this.state.keepConnected}\r\n              />\r\n            </View>\r\n          </View>\r\n          <View style={[styles.login.cardSection, {height: '19.04%', justifyContent: 'center'}]}>\r\n            {this.LoginIcon()}\r\n          </View>\r\n        </View>\r\n\r\n        {this.loginMsg()}\r\n\r\n      </ImageBackground>\r\n    )\r\n  }\r\n\r\n  isInputEmpty() {\r\n    if (!this.state.userInfo.email) {\r\n      const errMsg = 'Insira um endereço de email.'\r\n      this.setLoginMsg(errMsg)\r\n      console.log('SIGNIN STATUS: ' + errMsg)\r\n      return true\r\n    } else if (!this.state.userInfo.password) {\r\n      const errMsg = 'Insira uma senha.'\r\n      this.setLoginMsg(errMsg)\r\n      console.log('SIGNIN STATUS: ' + errMsg)\r\n      return true\r\n    } else return false\r\n  }\r\n\r\n  async restoreUserToken() {\r\n    try {\r\n      console.log('RESTORE USER TOKE STATUS: STARTED...')\r\n      var localAuthInfo = await AsyncStorage.getItem('LocalAuthenticationInfo')\r\n      if (localAuthInfo) {\r\n        console.log('RESTORE USER TOKEN STATUS: LOCAL AUTH INFO ALREADY CONFIGURED. LOGGING CURRENT VALUE...')\r\n        localAuthInfo = JSON.parse(localAuthInfo)\r\n\r\n        if (localAuthInfo.keepConnected.status) {\r\n          console.log(`RESTORE USER TOKEN STATUS: USER CONNECTION IS ALIVE FOR USER ID: ${localAuthInfo.keepConnected.userId}. PROCEDING TO SIGNIN...`)\r\n          const user = localAuthInfo.users.filter(user => user._id == localAuthInfo.keepConnected.userId)[0]\r\n          this.setState({\r\n            userInfo: {\r\n              username: user.username,\r\n              email: user.email,\r\n              password: user.password,\r\n            }\r\n          })\r\n          this.onSignIn()\r\n        }\r\n\r\n        else {\r\n          console.log('RESTORE USER TOKEN STATUS: NO USER CONNECTION ALIVE. PROCEEDING TO SIGNIN/SIGNUP ...')\r\n        }\r\n\r\n      } else {\r\n        console.log('RESTORE USER TOKEN STATUS: NO LOCAL AUTH INFO CONFIGURED IN THIS DEVICE. SETTING DEVICE LOCAL AUTH INFO FOR THE FIRST TIME...')\r\n\r\n        var DEVICE_IP_ADDRESS\r\n        NetInfo.fetch(\"wifi\").then(state => {\r\n          DEVICE_IP_ADDRESS = state.details.ipAddress\r\n          console.log(\"RESTORE USER TOKEN STATUS: IP ADDRESS REQUEST SUCCESSFUL. IP ADDRESS: \" + DEVICE_IP_ADDRESS);\r\n        });\r\n\r\n        const initialLocalAuthInfo = {\r\n          IP_ADDRESS: DEVICE_IP_ADDRESS,\r\n          deviceBrand: Device.brand,\r\n          deviceManufacturer: Device.manufacturer,\r\n          deviceModelName: Device.modelName,\r\n          deviceModelId: Device.modelId,\r\n          deviceOsName: Device.osName,\r\n          deviceOsVersion: Device.osVersion,\r\n          deviceName: Device.deviceName,\r\n          deviceType: await Device.getDeviceTypeAsync(),\r\n          users: [],\r\n          keepConnected: {\r\n            status: false,\r\n            userId: null\r\n          }\r\n        }\r\n        await AsyncStorage.setItem('LocalAuthenticationInfo', JSON.stringify(initialLocalAuthInfo))\r\n        console.log('RESTORE USER TOKEN STATUS: DEVICE LOCAL AUTH INFO CONFIGURED FOR THE FIRST TIME. PROCEEDING TO SIGNIN/SIGNUP ...')\r\n      }\r\n\r\n    } catch(error) {\r\n      console.log('RESTORE USER TOKEN STATUS: ERROR. LOGGING ERROR...')\r\n      console.log(error)\r\n    }\r\n  }  \r\n\r\n  async onSignIn() {\r\n\r\n    console.log('SIGNIN STATUS: Started...')\r\n    var info = this.state.userInfo;\r\n    info.email = info.email.trim()\r\n    this.setState({ isDataLoading: true });\r\n\r\n    try {\r\n\r\n      if (this.isInputEmpty()) return\r\n\r\n      var UsersResult = await fetch( appServerURI + 'Users', { method: 'GET' });\r\n      const UsersStatus = 'Status: ' + UsersResult.status + ', ' + 'Status Text: ' + UsersResult.statusText\r\n      if (UsersResult.ok) {\r\n        console.log('fetch GET request for users data at signin successful.');\r\n        console.log(UsersStatus)\r\n      } else {\r\n        console.log('fetch GET request for users data at signin failed. Printing fetch response...')\r\n        console.log(JSON.stringify(UsersResult))\r\n        console.log('Throwing error...')\r\n        throw new Error(UsersStatus)\r\n      }\r\n\r\n      const Users = await UsersResult.json();\r\n      const user = Users.filter((user) => user.email === info.email)[0]\r\n      \r\n      if ( user ) {          \r\n        \r\n        if ( user.password === info.password ) {\r\n\r\n          await registerLocallyIfUserIsNewToDevice(user)\r\n\r\n          if (this.state.keepConnected) {\r\n            await keepUserConnectionAlive(user._id)\r\n          }\r\n          this.setState( {isUserAuth: true, userInfo: user} )\r\n          const successMsg = 'Login realizado com sucesso!'\r\n          this.setLoginMsg(successMsg)\r\n          console.log('SIGNIN STATUS: Sucesso.')\r\n\r\n        } else {\r\n          const errMsg = 'Senha incorreta.'\r\n          this.setLoginMsg(errMsg)\r\n          console.log('SIGNIN STATUS: ' + errMsg);\r\n        }\r\n\r\n      } else {\r\n        const errMsg = 'Email não cadastrado!'\r\n        this.setLoginMsg(errMsg)\r\n        console.log('SIGNIN STATUS: ' + errMsg)\r\n      }\r\n\r\n    } catch (error) {\r\n      const errMsg = 'Erro no servidor! Tente novamente...'\r\n      this.setLoginMsg(errMsg)\r\n      console.log('Error catched in fetch GET request for users data at signin. Printing Error...')\r\n      console.log('SIGNIN STATUS:' + 'Erro capturado. Imprimindo erro...')\r\n      console.log(error);\r\n\r\n    } finally {\r\n      this.setState({ isDataLoading: false });\r\n      console.log('SIGNIN STATUS: Concluido.')\r\n      if (this.state.isUserAuth) {\r\n        console.log('User authenticated. Navigating to \"HomeScreen\"...')\r\n        this.props.setAppState({isUserAuth: true, user: this.state.userInfo})\r\n        // Parent class component method that authenticates the user and redirects to entrances screen.\r\n      }\r\n    }\r\n  }\r\n\r\n  async onSignUp() {\r\n\r\n    console.log('SIGNUP STATUS: started...')\r\n    var info = this.state.userInfo;\r\n    info.email = info.email.trim()\r\n    this.setState({ isDataLoading: true });\r\n    \r\n    try {\r\n\r\n      var postUserResult = {ok: false}\r\n      if (this.isInputEmpty()) return\r\n\r\n      // Validating email and password\r\n      const emailValidation = await validateEmail(info.email)\r\n      console.log('SING UP STATUS: ' + emailValidation.status)\r\n      if (!emailValidation.ok) {\r\n          this.setLoginMsg(emailValidation.status)\r\n          return\r\n      }\r\n\r\n      // Checking if email is already registerd\r\n      var UsersResult = await fetch( appServerURI + 'Users', { method: 'GET' } );  \r\n      const reqStatus = 'Status: ' + UsersResult.status + ', ' + UsersResult.statusText\r\n      if (UsersResult.ok) {\r\n        console.log('fetch GET request for users data at signup successful.')\r\n        console.log(reqStatus)\r\n      } else {\r\n        console.log('fetch GET request for users data at signup failed. Throwing error...')\r\n        throw new Error(reqStatus)\r\n      }\r\n\r\n      const Users = await UsersResult.json();\r\n      const User = Users.filter((user) => user.email === info.email)[0]\r\n      if ( !User ) {\r\n\r\n        // Validating Password\r\n        const passwordCheck = validatePassword(info.password)\r\n        if (!passwordCheck.ok) {\r\n          console.log('SING UP STATUS: ' + passwordCheck.status)\r\n          this.setLoginMsg(passwordCheck.status)\r\n          return\r\n      }\r\n\r\n        // Registering new user by posting user identification to database\r\n        info.username = info.email.split('@')[0]\r\n        const postUserOpts = {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify({ \r\n            ...info,\r\n            ...userScheme\r\n          })\r\n        }\r\n\r\n        postUserResult = await fetch( appServerURI +  'Users/' + info.username, postUserOpts );\r\n        const postUserStatus = 'Status: ' + postUserResult.status + ', ' + postUserResult.statusText\r\n\r\n        if (postUserResult.ok) {\r\n          const successMsg = 'Cadastro realizado com sucesso!'\r\n          this.setLoginMsg(successMsg)\r\n          console.log('fetch POST request for user data at signup successful.')\r\n          console.log(postUserStatus)\r\n          console.log('SING UP STATUS: ' + successMsg)\r\n\r\n        } else {\r\n          console.log('fetch POST request for user data at signup failed. Throwing error...')\r\n          throw new Error(postUserStatus)\r\n        }\r\n\r\n      } else {\r\n        const errMsg = 'Email já cadastrado.'\r\n        this.setLoginMsg(errMsg)\r\n        console.log('SING UP STATUS: ' + errMsg)\r\n      }\r\n\r\n    } catch (error) {\r\n      const errMsg = 'Erro no servidor, tente novamente...'\r\n      this.setLoginMsg(errMsg)\r\n      console.log('SING UP STATUS: Erro capturado. Imprimindo erro...')\r\n      console.log(error);\r\n\r\n    } finally {\r\n      this.setState({ isDataLoading: false })\r\n      console.log('SING UP STATUS: Concluido.')\r\n      if (postUserResult.ok)  this.onSignIn()\r\n    }\r\n  }\r\n\r\n  render() {\r\n    console.log('Rendering \"LoginScreen\" component...')\r\n    return this.LoginScreen()\r\n  }\r\n}\r\n\r\nexport default LoginScreen;","import { Platform, StatusBar } from 'react-native';\r\nimport { relativeToScreen } from './loginStyles';\r\n\r\nconst styles = {\r\n  login: {\r\n    msgBox: {\r\n      position: 'absolute',\r\n      bottom: '10%',\r\n      width: relativeToScreen(300),\r\n      paddingHorizontal: 3,\r\n      paddingVertical: 5,\r\n      alignSelf: 'center',\r\n      justifyContent: 'center',\r\n      backgroundColor: 'rgb(30,30,30)',\r\n      borderWidth: 1,\r\n      borderColor: 'rgb(40,40,40)',\r\n    },\r\n    msg: {\r\n        textAlign: 'center',\r\n        color: 'white',\r\n    },\r\n  },\r\n  mainView: {\r\n    flex: 1,                 \r\n    paddingTop: StatusBar.currentHeight,\r\n    // paddingBottom: relativeToScreen(55),\r\n  },\r\n  entrances: {\r\n    marginTop: StatusBar.currentHeight,\r\n    borderWidth: 0,\r\n    flex:1,\r\n    justifyContent: 'space-between',\r\n    alignItems: 'flex-start',\r\n  },\r\n  scrollView: {\r\n    // paddingHorizontal: Platform.OS != 'web' ? '5%' : '5%',\r\n    width: '100%',\r\n    alignSelf: 'center',\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    paddingBottom: '0%',\r\n    paddingHorizontal: '5%',\r\n    alignSelf: 'stretch',\r\n    borderColor: 'black',\r\n  },\r\n  section: {\r\n    width: relativeToScreen(350),\r\n    // width: 350,\r\n    paddingVertical: '16%',\r\n    borderBottomWidth: 1,\r\n    borderColor: 'rgba(155,155,155,0.3)',\r\n    alignSelf: 'center',\r\n  },\r\n  // contentRow: {\r\n  //   flexDirection: 'column',\r\n  //   padding: 10,\r\n  //   marginTop: 22,\r\n  //   borderWidth: 1,\r\n  //   borderColor: 'rgba(155,155,155, 0.4)',\r\n  //   borderRadius: 30,\r\n  //   backgroundColor: 'rgba(255,255,255, 0.3)',\r\n\r\n  // },\r\n  entryTitle: {\r\n    paddingVertical: relativeToScreen(3),\r\n    paddingLeft: relativeToScreen(4),\r\n    fontSize: relativeToScreen(19),\r\n    color: '#fff',\r\n  },\r\n  entryIcon: {\r\n    paddingRight: 0,\r\n  },\r\n  // postButtonView: {\r\n  //   height: 60,\r\n  //   width: 60,\r\n  //   borderRadius: 30,\r\n  //   alignSelf: 'center',\r\n  //   justifyContent: 'center',\r\n  //   alignItems: 'center',\r\n  //   backgroundColor: 'white',\r\n  // },\r\n  // postButtonLabel: {\r\n  //   fontSize: 45,\r\n  //   fontWeight: 'bold',\r\n  // },\r\n  // moodButtonView: {\r\n  //   width: 65,\r\n  //   height: 65,\r\n  //   alignItems: 'center',\r\n  //   justifyContent: 'center',\r\n  //   borderWidth: 1,\r\n  // },\r\n  moodButton: {\r\n    width: relativeToScreen(65),\r\n    height: relativeToScreen(65),\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  // date: {\r\n  //   position: 'relative',\r\n  //   left: '60%',\r\n  //   paddingVertical: 8,\r\n  //   paddingHorizontal: 10,\r\n  //   fontSize: 15,\r\n  //   alignSelf: 'center',\r\n  //   backgroundColor: 'white',\r\n  //   borderRadius: 20\r\n  // },\r\n  jornalText: {\r\n    paddingVertical: 5,\r\n    paddingHorizontal: relativeToScreen(12),\r\n    flex: 1,\r\n    textAlignVertical: 'top',\r\n    width: '100%',\r\n    borderRadius: relativeToScreen(20),\r\n    color: 'white',\r\n    fontSize: 16,\r\n  },\r\n  saveButton: {\r\n    height: relativeToScreen(50),\r\n    width: '100%',\r\n    borderTopLeftRadius: relativeToScreen(25),\r\n    borderTopRightRadius: relativeToScreen(25),\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundColor: 'white'\r\n  },\r\n  saveButtonLabel: {\r\n    fontWeight:'bold',\r\n    fontSize: relativeToScreen(19)\r\n  },\r\n  card: {\r\n    marginTop: '5%',\r\n    paddingVertical: relativeToScreen(5),\r\n    paddingHorizontal: relativeToScreen(10),\r\n    borderRadius: relativeToScreen(20),\r\n    backgroundColor: 'rgba(0,0,0,0.2)',\r\n  },\r\n  cardRow: {\r\n      flexDirection: 'row',\r\n      paddingVertical: relativeToScreen(5),\r\n      alignItems: 'center',\r\n  },\r\n  // moodBadge: {\r\n  //     backgroundColor: 'green',\r\n  //     borderRadius: relativeToScreen(30),\r\n  //     paddingVertical: relativeToScreen(6),\r\n  //     width: relativeToScreen(130),\r\n  //     fontSize: 16,\r\n  //     textAlign: 'center',\r\n  // },\r\n  emotionBadge: {\r\n      height: Platform.OS=='web' ? null : relativeToScreen(33),\r\n      backgroundColor: 'rgba(1,1,1,0.5)',\r\n      borderRadius: relativeToScreen(30),\r\n      paddingVertical: Platform.OS=='web' ? 5 : null,\r\n      paddingHorizontal: relativeToScreen(12.5),\r\n      fontSize: relativeToScreen(15),\r\n      textAlign: 'center',\r\n      textAlignVertical: 'center',\r\n      marginVertical: relativeToScreen(5),\r\n      marginHorizontal: relativeToScreen(5)\r\n  },\r\n  entryCardEmotionBadge: {\r\n    height: relativeToScreen(35),\r\n    backgroundColor: 'aliceblue',\r\n    borderRadius: relativeToScreen(32.5),\r\n    // paddingVertical: 7,\r\n    paddingHorizontal: relativeToScreen(12.5),\r\n    marginRight: relativeToScreen(6),\r\n    fontSize: relativeToScreen(15),\r\n    textAlign: 'center',\r\n    textAlignVertical: 'center',\r\n  },\r\n  datetimeTitle: {\r\n    fontSize: relativeToScreen(16),\r\n    marginRight: relativeToScreen(3),\r\n  },\r\n  editButtonsView: {\r\n    flexDirection: 'row',\r\n    height: relativeToScreen(55),\r\n    paddingVertical: relativeToScreen(5),\r\n    alignItems: 'flex-end',\r\n    justifyContent: 'space-between'\r\n  },\r\n  editButton: {\r\n    height: relativeToScreen(34),\r\n    width: relativeToScreen(102),\r\n    borderWidth: 1,\r\n    borderColor: 'aliceblue',\r\n    borderRadius: relativeToScreen(17),\r\n    alignItems: 'center',\r\n    justifyContent: 'center'\r\n  },\r\n  editButtonLabel: {\r\n      fontSize: relativeToScreen(15),\r\n      fontWeight: '400',\r\n      color: 'white',\r\n  },\r\n}\r\n\r\nexport default styles;","import React, { Component, useState } from 'react';\r\nimport { View, Text,  Pressable, TextInput } from 'react-native';\r\nimport { Icon } from 'react-native-eva-icons'\r\nimport { relativeToScreen } from '../../styles/loginStyles';\r\nimport styles from '../../styles/postEntryStyles'\r\n// import VectorIcon from 'react-native-vector-icons/MaterialCommunityIcons';\r\n\r\nconst appServerURI = 'https://mood-tracker-server.herokuapp.com/'\r\n\r\nexport function capitalize(multipleWordString) {\r\n    var words = multipleWordString.trim().split(' ');\r\n    var CapitalizedWords = [];\r\n    words.forEach(element => {\r\n    CapitalizedWords.push(element[0].toUpperCase() + element.slice(1, element.length));\r\n    });\r\n    return CapitalizedWords.join(' ');\r\n}\r\n\r\nexport default class EditEmotions extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showEditMenu: false,\r\n            showExpandMenuButton: true,\r\n            mode: 'hidden',\r\n            newEmotionName: '',\r\n            selectedEmotionType: null,\r\n            selectedEmotionEnergy: null,\r\n            initialEmotionLayout: null,\r\n        }\r\n        this.EditEmotionsMenu = this.EditEmotionsMenu.bind(this);\r\n        this.EditEmotionsSection = this.EditEmotionsSection.bind(this);\r\n        this.onSaveEmotionButtonPress = this.onSaveEmotionButtonPress.bind(this);\r\n    }\r\n\r\n    EditEmotionsSection() {\r\n\r\n        const emotionTypes = ['Positiva', 'Negativa']\r\n        const emotionEnergy = ['Calmo(a)', 'Energizado(a)']\r\n        const emotionLayoutMap = {\r\n            'Positiva ou Negativa': 'type',\r\n            'Calmo(a) ou Energizado(a)': 'energy',\r\n            'Grade': 'grid',\r\n            'Espalhado': 'spread'\r\n        }\r\n\r\n        const inputSectionStyle = {marginTop: 0, marginTop: 0   , alignItems: 'center'}\r\n        const textStyle = {color: styles.theme.color, fontSize: relativeToScreen(16), alignSelf: 'center', marginBottom: relativeToScreen(8)}\r\n        const inputStyle = {width: '70%', height: relativeToScreen(35), borderRadius: relativeToScreen(15), color: styles.theme.color, backgroundColor: styles.altTheme.color+'8', fontSize: relativeToScreen(15), textAlign: 'center' }\r\n        const tagStyle = {width: '45%', height: relativeToScreen(28), borderRadius: relativeToScreen(14),  marginBottom: relativeToScreen(7), color: 'white', alignItems: 'center', justifyContent: 'center'}\r\n        const createEmotionViewStyle = {height: relativeToScreen(420), marginTop: relativeToScreen(10), paddingTop: relativeToScreen(10), justifyContent: 'space-evenly', borderTopWidth: 1, borderTopColor: 'rgba(255,255,255,0.2)'}\r\n\r\n        const [isButtonPressed, setIsButtonPressed] = useState({\r\n            'Salvar': false,\r\n            'Voltar': false,\r\n            'Terminar': false,\r\n            'Salvar-Layout': false,\r\n            'Voltar-Layout': false\r\n        })\r\n        function highlightButtonFor(label) {\r\n            function highlightButton() {\r\n                setIsButtonPressed({ ...isButtonPressed, [label]: !isButtonPressed[label] })\r\n            }\r\n            return highlightButton.bind(this);\r\n        }\r\n\r\n        const isLoading = (\r\n            this.props.isDeleteEmotionLoading |\r\n            this.props.isSaveEmotionLoading |\r\n            this.props.isPostEntryLoading |\r\n            this.props.appState.isUserDataSyncing |\r\n            this.props.isUpdateUserDataLoading\r\n        )\r\n\r\n        const isNewEmotionFormComplete = !this.state.newEmotionName | !this.state.selectedEmotionType | !this.state.selectedEmotionEnergy\r\n        const unselectedLayout = this.props.selectedEmotionLayout==this.state.initialEmotionLayout\r\n\r\n        switch (this.state.mode) {\r\n\r\n            case 'hidden':\r\n                return null\r\n\r\n            case 'create':\r\n                return(\r\n                    <View style={createEmotionViewStyle}>\r\n                        <Text style={[ styles.theme, {fontSize: relativeToScreen(22), alignSelf: 'center'}]}>Criar emoção</Text>\r\n                        <View style={inputSectionStyle}>\r\n                            <Text style={textStyle}>Nome</Text>\r\n                            <TextInput\r\n                            placeholder='Nome da emoção...'\r\n                            placeholderTextColor={styles.theme.color+'8'}\r\n                            style={inputStyle}\r\n                            onChangeText={text => this.setState({newEmotionName: text})}\r\n                            value={this.state.newEmotionName}\r\n                            />\r\n                        </View>\r\n                        <View style={inputSectionStyle}>\r\n                            <Text style={textStyle}>Tipo</Text>\r\n                            { emotionTypes.map((type) => {\r\n                                const typeSelected = this.state.selectedEmotionType === type\r\n                                return(\r\n                                    <Pressable\r\n                                    key={'emotion-'+type}\r\n                                    onPress={() => this.setState({selectedEmotionType: typeSelected ? null : type })}\r\n                                    style={[tagStyle, { backgroundColor: styles.altTheme.color + (typeSelected ? 'd' : '6') }]}>\r\n                                        <Text selectable={false} style={[{fontSize: relativeToScreen(15)}, styles.theme]}>{type}</Text>\r\n                                    </Pressable>\r\n                                )\r\n                            }) }\r\n                        </View>\r\n                        <View style={inputSectionStyle}>\r\n                            <Text style={textStyle}>Energia</Text>\r\n                            { emotionEnergy.map((type) => {\r\n                                const typeSelected = this.state.selectedEmotionEnergy === type\r\n                                return(\r\n                                    <Pressable\r\n                                    key={'emotion-'+type}\r\n                                    onPress={() => this.setState({selectedEmotionEnergy: typeSelected ? null : type })}\r\n                                    style={[tagStyle, { backgroundColor: styles.altTheme.color + (typeSelected ? 'd' : '6') }]}>\r\n                                        <Text selectable={false} style={[{fontSize: relativeToScreen(15)}, styles.theme]}>{type}</Text>\r\n                                    </Pressable>\r\n                                )\r\n                            }) }\r\n                        </View>\r\n                        <View style={[inputSectionStyle, {flexDirection: 'row', justifyContent: 'space-evenly'}]}>\r\n                            <Pressable\r\n                            onPress={() => {\r\n                                highlightButtonFor('Voltar')()\r\n                                this.setState({showEditMenu: true, showExpandMenuButton: true, mode: 'hidden'})\r\n                                setIsButtonPressed({'Voltar': false})\r\n                            }}\r\n                            onPressIn={highlightButtonFor('Voltar')}\r\n                            disabled={isLoading}\r\n                            style={[styles.editButton, {\r\n                                alignSelf: 'center',\r\n                                backgroundColor: isButtonPressed['Voltar'] ? styles.theme.color+'5' : '#0000',\r\n                                borderColor: isLoading ? styles.theme.color+'5' : styles.theme.color,\r\n                                }]}>\r\n                                <Text selectable={false} style={[styles.editButtonLabel, {color: isLoading ? styles.theme.color+'5' : styles.theme.color}]}>Voltar</Text>\r\n                            </Pressable>\r\n                            <Pressable\r\n                            onPress={() => {\r\n                                highlightButtonFor('Salvar')()\r\n                                this.onSaveEmotionButtonPress()\r\n                                setIsButtonPressed({'Salvar': false})\r\n                            }}\r\n                            onPressIn={highlightButtonFor('Salvar')}\r\n                            disabled={isLoading | isNewEmotionFormComplete}\r\n                            style={[styles.editButton, {\r\n                                alignSelf: 'center',\r\n                                backgroundColor: isButtonPressed['Salvar'] ? styles.theme.color+'5' : '#0000',\r\n                                borderColor: isLoading | isNewEmotionFormComplete ? styles.theme.color+'5' : styles.theme.color,\r\n                                }]}>\r\n                                <Text selectable={false} style={[ styles.editButtonLabel, {\r\n                                    color: isLoading | isNewEmotionFormComplete ? styles.theme.color+'5' : styles.theme.color\r\n                                }]}\r\n                                >\r\n                                {'Salvar'}\r\n                                </Text>\r\n                            </Pressable>\r\n                        </View>\r\n                    </View>\r\n                )\r\n\r\n            case 'delete':\r\n                return(\r\n                    <View style={[createEmotionViewStyle, {height: relativeToScreen(180)}]}>\r\n                        <Text style={{color: styles.theme.color, fontSize: relativeToScreen(22), alignSelf: 'center'}}>Excluir emoções</Text>\r\n                        <Text style={{color: styles.theme.color, fontSize: relativeToScreen(16), textAlign: 'center'}}>Pressione e segure para excluir uma emoção.</Text>\r\n                        <View style={[styles.cardRow, {justifyContent: 'space-evenly'}]}>\r\n                            <Pressable\r\n                            onPress={() => {\r\n                                highlightButtonFor('Terminar')();\r\n                                this.props.setParentState({deleteEmotionMode: false});\r\n                                this.setState({showEditMenu: true, showExpandMenuButton: true, mode: 'hidden'});\r\n                                setIsButtonPressed({'Terminar': false})\r\n                            }}\r\n                            onPressIn={highlightButtonFor('Terminar')}\r\n                            disabled={isLoading}\r\n                            style={[styles.editButton, {\r\n                                alignSelf: 'center',\r\n                                borderColor: isLoading ? styles.theme.color+'5' : styles.theme.color,\r\n                                backgroundColor: isButtonPressed['Terminar'] ? styles.theme.color+'5' : '#0000'\r\n                            }]}\r\n                            >\r\n                                <Text selectable={false} style={[styles.editButtonLabel, {color: isLoading ? styles.theme.color+'5' : styles.theme.color}]}>Terminar</Text>\r\n                            </Pressable>\r\n                        </View>\r\n                    </View>\r\n                )\r\n\r\n            case 'layout':\r\n                return(\r\n                    <View style={[createEmotionViewStyle, {height: relativeToScreen(320)}]}>\r\n                        <View style={inputSectionStyle}>\r\n                            <Text style={{color: styles.theme.color, fontSize: relativeToScreen(22), alignSelf: 'center', paddingBottom: relativeToScreen(25)}}>Escolha o layout</Text>\r\n                            { ['Positiva ou Negativa', 'Calmo(a) ou Energizado(a)', 'Grade', 'Espalhado'].map((layout) => {\r\n                                const isLayoutSelected = this.props.selectedEmotionLayout === emotionLayoutMap[layout]\r\n                                return(\r\n                                    <Pressable\r\n                                    key={'emotion-'+layout}\r\n                                    onPress={() => this.props.setParentState({selectedEmotionLayout: emotionLayoutMap[layout] })}\r\n                                    style={[tagStyle, {width: relativeToScreen(230), height: relativeToScreen(30), borderRadius: relativeToScreen(15), marginBottom: relativeToScreen(10), backgroundColor: isLayoutSelected ? styles.altTheme.color+'d' : styles.altTheme.color+'5'}]}>\r\n                                        <Text selectable={false} style={[{fontSize: 15, color: styles.theme.color}]}>{layout}</Text>\r\n                                    </Pressable>\r\n                                )\r\n                            }) }\r\n                        </View>\r\n                        <View style={[inputSectionStyle, {flexDirection: 'row', justifyContent: 'space-evenly'}]}>\r\n                            <Pressable\r\n                            onPress={() => {\r\n                                highlightButtonFor('Voltar-Layout')()\r\n                                this.props.setParentState({selectedEmotionLayout: this.state.initialEmotionLayout})\r\n                                this.setState({showEditMenu: true, showExpandMenuButton: true, mode: 'hidden', initialEmotionLayout: null})\r\n                                setIsButtonPressed({'Voltar-Layout': false})\r\n                            }}\r\n                            onPressIn={highlightButtonFor('Voltar-Layout')}\r\n                            disabled={isLoading}\r\n                            style={[styles.editButton, {\r\n                                alignSelf: 'center',\r\n                                borderColor: isLoading ? styles.theme.color+'5' : styles.theme.color,\r\n                                backgroundColor: isButtonPressed['Voltar-Layout'] ? styles.theme.color+'5' : '#0000'\r\n                                }]}>\r\n                                <Text selectable={false} style={[styles.editButtonLabel, {color: isLoading ? styles.theme.color+'5' : styles.theme.color}]}>Voltar</Text>\r\n                            </Pressable>\r\n                            <Pressable\r\n                            onPress={() => {\r\n                                highlightButtonFor('Salvar-Layout')()\r\n                                this.onSaveEmotionLayoutButtonPress()\r\n                                setIsButtonPressed({'Salvar-Layout': false})\r\n                            }}\r\n                            onPressIn={highlightButtonFor('Salvar-Layout')}\r\n                            disabled={ isLoading || unselectedLayout }\r\n                            style={[styles.editButton, {\r\n                                alignSelf: 'center',\r\n                                backgroundColor: isButtonPressed['Salvar-Layout'] ? styles.theme.color+'5' : '#0000',\r\n                                borderColor: isLoading || unselectedLayout ? styles.theme.color+'5' : styles.theme.color,\r\n                                }]}>\r\n                                <Text selectable={false} style={[styles.editButtonLabel, {color: isLoading || unselectedLayout ? styles.theme.color+'5' : styles.theme.color}]}>Salvar</Text>\r\n                            </Pressable>\r\n                        </View>\r\n                    </View>\r\n                )\r\n\r\n            default:\r\n                return null\r\n        }\r\n    }\r\n\r\n    EditEmotionsMenu() {\r\n\r\n        const buttonLabels = ['Criar', 'Excluir', 'Layout']\r\n        const onButtonPress = { \r\n            'Criar': () => this.setState({showEditMenu: false, showExpandMenuButton: false, mode: 'create'}),\r\n            'Excluir': () => {\r\n                this.props.setParentState({deleteEmotionMode: !this.props.deleteEmotionMode})\r\n                this.setState({showEditMenu: false , showExpandMenuButton: false, mode: 'delete'})\r\n            },\r\n            'Layout': () => this.setState({showEditMenu: false, showExpandMenuButton: false, mode: 'layout', initialEmotionLayout: this.props.selectedEmotionLayout})\r\n        }\r\n        const [isButtonPressed, setIsButtonPressed] = useState({\r\n            'Criar': false,\r\n            'Excluir': false,\r\n            'Layout': false,\r\n        })\r\n        function highlightButtonFor(label) {\r\n            function highlightButton() {\r\n                setIsButtonPressed({ ...isButtonPressed, [label]: !isButtonPressed[label] })\r\n            }\r\n            return highlightButton.bind(this);\r\n        }\r\n\r\n        const showEditMenu =  this.state.showEditMenu\r\n        const showExpandMenuButton = this.state.showExpandMenuButton\r\n        const hidden = this.state.mode == 'hidden'\r\n        const anyOpen = showEditMenu || !hidden\r\n\r\n        const isLoading = (\r\n            this.props.isPostEntryLoading |\r\n            this.props.appState.isUserDataSyncing |\r\n            this.props.isUpdateUserDataLoading |\r\n            this.props.isDeleteEmotionLoading |\r\n            this.props.isSaveEmotionLoading\r\n        )\r\n\r\n        return(\r\n            <>\r\n                { showExpandMenuButton ? (\r\n                    <View style={[styles.cardRow, {\r\n                        height: relativeToScreen(60),\r\n                        marginTop: relativeToScreen(10),\r\n                        paddingTop: relativeToScreen(10),\r\n                        justifyContent: showEditMenu ? 'space-between' : 'center', borderTopWidth: 1, borderTopColor: 'rgba(255,255,255,0.2)'\r\n                    }]}>\r\n                        { showEditMenu ? ( \r\n                            buttonLabels.map((label) => (\r\n                                <Pressable\r\n                                key={`emotion-${label}`}\r\n                                style={[styles.editButton,  {\r\n                                    backgroundColor: isButtonPressed[label] ? styles.theme.color+'5' : '#0000',\r\n                                    borderColor: isLoading ? styles.theme.color+'5' : styles.theme.color,\r\n                                    width: relativeToScreen(75)\r\n                                }]}\r\n                                disabled={ isLoading }\r\n                                onPress={() => {\r\n                                    highlightButtonFor(label)(); onButtonPress[label]()\r\n                                    setIsButtonPressed({ [label]: false })\r\n                                } }\r\n                                onPressIn={highlightButtonFor(label)}\r\n                                >\r\n                                    <Text selectable={false} style={[styles.editButtonLabel, {color: isLoading ? styles.theme.color+'5' : styles.theme.color}]}>{label}</Text>                    \r\n                                </Pressable>\r\n                            ))\r\n                        ) : null }\r\n                        <Pressable\r\n                        onPress={() => this.setState({ showEditMenu:  !showEditMenu })}\r\n                        // disabled={isLoading}\r\n                        style={{flexDirection: 'row', alignItems: 'center', justifyContent: 'center', paddingVertical: relativeToScreen(5), width: relativeToScreen(75)}}>\r\n                            <Icon name={ !showEditMenu ? 'more-horizontal-outline' : 'arrow-back-outline' } fill={styles.theme.color} width={relativeToScreen(20)} height={relativeToScreen(20)} />\r\n                            <Text selectable={false} style={{color: styles.theme.color, fontSize: relativeToScreen(15), marginLeft: 0}}> {anyOpen ? 'menos' : 'mais'}</Text>\r\n                        </Pressable>\r\n                    </View> \r\n                ) :  null  }\r\n            </>\r\n\r\n        )\r\n    }\r\n\r\n    async onSaveEmotionButtonPress() {\r\n\r\n        const newEmotionAlreadyExists = Object.keys(this.props.isSelectedEmotions).includes(capitalize(this.state.newEmotionName))\r\n        if (newEmotionAlreadyExists) {\r\n            this.props.setAlertMsg('Essa emoção já foi criada, escolha outro nome para continuar.')\r\n            return\r\n        }\r\n\r\n        try {\r\n            this.props.setParentState({ isSaveEmotionLoading: true });\r\n            var user = this.props.appState.user;\r\n            const newEmotion = {\r\n                name: capitalize(this.state.newEmotionName),\r\n                type: this.state.selectedEmotionType,\r\n                energy: this.state.selectedEmotionEnergy,\r\n            }\r\n\r\n            console.log('POST EMOTION STATUS: Started...')\r\n            var postEmotionResult = {ok: false, status: '999', statusText: 'Post not fetched yet.'}\r\n            const postUserEntryOpts = { \r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify( newEmotion ),\r\n            }\r\n            // var postUserEntryResult = await fetch('http://localhost:3000/Users/' + info.username + '/emotions', postUserEntryOpts);\r\n            postEmotionResult = await fetch( appServerURI + 'Users/' + user.username + '/emotions', postUserEntryOpts);\r\n            const postEmotionStatus = 'Status: ' + postEmotionResult.status + ', ' + postEmotionResult.statusText\r\n\r\n            if (postEmotionResult.ok) {\r\n                console.log('POST EMOTION STATUS: Successful.')\r\n                console.log(postEmotionStatus)\r\n                this.setState({\r\n                    showEditMenu: true,\r\n                    showExpandMenuButton: true,\r\n                    mode: 'hidden',\r\n                    newEmotionName: '',\r\n                    selectedEmotionType: null,\r\n                    selectedEmotionEnergy: null,        \r\n                })\r\n                    \r\n            } else {\r\n                console.log('POST EMOTION STATUS: Failed. Throwing error...')\r\n                throw new Error(postEmotionStatus)\r\n            }\r\n\r\n        } catch (error) {\r\n            this.props.setAlertMsg('Erro no servidor. Tente novamente...')\r\n            console.log('Erro capturado:')\r\n            console.log(error);\r\n\r\n        } finally {\r\n            console.log('POST EMOTION STATUS: Finished.')\r\n            this.props.setParentState({ isSaveEmotionLoading: false });\r\n            if (postEmotionResult.ok) {\r\n                await this.props.appState.syncUserData();\r\n                this.props.updateUserData();\r\n            }\r\n        } \r\n    }\r\n    \r\n    async onSaveEmotionLayoutButtonPress() {\r\n\r\n        try {\r\n            this.props.setParentState({ isSaveEmotionLayoutLoading: true });\r\n            var user = this.props.appState.user;\r\n            \r\n            console.log('POST EMOTION LAYOUT STATUS: Started...')\r\n            var postEmotionLayoutResult = {ok: false, status: '999', statusText: 'Post not fetched yet.'}\r\n            const postEmotionLayoutOpts = { \r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify( {layout: this.props.selectedEmotionLayout} ),\r\n            }\r\n            postEmotionLayoutResult = await fetch( appServerURI + 'Users/' + user.username + '/layout', postEmotionLayoutOpts);\r\n            // var postUserEntryResult = await fetch('http://localhost:3000/Users/' + info.username + '/emotions', postEmotionLayoutOpts);\r\n            const postEmotionLayoutStatus = 'Status: ' + postEmotionLayoutResult.status + ', ' + postEmotionLayoutResult.statusText\r\n\r\n            if (postEmotionLayoutResult.ok) {\r\n                console.log('POST EMOTION LAYOUT STATUS: Successful.')\r\n                console.log(postEmotionLayoutStatus)\r\n                this.setState({\r\n                    showEditMenu: true,\r\n                    showExpandMenuButton: true,\r\n                    mode: 'hidden',\r\n                    initialEmotionLayout: null,\r\n                })\r\n                    \r\n            } else {\r\n                console.log('POST EMOTION LAYOUT STATUS: Failed. Throwing error...')\r\n                throw new Error(postEmotionLayoutStatus)\r\n            }\r\n\r\n        } catch (error) {\r\n            this.props.setAlertMsg('Erro no servidor. Tente novamente...')\r\n            console.log('Erro capturado:')\r\n            console.log(error);\r\n\r\n        } finally {\r\n            console.log('POST EMOTION LAYOUT STATUS: Finished.')\r\n            this.props.setParentState({ isSaveEmotionLayoutLoading: false });\r\n            if (postEmotionLayoutResult.ok) {\r\n                await this.props.appState.syncUserData();\r\n                this.props.updateUserData();\r\n            }\r\n        } \r\n    }\r\n\r\n    setFontColor() {\r\n        const fontColorDark = this.props.appState.user.settings.fontColorDark\r\n        const fontColor = fontColorDark ? '#000' : '#fff'\r\n        const altFontColor = fontColorDark ? '#fff' : '#000'\r\n        for (let style of ['theme', ]) {\r\n            styles[style] = { ...styles[style], color: fontColor }\r\n        }\r\n        styles.altTheme.color = altFontColor\r\n        // styles.altTheme.backgroundColor = altFontColor\r\n    }    \r\n\r\n    render() {\r\n        return(\r\n            <>\r\n                <this.EditEmotionsSection />\r\n                <this.EditEmotionsMenu />\r\n            </>\r\n        )\r\n    }\r\n\r\n}","import React, { Component } from 'react';\r\nimport { ImageBackground, View, Text, Pressable, ScrollView, ActivityIndicator, Switch, StatusBar } from 'react-native';\r\nimport { Icon } from 'react-native-eva-icons';\r\nimport { keepUserConnectionAlive } from './LoginComponent';\r\nimport { relativeToScreen } from '../styles/loginStyles';\r\nimport { capitalize } from './subcomponents/EditEmotions';\r\nimport NativeIcon from 'react-native-vector-icons/MaterialCommunityIcons';\r\n\r\n// cors-midpoint uri (needed to avoid cors' allow-cross-origin error when fetching in web platforms)\r\nconst appServerURI = 'https://mood-tracker-server.herokuapp.com/'\r\n\r\nconst colorList = require('../shared/colorList.json')\r\n\r\nvar styles = {\r\n  background: {\r\n    flex: 1,\r\n    paddingTop: StatusBar.currentHeight,\r\n    paddingBottom: relativeToScreen(55),\r\n    alignItems: 'center',\r\n    justifyContent: 'space-between',\r\n  },\r\n  scrollView: {\r\n    width: '100%',\r\n    // alignItems: 'center',\r\n  },\r\n  foreground: {\r\n    width: relativeToScreen(350),\r\n    alignSelf: 'center'\r\n  },\r\n  header: {\r\n    height: relativeToScreen(120),\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    // borderWidth: 1,\r\n  },\r\n  settingsRow: {\r\n    height: relativeToScreen(60),\r\n    paddingHorizontal: relativeToScreen(10),\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    justifyContent: 'space-between',\r\n    borderRadius: relativeToScreen(10),\r\n    // borderWidth: 1,\r\n  },\r\n  colorBox: {\r\n    height: relativeToScreen(225),\r\n    paddingHorizontal: 0,\r\n    borderColor: 'rgba(200,200,200,0.2)'\r\n  },\r\n  colorRow: {\r\n    width: '100%',\r\n    height: relativeToScreen(50),\r\n    paddingHorizontal: relativeToScreen(10),\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    justifyContent: 'space-between',\r\n    borderBottomWidth: 1,\r\n    borderColor: '#fff4',\r\n    borderRadius: relativeToScreen(10),\r\n  },\r\n  colorSquare: {\r\n    // marginRight: 0,\r\n    width: relativeToScreen(28),\r\n    height: relativeToScreen(28),\r\n    borderRadius: relativeToScreen(6),\r\n    borderColor: 'white'\r\n  },\r\n  logout: {\r\n    height: relativeToScreen(33),\r\n    width: relativeToScreen(85),\r\n    marginTop: 0,\r\n    marginBottom: relativeToScreen(20),\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    // borderWidth: 1,\r\n    // borderColor: 'red',\r\n  },\r\n  h1: {\r\n    fontSize: relativeToScreen(25),\r\n    color: '#fff'\r\n  },\r\n  h2: {\r\n    fontSize: relativeToScreen(20),\r\n    color: '#fff',\r\n  },\r\n  h3: {\r\n    fontSize: relativeToScreen(17),\r\n    color: '#fff',\r\n  },\r\n  h4: {\r\n    fontSize: relativeToScreen(16),\r\n    color: '#fff',\r\n  },\r\n}\r\n\r\nexport function blinkButton(setPressed, timeSpan=200) {\r\n  setPressed(true)\r\n  setTimeout(() => {\r\n    setPressed(false)\r\n  }, timeSpan);\r\n}\r\n\r\nexport async function postSettings(settings, username) {\r\n  // fetch post display background image value to user settings in server\r\n  try {\r\n   console.log('POST SETTINGS STATUS: Started...')\r\n   console.log('POST SETTINGS STATUS: LOGGING NEW SETTING VALUES... ')\r\n   console.log(JSON.stringify(settings))\r\n   var postSettingsResult = {ok: false, status: '999', statusText: 'Post not fetched yet.'}\r\n   const postSettingsOpts = { \r\n     method: 'POST',\r\n     headers: {\r\n         'Content-Type': 'application/json',\r\n     },\r\n     body: JSON.stringify( settings ),\r\n   }\r\n   // var postDisplayResult = await fetch('http://localhost:3000/Users/' + this.context.username + '/settings', postColorSettingOpts);\r\n   postSettingsResult = await fetch( `${appServerURI}Users/${username}/settings`, postSettingsOpts);\r\n   const postSettingsStatus = 'Status: ' + postSettingsResult.status + ', ' + postSettingsResult.statusText\r\n\r\n   if (postSettingsResult.ok) {\r\n     console.log('POST SETTINGS STATUS: Successful.')\r\n     console.log(postSettingsStatus)\r\n         \r\n   } else {\r\n     console.log('POST SETTINGS STATUS: Failed. Throwing error...')\r\n     throw new Error(postSettingsStatus)\r\n   }\r\n } catch (error) {\r\n   alert('Erro no servidor. Tente novamente...')\r\n   console.log('Erro capturado:')\r\n   console.log(error);\r\n\r\n } finally {\r\n   console.log('POST DISPLAY BACKGROUND IMAGE STATUS: Finished.')\r\n   return postSettingsResult\r\n }\r\n} \r\n\r\nexport default class SettingsScreen extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isBackgroundColorSettingsOpen: false,\r\n      selectedColor: null,\r\n\r\n      isDisplayBackgroundImageLoading: false,\r\n      isChangeFontColorLoading: false,\r\n      isEnableHighResolutionLoading: false,\r\n      isRestoreColorLoading: false,\r\n      isSaveColorLoading: false,\r\n    }\r\n    this.syncUserSettings = this.syncUserSettings.bind(this);\r\n    this.setFontColor = this.setFontColor.bind(this);\r\n    this.setBackgroundColor = this.setBackgroundColor.bind(this);\r\n    this.SettingsScreen = this.SettingsScreen.bind(this);\r\n    this.ScreenSettings = this.ScreenSettings.bind(this);\r\n    this.ChooseImageSection = this.ChooseImageSection.bind(this);\r\n    this.DisplayBackgroundImageSection = this.DisplayBackgroundImageSection.bind(this);\r\n    this.ChangeFontColorSection = this.ChangeFontColorSection.bind(this);\r\n    this.EnableHighResolutionSection = this.EnableHighResolutionSection.bind(this);\r\n    this.ChangeBackgroundColorSection = this.ChangeBackgroundColorSection.bind(this);\r\n    this.ColorOptions = this.ColorOptions.bind(this);\r\n    this.ColorControl = this.ColorControl.bind(this);\r\n    this.onLogoutButtonPress = this.onLogoutButtonPress.bind(this);\r\n    this.onColorButtonPressFor = this.onColorButtonPressFor.bind(this);\r\n    this.onSaveColorButtonPress = this.onSaveColorButtonPress.bind(this);\r\n    this.onChangeFontColorSwitch = this.onChangeFontColorSwitch.bind(this);\r\n    this.ColorRow = this.ColorRow.bind(this);\r\n    this.isLoading = this.isLoading.bind(this);\r\n    this.logoutPressable = this.logoutPressable.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log('\"SettingsScreen\" component did mount')\r\n    this.syncUserSettings()\r\n  }\r\n  componentWillUnmount() {\r\n    console.log('\"SettingsScreen\" component will unmount...')\r\n  }\r\n\r\n  syncUserSettings() {\r\n    console.log('SYNC SETTINGS STATUS: INITIALIZING...')\r\n    this.setFontColor()\r\n    this.setBackgroundColor()\r\n  }\r\n\r\n  setFontColor() {\r\n    const settings = this.props.appState.user.settings\r\n    const fontColor = settings.fontColorDark ? '#000' : '#fff'\r\n    for (let h of ['h1', 'h2', 'h3', 'h4']) {\r\n      styles[h] = { ...styles[h], color: fontColor }\r\n    }\r\n  }\r\n\r\n  setBackgroundColor() {\r\n    const settings = this.props.appState.user.settings\r\n    this.setState({\r\n      selectedColor: settings.backgroundColor,\r\n    })\r\n    this.props.navigation.setParams({selectedColor: settings.backgroundColor})  // Necessary to change the tab bar color dinamically in App.js\r\n  }\r\n\r\n  SettingsScreen() {\r\n    const settings = this.props.appState.user.settings\r\n    const backgroundImage = settings.backgroundImage\r\n    const backgroundColor = this.state.selectedColor\r\n    const imgURI = settings.displayBackgroundImage ? (backgroundImage ? ( settings.enableHighResolution ? backgroundImage.urls.raw : backgroundImage.urls.regular ) : null) : null\r\n    return(\r\n      <ImageBackground\r\n      source={{uri : imgURI}}\r\n      style={[ styles.background, {backgroundColor: backgroundColor} ]}\r\n      >\r\n        <ScrollView style={styles.scrollView}>\r\n          <View style={styles.foreground}>\r\n            <View style={styles.header}>\r\n              <Text style={styles.h1}>Configurações</Text>\r\n            </View>\r\n            <this.ScreenSettings />\r\n          </View>\r\n        </ScrollView>\r\n      </ImageBackground>\r\n    )\r\n  }\r\n\r\n  ScreenSettings() {\r\n    return (\r\n      <>\r\n        <this.ChooseImageSection />\r\n        <this.DisplayBackgroundImageSection />\r\n        <this.EnableHighResolutionSection />\r\n        <this.ChangeFontColorSection />\r\n        <this.ChangeBackgroundColorSection />\r\n        <this.ColorOptions />\r\n        <this.logoutPressable />\r\n      </>\r\n    )\r\n  }\r\n\r\n  ChooseImageSection() {\r\n    const [isChooseImageButtonPressed, setIsChooseImageButtonPressed] = React.useState(false)\r\n    let fontColor = styles.h1.color\r\n    let fontColorTransp = fontColor + '8'\r\n    return(\r\n      <Pressable\r\n      onPressIn={() => blinkButton(setIsChooseImageButtonPressed)}\r\n      onPress={() => this.props.navigation.navigate('WallpaperTopics')}\r\n      style={[styles.settingsRow, {backgroundColor: isChooseImageButtonPressed ? '#0003' : null }]}\r\n      >\r\n        <View style={{flexDirection: 'row', alignItems: 'center'}}>\r\n          <Icon name='image-outline' width={30} height={30} fill={fontColor} />\r\n          <Text selectable={false} style={[styles.h2, {marginLeft: 10}]}>Papel de parede</Text>\r\n        </View>\r\n        \r\n        <Icon\r\n        width={relativeToScreen(30)} height={relativeToScreen(30)}\r\n        name='arrow-ios-forward-outline'\r\n        fill={ fontColor } />\r\n      </Pressable>\r\n    )\r\n  }\r\n\r\n  DisplayBackgroundImageSection() {\r\n    const [isExposeImageButtonPressed, setIsExposeImageButtonPressed] = React.useState(false)\r\n    const displayBackgroundImageValue = this.props.appState.user.settings.displayBackgroundImage\r\n    const isLoading = this.state.isDisplayBackgroundImageLoading\r\n    return(\r\n      <Pressable\r\n      onPressIn={ () => blinkButton(setIsExposeImageButtonPressed) }\r\n      style={[styles.settingsRow, {backgroundColor: isExposeImageButtonPressed ? '#0003' : null }]}\r\n      >\r\n        <View style={{flexDirection: 'row', alignItems: 'center'}}>\r\n          <Icon name='eye-outline' width={relativeToScreen(30)} height={relativeToScreen(30)} fill={styles.h1.color} />\r\n          <Text selectable={false} style={[styles.h2, {marginLeft: relativeToScreen(10), marginRight: relativeToScreen(20)}]}>Ver papel de parede</Text>\r\n          { isLoading ? <ActivityIndicator color='blue' /> : null }\r\n        </View>\r\n        <Switch\r\n        disabled={isLoading}\r\n        trackColor={{ false: \"#767577\", true: \"#81b0ff\" }}\r\n        thumbColor={displayBackgroundImageValue ? \"#f4f3f4\" : \"#f4f3f4\"}\r\n        ios_backgroundColor=\"#3e3e3e\"\r\n        onValueChange={() => {\r\n          blinkButton(setIsExposeImageButtonPressed)\r\n          this.onDisplayBackgroundImageSwitch(!displayBackgroundImageValue)\r\n        }}\r\n        value={displayBackgroundImageValue}\r\n        />\r\n      </Pressable>\r\n    )\r\n  }\r\n\r\n  EnableHighResolutionSection() {\r\n    const [isEnableHighResolutionButtonPressed, setIsEnableHighResolutionButtonPressed] = React.useState(false)\r\n    const enableHighResolutionValue = this.props.appState.user.settings.enableHighResolution\r\n    const isLoading = this.state.isEnableHighResolutionLoading\r\n    return(\r\n      <Pressable\r\n      onPressIn={ () => blinkButton(setIsEnableHighResolutionButtonPressed)}\r\n      style={[styles.settingsRow, {backgroundColor: isEnableHighResolutionButtonPressed ? '#0003' : null }]}\r\n      >\r\n        <View style={{flexDirection: 'row', alignItems: 'center'}}>\r\n          {/* <Icon name='camera-outline' width={30} height={30} fill={styles.h1.color} /> */}\r\n          <NativeIcon name='high-definition' size={relativeToScreen(30)} color={styles.h1.color} />\r\n          <Text selectable={false} style={[styles.h2, {marginLeft: relativeToScreen(10), marginRight: relativeToScreen(20)}]}>Alta definição</Text>\r\n          { isLoading ? <ActivityIndicator color='blue' /> : null }\r\n        </View>\r\n        <Switch\r\n        disabled={isLoading}\r\n        trackColor={{ false: \"#767577\", true: \"#81b0ff\" }}\r\n        thumbColor={enableHighResolutionValue ? \"#f4f3f4\" : \"#f4f3f4\"}\r\n        ios_backgroundColor=\"#3e3e3e\"\r\n        onValueChange={() => {\r\n          blinkButton(setIsEnableHighResolutionButtonPressed)\r\n          this.onEnableHighResolutionSwitch(!enableHighResolutionValue)\r\n        }}\r\n        value={enableHighResolutionValue}\r\n        />\r\n      </Pressable>    \r\n    )\r\n  }\r\n\r\n  ChangeFontColorSection() {\r\n    const [isChangeFontColorButtonPressed, setIsChangeFontColorButtonPressed] = React.useState(false)\r\n    const changeFontColorValue = this.props.appState.user.settings.fontColorDark\r\n    const isLoading = this.state.isChangeFontColorLoading\r\n    return(\r\n      <Pressable\r\n      onPressIn={ () => blinkButton(setIsChangeFontColorButtonPressed)}\r\n      style={[styles.settingsRow, {backgroundColor: isChangeFontColorButtonPressed ? '#0003' : null }]}\r\n      >\r\n        <View style={{flexDirection: 'row', alignItems: 'center'}}>\r\n          <Icon name='moon-outline' width={relativeToScreen(30)} height={relativeToScreen(30)} fill={styles.h1.color} />\r\n          <Text selectable={false} style={[styles.h2, {marginLeft: relativeToScreen(10), marginRight: relativeToScreen(20)}]}>Texto escuro</Text>\r\n          { isLoading ? <ActivityIndicator color='blue' /> : null }\r\n        </View>\r\n        <Switch\r\n        disabled={isLoading}\r\n        trackColor={{ false: \"#767577\", true: \"#81b0ff\" }}\r\n        thumbColor={changeFontColorValue ? \"#f4f3f4\" : \"#f4f3f4\"}\r\n        ios_backgroundColor=\"#3e3e3e\"\r\n        onValueChange={() => {\r\n          blinkButton(setIsChangeFontColorButtonPressed)\r\n          this.onChangeFontColorSwitch(!changeFontColorValue)\r\n        }}\r\n        value={changeFontColorValue}\r\n        />\r\n      </Pressable>    \r\n    )\r\n  }\r\n\r\n  ChangeBackgroundColorSection() {\r\n    const [isColorButtonPressed, setIsColorButtonPressed] = React.useState(false)\r\n    const settings = this.props.appState.user.settings\r\n    const newColorUnselected = this.state.selectedColor == settings.backgroundColor\r\n    let fontColor = styles.h1.color\r\n    let fontColorTransp = fontColor + '8'\r\n    const seeWallpaper = settings.displayBackgroundImage\r\n    return(\r\n      <Pressable\r\n      onPressIn={() => blinkButton(setIsColorButtonPressed)}\r\n      onPress={() => {\r\n        this.setState({ isBackgroundColorSettingsOpen: !this.state.isBackgroundColorSettingsOpen })\r\n        if (!newColorUnselected) this.syncUserSettings()\r\n      }}\r\n      disabled={seeWallpaper}\r\n      style={[styles.settingsRow, {backgroundColor: isColorButtonPressed ? '#0003' : null }]}\r\n      >\r\n        <View style={{flexDirection: 'row', alignItems: 'center'} }>\r\n          <Icon\r\n          name='color-palette-outline'\r\n          height={relativeToScreen(30)}\r\n          width={relativeToScreen(30)}\r\n          fill={ seeWallpaper ? fontColorTransp : fontColor }\r\n          style={{marginRight: 0}}\r\n          />\r\n          <Text selectable={false} style={[styles.h2, {color: seeWallpaper ? fontColorTransp : fontColor, marginLeft: relativeToScreen(10)}]}>Tema</Text>\r\n        </View>\r\n        <View style={{flexDirection: 'row', alignItems: 'center'} }>\r\n          <Icon\r\n          width={relativeToScreen(30)} height={relativeToScreen(30)}\r\n          name={this.state.isBackgroundColorSettingsOpen ? 'arrow-ios-upward-outline' : 'arrow-ios-downward-outline' }\r\n          fill={ seeWallpaper ? fontColorTransp : fontColor } />\r\n        </View>\r\n      </Pressable>    \r\n    )\r\n  }\r\n\r\n  ColorOptions() {\r\n    return(\r\n      this.state.isBackgroundColorSettingsOpen ? (\r\n        <>\r\n          <ScrollView\r\n          nestedScrollEnabled\r\n          style={styles.colorBox}\r\n          >\r\n            { colorList.map(color => {\r\n              return (\r\n                <this.ColorRow color={color} key={'color-' + color} />\r\n              )\r\n            }) }\r\n          </ScrollView>\r\n          <this.ColorControl />\r\n        </>\r\n      ) : (\r\n        null\r\n      )\r\n    )\r\n  }\r\n\r\n  ColorRow({color}) {\r\n    const [isColorRowPressed, setIsColorRowPressed] = React.useState(false)\r\n    const isLoading = this.state.isRestoreColorLoading | this.state.isSaveColorLoading\r\n    return(\r\n      <Pressable\r\n      onPressIn={ () => blinkButton(setIsColorRowPressed, 300) }\r\n      onPress={ this.onColorButtonPressFor(color) }\r\n      disabled={isLoading}\r\n      style={[styles.colorRow, {backgroundColor: isColorRowPressed ? '#0003' : null }]}>\r\n        <Text selectable={false} style={[\r\n          styles.h3,\r\n          this.state.selectedColor == color\r\n          ? {fontStyle: 'italic', textDecorationLine: 'underline' }\r\n          : {fontStyle: 'italic', textDecorationLine: 'none' }\r\n        ]}>{ capitalize(color) }</Text>\r\n        <View style={[ styles.colorSquare, { backgroundColor: color, borderWidth: this.state.selectedColor==color ? 3 : 0 }]} />\r\n      </Pressable>\r\n    )\r\n  }\r\n\r\n  ColorControl() {\r\n    const newColorUnselected = this.state.selectedColor == this.props.appState.user.settings.backgroundColor\r\n    const isLoading = this.state.isRestoreColorLoading | this.state.isSaveColorLoading\r\n    return(\r\n      <View style={[styles.settingsRow, {justifyContent: 'space-between'}]}>\r\n        <Pressable\r\n        disabled={isLoading | newColorUnselected}\r\n        style={{ justifyContent: 'center', alignItems: 'center', width: relativeToScreen(95) }}\r\n        // onPressIn={() => blinkButton((bool) => this.setState({isRestoreColorLoading: bool}))}\r\n        onPress={() => {\r\n          this.setState({isRestoreColorLoading: true})\r\n          this.syncUserSettings()\r\n          this.setState({isRestoreColorLoading: false})\r\n        }}\r\n        >\r\n          <Text selectable={false}\r\n            style={[styles.h2, { \r\n              textAlign: 'center',\r\n              color: isLoading | newColorUnselected ? styles.h1.color + '6' : styles.h1.color\r\n            }]}\r\n          >\r\n            { this.state.isRestoreColorLoading ? <ActivityIndicator color='blue' /> :  'Restaurar' }\r\n          </Text>\r\n        </Pressable>\r\n\r\n        <Pressable\r\n        disabled={isLoading | newColorUnselected}\r\n        onPress={this.onSaveColorButtonPress}\r\n        style={{ justifyContent: 'center', alignItems: 'center', width: relativeToScreen(75) }}\r\n        >\r\n          <Text selectable={false} style={[styles.h2, {width: relativeToScreen(65), textAlign: 'center', color: isLoading | newColorUnselected ? styles.h1.color + '6' : styles.h1.color}]}>\r\n            { this.state.isSaveColorLoading ? <ActivityIndicator color='blue' /> : 'Aplicar' }\r\n          </Text>\r\n        </Pressable>\r\n      </View>\r\n    )\r\n  }\r\n\r\n  isLoading() {\r\n    return (\r\n      this.state.isDisplayBackgroundImageLoading | \r\n      this.state.isChangeFontColorLoading |\r\n      this.state.isRestoreColorLoading |\r\n      this.state.isEnableHighResolutionLoading |\r\n      this.state.isSaveColorLoading\r\n    )\r\n  }\r\n\r\n  logoutPressable() {\r\n    const [ isLogoutButtonPressed, setIsLogoutButtonPressed ] = React.useState(false)\r\n    const isLoading = this.isLoading()\r\n    const logoutColor = isLoading ? styles.h1.color+'8' : 'red'\r\n    return(\r\n      <Pressable   // logout pressable\r\n      onPress={() => {\r\n        blinkButton(setIsLogoutButtonPressed)\r\n        this.onLogoutButtonPress()\r\n      }}\r\n      disabled={isLoading}\r\n      style={[ styles.settingsRow, {\r\n        justifyContent: 'flex-start',\r\n        marginBottom: relativeToScreen(30),\r\n        backgroundColor: isLogoutButtonPressed ? styles.h1.color+'8' : null\r\n      }]}\r\n      >\r\n        <Icon name='log-out' width={relativeToScreen(30)} height={relativeToScreen(30)} fill={logoutColor} />\r\n        <Text selectable={false} style={[styles.h2, { marginLeft: relativeToScreen(10), color: logoutColor }]}>Logout</Text>\r\n      </Pressable>\r\n    )\r\n  }\r\n\r\n  onColorButtonPressFor(color) {\r\n    function onColorButtonPress() {\r\n      this.setState({ selectedColor: color })\r\n      this.props.navigation.setParams({selectedColor: color}) // Necessary to change the tab bar color dinamically in App.js\r\n    }\r\n    return onColorButtonPress.bind(this);\r\n  }\r\n\r\n  async onDisplayBackgroundImageSwitch(value) {\r\n    this.setState({ isDisplayBackgroundImageLoading: true });\r\n    const newSettings = {displayBackgroundImage: value}\r\n    const postDisplayResult = await postSettings(newSettings, this.props.appState.user.username)\r\n    if (postDisplayResult.ok) {\r\n      // sync user data with app or entries component\r\n      await this.props.appState.syncUserData()\r\n    }\r\n    this.setState({ isDisplayBackgroundImageLoading: false });\r\n  }\r\n\r\n  async onChangeFontColorSwitch(value) {\r\n    this.setState({ isChangeFontColorLoading: true });\r\n    const newSettings = {fontColorDark: value}\r\n    const postDisplayResult = await postSettings(newSettings, this.props.appState.user.username)\r\n    if (postDisplayResult.ok) {\r\n      // sync user data with app or entries component\r\n      await this.props.appState.syncUserData()\r\n      // update style variable with new data\r\n      this.setFontColor()\r\n    }\r\n    this.setState({ isChangeFontColorLoading: false });\r\n  }\r\n\r\n  async onEnableHighResolutionSwitch(value)  {\r\n    this.setState({ isEnableHighResolutionLoading: true });\r\n    const newSettings = {enableHighResolution: value}\r\n    const postHighResolutionResult = await postSettings(newSettings, this.props.appState.user.username)\r\n    if (postHighResolutionResult.ok) {\r\n      // sync user data with app or entries component\r\n      await this.props.appState.syncUserData()\r\n      // update style variable with new data\r\n    }\r\n    this.setState({ isEnableHighResolutionLoading: false });\r\n  }\r\n\r\n  async onSaveColorButtonPress() {\r\n    // fetch post selected color to user settings in server\r\n    console.log('POST COLOR STATUS: Started...')\r\n    this.setState({ isSaveColorLoading: true });\r\n    const colorSetting = {\r\n      backgroundColor: this.state.selectedColor\r\n    }\r\n    const postColorResult = await postSettings(colorSetting, this.props.appState.user.username)\r\n    if (postColorResult.ok) {\r\n      if (this.props.appState.user.settings.displayBackgroundImage) {\r\n        await this.onDisplayBackgroundImageSwitch(false)\r\n      } else {\r\n        // sync user data with app or entries component\r\n        await this.props.appState.syncUserData()\r\n      }\r\n      // initialize settings\r\n      this.syncUserSettings()\r\n    }\r\n    console.log('POST COLOR STATUS: Finished.')\r\n    this.setState({ isSaveColorLoading: false });\r\n  }\r\n\r\n  async onLogoutButtonPress() {\r\n    await keepUserConnectionAlive(null); // kills user connection\r\n    // this.props.route.params.logout();\r\n    this.props.appState.logout()\r\n  }\r\n\r\n  render() {\r\n    console.log('Rendering \"SettingsScreen\" component...')\r\n    return (\r\n      <this.SettingsScreen />\r\n    );  \r\n  }\r\n}\r\n","// Module imports\r\nimport React, { Component, useState } from 'react';\r\nimport { View, Text, ImageBackground, Pressable, ScrollView, ActivityIndicator } from 'react-native';\r\nimport { Icon } from 'react-native-eva-icons'\r\nimport { relativeToScreen } from '../styles/loginStyles';\r\nimport { Today, formatDate, getNextDate } from '../shared/dates';\r\n\r\n// Component imports\r\nimport UserEntryCards from './subcomponents/UserEntryCards';\r\n\r\n// Local imports\r\nimport styles  from '../styles/entrancesStyles';\r\nimport { blinkButton } from './SettingsScreen';\r\n\r\n// Defining pertinent constants\r\nfunction getTime() {\r\n    //Wed,Jan,26,2022,15:12:37,GMT-0300,(Horário,Padrão,de,Brasília)\r\n    const now = Date().toString().split(' ')\r\n    const time = now[4]\r\n    return time\r\n}\r\n\r\nexport default class EntrancesScreen extends Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {            \r\n            date: Today(),\r\n            time: getTime(),\r\n            isDeleteEntryLoading: false,\r\n            alertMsg: '',\r\n        };\r\n        this.onNextButtonPress = this.onNextButtonPress.bind(this);\r\n        this.setFontColor = this.setFontColor.bind(this);\r\n        this.setAlertMsg = this. setAlertMsg.bind(this);\r\n        this.getMainScreenState = this.getMainScreenState.bind(this); // remove\r\n        this.PostButton = this.PostButton.bind(this);\r\n    }\r\n    \r\n    componentDidMount() {\r\n        console.log('\"Entries\" screen component did mount...')\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        console.log('\"EntriesScreen\" component will unmount...')\r\n    }\r\n\r\n    getMainScreenState() {\r\n        return this.state\r\n    }\r\n\r\n    setAlertMsg(msg) {\r\n        this.setState({alertMsg: msg})\r\n        setTimeout( () => this.setState({alertMsg: ''}) , 1000 * 5 )\r\n    }\r\n    \r\n    alertMsg() {\r\n        return(\r\n            <View style={[styles.msgBox, this.state.alertMsg ? {} : {bottom: 0, left: 0, height: null, width: null, backgroundColor: 'transparent', borderColor: 'transparent'} ]}>\r\n                <Text style={styles.msg}>{this.state.alertMsg}</Text>\r\n            </View>\r\n        )\r\n    }\r\n\r\n    onNextButtonPress(next='next') {\r\n        function setSelectedDate() {\r\n            this.props.navigation.setParams({\r\n                selectedEntryId: null,\r\n                selectedDate: getNextDate(this.props.route.params.selectedDate, next),\r\n            })\r\n        }\r\n        return setSelectedDate.bind(this);\r\n    }\r\n\r\n    DateNavigationButton = ({next}) => {\r\n        return(\r\n            <Pressable onPress={this.onNextButtonPress(next)} hitSlop={relativeToScreen(15)} >\r\n                <Icon name={ next=='next' ? 'arrow-forward' : 'arrow-back'} width={relativeToScreen(29)} height={relativeToScreen(29)} fill={styles.theme.color} />\r\n            </Pressable>\r\n        )\r\n    }\r\n\r\n    PostButton() {\r\n        const [ isButtonClicked, setIsButtonClicked ] = useState(false)\r\n        const isLoading = this.props.appState.isUserDataSyncing | this.state.isDeleteEntryLoading\r\n        const navigateParams = {\r\n            currentEntry: {type: 'new', date: Today(), entry: null},\r\n        }\r\n\r\n        return(\r\n            <Pressable\r\n            onPressIn={() => blinkButton(setIsButtonClicked, 200) }\r\n            onPress={() => {this.props.navigation.navigate( 'PostEntrance', navigateParams )}}\r\n            style={[styles.postButton, {backgroundColor: isLoading ? '#f4f3f4' : ( isButtonClicked ? '#0008' : '#000' )}]}\r\n            disabled={isLoading}\r\n            >\r\n            { this.props.appState.isUserDataSyncing ? (\r\n                    <ActivityIndicator color='black' size={'large'} />\r\n            ) : (\r\n                this.state.isDeleteEntryLoading ? (\r\n                    <ActivityIndicator color='red' size={'large'} />\r\n                ) : (\r\n                    <Icon\r\n                    name='plus-circle'\r\n                    width={relativeToScreen(72)}\r\n                    height={relativeToScreen(72)}\r\n                    fill={ isButtonClicked ? '#fff4' : '#f4f3f4' }\r\n                    style={styles.postButtonLabel}\r\n                    />\r\n                )\r\n            )}\r\n            </Pressable>\r\n        )\r\n    }\r\n\r\n    setFontColor() {\r\n        const fontColor = this.props.appState.user.settings.fontColorDark ? '#000' : '#fff'\r\n        styles.theme = {color: fontColor}\r\n    }\r\n\r\n    render() {\r\n        console.log('Rendering \"EntriesScreen\" component...')\r\n        this.setFontColor()\r\n\r\n        const settings = this.props.appState.user.settings\r\n        const backgroundImage = settings.backgroundImage\r\n        const imgURI =  settings.displayBackgroundImage ? (backgroundImage ? ( settings.enableHighResolution ? backgroundImage.urls.raw : backgroundImage.urls.regular ) : null ) : null\r\n        const backgroundColor = settings.backgroundColor\r\n\r\n        return(\r\n            <ImageBackground source={{uri: imgURI}} style={[styles.mainView, {backgroundColor: backgroundColor}]}>\r\n                \r\n                <ScrollView style={styles.scrollView}>\r\n                        <View style={[styles.header]}>\r\n                            <Text style={[styles.sectionTitle, styles.theme]}>{ 'Entradas' }</Text>                                \r\n                        </View>\r\n                    <View style={styles.section}>\r\n                        <View style={[styles.cardRow, styles.navigationRow, {paddingVertical: 0}]}>\r\n                            <this.DateNavigationButton icon='arrow-back' next='previous' />\r\n                            <Text style={[{fontSize: relativeToScreen(20), }, styles.theme]}> { formatDate(this.props.route.params.selectedDate)} </Text>                                \r\n                            <this.DateNavigationButton icon='arrow-forward' next='next' />\r\n                        </View>\r\n                        <UserEntryCards\r\n                        parentState={{\r\n                            selectedDate: this.props.route.params.selectedDate,\r\n                            selectedEntryId: this.props.route.params.selectedEntryId,\r\n                            user: this.props.appState.user,\r\n                            isUserDataSyncing: this.props.appState.isUserDataSyncing,\r\n                            isDeleteEntryLoading: this.state.isDeleteEntryLoading,\r\n                        }}\r\n                        parentProps={{\r\n                            navigation: this.props.navigation\r\n                        }}\r\n                        syncUserData={this.props.appState.syncUserData}\r\n                        setMainScreenState ={this.setState.bind(this)}\r\n                        getMainScreenState={this.getMainScreenState}\r\n                        setAlertMsg = {this.setAlertMsg}\r\n                        />\r\n                    </View>\r\n                </ScrollView>\r\n\r\n                <this.PostButton />\r\n                {this.alertMsg()}\r\n  \r\n            </ImageBackground>\r\n            )\r\n    }\r\n  }\r\n","const GoogleMapsAPI = {\r\n    GoogleMapsJavascriptAPIkey: \"AIzaSyBVWbOwPAMRyz2bS6rYHrDftVeihQ8WMCo\",\r\n    GoogleMapsGeocodingAPIKey: \"AIzaSyB6O-DpvulBC0rom1mGy-mBcstIbPlDPHA\",\r\n}\r\n\r\nexport default GoogleMapsAPI","import React, { Component } from 'react';\r\nimport { View, Text, ImageBackground, Pressable, ScrollView, TextInput, ActivityIndicator,  } from 'react-native';\r\nimport { relativeToScreen } from '../styles/loginStyles';\r\n\r\nimport { Icon } from 'react-native-eva-icons'\r\nimport VectorIcon from 'react-native-vector-icons/MaterialCommunityIcons';\r\nimport EditEmotions from './subcomponents/EditEmotions'\r\nimport styles from '../styles/postEntryStyles'\r\nstyles.theme = {}; styles.altTheme = {};\r\n\r\n// Geocoding and weather dependencies and APIs\r\nimport * as Location from 'expo-location';\r\nimport GoogleMapsAPI from './subcomponents/GoogleMapsAPI'\r\nLocation.setGoogleApiKey(GoogleMapsAPI.GoogleMapsGeocodingAPIKey)\r\n\r\nconst appServerURI = 'https://mood-tracker-server.herokuapp.com/'\r\n\r\n// Mood configs\r\nconst moods = ['Horrível', 'Mal', 'Regular', 'Bem', 'Ótimo']\r\nexport const moodColorsHEX = ['#ff3333', '#0099cc', '#add8e6', '#ffff33', '#00cc00']\r\nconst moodColorsRGBA = ['rgba(255, 51, 51, 1)', 'rgba(0, 153, 204, 1)', 'rgba(173, 216, 230, 1)', 'rgba(255, 255, 51, 1)', 'rgba(0, 204, 0, 1)']\r\nconst moodColorsTransp = (alpha) => [`rgba(255, 51, 51, ${alpha})`, `rgba(0, 153, 204, ${alpha})`, `rgba(173, 216, 230, ${alpha})`, `rgba(255, 255, 51, ${alpha})`, `rgba(0, 204, 0, ${alpha})`]\r\nexport const moodIcons = ['emoticon-dead', 'emoticon-sad', 'emoticon-neutral', 'emoticon-happy', 'emoticon-excited']\r\n\r\n// Emotion configs\r\nconst emotionGroupsNames = [ 'Bem & Calmo(a)', 'Bem & Energizado(a)', 'Mal & Calmo(a)', 'Mal & Energizado(a)' ]\r\nconst emotionTypes = ['Positiva', 'Negativa']\r\nconst emotionEnergy = ['Calmo(a)', 'Energizado(a)']\r\n\r\nfunction buildIsSelectedEmotions(emotions) {\r\n    var isSelectedEmotions = {}\r\n    for ( let emotion of emotions) {\r\n        isSelectedEmotions[emotion.name] = false\r\n    }\r\n    return isSelectedEmotions\r\n}\r\n\r\n// Date config\r\nconst monthSigs = ['Jan', 'Feb', 'Mar', 'Apr', 'Jun', 'Jul', 'Ago', 'Sep', 'Oct', 'Nov', 'Dec']\r\nconst months = ['01', '02', '03', '04', '05', '06', '07', '08', '09', '10', '11', '12']\r\n\r\nconst monthNameMap = {\r\n    '01': 'Janeiro',\r\n    '02': 'Fevereiro',\r\n    '03': 'Março',\r\n    '04': 'Abril',\r\n    '05': 'Maio',\r\n    '06': 'Junho',\r\n    '07': 'Julho',\r\n    '08': 'Agosto',\r\n    '09': 'Setembro',\r\n    '10': 'Outubro',\r\n    '11': 'Novembro',\r\n    '12': 'Dezembro',\r\n}\r\n\r\n// Functions\r\n\r\nfunction convertMonthSig(monthSig) {\r\n    const thisMonth = months[monthSigs.indexOf(monthSig)]\r\n    return thisMonth\r\n}\r\n\r\nfunction Today() {\r\n    const now = Date().toString().split(' ')\r\n    const today = [ now[3], convertMonthSig(now[1]), now[2] ].join('-')\r\n    return today\r\n}\r\n\r\nfunction getTime() {\r\n    //Wed,Jan,26,2022,15:12:37,GMT-0300,(Horário,Padrão,de,Brasília)\r\n    const now = Date().toString().split(' ')\r\n    const time = now[4]\r\n    return time\r\n}\r\n\r\nfunction oneDigit(stringNumber) {\r\n    if (stringNumber[0] == '0') return stringNumber.slice(1, stringNumber.length)\r\n    else return stringNumber\r\n}\r\n\r\nfunction formatPostEntryDatetimeTitle(date, time) {\r\n    const ymd = date.split('-')\r\n    const m = monthNameMap[ ymd[1] ]\r\n    return oneDigit( ymd[2] ) + ' ' + m + ' ' + ymd[0] + (time ? ' - ' : '') + time.slice(0,5)\r\n}\r\n\r\nfunction formattedAddress(addr) {\r\n    return (\r\n        ( addr.street ? addr.street + ', ' : '' ) +\r\n        ( addr.streetNumber ? addr.streetNumber + ' - ' : '' ) +\r\n        ( addr.district ? addr.district + ', ' : '' ) +\r\n        ( addr.subregion ? addr.subregion + '. ' : '' ) +\r\n        ( addr.region ? addr.region + ', ' : '' ) +\r\n        ( addr.isoCountryCode ? addr.isoCountryCode : '' )  + '.'\r\n    )\r\n}\r\n\r\nfunction mapEmotions(emotions, layout='grid') {\r\n    var userEmotionGroups = layout=='grid' ? [[],[],[],[]] : ( layout=='spread' ? [[]] : [[],[]] )\r\n    var emotionLabels = layout=='grid' ? emotionGroupsNames : ( layout=='type' ? emotionTypes : (layout=='spread' ? [''] : emotionEnergy ) )\r\n    for (let emotion of emotions) {\r\n        if (layout=='grid') {\r\n            if (emotion.type=='Positiva') {\r\n                if (emotion.energy=='Calmo(a)')\r\n                    userEmotionGroups[0] = [ ...userEmotionGroups[0], emotion]\r\n                else if (emotion.energy=='Energizado(a)')\r\n                    userEmotionGroups[1] = [ ...userEmotionGroups[1], emotion]\r\n            } else if (emotion.type=='Negativa') {\r\n                if (emotion.energy=='Calmo(a)')\r\n                    userEmotionGroups[2] = [ ...userEmotionGroups[2], emotion]\r\n                else if (emotion.energy=='Energizado(a)')\r\n                    userEmotionGroups[3] = [ ...userEmotionGroups[3], emotion]\r\n            }\r\n        } else if (layout=='type') {\r\n            if (emotion.type=='Positiva')\r\n                userEmotionGroups[0] = [ ...userEmotionGroups[0], emotion]\r\n            else if (emotion.type=='Negativa')\r\n                userEmotionGroups[1] = [ ...userEmotionGroups[1], emotion]\r\n        } else if (layout=='energy') {\r\n            if (emotion.energy=='Calmo(a)')\r\n                userEmotionGroups[0] = [ ...userEmotionGroups[0], emotion]\r\n            else if (emotion.energy=='Energizado(a)')\r\n                userEmotionGroups[1] = [ ...userEmotionGroups[1], emotion]\r\n        } else if (layout=='spread') {\r\n            userEmotionGroups[0] = [ ...userEmotionGroups[0], emotion]\r\n        }\r\n    }\r\n    return [userEmotionGroups, emotionLabels]\r\n}\r\n\r\nfunction sortObjListByKey(objList, objKey) {\r\n    const keys = objList.map(obj => obj[objKey])\r\n    const sortedKeys = [...keys].sort()\r\n    var newObjList = []\r\n    sortedKeys.forEach(key => {\r\n        newObjList.push( objList[keys.indexOf(key)] )\r\n    })\r\n    return newObjList\r\n}\r\n\r\nexport default class PostEntranceScreen extends Component {\r\n  \r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            user: this.props.appState.user,\r\n\r\n            date: '',\r\n            startTime: '',\r\n            endTime: '',\r\n            createdAt: '',\r\n            lastEdited: [],\r\n\r\n            star: false,\r\n            selectedMood: '',\r\n            emotions: [],\r\n            jornalEntry: '',    \r\n            address: '',\r\n            location: null,\r\n            weather: null,\r\n\r\n            selectedEntry: 'Avaliação',\r\n            isMoodUnmarked: true,\r\n            isSelectedEmotions: buildIsSelectedEmotions(this.props.appState.user.emotions),\r\n            selectedEmotionLayout: this.props.appState.user.layout,\r\n            isFetchingLocationOrWeather: false,\r\n            isPostEntryLoading: false,\r\n            isDeleteEmotionLoading: false,\r\n            isSaveEmotionLoading: false,\r\n            deleteEmotionMode: false,\r\n            isUpdateUserDataLoading: false,\r\n\r\n            locationPermission: null,\r\n            userCoordinates: null,\r\n            loginMsg: '',\r\n        };\r\n\r\n        this.initializeEntry = this.initializeEntry.bind(this);\r\n        this.onSaveButtonPress = this.onSaveButtonPress.bind(this);\r\n        this.saveButton = this.saveButton.bind(this);\r\n        this.setLoginMsg = this.setLoginMsg.bind(this);\r\n        this.EmotionButtons = this.EmotionButtons.bind(this);\r\n        this.MoodButtons = this.MoodButtons.bind(this);\r\n        this.postEntryHeader = this.postEntryHeader.bind(this);\r\n        this.onEmotionButtonPress = this.onEmotionButtonPress.bind(this);\r\n        this.onMoodButtonPress = this.onMoodButtonPress.bind(this);\r\n        this.inputCardBody = this.inputCardBody.bind(this);\r\n        this.setSelectedEntry = this.setSelectedEntry.bind(this);\r\n        this.InputCard = this.InputCard.bind(this);\r\n        this.JornalInput = this.JornalInput.bind(this);\r\n        this.postNewEntryAsync = this.postNewEntryAsync.bind(this);\r\n        this.updateUserData = this.updateUserData.bind(this);\r\n        this.deleteEmotion = this.deleteEmotion.bind(this);\r\n        this.onEmotionButtonLongPress = this.onEmotionButtonLongPress.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log('\"PostEntry\" component did mount.')\r\n        this.initializeEntry()\r\n    }\r\n\r\n    postEntryHeader() {\r\n        return(\r\n            <View style={[styles.cardRow, {justifyContent: 'space-between'}]}>\r\n                <Pressable onPress={() => {this.props.navigation.goBack()}} hitSlop={relativeToScreen(10)} style={styles.postButton}>\r\n                    <Icon name='arrow-back' fill={styles.theme.color+'b'} height={relativeToScreen(29)} width={relativeToScreen(29)}/>\r\n                </Pressable>\r\n                <View style={[styles.entryCardEmotionBadge, {flexDirection: 'row', alignItems: 'center'}]}>\r\n                    <Text style={styles.datetimeTitle}> { formatPostEntryDatetimeTitle(this.props.route.params.currentEntry.date, this.state.startTime) } </Text>\r\n                    <Icon name='edit' fill='rgba(75,75,75,1)' height={relativeToScreen(20)} width={relativeToScreen(20)}/>\r\n                </View>\r\n                <Pressable onPress={() => {this.setState({star: !this.state.star})}}  hitSlop={relativeToScreen(10)} style={styles.postButton}>\r\n                    <Icon name={this.state.star ? 'star' : 'star-outline'} fill={this.state.star ? 'gold' : styles.theme.color+'b' } height={relativeToScreen(30)} width={relativeToScreen(30)}/>\r\n                </Pressable>\r\n            </View>\r\n        )\r\n    }\r\n\r\n    MoodButtons() {\r\n        return moods.map((item, index) => {\r\n            const selected = this.state.selectedMood == item\r\n            const isMoodUnmarked = this.state.isMoodUnmarked\r\n            const selColor = moodColorsRGBA[index]\r\n            return(\r\n                <View key={'mood '+index} style={styles.moodButton}>\r\n                    <VectorIcon\r\n                    name={moodIcons[index]}\r\n                    size={isMoodUnmarked ? relativeToScreen(52) : (selected ? relativeToScreen(57) : relativeToScreen(50)) }\r\n                    color={ isMoodUnmarked ? selColor : (selected ? selColor : moodColorsTransp(0.5)[index]) }\r\n                    onPress={this.onMoodButtonPress(item)}\r\n                    />\r\n                </View>\r\n            )\r\n        })\r\n    }\r\n\r\n    onMoodButtonPress(item) {\r\n        function selectMood() {\r\n            if (this.state.selectedMood==item) {\r\n                this.setState({selectedMood: null, isMoodUnmarked: true})\r\n            } else {\r\n                this.setState({selectedMood: item, isMoodUnmarked: false})\r\n            }\r\n        }\r\n        selectMood = selectMood.bind(this);\r\n        return selectMood\r\n    }\r\n\r\n    EmotionButtons(emotions) {\r\n        return sortObjListByKey(emotions, 'name').map( emotion => {\r\n            const isEmotionSelected = this.state.isSelectedEmotions[emotion.name]\r\n            return(\r\n                <Pressable\r\n                key={'emotion-' + emotion.name}\r\n                title={emotion.name}\r\n                onPress={this.onEmotionButtonPress(emotion.name)}\r\n                onLongPress={this.onEmotionButtonLongPress(emotion.name)}\r\n                suppressHighlighting={true}\r\n                selectable={false}\r\n                >\r\n                    <Text\r\n                    selectable={false}\r\n                    // selectionColor={'#0000'}\r\n                    onLongPress={null}\r\n                    style={[styles.emotionBadge, {\r\n                        backgroundColor: isEmotionSelected ? 'royalblue' : '#f4f3f4',\r\n                        color: isEmotionSelected ? '#fff' : '#000'\r\n                    }\r\n                    ]}\r\n                    >\r\n                        {emotion.name}\r\n                        </Text>\r\n                </Pressable>\r\n            )\r\n        })\r\n    }\r\n\r\n    onEmotionButtonPress(emotion) {\r\n        function selectEmotion () {\r\n            this.setState({\r\n                isSelectedEmotions: {\r\n                    ...this.state.isSelectedEmotions,\r\n                    [emotion]: !this.state.isSelectedEmotions[emotion]\r\n                }\r\n            })    \r\n        }\r\n        selectEmotion = selectEmotion.bind(this);\r\n        return selectEmotion\r\n    }\r\n\r\n    onEmotionButtonLongPress(emotion) { \r\n        function selectEmotion () {\r\n            if (this.state.deleteEmotionMode) {\r\n                this.deleteEmotion(emotion)\r\n            }\r\n        }\r\n        selectEmotion = selectEmotion.bind(this);\r\n        return selectEmotion\r\n    }\r\n\r\n    JornalInput() {\r\n        return(\r\n            <TextInput\r\n            multiline\r\n            scrollEnabled\r\n            placeholder='Escreva aqui...'\r\n            placeholderTextColor='rgba(255,255,255,0.6)'\r\n            onChangeText={text => this.setState({jornalEntry: text})}\r\n            value={this.state.jornalEntry}\r\n            style={[styles.jornalText, styles.theme]}\r\n            >\r\n            </TextInput>\r\n        )\r\n    }\r\n\r\n    inputCardBody(sectionName, cardBodyStyle, cardBodyContent) {\r\n        if (this.state.selectedEntry === sectionName) {\r\n            if (sectionName == 'Emoções') {\r\n                const [userEmotionGroups, emotionLabels] = mapEmotions(this.props.appState.user.emotions, this.state.selectedEmotionLayout)\r\n                return(\r\n                    <>\r\n                        { userEmotionGroups.map((emotions, index) => (\r\n                            <View key={'emotion-group-' + index} style={{width: '100%', alignItems: 'center', marginVertical: relativeToScreen(10)}}>\r\n                                { emotionLabels[index]\r\n                                    ? <Text style={{fontSize: relativeToScreen(15), color: styles.theme.color, marginVertical: relativeToScreen(8)}}>{emotionLabels[index]}</Text>\r\n                                    : null\r\n                                }\r\n                                <View key={index} style={[styles.cardRow, cardBodyStyle]}>\r\n                                    {cardBodyContent(emotions)}\r\n                                </View>\r\n                            </View>\r\n                        )) }\r\n                        <EditEmotions\r\n                        {...this.props}\r\n                        {...this.state}\r\n                        setParentState={this.setState.bind(this)}\r\n                        updateUserData={this.updateUserData}\r\n                        setAlertMsg={this.setLoginMsg}\r\n                        />\r\n                    </>\r\n\r\n                )\r\n            } else {\r\n                return(\r\n                    <View style={[styles.cardRow, cardBodyStyle]}>\r\n                        {cardBodyContent}\r\n                    </View>\r\n                )    \r\n            }\r\n        } else {\r\n            return(\r\n                <></>\r\n            )\r\n        }\r\n    }\r\n\r\n    InputCard(sectionName, icon, cardBodyStyle, cardBodyContent) {\r\n        return(\r\n            <View style={[styles.card]} >\r\n                <Pressable style={styles.cardRow} onPress={this.setSelectedEntry(sectionName)} >\r\n                    <Icon name={icon} fill={styles.theme.color+'c'} height={relativeToScreen(28)} width={relativeToScreen(28)} style={styles.entryIcon} />\r\n                    <Text selectable={false} style={styles.entryTitle}> {sectionName} </Text>\r\n                </Pressable>    \r\n                {this.inputCardBody(sectionName, cardBodyStyle, cardBodyContent)}  \r\n            </View>   \r\n        )\r\n    }\r\n\r\n    setSelectedEntry (entry) {\r\n        function setSelected() {\r\n            this.setState( {selectedEntry:  this.state.selectedEntry === entry ? null : entry  } )\r\n        }\r\n        setSelected = setSelected.bind(this);\r\n        return setSelected\r\n    }\r\n\r\n    loginMsg() {\r\n        return(\r\n          <View style={[styles.login.msgBox, this.state.loginMsg ? {} : {height: 0, backgroundColor: 'transparent', borderColor: 'transparent'} ]}>\r\n            <Text style={styles.login.msg}>{this.state.loginMsg}</Text>\r\n          </View>\r\n        )\r\n    }\r\n\r\n    setLoginMsg(msg) {\r\n        this.setState({loginMsg: msg})\r\n        setTimeout( () => this.setState({loginMsg: ''}) , 1000 * 5 )\r\n    }    \r\n\r\n    async initializeEntry() {\r\n        const currentEntry = this.props.route.params.currentEntry\r\n        const user = this.props.appState.user\r\n        switch (currentEntry.type) {\r\n            case 'new':\r\n                console.log('POST ENTRY STATUS: INITIATING BLANK NEW ENTRY! FETCHING LOCATION AND WEATHER DATA...')\r\n                this.setState({\r\n                    date: currentEntry.date,\r\n                    startTime: getTime(),\r\n                    endTime: '',\r\n                    isFetchingLocationOrWeather: true\r\n                })\r\n                await this.checkIfLocationEnabled();\r\n                await this.getCurrentLocation();                    \r\n                await this.fetchWeather()\r\n                this.setState({isFetchingLocationOrWeather: false})\r\n            break;\r\n        \r\n            case 'custom-date':\r\n                console.log('POST ENTRY STATUS: INITIALIZING CUSTOM DATE ENTRY! SETTING DATE TO: ' + currentEntry.date)\r\n                this.setState({\r\n                    date: currentEntry.date,\r\n                    startTime: '',\r\n                    endTime: '',\r\n                })\r\n                break\r\n\r\n            case 'edit':\r\n                const entry = currentEntry.entry\r\n                const currentEmotions = entry.emotions.map(emotion => emotion.name)\r\n                var isSelectedEmotionsNew = {}\r\n                for ( let emotion of user.emotions ) {\r\n                    isSelectedEmotionsNew[emotion.name] = currentEmotions.includes(emotion.name)\r\n                }\r\n\r\n                this.setState({\r\n                    date: entry.date,\r\n                    startTime: entry.startTime,\r\n                    endTime: entry.endTime,\r\n                    createdAt: entry.createdAt,\r\n                    lastEdited: entry.lastEdited,\r\n                    star: entry.star,\r\n                    selectedMood: entry.mood,\r\n                    isSelectedEmotions: isSelectedEmotionsNew,\r\n                    jornalEntry: entry.jornal,\r\n                    address: entry.address,\r\n                    location: entry.location,\r\n                    weather: entry.weather,\r\n                    isMoodUnmarked: false,\r\n                })\r\n                break\r\n    \r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    updateUserData() {\r\n        console.log('UPDATING USER DATA IN \"PostEntryComponent\"...')\r\n        this.setState({isUpdateUserDataLoading: true})\r\n        const user = this.props.appState.user\r\n\r\n        const oldEmotions = Object.keys(this.state.isSelectedEmotions)\r\n        const currentEmotions = user.emotions.map(emotion => emotion.name)\r\n        const newEmotions = currentEmotions.filter(emotion => oldEmotions.includes(emotion))\r\n\r\n        const newEmotionsSelected = buildIsSelectedEmotions(newEmotions)\r\n        oldEmotions.forEach(emotion => { \r\n            if (currentEmotions.includes(emotion)) \r\n                newEmotionsSelected[emotion] = this.state.isSelectedEmotions[emotion]\r\n        })\r\n\r\n        this.setState({\r\n            // user: user,\r\n            isSelectedEmotions: newEmotionsSelected,\r\n            isUpdateUserDataLoading: false\r\n        })\r\n    }\r\n\r\n    saveButton() {\r\n        const isDataLoading = (\r\n            this.state.isFetchingLocationOrWeather |\r\n            this.state.isPostEntryLoading |\r\n            this.state.isSaveEmotionLoading |\r\n            this.state.isDeleteEmotionLoading |\r\n            this.props.appState.isUserDataSyncing |\r\n            this.state.isUpdateUserDataLoading\r\n        )\r\n        var color;\r\n        switch (true) {\r\n            case this.state.isFetchingLocationOrWeather:\r\n                color = 'blue'\r\n                break;\r\n        \r\n            case this.state.isPostEntryLoading:\r\n                color = 'blue'\r\n                break;\r\n            case this.state.isSaveEmotionLoading:\r\n                color = 'green'\r\n                break;\r\n            case this.state.isDeleteEmotionLoading:\r\n                color = 'red'\r\n                break;\r\n            case this.props.appState.isUserDataSyncing:\r\n                color = 'blue'\r\n                break;\r\n            case this.state.isUpdateUserDataLoading:\r\n                color = 'green'\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        return(\r\n            <Pressable\r\n            onPress={this.onSaveButtonPress}\r\n            disabled={isDataLoading}\r\n            style={[styles.saveButton, {backgroundColor: isDataLoading ? '#fffa' : '#fff' }]}\r\n            >\r\n                { isDataLoading ? (\r\n                    <ActivityIndicator size='small' color={color} />\r\n                ) : (\r\n                    <Text selectable={false} style={styles.saveButtonLabel}> Salvar </Text>\r\n                ) }\r\n            </Pressable>\r\n        )\r\n    }\r\n\r\n    onSaveButtonPress() {\r\n        if (!this.state.selectedMood) {\r\n            this.setLoginMsg('Adicione uma avaliação para continuar.')\r\n            this.setState({selectedEntry: 'Avaliação'})\r\n            return\r\n        }\r\n        const currentEntry = this.props.route.params.currentEntry\r\n        var lastEdited = getTime()\r\n        var createdAt, endTime\r\n        switch (currentEntry.type) {\r\n            case 'new':\r\n                endTime = lastEdited\r\n                createdAt = lastEdited\r\n                break;\r\n            case 'custom-date':\r\n                endTime = this.state.endTime // Returns empty string ''.\r\n                createdAt = lastEdited\r\n                break\r\n            case 'edit':\r\n                endTime = this.state.endTime\r\n                createdAt = this.state.createdAt\r\n                break\r\n            default:\r\n                break;\r\n        }\r\n        const newEntryPost = {\r\n            date: this.state.date,\r\n            startTime: this.state.startTime,\r\n            endTime: endTime,\r\n            createdAt: createdAt,\r\n            lastEdited: [ ...this.state.lastEdited, {date: Today(), time: lastEdited}],\r\n            star: this.state.star,\r\n            mood: this.state.selectedMood,\r\n            emotions: this.props.appState.user.emotions.filter( emotion => this.state.isSelectedEmotions[emotion.name] ),\r\n            jornal: this.state.jornalEntry,\r\n            address: this.state.address,\r\n            location: this.state.location,\r\n            weather: this.state.weather,\r\n        }\r\n        this.postNewEntryAsync(newEntryPost)\r\n    }\r\n    \r\n    async postNewEntryAsync(newEntry) {\r\n        this.setState({ isPostEntryLoading: true });\r\n        var user = this.props.appState.user;\r\n        const currentEntry = this.props.route.params.currentEntry\r\n        const editMode = currentEntry.type === 'edit';\r\n        try {\r\n            console.log('POST ENTRY STATUS: Started...')\r\n            var postUserEntryResult = {ok: false, status: '999', statusText: 'Post not fetched yet.'}\r\n            const postUserEntryOpts = { \r\n                method: editMode? 'PUT' : 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify( newEntry ),\r\n            }\r\n            // var postUserEntryResult = await fetch('http://localhost:3000/Users/' + info.username + '/entries', postUserEntryOpts);\r\n            postUserEntryResult = await fetch( appServerURI + 'Users/' + user.username + '/entries' + (editMode ? '/'+currentEntry.entry._id : ''), postUserEntryOpts);\r\n            const postUserEntryStatus = 'Status: ' + postUserEntryResult.status + ', ' + postUserEntryResult.statusText\r\n\r\n            if (postUserEntryResult.ok) {\r\n                console.log('POST ENTRY STATUS: Successful.')\r\n                console.log(postUserEntryStatus)\r\n                    \r\n            } else {\r\n                console.log('POST ENTRY STATUS: Failed. Throwing error...')\r\n                throw new Error(postUserEntryStatus)\r\n            }\r\n\r\n        } catch (error) {\r\n            this.setLoginMsg('Erro no servidor. Tente novamente...')\r\n            console.log('Erro capturado:')\r\n            console.log(error);\r\n\r\n        } finally {\r\n            console.log('POST ENTRY STATUS: Finished.')\r\n            this.setState({ isPostEntryLoading: false });\r\n            if (postUserEntryResult.ok) {\r\n                console.log('proceding to SYNC USER DATA IN RESPONSE TO SUCCESSFUL USER ENTRY POST... ')\r\n                this.props.appState.syncUserData()\r\n                // this.props.route.params.setMainScreenState({\r\n                //     selectedEntryId: null,\r\n                //     selectedDate: currentEntry.type == 'new' ? Today() : this.props.route.params.getMainScreenState().selectedDate,\r\n                // })\r\n                this.props.navigation.navigate('Entrances', {\r\n                    selectedEntryId: null,\r\n                    selectedDate: newEntry.date,\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    async deleteEmotion(emotion) {\r\n        this.setState({ isDeleteEmotionLoading: true });\r\n        var user = this.props.appState.user;\r\n        try {\r\n            console.log('DELETE EMOTION STATUS: Started...')\r\n            var postEmotionResult = {ok: false, status: '999', statusText: 'Post not fetched yet.'}\r\n            const postUserEntryOpts = { \r\n                method: 'DELETE',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n            }\r\n            // var postUserEntryResult = await fetch('http://localhost:3000/Users/' + info.username + '/emotions', postUserEntryOpts);\r\n            postEmotionResult = await fetch( appServerURI + 'Users/' + user.username + '/emotions/' + emotion, postUserEntryOpts);\r\n            const postEmotionStatus = 'Status: ' + postEmotionResult.status + ', ' + postEmotionResult.statusText\r\n\r\n            if (postEmotionResult.ok) {\r\n                console.log('DELETE EMOTION STATUS: Successful.')\r\n                console.log(postEmotionStatus)\r\n                    \r\n            } else {\r\n                console.log('DELETE EMOTION STATUS: Failed. Throwing error...')\r\n                throw new Error(postEmotionStatus)\r\n            }\r\n\r\n        } catch (error) {\r\n            this.setLoginMsg('Erro no servidor. Tente novamente...')\r\n            console.log('Erro capturado:')\r\n            console.log(error);\r\n\r\n        } finally {\r\n            console.log('DELETE EMOTION STATUS: Finished.')\r\n            this.setState({ isDeleteEmotionLoading: false });\r\n            if (postEmotionResult.ok) {\r\n                await this.props.appState.syncUserData();\r\n                this.updateUserData();\r\n            }\r\n        }\r\n    }\r\n\r\n    async fetchWeather() {\r\n        try {\r\n            if (this.state.userCoordinates) {\r\n                console.log('FETCH WEATHER STATUS: STARTED...!')\r\n                const coords = this.state.userCoordinates\r\n                const queryParams = {\r\n                    lat: coords.latitude,\r\n                    lon: coords.longitude,\r\n                    units: 'metric'\r\n                }\r\n                const fetchOptions = {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                    },    \r\n                    body: JSON.stringify({\r\n                        queryParams: queryParams\r\n                    })\r\n                }\r\n                const response = await fetch(appServerURI + 'api/weather', fetchOptions)\r\n                const resStatus = 'Status: ' + response.status + ', Status Text: ' + response.statusText\r\n                if (!response.ok) \r\n                    throw new Error(resStatus)\r\n                else {\r\n                    const weather = await response.json()\r\n                    console.log('FETCH WEATHER STATUS: SUCCESSFUL!')\r\n                    const weatherInfo = {\r\n                        coords: weather.coord,\r\n                        name: weather.name,\r\n                        weather: weather.weather[0],\r\n                        main: weather.main,\r\n                        clouds: weather.clouds,\r\n                        wind: weather.wind,\r\n                        visibility: weather.visibility,\r\n                    }\r\n                    this.setState({weather: weatherInfo})\r\n                }\r\n            } else {\r\n            // this.setLoginMsg('Não foi possível obter as condições do tempo. Tente reabrir essa tela...')\r\n            console.log('FETCH WEATHER STATUS: UNABLE TO START! USER POSITION NOT AVAILABLE.')\r\n            }\r\n        } catch (error) {\r\n            this.setLoginMsg('Não foi possível obter as condições do tempo. Tente reabrir essa tela...')\r\n            console.log('FETCH WEATHER STATUS: ERROR! LOGGING ERROR...')\r\n            console.log(error)\r\n\r\n        } finally {\r\n            console.log('FETCH WEATHER STATUS: FINISHED!')    \r\n        }\r\n    }\r\n\r\n    // Check if device has location services enabled\r\n    async checkIfLocationEnabled () {\r\n\r\n        try{\r\n            console.log('GEOCODING PROCESS (CHECK): CHECKING IF USER HAS SERVICES ENABLED.' )\r\n            let enabled = await Location.hasServicesEnabledAsync();            \r\n\r\n            if (!enabled) {\r\n                console.log('GEOCODING PROCESS (CHECK): CHECKED! USER DOES NOT HAVE SERVICES ENABLED.' )\r\n                this.setLoginMsg('Não foi possível obter sua localização. Habilite o serviço de localização para associar um endereço a essa entrada...')\r\n            } else {\r\n                console.log('GEOCODING PROCESS (CHECK): CHECKED! USER HAS SERVICES ENABLED.')\r\n            }\r\n\r\n        } catch(error) {\r\n            this.setLoginMsg('Não foi possível conferir se o serviço de localização está ativado. Tente reabrir essa tela...')\r\n            console.log(\"GEOCODING PROCESS (CHECK): ERROR IN SERVICES PERMISSION CHECK! COULD'NT CHECK IF USER HAS SERVICES ENABLED.\")\r\n        \r\n        } finally {\r\n            console.log(\"GEOCODING PROCESS (CHECK): FINISHED!\")\r\n        }\r\n    };\r\n\r\n    // Check for permission, get current user position and use reverse geocoding for user coordinates\r\n    async getCurrentLocation() {\r\n\r\n        try {\r\n\r\n            if (this.state.locationPermission === 'granted') {\r\n                console.log('GEOCODING PROCESS (PERMISSION): PERMISSION ALREADY GRANTED. SKIPPING REQUEST...')\r\n            } else {\r\n                console.log('GEOCODING PROCESS (PERMISSION): REQUESTING PERMISSION ASYNC...')\r\n                let { status } = await Location.requestForegroundPermissionsAsync()\r\n                // let { status } = await Location.requestBackgroundPermissionsAsync()        \r\n                this.setState({locationPermission: status})\r\n    \r\n                if (status !== 'granted') {\r\n                    console.log('GEOCODING PROCESS (PERMISSION): PERMISSION NOT GRANTED!')\r\n                    this.setLoginMsg('Permissão de localização não concedida. Permita que o app use os serviços de localização para associar um endereço a essa entrada...')\r\n                    return \r\n    \r\n                } else {\r\n                    console.log('GEOCODING PROCESS (PERMISSION): PERMISSION GRANTED!')\r\n                }\r\n            }\r\n\r\n            console.log('GEOCODING PROCESS (REQUEST): GETTING CURRENT USER POSITION ASYNC...')\r\n            let { coords } = await Location.getCurrentPositionAsync();\r\n            \r\n            if (coords) {   \r\n                console.log(`GEOCODING PROCESS (REQUEST): CURRENT USER POSITION FOUND... Latitude: ${latitude}, Logitude: ${longitude}`)\r\n                console.log('GEOCODING PROCESS (REVERSE GEOCODING): REVERSE GEOCODE ASYNC...')  \r\n                this.setState({userCoordinates: coords})\r\n                const { latitude, longitude } = coords;\r\n                let response = await Location.reverseGeocodeAsync({ latitude, longitude });\r\n        \r\n                if (response) {\r\n                    console.log('GEOCODING PROCESS (REVERSE GEOCODING): REVERSE GEOCODE SUCCESSFUL! UPDATING STATE...')  \r\n                    this.setState({ address: formattedAddress(response[0]), location: { position: coords, address: response[0] } })\r\n\r\n                } else {\r\n                    console.log('GEOCODING PROCESS (REVERSE GEOCODING): REVERSE GEOCODE FAILED! LOGGING RESPONSE...')  \r\n                    console.log(response)\r\n                }\r\n            } else {\r\n                console.log(`GEOCODING PROCESS (REVERSE GEOCODING): USER POSITION NOT FOUND! UNABLE TO PROCEED TO REVERSE GEOCODING...`)\r\n            }\r\n        } catch (error) {\r\n            this.setLoginMsg('Não foi possível obter a localização atual. Tente reabrir essa tela...')\r\n            console.log('GEOCODING PROCESS: ERROR IN USER POSITION REQUEST! LOGGING ERROR...')\r\n            console.log(error)\r\n        \r\n        } finally {\r\n            console.log('GEOCODING PROCESS: USER POSITION REQUEST FINISHED. PROCEEDING TO FETCH WEATHER DATA...')\r\n        }\r\n    };\r\n\r\n    setFontColor() {\r\n        const fontColorDark = this.props.appState.user.settings.fontColorDark\r\n        const fontColor = fontColorDark ? '#000' : '#fff'\r\n        const altFontColor = fontColorDark ? '#fff' : '#000'\r\n        for (let style of ['theme', 'entryTitle']) {\r\n            styles[style] = { ...styles[style], color: fontColor }\r\n        }\r\n        styles.altTheme.color = altFontColor\r\n        styles.altTheme.backgroundColor = altFontColor\r\n    }    \r\n\r\n    render() {\r\n        console.log('Rendering \"PostEntry\" component...')\r\n        this.setFontColor()\r\n        const settings = this.props.appState.user.settings\r\n        const backgroundColor = settings.backgroundColor\r\n        const backgroundImage = settings.backgroundImage\r\n        const imgURI =  settings.displayBackgroundImage ? (backgroundImage ? ( settings.enableHighResolution ? backgroundImage.urls.raw : backgroundImage.urls.regular ) : null ) : null\r\n        return(\r\n            <ImageBackground source={{'uri' : imgURI}} style={[styles.mainView, {backgroundColor: backgroundColor}]}>\r\n                <ScrollView style={styles.scrollView}>\r\n                    <View style={styles.section}>\r\n                            {this.postEntryHeader()}\r\n                            {this.InputCard('Avaliação', 'smiling-face', {justifyContent: 'space-between'}, this.MoodButtons())}\r\n                            {this.InputCard('Emoções', 'checkmark-square-outline', {flexWrap: 'wrap', justifyContent: 'center'}, this.EmotionButtons)}\r\n                            {this.InputCard('Jornal', 'book', {flexDirection: 'column', minHeight: relativeToScreen(130)}, this.JornalInput())}\r\n                    </View>\r\n                </ScrollView>  \r\n                <this.saveButton />\r\n                {this.loginMsg()}\r\n            </ImageBackground>\r\n        )    \r\n    }\r\n}","import React, { Component, useState, useEffect } from 'react';\r\nimport { FlatList, Text, SafeAreaView, Pressable, ActivityIndicator, Dimensions, ImageBackground, Platform, StatusBar } from 'react-native';\r\nimport { Icon } from 'react-native-eva-icons';\r\nimport * as Device from 'expo-device';\r\nconst isWindows = Device.osName == 'Windows'\r\nimport { capitalize } from './subcomponents/EditEmotions';\r\n\r\nconst appServerURI = 'https://mood-tracker-server.herokuapp.com/'\r\n\r\nfunction formatTopicName(name){\r\n  return capitalize(name.split('-').join(' '))\r\n}\r\n\r\nfunction buildApiUriParams(params) {\r\n  var uriParams = []\r\n  Object.keys(params).forEach( key => uriParams.push(key+'='+params[key]) )\r\n  return '?' + uriParams.join('&')\r\n}\r\n\r\nconst styles = {\r\n  mainView: {\r\n    height: '100%',\r\n    width: '100%',\r\n    // paddingTop: StatusBar.currentHeight\r\n  },\r\n  photosView: {\r\n    height: '100%',\r\n    width: '100%' ,\r\n  },\r\n  h1: {\r\n    fontSize: 26,\r\n    alignSelf: 'center',\r\n    // borderWidth: 1\r\n  },\r\n  header: {\r\n    position: 'absolute',\r\n    top: 0,\r\n    paddingTop: StatusBar.currentHeight,\r\n    width: '100%',\r\n    height: '20%',\r\n    backgroundColor: 'rgba(255,255,255,0.5)',\r\n    justifyContent: 'space-evenly',\r\n    alignItems: 'center'\r\n  },\r\n  headerLabel: {\r\n    // borderWidth: 1,\r\n    width: '70%',\r\n    fontSize: 22,\r\n    alignSelf: 'center',\r\n    textAlign: 'center',\r\n  },\r\n  status: {\r\n    backgroundColor: 'rgb(230,230,230)',\r\n    width: '100%',\r\n    height: '20%',\r\n    borderRadius: 20,\r\n    alignItems: 'center',\r\n    justifyContent: 'center'\r\n  },\r\n  statusText: {\r\n    fontSize: 18,\r\n    color: 'black'\r\n  },\r\n  image: {\r\n    width: '100%',\r\n    height: '100%',\r\n    alignItems: 'center',\r\n    justifyContent: 'center'\r\n  },\r\n}\r\n\r\nasync function getUnsplash(endpoint, params) {\r\n  console.log('UNSPLASH GET PHOTOS STATUS: STARTED...')\r\n  const reqParams = {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify({\r\n      endpoint: endpoint,\r\n      queryParams: params,\r\n    }),\r\n  }\r\n  var result, result_json, success\r\n  try {\r\n    result = await fetch(appServerURI + 'api/unsplash', reqParams)\r\n    if (result.ok) {\r\n      console.log(`UNSPLASH PHOTOS STATUS: FETCH SUCCESSFULL...`)\r\n\r\n      // let a = 'x-ratelimit-limit'\r\n      // let b = 'x-ratelimit-remaining'\r\n      // const headers = result.headers\r\n      // var limit, remaining\r\n      // switch (Platform.OS) {\r\n      //   case 'android':\r\n      //     limit = headers.map[a]\r\n      //     remaining = headers.map[b]          \r\n      //     break;\r\n      //   case 'web':\r\n      //     limit = headers.get(a)\r\n      //     remaining = headers.get(b)\r\n      //     break\r\n      //   default:\r\n      //     limit = headers.get(a)\r\n      //     remaining = headers.get(b)\r\n      //     break\r\n      // }\r\n      // console.log(`UNSPLASH PHOTOS STATUS:\\n  x-ratelimit-limit: ${limit}\\n  x-ratelimit-remaining: ${remaining}`)\r\n\r\n      result_json = await result.json()\r\n      success = result_json.length\r\n      if (success) {\r\n        console.log(`UNSPLASH PHOTOS STATUS: JSON RESULT SUCCESSFULL. RETRIEVED ${success} PHOTOS...`)\r\n        return result_json\r\n\r\n      } else {\r\n        console.log(`UNSPLASH PHOTOS STATUS: JSON RESULT FAILED. Logging json value...`)\r\n        console.log(result_json)\r\n        return null\r\n      }\r\n    } else {\r\n      console.log(`UNSPLASH GET PHOTOS STATUS: FETCH FAILED. Status code: ${result.status}, Text: ${result.statusText}..`)\r\n    }\r\n  } catch (error) {\r\n    console.log('UNSPLASH GET PHOTOS STATUS: ERROR CATCHED. LOGGING ERROR...')\r\n    console.log(error)\r\n    return null\r\n  }\r\n}\r\n\r\nconst Item = (props) => {\r\n  const topicsScreen = props.route.name == 'WallpaperTopics'\r\n  const photoURI = topicsScreen ? props.item.cover_photo.urls.regular : props.item.urls.regular\r\n  const nextScreenName = topicsScreen ? 'Wallpapers' : 'WallpaperZoom'\r\n  \r\n  const screenHeight = props.windowHeight + (Platform.OS != 'web' ? StatusBar.currentHeight : 0)\r\n  const photoHeight = topicsScreen ? ( isWindows ? screenHeight/3  : screenHeight/4 ) : ( isWindows ? screenHeight/2 : screenHeight/2 )\r\n  const photoWidth = topicsScreen ? ( isWindows ? '33.333333%' : '50%' ) : ( isWindows ? '50%' : '50%' )\r\n  return(\r\n    <Pressable\r\n      onPress={() => props.navigation.navigate( nextScreenName , { selectedImage: props.item })}\r\n      style={[{ minHeight: 70, height: photoHeight, width: photoWidth, margin: 0}]}\r\n    >\r\n      <ImageBackground source={{ uri:  photoURI }} style={styles.image} >\r\n        <Text style={[styles.h1, {width: '80%', color: 'white', textAlign: 'center'}]}>{ topicsScreen ? formatTopicName(props.item.slug) : '' }</Text>\r\n      </ImageBackground>\r\n    </Pressable>\r\n  )\r\n};\r\n\r\nexport class WallpapersComponent extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state={\r\n      photos: null,\r\n      page: null,\r\n      windowHeight: Dimensions.get('window').height,\r\n      isPhotosLoading: false,\r\n      hideHeader: false,\r\n    };\r\n    this.initializePhotosAsync = this.initializePhotosAsync.bind(this);\r\n    this.WallpapersHeaderText = this.WallpapersHeaderText.bind(this);\r\n    this.WallpapersHeader = this.WallpapersHeader.bind(this);\r\n    this.renderItem = this.renderItem.bind(this);\r\n    this.PhotoList = this.PhotoList.bind(this);\r\n    this.ControlButtons = this.ControlButtons.bind(this);\r\n    this.loadNextPagePhotosAsync = this.loadNextPagePhotosAsync.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log('\"Wallpapers\" component did mount...')\r\n    // StatusBar.setStatusBarTranslucent(true)\r\n    this.initializePhotosAsync()\r\n  }\r\n\r\n  async initializePhotosAsync() {\r\n    this.setState({isPhotosLoading: true})\r\n    let route = this.props.route\r\n    if (route.name=='WallpaperTopics') {\r\n      let asyncResult = await getUnsplash(`topics`, {page: 1, per_page: 30, order_by: 'position'})\r\n      this.setState({photos: asyncResult}) \r\n\r\n    } else {\r\n      let endpoint = `topics/${route.params.selectedImage.id}/photos`\r\n      let asyncResult = await getUnsplash(endpoint, {page: 1, per_page: 30, order_by: 'popular', orientation: 'portrait'})\r\n      this.setState({photos: [ route.params.selectedImage.cover_photo, ...asyncResult ], page: 1}) \r\n    }\r\n    this.setState({isPhotosLoading: false}) \r\n  }  \r\n\r\n  async loadNextPagePhotosAsync() {\r\n    console.log('LOAD NEXT PHOTOS PAGE STATUS: STARTED... ')\r\n    this.setState({isPhotosLoading: true})\r\n    let endpoint = `topics/${this.props.route.params.selectedImage.id}/photos`\r\n    let asyncResult = await getUnsplash(endpoint, {page: this.state.page+1, per_page: 30, order_by: 'popular', orientation: 'portrait'})\r\n    if (asyncResult) {\r\n      console.log('LOAD NEXT PHOTOS PAGE STATUS: SUCCESSFUL! ')\r\n      this.setState((prevState) => ({\r\n          photos: [ ...prevState.photos, ...asyncResult ],\r\n          page: prevState.page+1,\r\n        }))   \r\n    } else {\r\n      console.log('LOAD NEXT PHOTOS PAGE STATUS: FAILED! ')\r\n    }\r\n      console.log('LOAD NEXT PHOTOS PAGE STATUS: FINISHED. ')\r\n      this.setState({isPhotosLoading: false})\r\n  }\r\n\r\n  renderItem = ({ item }) => (\r\n    <Item item={item} windowHeight={this.state.windowHeight} {...this.props} />\r\n  );\r\n\r\n  WallpapersHeader () {\r\n    const hideHeader = this.state.hideHeader\r\n    const topicsScreen = this.props.route.name == 'WallpaperTopics'\r\n    return(\r\n      !hideHeader ? (\r\n        <Pressable\r\n        style={[ styles.header, {height: topicsScreen ? '20%' : '23%' } ]}\r\n        onPress={() => {this.setState({ hideHeader: true }); console.log('close button clicked...')}}\r\n        >\r\n          <this.WallpapersHeaderText hideHeader={hideHeader} />\r\n        </Pressable>  \r\n      ) : (\r\n        null\r\n      )\r\n    )\r\n  }\r\n\r\n  WallpapersHeaderText () {\r\n    const topicsScreen = this.props.route.name=='WallpaperTopics'\r\n    return(\r\n      this.state.isPhotosLoading ? (\r\n        <ActivityIndicator size='large' color='black' />\r\n      ) : (\r\n        this.state.photos ? (\r\n          <>\r\n            { !topicsScreen ? <Text style={[styles.h1]}>{ formatTopicName(this.props.route.params.selectedImage.slug) }</Text> : null }\r\n            <Text\r\n            style={[styles.headerLabel, {fontSize: topicsScreen ? 26 : 22 }]}\r\n            >\r\n              { this.props.route.params.headerText }</Text>\r\n          </>\r\n        ) : (\r\n          <Text style={styles.headerLabel}>Erro ao carregar imagems...</Text>\r\n        )\r\n     )\r\n    )\r\n  }\r\n  \r\n  PhotoList = () => {\r\n  \r\n    useEffect(() => {\r\n      const subscription = Dimensions.addEventListener('change', ({ window, screen }) => {\r\n        const windowHeightDifference = Math.abs(this.state.windowHeight-window.height)\r\n        if ( windowHeightDifference > 100) {\r\n          this.setState({windowHeight: window.height})\r\n        }\r\n      });\r\n      return () => subscription?.remove();\r\n    });\r\n\r\n    return(\r\n      <FlatList\r\n        data={ this.state.photos }\r\n        renderItem={ this.renderItem }\r\n        keyExtractor={ item => item.id }\r\n        numColumns={ isWindows ? 3  : 2 }\r\n        initialNumToRender={ null }\r\n        onEndReached={ this.props.route.name == 'WallpaperTopics' ? null : this.loadNextPagePhotosAsync }\r\n        refreshing={ this.state.isPhotosLoading }\r\n        />\r\n    )\r\n  }\r\n\r\n  ControlButtons() {\r\n    const topRight = {\r\n      top: Platform.OS != 'web' ? StatusBar.currentHeight : 0,\r\n      right: 0,\r\n      margin: '1.5%',\r\n      backgroundColor: '#fff0',\r\n    }\r\n\r\n    return(\r\n      !this.state.hideHeader ? (\r\n        <Pressable\r\n        style={[{\r\n          position: 'absolute',\r\n          width: 30,\r\n          height: 30,\r\n          alignItems: 'center',\r\n          justifyContent: 'center',\r\n          borderRadius: 30/2,\r\n        },\r\n        topRight\r\n        ]}\r\n        onPress={() => this.setState({hideHeader: true})}\r\n        >\r\n          <Icon name='close' width={30} height={30} fill='#fff' />\r\n        </Pressable>\r\n      ) : (\r\n        null\r\n      )\r\n    )\r\n  }\r\n\r\n  render() {\r\n    console.log('Rendering \"Wallpapers\" component...')\r\n    const settings = this.props.appState.user.settings\r\n    return (\r\n      <SafeAreaView style={styles.mainView}>\r\n        <SafeAreaView style={[styles.photosView, {backgroundColor: settings.backgroundColor}]}>\r\n          <this.PhotoList />\r\n          <this.WallpapersHeader />\r\n          <this.ControlButtons />\r\n        </SafeAreaView>\r\n      </SafeAreaView>\r\n    );  \r\n  }\r\n\r\n}","import { createContext } from 'react';\r\n\r\nconst UserContext = createContext();\r\n\r\nexport default UserContext","import React, { useContext, useState } from 'react';\r\nimport { View, Text, Image, ImageBackground, Pressable, ActivityIndicator, Platform, Linking } from 'react-native';\r\n// import { postDisplayBackgroundImage } from './SettingsScreen';\r\nimport { blinkButton, postSettings } from './SettingsScreen';\r\nimport UserContext from '../shared/UserContext';\r\n\r\nvar styles = {\r\n  fotter: {\r\n    position: 'absolute',\r\n    bottom: 0,\r\n    height: '22%',\r\n    width: '100%',\r\n    justifyContent: 'space-evenly',\r\n  },\r\n  controlView: {\r\n    // flex: 0.4,\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-evenly',\r\n    alignItems: 'center',\r\n  },\r\n  attributionView: {\r\n    // flex: 0.6,\r\n    flexDirection: 'row',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n controlButton: {\r\n    width: '35%',\r\n    height: 40,\r\n    borderWidth: 2,\r\n    borderRadius: 20,\r\n    backgroundColor: '#f4f3f4',\r\n    alignItems: 'center',\r\n    justifyContent: 'center'\r\n  },\r\n  controlButtonLabel: {\r\n    color: '#000',\r\n    fontSize: 17,\r\n    fontWeight: 'bold'\r\n  },\r\n  userProfileImage: {\r\n    width: 50,\r\n    height: 50,\r\n    borderRadius: 25\r\n  },\r\n  attributionLabel: {\r\n    color: 'white',\r\n    fontSize: 14,\r\n    fontStyle: 'italic',\r\n    paddingLeft: 10,\r\n    textAlign: 'left',\r\n    maxWidth: '78%',\r\n  },\r\n  attributionURL: {\r\n    textDecorationLine: 'underline'\r\n  },\r\n}\r\n\r\nconst openUserProfileFor = (userProfileHtmlLink) => {\r\n  return function () {\r\n    Linking.openURL( userProfileHtmlLink + '?utm_source=Mood-Tracker&utm_medium=referral');\r\n  } \r\n}\r\n\r\nconst openUnsplashURL = () => {\r\n  Linking.openURL('https://unsplash.com/?utm_source=Mood-Tracker&utm_medium=referral')\r\n}\r\n\r\nfunction ControlButton({title, onPress, isLoading}) {\r\n  const [ isClicked, setIsClicked ] = useState(false)\r\n  return(\r\n    <Pressable\r\n    onPressIn={() => blinkButton(setIsClicked, 300)}\r\n    onPress={onPress}\r\n    style={[styles.controlButton, {\r\n      backgroundColor: styles.controlButton.backgroundColor.slice(0,4) + ( isClicked ? '4' : '8' ),\r\n      borderColor: styles.controlButton.borderColor.slice(0,4) + ( isClicked ? '4' : '8' )\r\n    }]}\r\n    >\r\n      {isLoading ? (\r\n        <ActivityIndicator color='blue' />\r\n      ) : (\r\n        <Text selectable={false} style={[styles.controlButtonLabel, {\r\n          color: styles.controlButtonLabel.color + ( isClicked ? '8' : 'f' )\r\n        }]}\r\n        >\r\n          { title }\r\n        </Text>\r\n      )}\r\n    </Pressable>\r\n\r\n  )\r\n}\r\n\r\nexport function WallpaperZoom(props) {\r\n\r\n  const appState = useContext(UserContext);\r\n  const settings = appState.user.settings\r\n  const [isSaveImageLoading, setIsSaveImageLoading] = React.useState(false);\r\n\r\n  async function onSaveImageButtonPress() {\r\n    // fetch post selected color to user settings in server\r\n    console.log('POST IMAGE STATUS: Started...');\r\n    setIsSaveImageLoading(true);\r\n    const imageSetting = {\r\n      backgroundImage: props.route.params.selectedImage\r\n    };\r\n\r\n    const postImageResult = await postSettings(imageSetting, appState.user.username)\r\n    if (postImageResult.ok) {\r\n      // sync user data with app or entries component\r\n      if (!settings.displayBackgroundImage) {\r\n        await postSettings({displayBackgroundImage: true}, appState.user.username)\r\n      }\r\n\r\n      await props.appState.syncUserData();\r\n      // navigate back to settings\r\n      setIsSaveImageLoading(false);\r\n      props.navigation.navigate('Settings');\r\n    } else {\r\n      setIsSaveImageLoading(false);\r\n    }\r\n    console.log('POST IMAGE STATUS: Finished.');\r\n  }\r\n\r\n  console.log('Returning \"WallpaperZoom\" component...')\r\n\r\n  const fontColorDark = settings.fontColorDark\r\n  const fontColor = fontColorDark ? '#000' : '#fff'\r\n  const altFontColor = fontColorDark ? '#fff' : '#000'\r\n  for (let label of ['attributionLabel', 'controlButtonLabel']) {\r\n    styles[label] = { ...styles[label], color: fontColor }\r\n  }\r\n  styles.controlButton = { ...styles.controlButton, backgroundColor: altFontColor + '8', borderColor: fontColor + '8' }\r\n\r\n  const selectedImage = props.route.params.selectedImage\r\n  const imgURI = settings.enableHighResolution ? selectedImage.urls.raw : selectedImage.urls.regular\r\n\r\n  return (\r\n    <ImageBackground\r\n      source={{ uri: imgURI }}\r\n      style={{ flex: 1, backgroundColor: settings.backgroundColor }}\r\n    >\r\n      <View style={styles.fotter}>\r\n        <View style={styles.controlView}>\r\n          <ControlButton\r\n          title={'Voltar'}\r\n          onPress={props.navigation.goBack}\r\n          isLoading={false}\r\n          />\r\n          <ControlButton\r\n          title={'Aplicar'}\r\n          onPress={onSaveImageButtonPress}\r\n          isLoading={isSaveImageLoading}\r\n          />\r\n        </View>\r\n        <View style={styles.attributionView}>\r\n          <Image\r\n          source={{ uri: selectedImage.user.profile_image.large }}\r\n          style={styles.userProfileImage} />\r\n          <Text style={styles.attributionLabel}>\r\n            {'Photo by '}\r\n            <Text\r\n            onPress={openUserProfileFor(selectedImage.user.links.html)}\r\n            style={styles.attributionURL} >{ selectedImage.user.name }</Text>\r\n            {' on '}\r\n            <Text\r\n            onPress={openUnsplashURL}\r\n            style={styles.attributionURL}>{ 'Unsplash' }</Text>\r\n          </Text>\r\n        </View>\r\n      </View>\r\n    </ImageBackground>\r\n  );\r\n}\r\n","console.log('Importing victory module...')\r\nimport * as Victory from 'victory'\r\nexport default Victory","import React from 'react';\r\nimport Victory from '../victory';\r\nimport { relativeToScreen } from '../../styles/loginStyles';\r\nimport { moodColorsHEX } from '../PostEntryComponent';\r\nimport { FullDates, intWeekDayMap, portugueseMonthSigs, YearTicks, datePeriodFilters, fullDateMap, dateDiff } from '../../shared/dates';\r\nimport { groupByMap, periodMap, styles } from '../Charts';\r\n\r\nfunction stringTimeToSec(time) { // Expects 'hh:mm:ss' string format\r\n  return parseInt(time.slice(0,2))*3600 + parseInt(time.slice(3,5))*60 + parseInt(time.slice(6,8))\r\n}\r\n\r\nexport function appendTimeData(data, date, period) {\r\n  var datePeriodDates = FullDates.filter(datePeriodFilters(date, period))\r\n  var time_s, time_d\r\n  data.forEach((entry, index) => {\r\n    const dateDifDays = ((new Date(entry.date)) - (new Date(datePeriodDates[0].date))) / (1000*60*60*24)\r\n    time_s = stringTimeToSec(entry.startTime)\r\n    time_d = dateDifDays + time_s / (60*60*24)\r\n    data[index]['time_s'] = time_s\r\n    data[index]['time_d'] = time_d\r\n  })\r\n return data\r\n}\r\n\r\nexport function sortData(data, by='time_s', ascending=true) {\r\n  return data.sort((a, b) => {\r\n    if (ascending)\r\n      return a[by] - b[by];\r\n    else \r\n      return b[by] - a[by];\r\n  })\r\n}\r\n\r\nfunction range(i=0, n=10, m=1) {\r\n  const list = []\r\n  let index=0\r\n  for (let item = i; item < n; item+=m) {\r\n    list[index] = item; index += 1\r\n  }\r\n  return list\r\n}\r\n\r\nfunction lastDayOfTheMonth(date, period) {\r\n  const monthDays = FullDates.filter(datePeriodFilters(date, period))\r\n  return monthDays[monthDays.length-1].day\r\n}\r\n\r\nexport function xTicks(date, period, mode) {\r\n  let interval = ['expandir', 'enforcar'].includes(mode) ? 1 : 2\r\n  return {\r\n    'day': () => range(0, 1, interval/24),\r\n    'month': () => range(0, lastDayOfTheMonth(date, period), interval),\r\n    'week': () => range(0, 7),\r\n    'year': () => YearTicks\r\n  }[period]()\r\n}\r\n\r\nexport function expandDomains(date, period) {\r\n  return {\r\n    'day': () => [0,1],\r\n    'week': () => [0, 7],\r\n    'month': () => [0,  lastDayOfTheMonth(date, period)],\r\n    'year' : () => [0, 365],\r\n  }[period]()\r\n}\r\n\r\nexport function getDomain(data, by='time_s', space=0) {\r\n  if (data[1]) {\r\n    let x_min = data[0][by]\r\n    let x_max = data[data.length-1][by]\r\n    let x_dif = (x_max - x_min) * space\r\n    let x_lim = [ x_min - x_dif, x_max + x_dif ]\r\n    if (x_lim[0] < 0) { x_lim[0] = 0 }\r\n    return x_lim\r\n  } else if (data[0]) {\r\n    return [data[0][by] * 3 / 4, data[0][by] * 1.25]\r\n  } else {\r\n    return [0,1]\r\n  }\r\n}\r\n\r\nfunction x_domains(data, date, period) {\r\n  return {\r\n  'enquadrar': () => expandDomains(date, period),\r\n  'expandir': () => getDomain(data, 'time_d', 0.1),\r\n  'enforcar': () => getDomain(data, 'time_d', 0),\r\n  }\r\n};\r\n\r\nconst xAxisLabel = {\r\n  'day': 'Hora',\r\n  'week': 'Dia da semana',\r\n  'month': 'Dia do mês',\r\n  'year': 'Mês'\r\n}\r\n\r\nfunction tickFormats(ticks) {\r\n  return {\r\n    'day' : tick => Math.round(tick*24),// + 'h',\r\n    'week': tick => intWeekDayMap[tick],\r\n    'month': tick => parseInt(tick+1),\r\n    'year': tick => portugueseMonthSigs[ticks.indexOf(tick)]\r\n  }\r\n}\r\n\r\nconst dateObj = {\r\n  'hour': entry => ({ 'hour': parseInt(entry.startTime.slice(0,2)), 'date': entry.date }),\r\n  'day': entry => entry.date,\r\n  'week': entry => ({\r\n    'week': fullDateMap(entry.date).week,\r\n    'year': fullDateMap(entry.date).year\r\n  }),\r\n  'month': entry => ({\r\n    'month': fullDateMap(entry.date).month,\r\n    'year': fullDateMap(entry.date).year\r\n  }),\r\n  'year': entry => fullDateMap(entry.date).year\r\n}\r\n\r\nfunction subsetFilters(date, key) {\r\n  return {\r\n    'hour': entry => parseInt(entry.startTime.slice(0,2)) == date.hour && entry.date == date.date,\r\n    'day': entry => entry.date == date,\r\n    'week': entry => fullDateMap(entry.date).week == date.week && fullDateMap(entry.date).year == date.year ,\r\n    'month': entry => fullDateMap(entry.date).month == date.month && fullDateMap(entry.date).year == date.year ,\r\n    'year': entry => fullDateMap(entry.date).year == date,\r\n    }[key]\r\n}\r\n\r\nfunction objListAverage(objList, by) {\r\n  var sum = 0\r\n  objList.forEach(obj => sum += obj[by])\r\n  return sum / objList.length\r\n}\r\n\r\nfunction objListVariance(objList, by) {\r\n  const avg = objListAverage(objList, by)\r\n  var sum = 0\r\n  objList.forEach(obj => sum += (avg - obj[by])**2 )\r\n  return sum / (objList.length - 1)\r\n}\r\n\r\nfunction equalObjects(obj1, obj2) {\r\n  var equal = true\r\n  if (typeof(obj1)!='object') {\r\n    if (obj1!=obj2) equal = false\r\n  } else {\r\n    for (let key of Object.keys(obj1)) {\r\n      if (obj1[key] != obj2[key]) {\r\n        equal = false\r\n      }\r\n    }  \r\n  }\r\n  return equal\r\n}\r\n\r\nexport function objListIncludes(objList, obj) {\r\n  var includes = false\r\n  for (let listObj of objList) {\r\n    if (equalObjects(listObj, obj)) {\r\n      includes=true\r\n    }\r\n  }\r\n  return includes\r\n}\r\n\r\nfunction dateAverage(data, isVariance, key, date, period) {\r\n  const firstDatePeriodDate = FullDates.filter(datePeriodFilters(date, period))[0].date\r\n  let uniqueDates = []\r\n  data.forEach(entry => {\r\n    let uniqueDate = dateObj[key](entry)\r\n    if (!objListIncludes(uniqueDates, uniqueDate)) uniqueDates.push(uniqueDate)\r\n  })\r\n\r\n  var avgData = []\r\n  var index = 0\r\n  const subsetSizeThreshold = isVariance ? 2 : 1\r\n  uniqueDates.forEach(uniqueDate => {\r\n    const dataSubset = data.filter(subsetFilters(uniqueDate, key))\r\n    if (dataSubset.length >= subsetSizeThreshold) {\r\n      const subsetAverage = isVariance\r\n        ? objListVariance(dataSubset, 'y')\r\n        : objListAverage(dataSubset, 'y')\r\n      const thisSubsetFirstDate = FullDates.filter(datePeriodFilters({[key]: uniqueDate}, key))[0].date\r\n      var time_d = dateDiff(firstDatePeriodDate, thisSubsetFirstDate)\r\n      if (key=='hour') {\r\n        time_d += uniqueDate['hour'] * 1/24\r\n      }\r\n      if (time_d > 0) {\r\n        avgData.push({\r\n          x: index,\r\n          y: subsetAverage,\r\n          time_d: time_d,\r\n        })\r\n        index += 1          \r\n      }\r\n    }\r\n  })\r\n  return avgData    \r\n}\r\n\r\nexport function MoodLineTemporal({ data, interpolation, date, period, mode, secMode, thirdMode, setThirdMode }) {\r\n  \r\n  // Filter entries with non-empty startTime\r\n  data = data.filter(entry => entry.startTime);\r\n\r\n  // Calculate and append 'time(s)' and 'time(d)' variables to each entry\r\n  data = appendTimeData(data, date, period);\r\n\r\n  // Calculates and append averages by specified variable if average mode is active\r\n  const isVariance = secMode=='variância'\r\n  if (secMode!='sequência') {\r\n    if (thirdMode) {\r\n      data = dateAverage(data, isVariance, groupByMap[thirdMode], date, period)\r\n    }\r\n  }\r\n\r\n  // Sort entries by variable\r\n  const by = 'time_d';\r\n  data = sortData(data, by);\r\n  \r\n  // Calculate tick values based on selected period and date\r\n  const xTickValues = xTicks(date, period, mode);\r\n\r\n  // Calculate x domain values based on selected period and date\r\n  const x_domain = x_domains(data, date, period)[mode]();\r\n  const y_domain = isVariance ? [0, 5.5] : [1, 5.5]\r\n\r\n  // Defining chart styles\r\n  const chartStyles = {\r\n    yAxis: {\r\n      axis: { stroke: \"#fff0\" },\r\n      grid: { stroke: styles.h1.color + '7' },\r\n      tickLabels: {\r\n        fontSize: relativeToScreen(17),\r\n        padding: relativeToScreen(15),\r\n        fill: styles.h1.color\r\n      },\r\n    },\r\n    xAxis: {\r\n      // parent: { padding: relativeToScreen(15) },\r\n      grid: { stroke: \"#fff0\" },\r\n      axis: { stroke: \"#fff0\" },\r\n      axisLabel: {\r\n        padding: relativeToScreen(!data[0] ? 45 : 65),\r\n        fontSize: styles.h3.fontSize,\r\n        fill: styles.h1.color,\r\n        // padding: 0\r\n      },\r\n      ticks: {\r\n        stroke: styles.h1.color + (!data[0] ? '0' : ''),\r\n        size: relativeToScreen(10)\r\n      },\r\n      tickLabels: {\r\n        fontSize: relativeToScreen(15),\r\n        padding: relativeToScreen(0),\r\n        fill: data[0] ? styles.h1.color : '#0000'\r\n      },\r\n    },\r\n    line: {\r\n      data: {\r\n        stroke: styles.h1.color,\r\n        strokeWidth: 3,\r\n      },\r\n    },\r\n    scatter: {\r\n      data: { fill: ({ datum }) => moodColorsHEX[Math.round(datum.y - 1)] }\r\n    }\r\n  }\r\n\r\n  const chartPaddings = {\r\n    chart: {\r\n      left: relativeToScreen(40),\r\n      right: relativeToScreen(20),\r\n      top: relativeToScreen(0),\r\n      bottom: relativeToScreen(90)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Victory.VictoryChart\r\n    width={relativeToScreen(330)}\r\n    height={relativeToScreen(isVariance ? 255 : 225)}\r\n    padding={chartPaddings.chart}\r\n    domain={{ x: x_domain, y: y_domain }}\r\n    animate={{\r\n      duration: 2000,\r\n      onLoad: {duration: 1000}\r\n    }}\r\n    >\r\n      <Victory.VictoryAxis\r\n      dependentAxis\r\n      tickValues={range( isVariance ? 0 : 1 , 6, 1)}\r\n      tickFormat={tick => parseInt(tick)}\r\n      style={chartStyles.yAxis}\r\n      />\r\n      <Victory.VictoryAxis\r\n      label={data[0] ? xAxisLabel[period] : `Você não possui entradas ${period=='week' ? 'nessa' : 'nesse'} ${periodMap[period].toLowerCase()}.` }\r\n      tickComponent={<Victory.LineSegment y1={relativeToScreen( isVariance ? 180 : 150 )} y2={relativeToScreen( isVariance ? 190 : 160 )} />}\r\n      tickValues={data[0] ? xTickValues : null}\r\n      tickFormat={data[0] ? tickFormats(xTickValues)[period] : null}\r\n      tickLabelComponent={<Victory.VictoryLabel angle={-90} dx={relativeToScreen(-32)} dy={relativeToScreen(-8)} />}\r\n      style={chartStyles.xAxis}\r\n      />\r\n      { interpolation == 'scatter' ? null : (\r\n        <Victory.VictoryLine\r\n        data={data}\r\n        x={by} y='y'\r\n        interpolation={interpolation}\r\n        style={chartStyles.line}\r\n        />\r\n      )}\r\n      <Victory.VictoryScatter\r\n      data={data}\r\n      x={by} y='y'\r\n      size={['month', 'year'].includes(period) ? 4.5 : 5.7}\r\n      style={chartStyles.scatter}\r\n      />\r\n    </Victory.VictoryChart>\r\n  );\r\n}\r\n","import { useState } from 'react'\r\nimport { View, Text } from 'react-native'\r\nimport { relativeToScreen } from '../../styles/loginStyles'\r\nimport { styles, periodMap, ModeControlRow } from '../Charts'\r\nimport { moodColorsHEX } from '../PostEntryComponent'\r\nimport Victory from '../victory'\r\nimport { objListIncludes, sortData } from './MoodLineTemporal'\r\n\r\nfunction uniqueItems(objList, key) {\r\n  var items = []\r\n  for (let obj of objList) {\r\n    for (let item of obj[key]) {\r\n      if (!objListIncludes(items, item)) { items.push(item) }\r\n    }\r\n  }\r\n  return items\r\n}\r\n\r\nfunction itemsCount(objList, key) {\r\n  var uniqueItemsCount = {}\r\n  const items = uniqueItems(objList, key)\r\n  items.forEach(item => uniqueItemsCount[item.name] = 0);\r\n  for (let obj of objList) {\r\n    for (let item of obj[key]) {\r\n      uniqueItemsCount[item.name] += 1\r\n    }\r\n  }\r\n  return uniqueItemsCount\r\n}\r\n\r\nexport function EmotionBarCard({entries, date, period, mode}) {//, setMode, secMode, setSecMode, thirdMode, setThirdMode, temporal, setTemporal}) {\r\n\r\n  const uniqueEmotions = uniqueItems(entries, 'emotions')\r\n  const emotionCount = itemsCount(entries, 'emotions')\r\n  var emotionEntriesLength = 0\r\n  uniqueEmotions.forEach(emotion => emotionEntriesLength += emotionCount[emotion.name])\r\n  var data = uniqueEmotions.map((emotion, index) => ({\r\n    x: index+1,\r\n    y: emotionCount[emotion.name],\r\n    entriesProportion: emotionCount[emotion.name] / entries.length,\r\n    emotionEntriesProportion: emotionCount[emotion.name] / emotionEntriesLength,\r\n    emotion: emotion.name,\r\n    type: emotion.type,\r\n    energy: emotion.energy      \r\n  }))\r\n\r\n  const y = mode=='contagem' ? 'y' : ( mode=='entradas %' ? 'entriesProportion' : 'emotionEntriesProportion' )\r\n  data = sortData(data, y)\r\n\r\n  const [by, setBy] = useState('positiva ou negativa')\r\n\r\n  return(\r\n    <View style={{width: '100%',  alignItems: 'center', justifyContent: 'center'}}>\r\n      <View style={{width: '100%',  alignItems: 'center', justifyContent: 'center', height: data[0] ? null : 150 }}>\r\n          { data[0]\r\n            ? <EmotionBar data={data} y={y} mode={mode} by={by} />\r\n            : (\r\n              <Text\r\n              style={[styles.h3, {width: '70%', textAlign: 'center', alignSelf: 'center'}]}\r\n              >\r\n                { `Você não possui emoções salvas ${period=='week' ? 'nessa' : 'nesse'} ${periodMap[period].toLowerCase()}.` }\r\n              </Text>\r\n            )\r\n          }\r\n      </View>\r\n      <ModeControlRow\r\n      containerStyle={{height: 40, marginTop: 5}}\r\n    //   var1={interpolation}\r\n    //   setVar1={setInterpolation}\r\n    //   var1Options={interpolations}\r\n      var2={by}\r\n      setVar2={setBy}\r\n      var2Options={['positiva ou negativa', 'calmo(a) ou energizado(a)']}\r\n      />\r\n    </View>\r\n  )\r\n}\r\n\r\nconst EmotionLabel = (props) => {\r\n    const maxCount = props.data[props.data.length-1][props.variable]\r\n    const labelLength = props.datum.emotion.length + 2 + 2\r\n    const labelSize = labelLength * relativeToScreen(10) + relativeToScreen(10)\r\n    const barHeight = props.datum[props.variable] / (props.variable=='y' ? maxCount : 1 ) * relativeToScreen(350)\r\n    const labelOutside = labelSize > barHeight\r\n    return <Victory.VictoryLabel {...props} labelOutside={labelOutside} textAnchor={ labelOutside ? 'start' : 'end' } dx={relativeToScreen(labelOutside ? 10 : -10)}  />\r\n}\r\n\r\nexport function EmotionBar({data, mode, y, by}) {\r\n  const emotionBarStyle = {\r\n    parent: {},\r\n    data: {\r\n      fill: ({ datum }) =>  moodColorsHEX[ (by=='positiva ou negativa' ? datum.type=='Positiva' : datum.energy=='Energizado(a)') ? (by=='positiva ou negativa' ? 4 : 3) : (by=='positiva ou negativa' ? 0 : 1 ) ],\r\n    },\r\n    labels: {\r\n      fontSize: styles.h3.fontSize,\r\n      fontWeight: '600',\r\n      fill: (props) => (by!='positiva ou negativa' && props.datum.energy=='Energizado(a)' && !props.labelOutside) ? '#000' : styles.h1.color\r\n    },\r\n  }\r\n\r\n  const labelFormat = ({datum}) => `${datum.emotion} ${ y=='y' ? parseInt(datum[y])+'x' : Math.round(datum[y]*100)+'%' }`\r\n  const y_domain = [0, mode=='contagem' ? data[data.length-1].y : 1]\r\n\r\n  return(\r\n    <Victory.VictoryBar\r\n    horizontal\r\n    data={data}\r\n    x='emotion' y={y}\r\n    animate={{duration: 2000, onLoad: {duration: 1000}}}\r\n    domain={{y: y_domain}}\r\n    height={relativeToScreen(data.length * 40 - 5)}\r\n    width={relativeToScreen(320)}\r\n    // barRatio={1}\r\n    barWidth={relativeToScreen(35)}\r\n    padding={{top: relativeToScreen(20), bottom: relativeToScreen(20), left: relativeToScreen(0), right: relativeToScreen(0) }}\r\n    labels={labelFormat}\r\n    labelComponent={<EmotionLabel mode={mode} variable={y} />}\r\n    style={emotionBarStyle}\r\n    cornerRadius={{top: 8, bottom: 0}}\r\n    />\r\n  )\r\n}","import React, { Component, useState } from 'react';\r\nimport { ImageBackground, View, Text, ScrollView, StatusBar, Pressable } from 'react-native';\r\nimport \"react-native\";\r\nimport { Icon } from 'react-native-eva-icons';\r\n// import VectorIcon from 'react-native-vector-icons/MaterialCommunityIcons';\r\nimport Victory from './victory'\r\n\r\nimport { MoodLineTemporal, appendTimeData, sortData } from './subcomponents/MoodLineTemporal';\r\nimport { EmotionBarCard, EmotionBar } from './subcomponents/EmotionBar'\r\n\r\nimport { relativeToScreen } from '../styles/loginStyles';\r\nimport { blinkButton } from './SettingsScreen';\r\nimport { Today, current, getNext, datePeriodFilters, formatPeriodDate } from '../shared/dates';\r\n\r\nimport { moodColorsHEX } from './PostEntryComponent';\r\nimport { capitalize } from './subcomponents/EditEmotions';\r\nvar moodColorsObj = {}\r\nmoodColorsHEX.forEach((color, index) => {\r\n  moodColorsObj[index+1] = color\r\n})\r\n\r\nexport var styles = {\r\n  background: {\r\n    flex: 1,\r\n    paddingTop: StatusBar.currentHeight,\r\n    paddingBottom: relativeToScreen(55),\r\n    alignItems: 'center',\r\n    justifyContent: 'space-between',\r\n  },\r\n  foreground: {\r\n    width: relativeToScreen(350),\r\n    paddingBottom: relativeToScreen(60),\r\n  },\r\n  header: {\r\n    height: relativeToScreen(120),\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  navigationRow: {\r\n    justifyContent: 'space-between',\r\n    height: relativeToScreen(60),\r\n    alignItems: 'flex-start',\r\n  },\r\n  cardContainer: {\r\n    width: '100%',\r\n    marginBottom: '5%',\r\n  },\r\n  card: {\r\n    paddingVertical: relativeToScreen(5),\r\n    paddingHorizontal: relativeToScreen(15),\r\n    borderRadius: relativeToScreen(20),\r\n    backgroundColor: 'rgba(0,0,0,0.3)',\r\n  },\r\n  cardRow: {\r\n    flexDirection: 'row',\r\n    // paddingVertical: relativeToScreen(5),\r\n    alignItems: 'center',\r\n  },\r\n  cardHeader: {\r\n    height: relativeToScreen(40),\r\n    justifyContent: 'space-between',\r\n    // paddingHorizontal: relativeToScreen(5),\r\n  },\r\n  periodButton: {\r\n    width: '35%',\r\n    height: relativeToScreen(40),\r\n    position: 'absolute',\r\n    bottom: relativeToScreen(20 + 55),\r\n    // right: relativeToScreen(20),\r\n    alignSelf: 'center',\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    borderWidth: 2,\r\n    borderRadius: relativeToScreen(20),\r\n    backgroundColor: '#fff',\r\n  },\r\n  chartView: {\r\n    marginTop: relativeToScreen(5),\r\n    marginBottom: relativeToScreen(5),\r\n    alignItems: 'center',\r\n    justifyContent: 'center'\r\n  },\r\n  controlRow: {\r\n  width: '100%',\r\n  height: relativeToScreen(30),\r\n  // paddingHorizontal: relativeToScreen(5),\r\n  flexDirection: 'row',\r\n  alignItems: 'center',\r\n  justifyContent: 'space-between'\r\n  },\r\n  bottomControlRow: {\r\n    flexDirection: 'row',\r\n    height: relativeToScreen(50),\r\n    justifyContent: 'flex-end',\r\n    alignItems: 'center'\r\n  },\r\n  moodPieCard: {\r\n    width: relativeToScreen(330),\r\n    height: relativeToScreen(180),\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    paddingTop: relativeToScreen(5),\r\n    paddingBottom: relativeToScreen(10)\r\n  },\r\n  moodPieCardSection: {\r\n    height: '100%',\r\n    width: '50%',\r\n    alignItems: 'center',\r\n    justifyContent: 'center'\r\n  },\r\n  moodPieStatsView: {\r\n    width: relativeToScreen(150),\r\n    height: relativeToScreen(150),\r\n    alignItems: 'center',\r\n    justifyContent: 'space-between'\r\n  },\r\n  moodStatRow: {\r\n    width: '100%',\r\n    height: relativeToScreen(25),\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    justifyContent: 'space-between'\r\n  },\r\n  statsRowItem: {\r\n    width: '25%',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    // borderWidth: 1,\r\n  },\r\n  moodCircleBadge: {\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    width: relativeToScreen(22),\r\n    height: relativeToScreen(22),\r\n    borderRadius: relativeToScreen(11)\r\n  },\r\n  h1: {\r\n    fontSize: relativeToScreen(25),\r\n    color: '#fff'\r\n  },\r\n  h2: {\r\n    fontSize: relativeToScreen(20),\r\n    color: '#fff',\r\n  },\r\n  h3: {\r\n    fontSize: relativeToScreen(17),\r\n    color: '#fff',\r\n  },\r\n  h4: {\r\n    fontSize: relativeToScreen(15),\r\n    color: '#fff',\r\n  },\r\n  h5: {\r\n    fontSize: relativeToScreen(13),\r\n    color: '#fff',\r\n  },\r\n  altTheme: {\r\n    color: '#000',\r\n  }\r\n}\r\n\r\nconst moods = [1,2,3,4,5]\r\nexport const moodMap = {\r\n  'Horrível': 1,\r\n  'Mal': 2,\r\n  'Regular': 3,\r\n  'Bem': 4,\r\n  'Ótimo': 5\r\n}\r\n\r\nconst periods = ['day', 'week', 'month', 'year']\r\nexport const periodMap = {\r\n  'day': 'Dia',\r\n  'week': 'Semana',\r\n  'month':'Mês',\r\n  'year': 'Ano'\r\n}\r\n\r\nfunction ChartScreenHeader({title}) {\r\n  return(\r\n    <View style={styles.header}>\r\n      <Text style={styles.h1}>{ title }</Text>\r\n    </View>\r\n  )\r\n}\r\n\r\n// export const stats = [\r\n//   'sequência', 'Média (hora)', 'Média (dia)',\r\n//   'Média (semana)', 'Média (mês)', 'Variância (hora)',\r\n//   'Variância (dia)', 'Variância (semana)', 'Variância (mês)'\r\n// ]\r\n\r\nexport const stats = [ 'sequência', 'média', 'variância' ] \r\nexport const groupBy = [ 'hora', 'dia', 'semana', 'mês' ]\r\nconst domainModes = [ 'enquadrar', 'expandir', 'enforcar' ]\r\nexport const groupByMap = {\r\n  'sequência': 'sequência',\r\n  'hora': 'hour',\r\n  'dia': 'day',\r\n  'semana': 'week',\r\n  'mês': 'month',\r\n}\r\n\r\nfunction ChartPanel({imgURI, backgroundColor, entries}) {\r\n\r\n  const currentDates = {\r\n    'day': Today(),\r\n    'week': { week: current('week'), year: current('year') },\r\n    'month': { month: current('month'), year: current('year') },\r\n    'year': current('year')\r\n  }\r\n  \r\n  const [ period, setPeriod ] = useState('day')\r\n  const [ date, setDate ] = useState(currentDates)\r\n\r\n  return(\r\n    <ImageBackground\r\n    source={{uri : imgURI}}\r\n    style={[ styles.background, {backgroundColor: backgroundColor} ]}\r\n    >\r\n      <ScrollView style={{width: '100%'}}>\r\n        <View style={[styles.foreground, {alignSelf: 'center'}]}>\r\n          <ChartScreenHeader title={'Painel'} />\r\n          <NavigationRow date={date} setDate={setDate} period={period} />\r\n          <ChartCard\r\n          title={'Avaliações ' + ( period=='week' ? 'da ' : 'do ' )  + periodMap[period].toLowerCase() }\r\n          Chart={MoodLineCard}\r\n          entries={entries}\r\n          date={date}\r\n          period={period}\r\n          initialMode='enquadrar'\r\n          modes={domainModes}\r\n          initialSecMode='sequência'\r\n          secModes={stats}\r\n          initialThirdMode='hora'\r\n          thirdModes={groupBy}\r\n          />\r\n          <ChartCard\r\n          title='Repartição das avaliações'\r\n          Chart={MoodPieCard}\r\n          entries={entries}\r\n          date={date}\r\n          period={period}\r\n          initialMode={null}\r\n          modes={null}\r\n          />\r\n          <ChartCard\r\n          title={'Emoções ' + ( period=='week' ? 'da ' : 'do ' )  + periodMap[period].toLowerCase()}\r\n          Chart={EmotionBarCard}\r\n          entries={entries}\r\n          date={date}\r\n          period={period}\r\n          initialMode='contagem'\r\n          modes={['contagem', 'entradas %', 'repartição %']}\r\n          />\r\n        </View>\r\n      </ScrollView>\r\n      <PeriodButton period={period} setPeriod={setPeriod} />\r\n    </ImageBackground>\r\n  )\r\n}\r\n\r\nfunction PeriodButton({period, setPeriod}) {\r\n  const [ isClicked, setIsClicked ] = useState(false)\r\n  return(\r\n    <Pressable\r\n    style={[styles.periodButton, {\r\n      backgroundColor: styles.altTheme.color + ( isClicked ? '4' : '8' ),\r\n      borderColor: styles.h1.color + ( isClicked ? '6' : '8' )\r\n    }]}\r\n    onPressIn={() => blinkButton(setIsClicked, 300)}\r\n    onPress={() => setPeriod(periods[ periods[periods.length-1]==period ? 0 : periods.indexOf(period)+1 ])}\r\n    >\r\n      <Icon name='swap-outline' width={15} height={15} fill={styles.h1.color  + ( isClicked ? 'a' : 'f' )} />\r\n      <Text selectable={false} style={[styles.h3, {color: styles.h1.color   + ( isClicked ? 'a' : 'f' ), fontWeight: 'bold'}]}>{ ' ' + periodMap[period] }</Text>\r\n    </Pressable>\r\n  )\r\n}\r\n\r\nfunction NavigationRow({date, setDate, period}) {\r\n  return(\r\n    <View style={[styles.cardRow, styles.navigationRow]}>\r\n      <DateNavigationButton\r\n      icon='arrow-back'\r\n      next='previous'\r\n      date={date}\r\n      setDate={setDate}\r\n      period={period}\r\n      />\r\n      <Text style={[styles.h2]}>{ formatPeriodDate[period](date[period]) }</Text>                                \r\n      <DateNavigationButton\r\n      icon='arrow-forward'\r\n      next='next'\r\n      date={date}\r\n      setDate={setDate}\r\n      period={period}\r\n      />\r\n    </View>\r\n  )\r\n}\r\n\r\nfunction DateNavigationButton({icon, next, date, setDate, period}) {\r\n  const [ isClicked, setIsClicked ] = useState(false)\r\n  return(\r\n    <Pressable\r\n    onPressIn={() => blinkButton(setIsClicked, 300)}\r\n    onPress={() => setDate({\r\n      ...date,\r\n      [period]: getNext(date[period], next, period)\r\n    })}\r\n    hitSlop={relativeToScreen(15)}\r\n    >\r\n      <Icon\r\n      name={icon}\r\n      width={relativeToScreen(29)}\r\n      height={relativeToScreen(29)}\r\n      fill={  styles.h1.color + (isClicked ? '6' : '') }\r\n      />\r\n    </Pressable>\r\n  )\r\n}\r\n\r\nfunction next(current, list) {\r\n  let index = list.indexOf(current)\r\n  return list[ index == list.length-1 ? 0 : index+1 ]\r\n}\r\n\r\nconst ChartCard = ({title, Chart, entries, date, period, initialMode, modes, initialSecMode, secModes, initialThirdMode, thirdModes}) => {\r\n  const filter = datePeriodFilters(date, period)\r\n  entries = entries.filter(filter)\r\n\r\n  const [ mode, setMode ] = useState(initialMode)\r\n  const [ secMode, setSecMode ] = useState(initialSecMode)\r\n  const [ thirdMode, setThirdMode ] = useState(initialThirdMode)\r\n  const [ temporal, setTemporal ] = useState('temporal')\r\n  return(\r\n    <View style={styles.cardContainer}>\r\n      <View style={styles.card}>\r\n        <View style={[styles.cardRow, styles.cardHeader]}>\r\n          <Text style={styles.h2}>{ title }</Text>\r\n          { initialMode\r\n            ? ( temporal=='temporal'\r\n              ? <ModeSwapButton mode={mode} setMode={setMode} modes={ modes } />\r\n              : null\r\n            )\r\n            : null\r\n          }\r\n        </View>\r\n        <View style={styles.chartView}>\r\n          <Chart\r\n          entries={entries}\r\n          date={date}\r\n          period={period}\r\n          mode={mode}\r\n          setMode={setMode}\r\n          secMode={secMode}\r\n          setSecMode={setSecMode}\r\n          thirdMode={thirdMode}\r\n          setThirdMode={setThirdMode}\r\n          temporal={temporal}\r\n          setTemporal={setTemporal}\r\n          />\r\n        </View>\r\n      </View>\r\n        { temporal=='temporal'\r\n          ? ( secMode\r\n            ? (\r\n              <ModeControlRow\r\n              containerStyle={{ ...styles.bottomControlRow, justifyContent: 'space-between', paddingHorizontal: relativeToScreen(15)}}\r\n              var1={secMode}\r\n              setVar1={setSecMode}\r\n              var1Options={secModes}\r\n              var2={thirdMode}\r\n              setVar2={setThirdMode}\r\n              var2Options={thirdModes}\r\n              />        \r\n            ) : null\r\n          ) : null\r\n        }\r\n    </View>\r\n  )\r\n}\r\n\r\nexport function ModeControlRow(props) {\r\n  return props.var1 || props.var2 ? (\r\n    <View style={[styles.controlRow, props.containerStyle]}>\r\n      { props.var1 ? <ModeSwapButton mode={props.var1} setMode={props.setVar1} modes={props.var1Options} /> : null }\r\n      { props.var2 ? <ModeSwapButton mode={props.var2} setMode={props.setVar2} modes={props.var2Options} /> : null }\r\n    </View>\r\n  ) : null\r\n}\r\n\r\nfunction ModeSwapButton({mode, setMode, modes}) {\r\n  const [ modeClicked, setModeClicked ] = useState(false)\r\n  return(\r\n    <Pressable\r\n    style={styles.cardRow}\r\n    onPressIn={() => blinkButton(setModeClicked, 300)}\r\n    onPress={() => {\r\n      setMode(next(mode, modes))\r\n    }}\r\n    >\r\n      <Icon\r\n      name='swap-outline'\r\n      width={relativeToScreen(15)}\r\n      height={relativeToScreen(15)}\r\n      fill={ styles.h1.color + (modeClicked ? '6' : '')}\r\n      />\r\n      <Text selectable={false} style={[styles.h3, { color: styles.h1.color + (modeClicked ? '6' : '') } ]}>{ ' ' + capitalize(mode) }</Text>\r\n    </Pressable>\r\n  )\r\n}\r\n\r\nfunction setStatForPeriod(stat, by, setBy, period) {\r\n  if (stat=='sequência') {\r\n    setBy(null)\r\n  } else if (!by) {\r\n    setBy('hora')\r\n  } else {\r\n    periods.forEach((per, index) => {\r\n      if (period==per) {\r\n        if ( groupBy.slice(index+1, 4).includes(by) )\r\n          setBy('hora')\r\n      }\r\n    })      \r\n  }\r\n}\r\n\r\nconst interpolations = [ 'catmullRom', 'linear', 'natural', 'step', 'basis','cardinal', 'scatter' ]\r\n\r\nfunction MoodLineCard({entries, date, period, mode, setMode, secMode, setSecMode, thirdMode, setThirdMode, temporal, setTemporal}) {\r\n\r\n  const [interpolation, setInterpolation] = useState('catmullRom')\r\n  if (!entries[1]) {\r\n    setMode('enquadrar'); setSecMode('sequência')\r\n  }\r\n  setStatForPeriod(secMode, thirdMode, setThirdMode, period)\r\n\r\n  const data = entries.map((entry, index) => {\r\n    return({\r\n      x: index+1,\r\n      y: moodMap[entry.mood],\r\n      date: entry.date,\r\n      startTime: entry.startTime\r\n    })\r\n  })\r\n\r\n  return(\r\n    <View style={{width: '100%',  alignItems: 'center', justifyContent: 'center'}}>\r\n      <View style={{width: '100%',  alignItems: 'center', justifyContent: 'center'}}>\r\n        { temporal=='temporal'\r\n          ? <MoodLineTemporal\r\n            data={data} interpolation={interpolation}\r\n            date={date} period={period} mode={mode} secMode={secMode}\r\n            thirdMode={thirdMode} setThirdMode={setThirdMode}\r\n            />\r\n          : <MoodLine data={data} interpolation={interpolation} date={date} period={period} /> \r\n        }\r\n      </View>\r\n      <ModeControlRow\r\n      containerStyle={{height: 40}}\r\n      var1={interpolation}\r\n      setVar1={setInterpolation}\r\n      var1Options={interpolations}\r\n      var2={temporal}\r\n      setVar2={setTemporal}\r\n      var2Options={['temporal', 'atemporal']}\r\n      />\r\n    </View>\r\n  )\r\n}\r\n\r\nfunction MoodLine({data, date, period, interpolation}) {\r\n  data = data.filter(entry => entry.startTime)\r\n  data = data.map((entry, index) => ({ ...entry, x:index+1 }))\r\n  data = appendTimeData(data, date, period)\r\n  const by = 'time_d'\r\n  data = sortData(data, by)\r\n  return(\r\n    <Victory.VictoryChart \r\n    width={relativeToScreen(330)}\r\n    height={relativeToScreen(150)}\r\n    padding={{left: relativeToScreen(40), right: relativeToScreen(20), top: relativeToScreen(0), bottom: relativeToScreen(0)}}\r\n    domain={{x: [ 0.6, data.length + 0.4 ], y: [0.5, 5.5]}}\r\n    animate={{duration: 2000, onLoad: {duration: 1000}}}\r\n    >\r\n      <Victory.VictoryAxis\r\n      dependentAxis\r\n      domain={[0.5, 5.5]}\r\n      tickFormat={ tick => parseInt(tick) }\r\n      style={{\r\n        axis: {stroke: \"#fff0\"},\r\n        grid: {stroke: styles.h1.color + '7'},\r\n        tickLabels: {fontSize: relativeToScreen(17), padding: relativeToScreen(15), fill: styles.h1.color},\r\n      }}\r\n      />\r\n      { interpolation == 'scatter' ? null : (\r\n        <Victory.VictoryLine\r\n        data={data}\r\n        x='x' y='y'\r\n        interpolation={interpolation}\r\n        style={{\r\n          data: {\r\n            stroke: styles.h1.color,\r\n            strokeWidth: 3,\r\n          },\r\n        }}\r\n        />\r\n      )}\r\n      <Victory.VictoryScatter\r\n      data={data}\r\n      size={['month', 'year'].includes(period) ? 4.5 : 5.7}\r\n      style={{ data: { fill: ({datum}) => moodColorsHEX[datum.y-1] }}}\r\n      />\r\n    </Victory.VictoryChart>\r\n  )\r\n}\r\n\r\nfunction MoodPieCard({entries, period}) {\r\n  var moodCount = { 1: 0, 2: 0, 3: 0, 4: 0, 5: 0 }\r\n  entries.forEach((entry) => {\r\n    moodCount[moodMap[entry.mood]] += 1\r\n  })\r\n  var moodPieData = []\r\n  moods.forEach(mood => {\r\n    if (moodCount[mood]) {\r\n      moodPieData.push({ x: mood, y: moodCount[mood] })\r\n    }\r\n  })\r\n  return(\r\n    <View style={[styles.moodPieCard, {justifyContent: entries[0] ? 'flex-start' : 'center'}]}>\r\n        { entries[0]\r\n          ? (\r\n            <>\r\n              <View style={styles.moodPieCardSection}>\r\n                <MoodPie data={moodPieData} />\r\n              </View>\r\n              <View style={styles.moodPieCardSection}>\r\n                <MoodPieStats data={moodPieData} nEntries={entries.length} />\r\n              </View>\r\n            </>\r\n          )\r\n          : <Text style={[styles.h3, {width: '60%', textAlign: 'center', alignSelf: 'center'}]}>{ `Você não possui entradas ${period=='week' ? 'nessa' : 'nesse'} ${periodMap[period].toLowerCase()}.` }</Text>\r\n        }\r\n    </View>\r\n  )\r\n}\r\n\r\nfunction MoodPie({data}) {\r\n  var colorScale = []\r\n  data.forEach(row => {colorScale.push(moodColorsHEX[row.x-1])})\r\n  return(\r\n    <Victory.VictoryPie\r\n    data={data}\r\n    x='x' y='y'\r\n    width={relativeToScreen(180)}\r\n    height={relativeToScreen(130)}\r\n    padding={{left: 0, right: 0, top: 0, bottom: 0}}\r\n    innerRadius={relativeToScreen(32)}\r\n    padAngle={4}\r\n    cornerRadius={4}\r\n    colorScale={colorScale}\r\n    labels={[]}\r\n    animate={{duration: 2000, onLoad: {duration: 1000}}}\r\n    />\r\n  )\r\n}\r\n\r\nfunction MoodPieStats({data, nEntries}) {\r\n  const moodCounts = [5,4,3,2,1].filter(mood => data.filter(countObj => countObj.x==mood)[0])\r\n  return(\r\n    <View style={[styles.moodPieStatsView, {height: relativeToScreen( 30 * moodCounts.length )}]}>\r\n      { [5,4,3,2,1].map(mood => <MoodStat key={mood} mood={mood} data={data} nEntries={nEntries}/>) }\r\n    </View>\r\n  )\r\n}\r\n\r\nfunction MoodStat({mood, data, nEntries}) {\r\n  const moodCountObj = data.filter(countObj => countObj.x==mood)[0]\r\n  const moodCount = moodCountObj ? moodCountObj.y : 0\r\n  const moodProp = Math.round(100*moodCount/nEntries)\r\n  return moodCount==0 ? null : (\r\n    <View style={styles.moodStatRow}>\r\n      <View style={[styles.statsRowItem, ]}>\r\n        <View style={[ styles.moodCircleBadge, {backgroundColor: moodColorsObj[mood]}]}>\r\n          <Text style={[styles.h4, {color: '#000'}]}>{mood}</Text>\r\n        </View>\r\n      </View>\r\n      <View style={[styles.statsRowItem, {width: null}]}>\r\n        <Text style={styles.h4}>{`${moodCount}/${nEntries}` }</Text>\r\n      </View>\r\n      <View style={[styles.statsRowItem, {width: '13%'}]}>\r\n        <Icon name='arrow-forward-outline' width={relativeToScreen(15)} height={relativeToScreen(15)} fill={styles.h1.color} />\r\n      </View>\r\n      <View style={[styles.statsRowItem,  {width: '31%'}]}>\r\n        <Text style={styles.h4}>{ (moodProp ? moodProp : 0) + '%' }</Text>\r\n      </View>\r\n    </View>\r\n  )\r\n}\r\n\r\nexport default class Charts extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n    this.setFontColor = this.setFontColor.bind(this);\r\n    this.ChartsScreen = this.ChartsScreen.bind(this);\r\n  }\r\n\r\n  ChartsScreen() {\r\n    const settings = this.props.appState.user.settings\r\n    const backgroundImage = settings.backgroundImage\r\n    const imgURI =  settings.displayBackgroundImage\r\n    ? ( backgroundImage\r\n      ? ( settings.enableHighResolution\r\n        ? backgroundImage.urls.raw\r\n        : backgroundImage.urls.regular\r\n      ) : null\r\n    ) : null\r\n    const backgroundColor = settings.backgroundColor\r\n    var entries = this.props.appState.user.entries\r\n    return(\r\n      <ChartPanel\r\n      imgURI={imgURI}\r\n      backgroundColor={backgroundColor}\r\n      entries={entries}\r\n      />\r\n    )  \r\n  }\r\n\r\n  setFontColor(color) {\r\n    styles['altTheme'] = {color: color=='#fff' ? '#000' : '#fff'}\r\n    for (let h of ['h1', 'h2', 'h3', 'h4']) {\r\n      styles[h] = {\r\n        ...styles[h],\r\n        ['color']: color\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    console.log('Rendering \"Charts\" screen component...')\r\n    this.setFontColor(this.props.appState.user.settings.fontColorDark ? '#000' : '#fff')\r\n    return <this.ChartsScreen />\r\n  }\r\n}","import React, { Component, useContext } from 'react';\nimport { ImageBackground, View, Text, ActivityIndicator, Platform } from 'react-native';\nimport { Icon } from 'react-native-eva-icons'\n// import AsyncStorage from '@react-native-async-storage/async-storage';\n// import { LinearGradient } from 'expo-linear-gradient';\n\nimport { Today } from './shared/dates'\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\n//import { createDrawerNavigator } from '@react-navigation/drawer';\n\nimport EntrancesScreen from './components/EntrancesComponent';\nimport PostEntranceScreen from './components/PostEntryComponent';\nimport LoginScreen from './components/LoginComponent'\nimport SettingsScreen from './components/SettingsScreen';\nimport { WallpapersComponent } from './components/WallpapersComponent';\nimport { WallpaperZoom } from './components/WallpaperZoomComponent';\nimport Charts from './components/Charts'\nimport UserContext from './shared/UserContext';\n\nimport * as Linking from 'expo-linking';\nimport { relativeToScreen } from './styles/loginStyles';\nconst linking = {\n  prefixes: [Linking.createURL('/'), 'https://luisresende13.github.io/Mood-Tracker'],\n  config: {\n    screens: {\n      Home: {\n        screens: {\n          Entrances: 'Entrances',\n          Settings: 'Settings',\n        },\n      },\n      PostEntrance: 'PostEntrance',\n      WallpaperTopics: 'WallpaperTopics',\n      Wallpapers: 'Wallpapers',\n      WallpaperZoom: 'WallpaperZoom'\n    }\n  }\n};\nconst loginLinking = {\n  prefixes: [Linking.createURL('/'), 'https://luisresende13.github.io/Mood-Tracker'],\n  config: {\n    screens: {\n      Login: 'Login',\n    }\n  }\n};\nconsole.log('CREATE URL: ' + Linking.createURL('/'))\n\n// cors-midpoint uri (needed to avoid cors' allow-cross-origin error when fetching in web platforms)\nconst appServerURI = 'https://mood-tracker-server.herokuapp.com/'\n\nconst LoadingScreen = () => (\n  <ImageBackground source={require('./assets/wallpaper.png')} style={{flex: 1, alignItems: 'center', justifyContent: 'center'}}>\n    <ActivityIndicator size='large' color='#fff' />\n  </ImageBackground>\n)\n\nconst SettingsScreenProvider = (props) => {\n  const appState = useContext(UserContext)\n  return(\n    <SettingsScreen  appState={appState} {...props} />\n  )\n}\n\nconst EntrancesScreenProvider = (props) => {\n  const appState = useContext(UserContext)\n  return(\n    <EntrancesScreen  appState={appState} {...props} />\n  )\n}\n\nconst PostEntranceScreenProvider = (props) => {\n  const appState = useContext(UserContext)\n  return(\n    <PostEntranceScreen  appState={appState} {...props} />\n  )\n}\n\nconst WallpapersScreenProvider = (props) => {\n  const appState = useContext(UserContext)\n  return(\n    <WallpapersComponent  appState={appState} {...props} />\n  )\n}\n\nconst WallpaperZoomScreenProvider = (props) => {\n  const appState = useContext(UserContext)\n  return(\n    <WallpaperZoom appState={appState} {...props} />\n  )\n}\n\nconst ChartsScreenProvider = (props) => {\n  const appState = useContext(UserContext)\n  return(\n    <Charts appState={appState} {...props} />\n  )\n}\n\nconst tabBarLabelsMap = {\n  'Entrances': 'Entradas',\n  'Settings': 'Configurações',\n  'Charts': 'Painel'\n}\nconst tabBarIconsMap = {\n  'Entrances': 'inbox',\n  'Settings': 'settings-2',\n  'Charts': 'bar-chart'\n}\n\nfunction tabBarIcon(iconName) {\n  const iconFunc = ({ focused, color, size }) => {\n    let newIconName = focused\n    ? iconName\n    : iconName + '-outline';\n    return <Icon name={newIconName} width={size} height={size} fill={color}\n    style={{  borderBottomWidth: focused ? 1.5 : 0, borderColor: color}}\n    />\n  }\n  return iconFunc\n}\n\nconst tabNavigatorOptionsProvider = (settings) => {\n  const fontColor = settings.fontColorDark ? '#000' : '#fff'\n  return ({ route }) => {\n    return(\n      {\n        headerShown: false,\n        tabBarHideOnKeyboard: true,\n        tabBarLabel: tabBarLabelsMap[route.name],\n        tabBarLabelPosition: 'below-icon',\n        tabBarLabelStyle: {bottom: relativeToScreen(5), paddingBottom: Platform.OS=='web' ? relativeToScreen(5) : 0},\n        tabBarShowLabel: true,\n        tabBarIcon: tabBarIcon(tabBarIconsMap[route.name]),\n        // tabBarIconStyle: {},\n        // tabBarButton: tabBarButton,\n        tabBarActiveTintColor: fontColor,\n        tabBarInactiveTintColor: fontColor + '8',\n        tabBarActiveBackgroundColor: '#0006',\n        tabBarInactiveBackgroundColor: '#0000',\n        tabBarItemStyle: {borderRadius: 10},\n        tabBarStyle: {\n          position: 'absolute',\n          elevation: 0,\n          height: relativeToScreen(55),\n          backgroundColor: '#0000',\n          borderTopWidth: 0\n        },\n      }\n    )\n  }\n}\n\nconst Stack = createNativeStackNavigator();\nconst Tab = createBottomTabNavigator();\n\nconst HomeTab = (props) => {\n  const settings = useContext(UserContext).user.settings\n  return(\n    <Tab.Navigator\n    initialRouteName='Entrances'\n    screenOptions={tabNavigatorOptionsProvider(settings)}\n    >\n      <Tab.Screen\n      name=\"Entrances\"\n      component={EntrancesScreenProvider}\n      initialParams={{\n        selectedDate: Today(),\n        selectedEntryId: null,\n      }}\n      />\n      <Tab.Screen\n      name=\"Charts\"\n      component={ChartsScreenProvider}\n      />\n      <Tab.Screen\n      name=\"Settings\"\n      component={SettingsScreenProvider}\n      initialParams={{\n        selectedColor: settings.selectedColor,\n      }}\n      options={{\n        // tabBarIcon: tabBarIcon('settings-2')\n      }}\n      />\n    </Tab.Navigator>    \n  )\n}\n\nconst HomeStack = () => {\n  console.log('Returning \"HomeScreen\" component...')\n  const appState = useContext(UserContext)\n  return(\n    <Stack.Navigator \n    initialRouteName='Home'\n    screenOptions={{\n      headerShown: false,\n    }}\n    >\n      <Stack.Screen\n      name=\"Home\"\n      component={HomeTab}\n      initialParams={{\n        settings: appState.user.settings\n      }}\n      />\n      <Stack.Screen\n      name=\"PostEntrance\"\n      component={PostEntranceScreenProvider}\n      initialParams={{\n        currentEntry: {type: 'new', date: Today(), entry: null},\n      }}\n      />\n      <Stack.Screen\n      name=\"WallpaperTopics\"\n      component={WallpapersScreenProvider}\n      initialParams={{\n        headerText: 'Tópicos',\n      }}\n      />\n      <Stack.Screen\n      name=\"Wallpapers\"\n      component={WallpapersScreenProvider}\n      initialParams={{\n        headerText: 'Clique em uma imagem para ampliar',\n      }}\n      />\n      <Stack.Screen\n      name=\"WallpaperZoom\"\n      component={WallpaperZoomScreenProvider}\n      />\n    </Stack.Navigator>\n  )  \n}\n\nexport default class App extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      user: null,\n      isUserAuth: false,\n      isUserDataSyncing: false,\n    };\n\n    this.logout = this.logout.bind(this);\n    this.getAppState = this.getAppState.bind(this);\n    this.syncUserData = this.syncUserData.bind(this);\n    this.Login = this.Login.bind(this);\n    this.LoginContainer = this.LoginContainer.bind(this);\n    this.ContextProvider = this.ContextProvider.bind(this);\n  }\n\n  componentDidMount() {\n    console.log('App component did mount...')\n  }\n\n  logout() {\n    console.log('User logged out. Navigating to \"LoginScreen\"...')\n    this.setState({isUserAuth: false, user: null})\n  }\n\n  getAppState() {\n    return this.state\n  }\n\n  async syncUserData() {\n    console.log('SYNC USER DATA STATUS: Started...')\n    this.setState({ isUserDataSyncing: true });\n    try {\n        var UserResult = await fetch( appServerURI + 'Users/' + this.state.user.username, { method: 'GET' });\n        const userStatus =  'Status: ' + UserResult.status + ', ' + UserResult.statusText\n        if (UserResult.ok) {\n            console.log('fetch GET request for user DATA successful.')\n            console.log(userStatus)\n            console.log('SYNC USER DATA STATUS: Successful.')\n            const user = await UserResult.json();\n            this.setState({user: user})\n\n        } else {\n            console.log( new Error('\"fetch\" GET request for user DATA failed. Throwing error...') )\n            throw new Error(userStatus)\n        }\n    } catch (error) {\n            console.log('SYNC USER DATA STATUS: Error captured. Printing error...')\n            console.log(error);\n            alert('Não foi possível sincronizar as entradas. Por favor, aguarde..')\n\n    } finally {\n        this.setState({ isUserDataSyncing: false });\n        console.log('SYNC USER DATA STATUS: Finished.')\n    }    \n  }\n\n  Login() {\n    return(\n      <LoginScreen\n      user={this.state.user}\n      getAppState={this.getAppState}\n      setAppState={this.setState.bind(this)}\n      />\n    )\n  }\n\n  LoginContainer() {\n    return(\n      <NavigationContainer\n      linking={loginLinking}\n      fallback={<LoadingScreen />}\n      >\n        <Stack.Navigator \n        initialRouteName='Login'\n        screenOptions={{\n          headerShown: false,\n        }}\n        >\n          <Stack.Screen\n          name=\"Login\"\n          component={this.Login}\n          />\n        </Stack.Navigator>\n      </NavigationContainer>    \n    )\n  }\n\n  ContextProvider() {\n    return(\n      <UserContext.Provider\n      value={{\n        ...this.state,\n        logout: this.logout,\n        setAppState: this.setState.bind(this),\n        syncUserData: this.syncUserData\n      }}>\n          <NavigationContainer\n          linking={linking}\n          fallback={<LoadingScreen />}\n          >\n            <HomeStack />\n          </NavigationContainer>    \n      </UserContext.Provider>\n    )\n  }\n  render() {\n    console.log('Rendering \"App\" component...')\n    return !this.state.isUserAuth ? (\n      <this.LoginContainer />\n    ) : (\n      <this.ContextProvider />\n    );  \n  }\n}","// Emotion configs\r\nconst emotionGroupsNames = [ 'Bem & Calmo', 'Bem & Energizado', 'Mal & Calmo', 'Mal & Energizado' ]\r\nconst goodEnergizedEmotions = ['Animação', 'Concentração', 'Desinibição', 'Motivação', 'Euforia']\r\nconst goodCalmEmotions = ['Alívio', 'Calma', 'Conforto', 'Despreocupação', 'Inspiração', 'Orgulho', 'Paz', 'Relaxamento', 'Satisfação', 'Segurança', 'Criatividade']\r\nconst badEnergizedEmotions = ['Inquietação', 'Ansiedade', 'Desespero', 'Frustração', 'Insatisfação', 'Irritação', 'Medo', 'Vergonha', 'Preocupação', 'Impaciência', 'Sobrecarregado(a)', 'Tensão']\r\nconst badCalmEmotions = ['Depressão', 'Timidez', 'Cansaço', 'Tristeza','Confusão', 'Desânimo', 'Insegurança', 'Solidão', 'Tédio']\r\n// const badEnergizedEmotions = ['Agitação', 'Ansiedade', 'Tristeza', 'Decepção', 'Depressão', 'Desespero', 'Frustração', 'Insatisfação', 'Irritação', 'Medo', 'Paranoia', 'Preocupação', 'Impaciencia', 'Raiva', 'Revolta', 'Sobrecarregado(a)', 'Tensão', 'Nojo']\r\n\r\nconst emotionGroups = [ goodCalmEmotions.sort(), goodEnergizedEmotions.sort(), badCalmEmotions.sort(), badEnergizedEmotions.sort() ]\r\nconst basicEmotions = [ ...emotionGroups[0], ...emotionGroups[1], ...emotionGroups[2], ...emotionGroups[3] ]\r\n\r\nconst emotionTypes = ['Positiva', 'Negativa']\r\nconst emotionEnergy = ['Calmo(a)', 'Energizado(a)']\r\n\r\nvar defaultEmotions = []\r\nvar type, energy\r\n\r\nfor (let emotion of basicEmotions) {\r\n    type = emotionGroups[0].includes(emotion) || emotionGroups[1].includes(emotion) ? emotionTypes[0] : emotionTypes[1]\r\n    energy = emotionGroups[0].includes(emotion) || emotionGroups[2].includes(emotion) ? emotionEnergy[0] : emotionEnergy[1]\r\n    defaultEmotions.push({name: emotion, type: type, energy: energy})\r\n}\r\n\r\n// console.log(defaultEmotions);\r\n\r\nmodule.exports = defaultEmotions;"],"sourceRoot":""}