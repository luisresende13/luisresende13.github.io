{"version":3,"sources":["assets/wallpaper.jpg","styles/entrancesStyles.js","components/subcomponents/userEntryCards.js","shared/dateRange.js","components/EntrancesComponent.js","styles/postEntryStyles.js","components/PostEntryComponent.js","styles/loginStyles.js","components/LoginComponent.js","App.js","index.js"],"names":["module","exports","styles","mainView","flex","marginTop","StatusBar","currentHeight","postButton","position","height","width","borderRadius","bottom","alignSelf","backgroundColor","justifyContent","postButtonLabel","scrollView","section","paddingVertical","borderBottomWidth","borderColor","sectionTitle","fontSize","color","fontWeight","card","paddingHorizontal","cardRow","flexDirection","alignItems","moodBadge","fontFamily","textAlign","emotionBadge","marginRight","textBadge","lineHeight","text","spaceBetween","icon","entryIcon","paddingRight","moodColors","MoodCardHeader","entry","View","style","Text","mood","star","name","fill","paddingLeft","paddingBottom","startTime","Address","address","Emotions","emotions","length","flexWrap","map","emotion","index","Pressable","Jornal","jornal","EntryCard","_id","UserEntryCards","props","state","date","userEntries","entriesSyncing","newPost","syncUserEntries","bind","console","log","this","setInterval","updateIfNewPost","forgetNewPost","a","async","setState","fetch","corsURI","method","UsersResult","usersStatus","status","statusText","ok","json","users","user","filter","username","userInfo","reverse","entriesSynced","Error","Component","dateRange","monthDict","monthSigs","Today","now","Date","toString","split","join","getNextDate","next","nextDate","indexOf","formatDate","ymd","i","EntrancesScreen","time","selectedDate","entriesLoading","onNextButtonPress","setSelectedDate","selDate","yesterday","navigation","setParams","isToday","ImageBackground","source","require","ScrollView","onPress","selectedDateTitle","route","params","navigate","entrances","borderWidth","content","flexGrow","borderTopWidth","contentRow","padding","entryTitle","postButtonView","moodButtonView","moodButton","marginColor","marginWidth","moodButtonBorder","left","jornalText","minHeight","saveButton","borderTopLeftRadius","borderTopRightRadius","datetime","slice","goodEnergizedEmotions","goodCalmEmotions","badEnergizedEmotions","badCalmEmotions","basicEmotions","emotionGroups","emotionGroupsNames","isSelectedEmotions","getToday","monthSig","FormattedTime","newTime","h","parseInt","m","PostEntranceScreen","moodButtons","colors","colorsSelected","moods","emotionButtons","selectedMood","jornalEntry","selectedEntry","isLoading","onSaveButtonPress","EmotionButtons","MoodButtons","postEntryHeader","onEmotionButtonPress","onMoodButtonPress","inputSection","setSelectedEntry","InputCard","JornalInput","postNewEntryAsync","styles2","goBack","item","selectMood","moodButtonViewStyle","selColor","title","textAlignVertical","selectEmotion","multiline","placeholder","onChangeText","value","setSelected","inputStyle","inputs","sectionName","newEntry","endTime","alert","info","postUserEntryOpts","headers","body","JSON","stringify","postUserEntryResult","login","titleView","titleIcon","paddingTop","cardHeader","cardTitle","top","cardSection","loadingIcon","inputField","button","buttonLabel","msgBox","msg","LoginScreen","password","email","loginMsg","isUserAuth","isDataLoading","submitButton","setLoginMsg","onSignIn","onSignUp","animation","setTimeout","textField","setField","sign","signIn","encPass","TextInput","autoComplete","importantForAutofill","secureTextEntry","UsersStatus","Users","authUser","reqStatus","User","postUserResult","postUserOpts","entries","postUserStatus","successMsg","errMsg","Tab","createBottomTabNavigator","Stack","createNativeStackNavigator","HomeScreen","Navigator","initialRouteName","screenOptions","headerShown","Screen","component","options","initialParams","SettingsScreen","mainScreenOptions","tabBarActiveTintColor","tabBarInactiveTintColor","tabBarHideOnKeyboard","tabBarIcon","iconName","focused","size","App","NavigationContainer","registerRootComponent"],"mappings":"yEAAAA,EAAOC,QAAU,IAA0B,uC,wSC6H5BC,EAhGA,CACXC,SAAU,CACNC,KAAM,EACNC,UAAWC,IAAUC,eAEzBC,WAAY,CACRC,SAAU,WACVC,OAAQ,GACRC,MAAO,GACPC,aAAc,GACdC,OAAQ,KACRC,UAAW,SACXC,gBAAiB,gBACjBC,eAAgB,UAEpBC,gBAAiB,CACbH,UAAW,UAEfI,WAAY,CAERP,MAAO,OACPG,UAAW,UAEfK,QAAS,CACLR,MAAO,IACPS,gBAAiB,MACjBC,kBAAmB,EACnBC,YAAa,wBACbR,UAAW,UAGfS,aAAc,CACVH,gBAAiB,IACjBI,SAAU,GACVC,MAAO,QACPC,WAAY,OAEhBC,KAAM,CACFtB,UAAW,KACXe,gBAAiB,EACjBQ,kBAAmB,GACnBhB,aAAc,GACdG,gBAAiB,mBAErBc,QAAS,CACLC,cAAe,MACfV,gBAAiB,EACjBW,WAAY,UAEhBC,UAAW,CACPC,WAAY,aACZlB,gBAAiB,QACjBH,aAAc,GACdQ,gBAAiB,EACjBT,MAAO,IACPa,SAAU,GACVU,UAAW,UAEfC,aAAc,CACVF,WAAY,aACZlB,gBAAiB,YACjBH,aAAc,GACdQ,gBAAiB,EACjBQ,kBAAmB,KACnBQ,YAAa,EACbZ,SAAU,GACVU,UAAW,UAEfG,UAAW,CACPJ,WAAY,aACZlB,gBAAiB,YACjBH,aAAc,GACdQ,gBAAiB,EACjBQ,kBAAmB,GACnBjB,MAAO,OACPa,SAAU,GACVc,WAAY,GACZJ,UAAW,QAEfK,KAAM,CACFN,WAAY,aACZT,SAAU,GACVC,MAAO,SAEXe,aAAc,CACVxB,eAAgB,iBAEpByB,KAAM,CACFb,kBAAmB,IAEvBc,UAAW,CACPC,aAAc,K,ubC/GtB,IAIMC,EAAa,CAAC,cAAY,MAAO,IAAO,OAAQ,QAAW,YAAa,IAAO,SAAU,WAAS,SAMxG,SAASC,EAAT,GAAkC,IAATC,EAAQ,EAARA,MACrB,OACI,eAACC,EAAA,EAAD,CAAMC,MAAO,CAAC9C,EAAO2B,QAAS3B,EAAOsC,cAArC,UACI,eAACO,EAAA,EAAD,CAAMC,MAAO,CAAClB,cAAe,MAAOC,WAAY,UAAhD,UACI,cAACkB,EAAA,EAAD,CAAMD,MAAO,CAAC9C,EAAO8B,UAAW,CAACjB,gBAAiB6B,EAAWE,EAAMI,QAAnE,SAA6EJ,EAAMI,OACjFJ,EAAMK,KAAO,cAAC,OAAD,CAAMC,KAAK,OAAOC,KAAK,OAAO1C,MAAO,GAAID,OAAQ,GAAIsC,MAAO,CAACM,YAAa,GAAIC,cAAe,KAAe,gCAE/H,eAACR,EAAA,EAAD,CAAMC,MAAO,CAAC9C,EAAO2B,SAArB,UACI,cAAC,OAAD,CAAMuB,KAAK,OAAO1C,OAAQ,GAAIC,MAAO,GAAI0C,KAAK,yBAAyBL,MAAO9C,EAAOuC,OACrF,cAACQ,EAAA,EAAD,CAAMD,MAAO9C,EAAOqC,KAApB,SAA2BO,EAAMU,kBAOjD,SAASC,EAAT,GAA4B,IAATX,EAAQ,EAARA,MACf,OAAIA,EAAMY,QAEF,eAACX,EAAA,EAAD,CAAMC,MAAO9C,EAAO2B,QAApB,UACI,cAAC,OAAD,CAAMuB,KAAK,MAAM1C,OAAQ,GAAIC,MAAO,GAAI0C,KAAK,yBAAyBL,MAAO9C,EAAOuC,OACpF,cAACQ,EAAA,EAAD,CAAMD,MAAO9C,EAAOqC,KAApB,SAA2BO,EAAMY,aAIlC,6BAIf,SAASC,EAAT,GAA6B,IAATb,EAAQ,EAARA,MAChB,OAAIA,EAAMc,SAASC,OAAO,EAElB,cAACd,EAAA,EAAD,CAAMC,MAAO,CAAC9C,EAAO2B,QAAS,CAACiC,SAAU,OAAQ9C,eAAgB,eAAjE,SACM8B,EAAMc,SAASG,KAAI,SAACC,EAASC,GAC3B,OACI,cAACC,EAAA,EAAD,CAAWlB,MAAO,CAAC5B,gBAAiB,EAAGQ,kBAAmB,GAA1D,SACI,cAACqB,EAAA,EAAD,CAAkBD,MAAO,CAAC9C,EAAOiC,cAAjC,SAAiD6B,GAAtCC,UAQ3B,6BAKZ,SAASE,EAAT,GAA2B,IAATrB,EAAQ,EAARA,MACd,OAAIA,EAAMsB,OAEF,cAACrB,EAAA,EAAD,CAAMC,MAAO9C,EAAO2B,QAApB,SACI,cAACoB,EAAA,EAAD,CAAMD,MAAO9C,EAAOmC,UAApB,SAAgCS,EAAMsB,WAIvC,6BAIf,SAASC,EAAT,GAA+B,IAAVvB,EAAS,EAATA,MACjB,OACI,eAACC,EAAA,EAAD,CAAsBC,MAAO9C,EAAOyB,KAApC,UACI,cAACkB,EAAD,CAAgBC,MAAOA,IACvB,cAACa,EAAD,CAAUb,MAAOA,IACjB,cAACW,EAAD,CAASX,MAAOA,IAChB,cAACqB,EAAD,CAAQrB,MAAOA,MAJRA,EAAMwB,K,IASJC,E,gCAEjB,WAAYC,GAAQ,IAAD,sBACf,cAAMA,IACDC,MAAQ,CACTC,KAAM,EAAKF,MAAME,KACjBC,YAAa,GACbC,gBAAgB,EAChBC,QAAS,EAAKL,MAAMK,SAExB,EAAKC,gBAAkB,EAAKA,gBAAgBC,KAArB,QARR,E,6CAWnB,WAAqB,IAAD,OAChBC,QAAQC,IAAI,8CACZC,KAAKJ,kBACLK,aAAa,WAAQH,QAAQC,IAAI,mCAAoC,EAAKH,oBAAqB,KAC/FK,aAAa,WAAQ,EAAKC,oBAAqB,O,6BAInD,WACQF,KAAKV,MAAMK,UACXG,QAAQC,IAAI,wDACZC,KAAKV,MAAMa,gBACXH,KAAKJ,qB,6BAIb,uCAAAQ,EAAAC,OAAA,uDAEIP,QAAQC,IAAI,mCACZC,KAAKM,SAAS,CAAEZ,gBAAgB,IAHpC,oBAAAU,EAAA,MAOgCG,MAAOC,8FAAkC,CAAEC,OAAQ,SAPnF,UAOYC,EAPZ,OAQcC,EAAe,WAAaD,EAAYE,OAAS,KAAOF,EAAYG,YAEtEH,EAAYI,GAVxB,oCAAAV,EAAA,MAWgCM,EAAYK,QAX5C,QAWkBC,EAXlB,OAYkBC,EAAOD,EAAME,QAAO,SAACD,GAAD,OAAUA,EAAKE,WAAa,EAAK7B,MAAM8B,SAASD,YAAU,GACpFrB,QAAQC,IAAI,kDACZD,QAAQC,IAAIY,GACZX,KAAKM,SAAS,CAACb,YAAawB,EAAI,QAAYI,UAAWC,eAAe,IACtExB,QAAQC,IAAI,oCAhBxB,8BAmBYD,QAAQC,IAAK,IAAIwB,MAAM,mEACjB,IAAIA,MAAMZ,GApB5B,0DAwBYb,QAAQC,IAAI,0DACZD,QAAQC,IAAR,MAzBZ,yBA4BQC,KAAKM,SAAS,CAAEZ,gBAAgB,IAChCI,QAAQC,IAAI,kCA7BpB,sF,oBAiCA,WAAU,IAAD,OAEL,OADAD,QAAQC,IAAI,8CACLC,KAAKT,MAAME,YAAYyB,QAAQ,SAACtD,GAAD,OAAWA,EAAM4B,OAAS,EAAKF,MAAME,QAAOX,KAAI,SAAAjB,GAAK,OAAI,cAACuB,EAAD,CAAWvB,MAAOA,W,GAhE7E4D,aCyc7BC,EApiBG,CACd,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,c,+aCrhBJ,IAGMC,EAAY,CAAC,IAAO,KAAM,IAAO,KAAM,IAAO,KAAM,IAAO,KAAM,IAAO,KAAM,IAAO,KAAM,IAAO,KAAM,IAAO,KAAM,IAAO,KAAM,IAAO,KAAM,IAAO,KAAM,IAAO,MACnKC,EAAY,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAGhG,SAASC,IACL,IAAMC,EAAMC,OAAOC,WAAWC,MAAM,KAEpC,MADc,CAAEH,EAAI,GAAIH,EAAUG,EAAI,IAAKA,EAAI,IAAKI,KAAK,KAG7D,SAASC,EAAY1C,GAAoB,IAAd2C,EAAa,uDAAR,OACtBC,EAAWX,EAAUA,EAAUY,QAAQ7C,IAAe,YAAN2C,GAAoB,EAAI,IAC9E,OAAOC,EASX,SAASE,EAAW9C,GAGhB,IADA,IAAI+C,EAAM/C,EAAKwC,MAAM,KACZQ,EAAE,EAAGA,EAAE,GAAIA,IAChB,GAAId,EAAWC,EAAUa,KAAQD,EAAI,GACjC,OAAOA,EAAI,GAAK,KAAOZ,EAAUa,G,IAOxBC,E,gCAEjB,WAAYnD,GAAQ,IAAD,sBACf,cAAMA,IACDC,MAAQ,CACTE,YAAa,GACbD,KAAMoC,IACNc,KAxBIZ,OAAOC,WAAWC,MAAM,KACnB,GAwBTW,a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","file":"static/js/app.ca381a4d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/wallpaper.9987c866.jpg\";","import { StatusBar } from 'expo-status-bar';\r\n\r\n//import StatusBar from 'react-native'\r\n// import { Platform } from 'react-native';\r\n\r\n// import { Dimensions } from 'react-native';\r\n// var windowWidth = Dimensions.get('window').width;\r\n// var windowHeight = Dimensions.get('window').height;\r\n\r\n// import DeviceInfo from 'react-native-device-info';\r\n// import AsyncStorage from '@react-native-community/async-storage';\r\n\r\n// // how can i do some code that will gives me if its \"Handset\"=> Smartphone , \r\n// //if its \"unknown\"=> Laptop/Computer \r\n// //and it will be saved as well in my async-storage.\r\n\r\n// //this some example that i wanna get it works well coz now its not work good\r\n\r\n// const funct1=  (type) => {\r\n// let type = DeviceInfo.getDeviceType();\r\n\r\n// if type==='Handset'{\r\n//   AsyncStorage.setItem('PLATFORM-TYPE', 'Smartphone');\r\n// }\r\n// if type==='unknown'{\r\n//   AsyncStorage.setItem('PLATFORM-TYPE', 'Laptop/Computer');\r\n// }\r\n// };\r\n\r\nconst styles = {\r\n    mainView: {\r\n        flex: 1,                 \r\n        marginTop: StatusBar.currentHeight,\r\n    },\r\n    postButton: {\r\n        position: 'absolute',\r\n        height: 60,\r\n        width: 60,\r\n        borderRadius: 30,\r\n        bottom: '2%',\r\n        alignSelf: 'center',\r\n        backgroundColor: 'rgba(0,0,0,1)',\r\n        justifyContent: 'center',  \r\n    },\r\n    postButtonLabel: {\r\n        alignSelf: 'center',\r\n    },\r\n    scrollView: {\r\n        // paddingHorizontal: Platform.OS != 'web' ? '5%' : '5%',\r\n        width: '100%',\r\n        alignSelf: 'center',\r\n    },\r\n    section: {\r\n        width: 350,\r\n        paddingVertical: '16%',\r\n        borderBottomWidth: 1,\r\n        borderColor: 'rgba(155,155,155,0.3)',\r\n        alignSelf: 'center',\r\n\r\n    },\r\n    sectionTitle: {\r\n        paddingVertical: 7.5,\r\n        fontSize: 18,\r\n        color: 'white',\r\n        fontWeight: '400',\r\n    },\r\n    card: {\r\n        marginTop: '5%',\r\n        paddingVertical: 5,\r\n        paddingHorizontal: 10,\r\n        borderRadius: 20,\r\n        backgroundColor: 'rgba(0,0,0,0.2)',\r\n    },\r\n    cardRow: {\r\n        flexDirection: 'row',\r\n        paddingVertical: 5,\r\n        alignItems: 'center',\r\n    },\r\n    moodBadge: {\r\n        fontFamily: 'sans-serif',\r\n        backgroundColor: 'green',\r\n        borderRadius: 30,\r\n        paddingVertical: 6,\r\n        width: 130,\r\n        fontSize: 16,\r\n        textAlign: 'center',\r\n    },\r\n    emotionBadge: {\r\n        fontFamily: 'sans-serif',\r\n        backgroundColor: 'aliceblue',\r\n        borderRadius: 30,\r\n        paddingVertical: 7,\r\n        paddingHorizontal: 12.5,\r\n        marginRight: 6,\r\n        fontSize: 15,\r\n        textAlign: 'center',\r\n    },\r\n    textBadge: {\r\n        fontFamily: 'sans-serif',\r\n        backgroundColor: 'aliceblue',\r\n        borderRadius: 20,\r\n        paddingVertical: 4,\r\n        paddingHorizontal: 10,\r\n        width: '100%',\r\n        fontSize: 14,\r\n        lineHeight: 22,\r\n        textAlign: 'left',\r\n    },\r\n    text: {\r\n        fontFamily: 'sans-serif',\r\n        fontSize: 14,\r\n        color: 'white'\r\n    },\r\n    spaceBetween: {\r\n        justifyContent: 'space-between',\r\n    },\r\n    icon: {\r\n        paddingHorizontal: 12,\r\n        },\r\n    entryIcon: {\r\n        paddingRight: 30,\r\n        },\r\n    \r\n};\r\n\r\nexport default styles;","// Module import\r\nimport React, { Component } from 'react';\r\nimport { View, Text, Pressable} from 'react-native';\r\nimport { Icon } from 'react-native-eva-icons'\r\n\r\n// Local import\r\nimport styles from '../../styles/entrancesStyles'\r\n\r\n// cors-midpoint uri (needed to avoid cors' allow-cross-origin error when fetching)\r\nconst corsURI = 'https://morning-journey-78874.herokuapp.com/'\r\nconst appServerURI = 'https://mood-tracker-server.herokuapp.com/'\r\n\r\n// Defining mood colors schema\r\nconst moodColors = {'Horrível': 'red', 'Mal': 'blue', 'Regular': 'lightblue', 'Bem': 'orange', 'Ótimo': 'green'};\r\nconst monthDict = {'Jan': '01', 'Feb': '02', 'Mar': '03', 'Apr': '04', 'May': '05', 'Jun': '06', 'Jul': '07', 'Ago': '08', 'Sep': '09', 'Oct': '10', 'Nov': '11', 'Dec': '12'}\r\n\r\n\r\n// Defining pertinent functions\r\n\r\nfunction MoodCardHeader({entry}) {\r\n    return(\r\n        <View style={[styles.cardRow, styles.spaceBetween]}>\r\n            <View style={{flexDirection: 'row', alignItems: 'center'}}>\r\n                <Text style={[styles.moodBadge, {backgroundColor: moodColors[entry.mood]}]}>{entry.mood}</Text>\r\n                { entry.star ? <Icon name='star' fill='gold' width={27} height={27} style={{paddingLeft: 15, paddingBottom: 2}} ></Icon> : <></> }\r\n            </View>\r\n            <View style={[styles.cardRow]}>\r\n                <Icon name='edit' height={18} width={18} fill='rgba(255,255,255,0.75)' style={styles.icon} />\r\n                <Text style={styles.text}>{entry.startTime}</Text>\r\n            </View>\r\n        </View>\r\n\r\n    )\r\n}\r\n\r\nfunction Address ({entry}) {\r\n    if (entry.address) {\r\n        return(\r\n            <View style={styles.cardRow}>\r\n                <Icon name='pin' height={16} width={16} fill='rgba(255,255,255,0.75)' style={styles.icon} />\r\n                <Text style={styles.text}>{entry.address}</Text>\r\n            </View>        \r\n        )\r\n    } else {\r\n        return <></>\r\n    }\r\n}\r\n\r\nfunction Emotions ({entry}) {\r\n    if (entry.emotions.length>0) {\r\n        return (\r\n            <View style={[styles.cardRow, {flexWrap: 'wrap', justifyContent: 'flex-start'}]}>\r\n                { entry.emotions.map((emotion, index) => {\r\n                    return(\r\n                        <Pressable style={{paddingVertical: 5, paddingHorizontal: 2}}>\r\n                            <Text key={index} style={[styles.emotionBadge]}>{emotion}</Text>\r\n                        </Pressable>\r\n                    )\r\n                })}\r\n            </View>\r\n        )\r\n    } else {\r\n        return (\r\n            <></>\r\n        )\r\n    }\r\n}\r\n\r\nfunction Jornal ({entry}) {\r\n    if (entry.jornal) {\r\n        return(\r\n            <View style={styles.cardRow}>    \r\n                <Text style={styles.textBadge}>{entry.jornal}</Text>\r\n            </View>\r\n        )\r\n    } else {\r\n        return <></>\r\n    }\r\n}\r\n\r\nfunction EntryCard({ entry }) {\r\n    return (\r\n        <View key={entry._id} style={styles.card}>\r\n            <MoodCardHeader entry={entry} />\r\n            <Emotions entry={entry} />\r\n            <Address entry={entry} />\r\n            <Jornal entry={entry} />\r\n        </View>\r\n    );\r\n}\r\n\r\nexport default class UserEntryCards extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            date: this.props.date,\r\n            userEntries: [],\r\n            entriesSyncing: false,\r\n            newPost: this.props.newPost,\r\n        };\r\n        this.syncUserEntries = this.syncUserEntries.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log('\"Subcomponent UserEntryCards did mount...\"')\r\n        this.syncUserEntries()\r\n        setInterval( () => { console.log('Default auto syncing started...'); this.syncUserEntries() }, 1000 * 10 )\r\n        setInterval( () => { this.updateIfNewPost() }, 1000 * 1 )\r\n        \r\n    }\r\n\r\n    updateIfNewPost () {\r\n        if (this.props.newPost) {\r\n            console.log('JUST POSTED STATUS: True. Selecting current date ...');\r\n            this.props.forgetNewPost();\r\n            this.syncUserEntries();\r\n        }\r\n    }\r\n\r\n    async syncUserEntries() {\r\n\r\n        console.log('SYNC ENTRIES STATUS: Started...')\r\n        this.setState({ entriesSyncing: true });\r\n    \r\n        try {\r\n\r\n            var UsersResult = await fetch( corsURI + appServerURI + 'Users', { method: 'GET' });\r\n            const usersStatus =  'Status: ' + UsersResult.status + ', ' + UsersResult.statusText\r\n\r\n            if (UsersResult.ok) {\r\n                const users = await UsersResult.json();\r\n                const user = users.filter((user) => user.username === this.props.userInfo.username)[0]\r\n                console.log('fetch GET request for user entries successful.')\r\n                console.log(usersStatus)\r\n                this.setState({userEntries: user['entries'].reverse(), entriesSynced: true})  \r\n                console.log('SYNC ENTRIES STATUS: Successful.')\r\n\r\n            } else {\r\n                console.log( new Error('\"fetch\" GET request for user entries failed. Throwing error...') )\r\n                throw new Error(usersStatus)\r\n            }\r\n    \r\n        } catch (error) {\r\n                console.log('SYNC ENTRIES STATUS: Error captured. Printing error...')\r\n                console.log(error);\r\n\r\n        } finally {\r\n            this.setState({ entriesSyncing: false });\r\n            console.log('SYNC ENTRIES STATUS: Finished.')\r\n        }    \r\n    }\r\n\r\n    render() {\r\n        console.log('\"Rendering UserEntryCards subcomponent...\"')\r\n        return this.state.userEntries.filter( (entry) => entry.date === this.props.date ).map(entry => <EntryCard entry={entry} />)\r\n    }\r\n}","const dateRange = [\r\n    \"2021-01-01\",\r\n    \"2021-01-02\",\r\n    \"2021-01-03\",\r\n    \"2021-01-04\",\r\n    \"2021-01-05\",\r\n    \"2021-01-06\",\r\n    \"2021-01-07\",\r\n    \"2021-01-08\",\r\n    \"2021-01-09\",\r\n    \"2021-01-10\",\r\n    \"2021-01-11\",\r\n    \"2021-01-12\",\r\n    \"2021-01-13\",\r\n    \"2021-01-14\",\r\n    \"2021-01-15\",\r\n    \"2021-01-16\",\r\n    \"2021-01-17\",\r\n    \"2021-01-18\",\r\n    \"2021-01-19\",\r\n    \"2021-01-20\",\r\n    \"2021-01-21\",\r\n    \"2021-01-22\",\r\n    \"2021-01-23\",\r\n    \"2021-01-24\",\r\n    \"2021-01-25\",\r\n    \"2021-01-26\",\r\n    \"2021-01-27\",\r\n    \"2021-01-28\",\r\n    \"2021-01-29\",\r\n    \"2021-01-30\",\r\n    \"2021-01-31\",\r\n    \"2021-02-01\",\r\n    \"2021-02-02\",\r\n    \"2021-02-03\",\r\n    \"2021-02-04\",\r\n    \"2021-02-05\",\r\n    \"2021-02-06\",\r\n    \"2021-02-07\",\r\n    \"2021-02-08\",\r\n    \"2021-02-09\",\r\n    \"2021-02-10\",\r\n    \"2021-02-11\",\r\n    \"2021-02-12\",\r\n    \"2021-02-13\",\r\n    \"2021-02-14\",\r\n    \"2021-02-15\",\r\n    \"2021-02-16\",\r\n    \"2021-02-17\",\r\n    \"2021-02-18\",\r\n    \"2021-02-19\",\r\n    \"2021-02-20\",\r\n    \"2021-02-21\",\r\n    \"2021-02-22\",\r\n    \"2021-02-23\",\r\n    \"2021-02-24\",\r\n    \"2021-02-25\",\r\n    \"2021-02-26\",\r\n    \"2021-02-27\",\r\n    \"2021-02-28\",\r\n    \"2021-03-01\",\r\n    \"2021-03-02\",\r\n    \"2021-03-03\",\r\n    \"2021-03-04\",\r\n    \"2021-03-05\",\r\n    \"2021-03-06\",\r\n    \"2021-03-07\",\r\n    \"2021-03-08\",\r\n    \"2021-03-09\",\r\n    \"2021-03-10\",\r\n    \"2021-03-11\",\r\n    \"2021-03-12\",\r\n    \"2021-03-13\",\r\n    \"2021-03-14\",\r\n    \"2021-03-15\",\r\n    \"2021-03-16\",\r\n    \"2021-03-17\",\r\n    \"2021-03-18\",\r\n    \"2021-03-19\",\r\n    \"2021-03-20\",\r\n    \"2021-03-21\",\r\n    \"2021-03-22\",\r\n    \"2021-03-23\",\r\n    \"2021-03-24\",\r\n    \"2021-03-25\",\r\n    \"2021-03-26\",\r\n    \"2021-03-27\",\r\n    \"2021-03-28\",\r\n    \"2021-03-29\",\r\n    \"2021-03-30\",\r\n    \"2021-03-31\",\r\n    \"2021-04-01\",\r\n    \"2021-04-02\",\r\n    \"2021-04-03\",\r\n    \"2021-04-04\",\r\n    \"2021-04-05\",\r\n    \"2021-04-06\",\r\n    \"2021-04-07\",\r\n    \"2021-04-08\",\r\n    \"2021-04-09\",\r\n    \"2021-04-10\",\r\n    \"2021-04-11\",\r\n    \"2021-04-12\",\r\n    \"2021-04-13\",\r\n    \"2021-04-14\",\r\n    \"2021-04-15\",\r\n    \"2021-04-16\",\r\n    \"2021-04-17\",\r\n    \"2021-04-18\",\r\n    \"2021-04-19\",\r\n    \"2021-04-20\",\r\n    \"2021-04-21\",\r\n    \"2021-04-22\",\r\n    \"2021-04-23\",\r\n    \"2021-04-24\",\r\n    \"2021-04-25\",\r\n    \"2021-04-26\",\r\n    \"2021-04-27\",\r\n    \"2021-04-28\",\r\n    \"2021-04-29\",\r\n    \"2021-04-30\",\r\n    \"2021-05-01\",\r\n    \"2021-05-02\",\r\n    \"2021-05-03\",\r\n    \"2021-05-04\",\r\n    \"2021-05-05\",\r\n    \"2021-05-06\",\r\n    \"2021-05-07\",\r\n    \"2021-05-08\",\r\n    \"2021-05-09\",\r\n    \"2021-05-10\",\r\n    \"2021-05-11\",\r\n    \"2021-05-12\",\r\n    \"2021-05-13\",\r\n    \"2021-05-14\",\r\n    \"2021-05-15\",\r\n    \"2021-05-16\",\r\n    \"2021-05-17\",\r\n    \"2021-05-18\",\r\n    \"2021-05-19\",\r\n    \"2021-05-20\",\r\n    \"2021-05-21\",\r\n    \"2021-05-22\",\r\n    \"2021-05-23\",\r\n    \"2021-05-24\",\r\n    \"2021-05-25\",\r\n    \"2021-05-26\",\r\n    \"2021-05-27\",\r\n    \"2021-05-28\",\r\n    \"2021-05-29\",\r\n    \"2021-05-30\",\r\n    \"2021-05-31\",\r\n    \"2021-06-01\",\r\n    \"2021-06-02\",\r\n    \"2021-06-03\",\r\n    \"2021-06-04\",\r\n    \"2021-06-05\",\r\n    \"2021-06-06\",\r\n    \"2021-06-07\",\r\n    \"2021-06-08\",\r\n    \"2021-06-09\",\r\n    \"2021-06-10\",\r\n    \"2021-06-11\",\r\n    \"2021-06-12\",\r\n    \"2021-06-13\",\r\n    \"2021-06-14\",\r\n    \"2021-06-15\",\r\n    \"2021-06-16\",\r\n    \"2021-06-17\",\r\n    \"2021-06-18\",\r\n    \"2021-06-19\",\r\n    \"2021-06-20\",\r\n    \"2021-06-21\",\r\n    \"2021-06-22\",\r\n    \"2021-06-23\",\r\n    \"2021-06-24\",\r\n    \"2021-06-25\",\r\n    \"2021-06-26\",\r\n    \"2021-06-27\",\r\n    \"2021-06-28\",\r\n    \"2021-06-29\",\r\n    \"2021-06-30\",\r\n    \"2021-07-01\",\r\n    \"2021-07-02\",\r\n    \"2021-07-03\",\r\n    \"2021-07-04\",\r\n    \"2021-07-05\",\r\n    \"2021-07-06\",\r\n    \"2021-07-07\",\r\n    \"2021-07-08\",\r\n    \"2021-07-09\",\r\n    \"2021-07-10\",\r\n    \"2021-07-11\",\r\n    \"2021-07-12\",\r\n    \"2021-07-13\",\r\n    \"2021-07-14\",\r\n    \"2021-07-15\",\r\n    \"2021-07-16\",\r\n    \"2021-07-17\",\r\n    \"2021-07-18\",\r\n    \"2021-07-19\",\r\n    \"2021-07-20\",\r\n    \"2021-07-21\",\r\n    \"2021-07-22\",\r\n    \"2021-07-23\",\r\n    \"2021-07-24\",\r\n    \"2021-07-25\",\r\n    \"2021-07-26\",\r\n    \"2021-07-27\",\r\n    \"2021-07-28\",\r\n    \"2021-07-29\",\r\n    \"2021-07-30\",\r\n    \"2021-07-31\",\r\n    \"2021-08-01\",\r\n    \"2021-08-02\",\r\n    \"2021-08-03\",\r\n    \"2021-08-04\",\r\n    \"2021-08-05\",\r\n    \"2021-08-06\",\r\n    \"2021-08-07\",\r\n    \"2021-08-08\",\r\n    \"2021-08-09\",\r\n    \"2021-08-10\",\r\n    \"2021-08-11\",\r\n    \"2021-08-12\",\r\n    \"2021-08-13\",\r\n    \"2021-08-14\",\r\n    \"2021-08-15\",\r\n    \"2021-08-16\",\r\n    \"2021-08-17\",\r\n    \"2021-08-18\",\r\n    \"2021-08-19\",\r\n    \"2021-08-20\",\r\n    \"2021-08-21\",\r\n    \"2021-08-22\",\r\n    \"2021-08-23\",\r\n    \"2021-08-24\",\r\n    \"2021-08-25\",\r\n    \"2021-08-26\",\r\n    \"2021-08-27\",\r\n    \"2021-08-28\",\r\n    \"2021-08-29\",\r\n    \"2021-08-30\",\r\n    \"2021-08-31\",\r\n    \"2021-09-01\",\r\n    \"2021-09-02\",\r\n    \"2021-09-03\",\r\n    \"2021-09-04\",\r\n    \"2021-09-05\",\r\n    \"2021-09-06\",\r\n    \"2021-09-07\",\r\n    \"2021-09-08\",\r\n    \"2021-09-09\",\r\n    \"2021-09-10\",\r\n    \"2021-09-11\",\r\n    \"2021-09-12\",\r\n    \"2021-09-13\",\r\n    \"2021-09-14\",\r\n    \"2021-09-15\",\r\n    \"2021-09-16\",\r\n    \"2021-09-17\",\r\n    \"2021-09-18\",\r\n    \"2021-09-19\",\r\n    \"2021-09-20\",\r\n    \"2021-09-21\",\r\n    \"2021-09-22\",\r\n    \"2021-09-23\",\r\n    \"2021-09-24\",\r\n    \"2021-09-25\",\r\n    \"2021-09-26\",\r\n    \"2021-09-27\",\r\n    \"2021-09-28\",\r\n    \"2021-09-29\",\r\n    \"2021-09-30\",\r\n    \"2021-10-01\",\r\n    \"2021-10-02\",\r\n    \"2021-10-03\",\r\n    \"2021-10-04\",\r\n    \"2021-10-05\",\r\n    \"2021-10-06\",\r\n    \"2021-10-07\",\r\n    \"2021-10-08\",\r\n    \"2021-10-09\",\r\n    \"2021-10-10\",\r\n    \"2021-10-11\",\r\n    \"2021-10-12\",\r\n    \"2021-10-13\",\r\n    \"2021-10-14\",\r\n    \"2021-10-15\",\r\n    \"2021-10-16\",\r\n    \"2021-10-17\",\r\n    \"2021-10-18\",\r\n    \"2021-10-19\",\r\n    \"2021-10-20\",\r\n    \"2021-10-21\",\r\n    \"2021-10-22\",\r\n    \"2021-10-23\",\r\n    \"2021-10-24\",\r\n    \"2021-10-25\",\r\n    \"2021-10-26\",\r\n    \"2021-10-27\",\r\n    \"2021-10-28\",\r\n    \"2021-10-29\",\r\n    \"2021-10-30\",\r\n    \"2021-10-31\",\r\n    \"2021-11-01\",\r\n    \"2021-11-02\",\r\n    \"2021-11-03\",\r\n    \"2021-11-04\",\r\n    \"2021-11-05\",\r\n    \"2021-11-06\",\r\n    \"2021-11-07\",\r\n    \"2021-11-08\",\r\n    \"2021-11-09\",\r\n    \"2021-11-10\",\r\n    \"2021-11-11\",\r\n    \"2021-11-12\",\r\n    \"2021-11-13\",\r\n    \"2021-11-14\",\r\n    \"2021-11-15\",\r\n    \"2021-11-16\",\r\n    \"2021-11-17\",\r\n    \"2021-11-18\",\r\n    \"2021-11-19\",\r\n    \"2021-11-20\",\r\n    \"2021-11-21\",\r\n    \"2021-11-22\",\r\n    \"2021-11-23\",\r\n    \"2021-11-24\",\r\n    \"2021-11-25\",\r\n    \"2021-11-26\",\r\n    \"2021-11-27\",\r\n    \"2021-11-28\",\r\n    \"2021-11-29\",\r\n    \"2021-11-30\",\r\n    \"2021-12-01\",\r\n    \"2021-12-02\",\r\n    \"2021-12-03\",\r\n    \"2021-12-04\",\r\n    \"2021-12-05\",\r\n    \"2021-12-06\",\r\n    \"2021-12-07\",\r\n    \"2021-12-08\",\r\n    \"2021-12-09\",\r\n    \"2021-12-10\",\r\n    \"2021-12-11\",\r\n    \"2021-12-12\",\r\n    \"2021-12-13\",\r\n    \"2021-12-14\",\r\n    \"2021-12-15\",\r\n    \"2021-12-16\",\r\n    \"2021-12-17\",\r\n    \"2021-12-18\",\r\n    \"2021-12-19\",\r\n    \"2021-12-20\",\r\n    \"2021-12-21\",\r\n    \"2021-12-22\",\r\n    \"2021-12-23\",\r\n    \"2021-12-24\",\r\n    \"2021-12-25\",\r\n    \"2021-12-26\",\r\n    \"2021-12-27\",\r\n    \"2021-12-28\",\r\n    \"2021-12-29\",\r\n    \"2021-12-30\",\r\n    \"2021-12-31\",\r\n    \"2022-01-01\",\r\n    \"2022-01-02\",\r\n    \"2022-01-03\",\r\n    \"2022-01-04\",\r\n    \"2022-01-05\",\r\n    \"2022-01-06\",\r\n    \"2022-01-07\",\r\n    \"2022-01-08\",\r\n    \"2022-01-09\",\r\n    \"2022-01-10\",\r\n    \"2022-01-11\",\r\n    \"2022-01-12\",\r\n    \"2022-01-13\",\r\n    \"2022-01-14\",\r\n    \"2022-01-15\",\r\n    \"2022-01-16\",\r\n    \"2022-01-17\",\r\n    \"2022-01-18\",\r\n    \"2022-01-19\",\r\n    \"2022-01-20\",\r\n    \"2022-01-21\",\r\n    \"2022-01-22\",\r\n    \"2022-01-23\",\r\n    \"2022-01-24\",\r\n    \"2022-01-25\",\r\n    \"2022-01-26\",\r\n    \"2022-01-27\",\r\n    \"2022-01-28\",\r\n    \"2022-01-29\",\r\n    \"2022-01-30\",\r\n    \"2022-01-31\",\r\n    \"2022-02-01\",\r\n    \"2022-02-02\",\r\n    \"2022-02-03\",\r\n    \"2022-02-04\",\r\n    \"2022-02-05\",\r\n    \"2022-02-06\",\r\n    \"2022-02-07\",\r\n    \"2022-02-08\",\r\n    \"2022-02-09\",\r\n    \"2022-02-10\",\r\n    \"2022-02-11\",\r\n    \"2022-02-12\",\r\n    \"2022-02-13\",\r\n    \"2022-02-14\",\r\n    \"2022-02-15\",\r\n    \"2022-02-16\",\r\n    \"2022-02-17\",\r\n    \"2022-02-18\",\r\n    \"2022-02-19\",\r\n    \"2022-02-20\",\r\n    \"2022-02-21\",\r\n    \"2022-02-22\",\r\n    \"2022-02-23\",\r\n    \"2022-02-24\",\r\n    \"2022-02-25\",\r\n    \"2022-02-26\",\r\n    \"2022-02-27\",\r\n    \"2022-02-28\",\r\n    \"2022-03-01\",\r\n    \"2022-03-02\",\r\n    \"2022-03-03\",\r\n    \"2022-03-04\",\r\n    \"2022-03-05\",\r\n    \"2022-03-06\",\r\n    \"2022-03-07\",\r\n    \"2022-03-08\",\r\n    \"2022-03-09\",\r\n    \"2022-03-10\",\r\n    \"2022-03-11\",\r\n    \"2022-03-12\",\r\n    \"2022-03-13\",\r\n    \"2022-03-14\",\r\n    \"2022-03-15\",\r\n    \"2022-03-16\",\r\n    \"2022-03-17\",\r\n    \"2022-03-18\",\r\n    \"2022-03-19\",\r\n    \"2022-03-20\",\r\n    \"2022-03-21\",\r\n    \"2022-03-22\",\r\n    \"2022-03-23\",\r\n    \"2022-03-24\",\r\n    \"2022-03-25\",\r\n    \"2022-03-26\",\r\n    \"2022-03-27\",\r\n    \"2022-03-28\",\r\n    \"2022-03-29\",\r\n    \"2022-03-30\",\r\n    \"2022-03-31\",\r\n    \"2022-04-01\",\r\n    \"2022-04-02\",\r\n    \"2022-04-03\",\r\n    \"2022-04-04\",\r\n    \"2022-04-05\",\r\n    \"2022-04-06\",\r\n    \"2022-04-07\",\r\n    \"2022-04-08\",\r\n    \"2022-04-09\",\r\n    \"2022-04-10\",\r\n    \"2022-04-11\",\r\n    \"2022-04-12\",\r\n    \"2022-04-13\",\r\n    \"2022-04-14\",\r\n    \"2022-04-15\",\r\n    \"2022-04-16\",\r\n    \"2022-04-17\",\r\n    \"2022-04-18\",\r\n    \"2022-04-19\",\r\n    \"2022-04-20\",\r\n    \"2022-04-21\",\r\n    \"2022-04-22\",\r\n    \"2022-04-23\",\r\n    \"2022-04-24\",\r\n    \"2022-04-25\",\r\n    \"2022-04-26\",\r\n    \"2022-04-27\",\r\n    \"2022-04-28\",\r\n    \"2022-04-29\",\r\n    \"2022-04-30\",\r\n    \"2022-05-01\",\r\n    \"2022-05-02\",\r\n    \"2022-05-03\",\r\n    \"2022-05-04\",\r\n    \"2022-05-05\",\r\n    \"2022-05-06\",\r\n    \"2022-05-07\",\r\n    \"2022-05-08\",\r\n    \"2022-05-09\",\r\n    \"2022-05-10\",\r\n    \"2022-05-11\",\r\n    \"2022-05-12\",\r\n    \"2022-05-13\",\r\n    \"2022-05-14\",\r\n    \"2022-05-15\",\r\n    \"2022-05-16\",\r\n    \"2022-05-17\",\r\n    \"2022-05-18\",\r\n    \"2022-05-19\",\r\n    \"2022-05-20\",\r\n    \"2022-05-21\",\r\n    \"2022-05-22\",\r\n    \"2022-05-23\",\r\n    \"2022-05-24\",\r\n    \"2022-05-25\",\r\n    \"2022-05-26\",\r\n    \"2022-05-27\",\r\n    \"2022-05-28\",\r\n    \"2022-05-29\",\r\n    \"2022-05-30\",\r\n    \"2022-05-31\",\r\n    \"2022-06-01\",\r\n    \"2022-06-02\",\r\n    \"2022-06-03\",\r\n    \"2022-06-04\",\r\n    \"2022-06-05\",\r\n    \"2022-06-06\",\r\n    \"2022-06-07\",\r\n    \"2022-06-08\",\r\n    \"2022-06-09\",\r\n    \"2022-06-10\",\r\n    \"2022-06-11\",\r\n    \"2022-06-12\",\r\n    \"2022-06-13\",\r\n    \"2022-06-14\",\r\n    \"2022-06-15\",\r\n    \"2022-06-16\",\r\n    \"2022-06-17\",\r\n    \"2022-06-18\",\r\n    \"2022-06-19\",\r\n    \"2022-06-20\",\r\n    \"2022-06-21\",\r\n    \"2022-06-22\",\r\n    \"2022-06-23\",\r\n    \"2022-06-24\",\r\n    \"2022-06-25\",\r\n    \"2022-06-26\",\r\n    \"2022-06-27\",\r\n    \"2022-06-28\",\r\n    \"2022-06-29\",\r\n    \"2022-06-30\"\r\n]\r\nexport default dateRange;","// Module imports\r\nimport React, { Component } from 'react';\r\nimport { View, Text, ImageBackground, Pressable, ScrollView } from 'react-native';\r\nimport { Icon } from 'react-native-eva-icons'\r\n\r\n// Component imports\r\nimport UserEntryCards from './subcomponents/userEntryCards';\r\n\r\n// Local imports\r\nimport dateRange from '../shared/dateRange';\r\nimport styles from '../styles/entrancesStyles';\r\n\r\n// cors-midpoint uri (needed to avoid cors' allow-cross-origin error when fetching)\r\nconst corsURI = 'https://morning-journey-78874.herokuapp.com/';\r\nconst appServerURI = 'https://mood-tracker-server.herokuapp.com/'\r\n// Defining pertinent constants\r\nconst monthDict = {'Jan': '01', 'Feb': '02', 'Mar': '03', 'Apr': '04', 'May': '05', 'Jun': '06', 'Jul': '07', 'Ago': '08', 'Sep': '09', 'Oct': '10', 'Nov': '11', 'Dec': '12'}\r\nconst monthSigs = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Ago', 'Sep', 'Oct', 'Nov', 'Dec']\r\n\r\n// Defining pertinent functions\r\nfunction Today() {\r\n    const now = Date().toString().split(' ')\r\n    const today = [ now[3], monthDict[now[1]], now[2] ].join('-')\r\n    return today\r\n}\r\nfunction getNextDate(date, next='next') {\r\n    const nextDate = dateRange[dateRange.indexOf(date) + (next=='previous' ? -1 : 1)]\r\n    return nextDate\r\n}\r\nfunction getTime() {\r\n    //Wed,Jan,26,2022,15:12:37,GMT-0300,(Horário,Padrão,de,Brasília)\r\n    const now = Date().toString().split(' ')\r\n    const time = now[4]\r\n    // const time = new Date().toLocaleTimeString()\r\n    return time\r\n}\r\nfunction formatDate(date) {\r\n\r\n    var ymd = date.split('-')\r\n    for (var i=0; i<12; i++) {\r\n        if (monthDict[ monthSigs[i] ] == ymd[1]) {\r\n            return ymd[2] + ', ' + monthSigs[i]\r\n        }\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default class EntrancesScreen extends Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            userEntries: [],\r\n            date: Today(),\r\n            time: getTime(),\r\n            selectedDate: Today(),\r\n            entriesLoading: false,\r\n            entriesSynced: false,\r\n        };\r\n        this.onNextButtonPress = this.onNextButtonPress.bind(this);\r\n        this.forgetNewPost = this.forgetNewPost.bind(this);\r\n    }\r\n    \r\n    componentDidMount() {\r\n        console.log('\"Entries\" screen component did mount...')\r\n    }\r\n\r\n    onNextButtonPress(next='next') { \r\n        function setSelectedDate() {\r\n            this.setState( {selectedDate: getNextDate(this.state.selectedDate, next)} ) \r\n        }\r\n        return setSelectedDate.bind(this);\r\n    }\r\n\r\n    selectedDateTitle() {\r\n        const selDate = this.state.selectedDate\r\n        const yesterday = getNextDate(Today(), 'previous')\r\n        const dayBeforeYesterday = getNextDate(yesterday, 'previous')\r\n        return ( selDate === Today() ? 'Hoje  ' : ( selDate === yesterday ? 'Ontem  ' : '' ) )\r\n    }\r\n\r\n    forgetNewPost() {\r\n        function forgetNewPost() {\r\n            this.props.navigation.setParams({newPost: false});\r\n            this.setState({\r\n                selectedDate: Today(),\r\n            });\r\n        }\r\n        return forgetNewPost.bind(this);\r\n    }\r\n\r\n    render() {\r\n\r\n        console.log('Rendering \"Entries\" screen...')\r\n        const isToday = this.state.selectedDate === this.state.date\r\n\r\n        return(\r\n            <ImageBackground source={require('../assets/wallpaper.jpg')} style={[styles.mainView]}>\r\n                \r\n                <ScrollView style={styles.scrollView}>\r\n                        <View style={styles.section}>\r\n                            \r\n                            <View style={[styles.cardRow, {justifyContent: 'space-between'}]}>\r\n                                <Pressable onPress={ this.onNextButtonPress('previous') }>\r\n                                    <Icon name='arrow-back' width={35} height={35} fill='white' />\r\n                                </Pressable>\r\n                                <Text style={styles.sectionTitle}> { 'Suas entradas  •  ' + this.selectedDateTitle() + formatDate(this.state.selectedDate) } </Text>                                \r\n                                { !isToday ? (\r\n                                    <Pressable onPress={ this.onNextButtonPress() }>\r\n                                        <Icon name='arrow-forward' width={35} height={35} fill='white' />\r\n                                    </Pressable>   \r\n                                ) : (\r\n                                    <View></View>\r\n                                )}\r\n                            </View>\r\n\r\n                            <UserEntryCards \r\n                            userInfo={this.props.route.params.userInfo}\r\n                            newPost={this.props.route.params.newPost}\r\n                            forgetNewPost={this.forgetNewPost()}\r\n                            date={this.state.selectedDate}\r\n                            />\r\n\r\n                        </View>\r\n                </ScrollView>\r\n\r\n                <Pressable onPress={() => { this.props.navigation.navigate( 'PostEntrance', {} )} }  style={[styles.postButton]}>\r\n                        <Icon name='plus-circle' width={72} height={72} fill='white' style={styles.postButtonLabel}/>\r\n                </Pressable>\r\n  \r\n            </ImageBackground>\r\n            )\r\n\r\n    }\r\n  }\r\n","import { StatusBar } from 'expo-status-bar';\r\n// import { Platform } from 'react-native';\r\n\r\nconst styles = {\r\n  \r\n  entrances: {\r\n    marginTop: StatusBar.currentHeight,\r\n    borderWidth: 0,\r\n    flex:1,\r\n    justifyContent: 'space-between',\r\n    alignItems: 'flex-start',\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    paddingBottom: '0%',\r\n    paddingHorizontal: '5%',\r\n    alignSelf: 'stretch',\r\n    borderColor: 'black',\r\n  },\r\n  section: {\r\n    paddingVertical: '10%',\r\n    paddingHorizontal: '10%',\r\n    justifyContent: 'flex-start',\r\n    borderTopWidth: 1,\r\n    borderBottomWidth: 1,\r\n  },\r\n  contentRow: {\r\n    flexDirection: 'column',\r\n    padding: 10,\r\n    marginTop: 22,\r\n    borderWidth: 1,\r\n    borderColor: 'rgba(155,155,155, 0.4)',\r\n    borderRadius: 30,\r\n    backgroundColor: 'rgba(255,255,255, 0.3)',\r\n\r\n  },\r\n  entryTitle: {\r\n    paddingBottom: 3,\r\n    paddingLeft: 5,\r\n    fontSize: 19,\r\n    color: 'white'\r\n  },\r\n  postButtonView: {\r\n    height: 60,\r\n    width: 60,\r\n    borderRadius: 30,\r\n    alignSelf: 'center',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundColor: 'white',\r\n  },\r\n  postButton: {\r\n  },\r\n  postButtonLabel: {\r\n    fontSize: 45,\r\n    fontWeight: 'bold',\r\n  },\r\n  moodButtonView: {\r\n    width: 65,\r\n    height: 65,\r\n    alignItems: 'center',\r\n    justifyContent: 'center'\r\n  },\r\n  moodButton: {\r\n      borderRadius: 30,\r\n      justifyContent: 'center',\r\n      marginColor: 'black',\r\n      marginWidth: 2,\r\n  },\r\n  moodButtonBorder: {\r\n\r\n  },\r\n  date: {\r\n    position: 'relative',\r\n    left: '60%',\r\n    paddingVertical: 8,\r\n    paddingHorizontal: 10,\r\n    fontSize: 15,\r\n    alignSelf: 'center',\r\n    backgroundColor: 'white',\r\n    borderRadius: 20\r\n  },\r\n  jornalText: {\r\n    paddingVertical: 5,\r\n    paddingHorizontal: 10,\r\n    minHeight:170,\r\n    width: '100%',\r\n    borderRadius: 20,\r\n    color: 'white',\r\n    fontSize: 14,\r\n  },\r\n  saveButton: {\r\n    height: 50,\r\n    width: '100%',\r\n    borderTopLeftRadius: 30,\r\n    borderTopRightRadius: 30,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundColor: 'white'\r\n  },\r\n  card: {\r\n    marginTop: '5%',\r\n    paddingVertical: 5,\r\n    paddingHorizontal: 10,\r\n    borderRadius: 20,\r\n    backgroundColor: 'rgba(255,255,255,0.3)',\r\n},\r\ncardRow: {\r\n    flexDirection: 'row',\r\n    paddingVertical: 5,\r\n    alignItems: 'center',\r\n},\r\nmoodBadge: {\r\n    backgroundColor: 'green',\r\n    borderRadius: 30,\r\n    paddingVertical: 6,\r\n    width: 130,\r\n    fontSize: 16,\r\n    textAlign: 'center',\r\n},\r\nemotionBadge: {\r\n    backgroundColor: 'rgba(1,1,1,0.5)',\r\n    borderRadius: 30,\r\n    paddingVertical: 7,\r\n    paddingHorizontal: 12.5,\r\n    marginRight: 6,\r\n    fontSize: 15,\r\n    textAlign: 'center',\r\n},\r\n\r\n}\r\n\r\nexport default styles;","import React, {useState, Component} from 'react';\r\nimport { View, Text, ImageBackground, Pressable, ScrollView } from 'react-native';\r\nimport { TextInput} from 'react-native-gesture-handler';\r\nimport { Icon } from 'react-native-eva-icons'\r\n\r\nimport styles from '../styles/postEntryStyles'\r\nimport styles2 from '../styles/entrancesStyles'\r\n\r\n// cors-midpoint uri (needed to avoid cors' allow-cross-origin error when fetching)\r\nconst corsURI = 'https://morning-journey-78874.herokuapp.com/'\r\nconst appServerURI = 'https://mood-tracker-server.herokuapp.com/'\r\n\r\nstyles.emotionBadge = {\r\n    backgroundColor: 'rgba(1,1,1,0.5)',\r\n    borderRadius: 30,\r\n    paddingVertical: 7,\r\n    paddingHorizontal: 12.5,\r\n    marginRight: 6,\r\n    // width: '100%', //must be removed, badge should have text width\r\n    fontSize: 15,\r\n    textAlign: 'center',\r\n}\r\n\r\nstyles.text = {fontSize: 14}\r\n\r\n\r\n// Date() => wed jan 91 2022 07:46:57 ...\r\nconst now = new Date().toString().split(' ')\r\nconst datetime = now[2] + ' ' + now[1] + ' ' + now[3] + ' - ' + now[4].slice(0, 5)\r\n\r\nconst goodEnergizedEmotions = ['Animação', 'Concentração', 'Desinibição', 'Motivação', 'Euforia']\r\nconst goodCalmEmotions = ['Alívio', 'Calma', 'Conforto', 'Despreocupação', 'Inspiração', 'Orgulho', 'Paz', 'Relaxamento', 'Satisfação', 'Segurança']\r\nconst badEnergizedEmotions = ['Agitação', 'Ansiosiedade', 'Tristeza', 'Decepção', 'Depressão', 'Desespero', 'Frustração', 'Insatisfação', 'Irritação', 'Medo', 'Paranoia', 'Preocupação', 'Impaciencia', 'Raiva', 'Revolta', 'Sobrecarregado(a)', 'Tensão', 'Nojo']\r\nconst badCalmEmotions = ['Timidez', 'Cansaço', 'Confusão', 'Desanimo', 'Vergonha', 'Insegurança', 'Apátia', 'Solidão', 'Tédio']\r\nconst basicEmotions = [ ...goodEnergizedEmotions, ...goodCalmEmotions, ...badEnergizedEmotions, ...badCalmEmotions]\r\nconst emotionGroups = [goodEnergizedEmotions, goodCalmEmotions, badEnergizedEmotions, badCalmEmotions]\r\nconst emotionGroupsNames = ['Bem & Energizado', 'Bem & Calmo', 'Mal e Energizado', 'Mal & Calmo']\r\nvar isSelectedEmotions = {}\r\nfor (var i=0; i<basicEmotions.length; i++){\r\nisSelectedEmotions[basicEmotions[i]] = false\r\n}\r\n// Array(basicEmotions.length).fill(false)\r\n\r\n\r\nfunction convertMonthSig(monthSig) {\r\n    const monthSigs = ['Jan', 'Feb', 'Mar', 'Apr', 'Jun', 'Jul', 'Ago', 'Sep', 'Oct', 'Nov', 'Dec']\r\n    const months = ['01', '02', '03', '04', '05', '06', '07', '08', '09', '10', '11', '12']\r\n    const thisMonth = months[monthSigs.indexOf(monthSig)]\r\n    return thisMonth\r\n}\r\n\r\nfunction getTime() {\r\n    //Wed,Jan,26,2022,15:12:37,GMT-0300,(Horário,Padrão,de,Brasília)\r\n    const now = Date().toString().split(' ')\r\n    const time = now[4]\r\n    return time\r\n}\r\n\r\nfunction getToday() {\r\n    const now = Date().toString().split(' ')\r\n    const today = [ now[3], convertMonthSig(now[1]), now[2] ].join('-')\r\n    return today\r\n}\r\n\r\nfunction FormattedTime() {\r\n    // const time = new Date().toString().split(' ')[4]\r\n    var newTime = getTime().slice(0,5)\r\n    var h = parseInt(newTime.slice(0,2))\r\n    var m = parseInt(newTime.slice(3,5))\r\n    newTime = h > 12 ? ( (h-12).toString().length==1 ? '0'+(h-12) : h-12 ) + ':' +  m + ' PM' : ( h.toString().length==1 ? '0'+ h : h ) + ':' + m + ' AM'\r\n    return newTime\r\n}\r\n\r\nexport default class PostEntranceScreen extends Component {\r\n  \r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            moodButtons: {\r\n            colors: ['red', 'blue', 'white', 'gold', 'green'],\r\n            colorsSelected: ['darkred', 'darkblue', 'grey', 'goldenrod', 'darkgreen'],\r\n            moods: ['Horrível', 'Mal', 'Regular', 'Bem', 'Ótimo'],  \r\n            },\r\n            emotionButtons: {\r\n                isSelectedEmotions: isSelectedEmotions,\r\n                basicEmotions: basicEmotions,\r\n                emotionGroups: emotionGroups,\r\n            },\r\n            star: false,\r\n            selectedMood: null,\r\n            jornalEntry: '',    \r\n            emotions: [],\r\n            address: '',\r\n\r\n            startTime: FormattedTime(),\r\n            selectedEntry: 'Mood',\r\n            isLoading: false,\r\n        };\r\n\r\n        this.onSaveButtonPress = this.onSaveButtonPress.bind(this);\r\n        this.EmotionButtons = this.EmotionButtons.bind(this);\r\n        this.MoodButtons = this.MoodButtons.bind(this);\r\n        this.postEntryHeader = this.postEntryHeader.bind(this);\r\n        this.onEmotionButtonPress = this.onEmotionButtonPress.bind(this);\r\n        this.onMoodButtonPress = this.onMoodButtonPress.bind(this);\r\n        this.inputSection = this.inputSection.bind(this);\r\n        this.setSelectedEntry = this.setSelectedEntry.bind(this);\r\n        this.InputCard = this.InputCard.bind(this);\r\n        this.JornalInput = this.JornalInput.bind(this);\r\n        this.postNewEntryAsync = this.postNewEntryAsync.bind(this);\r\n    }\r\n\r\n    postEntryHeader() {\r\n        return(\r\n            <View style={[styles2.cardRow, {justifyContent: 'space-between'}]}>\r\n                <Pressable onPress={() => {this.props.navigation.goBack()}}  style={styles.postButton}>\r\n                    <Icon name='arrow-back' fill='white' height={30} width={30}/>\r\n                </Pressable>\r\n                <View style={[styles2.emotionBadge, {flexDirection: 'row'}]}>\r\n                    <Text > {datetime} </Text>\r\n                    <Icon name='edit' fill='rgba(75,75,75,1)' height={20} width={20}/>\r\n                </View>\r\n                <Pressable onPress={() => {this.setState({star: !this.state.star})}}  style={styles.postButton}>\r\n                    <Icon name={this.state.star ? 'star' : 'star-outline'} fill='rgba(245,245,245,0.7)' height={30} width={30}/>\r\n                </Pressable>\r\n            </View>\r\n        )\r\n    }\r\n\r\n    onMoodButtonPress(item) {\r\n        // alert(e)\r\n        function selectMood() {\r\n            if (this.state.selectedMood==item) {\r\n                this.setState({selectedMood: null})\r\n            } else {\r\n                this.setState({selectedMood: item})\r\n            }\r\n        }\r\n        selectMood = selectMood.bind(this);\r\n        return selectMood\r\n    }\r\n\r\n    MoodButtons() {\r\n\r\n        return this.state.moodButtons.moods.map((item, index) => {\r\n\r\n            const moodButtonViewStyle = {\r\n                width: 70,\r\n                height: 70,\r\n                alignItems: 'center',\r\n                justifyContent: 'center',\r\n                borderWidth: this.state.selectedMood==item ? 5 : 0,\r\n                borderRadius: 35,\r\n                borderColor: this.state.moodButtons.colors[index]\r\n            }        \r\n            const selColor = this.state.moodButtons.colors[index]\r\n\r\n            return(\r\n\r\n                <View key={'mood '+index} style={moodButtonViewStyle} >\r\n                    <Pressable\r\n                    title={item}\r\n                    onPress={this.onMoodButtonPress(item)}\r\n                    style={[\r\n                        styles.moodButton,\r\n                        this.state.selectedMood==item ? {\r\n                            height: 50,\r\n                            width: 50,\r\n                            fontWeight: 'bold',\r\n                            backgroundColor: selColor,\r\n                            // borderWidth: 2,\r\n                            // borderColor: this.state.moodButtons.colors[index],\r\n                        } : {\r\n                            height: 50,\r\n                            width: 50,\r\n                            fontWeight: null,\r\n                            backgroundColor: selColor\r\n                        }\r\n                    ]}\r\n                    >\r\n                        <Text style={{textAlign: 'center', textAlignVertical: 'center'}}>{item}</Text>\r\n                    </Pressable>\r\n                </View>\r\n\r\n            )\r\n        })\r\n    }\r\n\r\n    onEmotionButtonPress(emotion) { \r\n        function selectEmotion () {\r\n            this.setState({\r\n                emotionButtons: {\r\n                    ...this.state.emotionButtons,\r\n                    isSelectedEmotions: {\r\n                        ...this.state.emotionButtons.isSelectedEmotions,\r\n                        [emotion]: !this.state.emotionButtons.isSelectedEmotions[emotion]\r\n                    }\r\n                }\r\n            })\r\n        }\r\n        selectEmotion = selectEmotion.bind(this);\r\n        return selectEmotion\r\n    }\r\n\r\n    EmotionButtons(emotions) {\r\n        return(\r\n            emotions.map( emotion => (\r\n                <Pressable\r\n                title={emotion}\r\n                style={ {paddingVertical: 5} }\r\n                onPress={this.onEmotionButtonPress(emotion)}\r\n                >\r\n                    <Text style={[styles.emotionBadge, {backgroundColor: this.state.emotionButtons.isSelectedEmotions[emotion] ? 'lightblue' : 'white' }]}>{emotion}</Text>\r\n                </Pressable>\r\n            ))\r\n        )\r\n    }\r\n\r\n    JornalInput() {\r\n        return(\r\n        <TextInput multiline \r\n            placeholder='Today was...' \r\n            style={styles.jornalText}\r\n            onChangeText={text => this.setState({jornalEntry: text})}\r\n            value={this.state.jornalEntry}\r\n            >\r\n        </TextInput>\r\n        )\r\n    }\r\n\r\n    setSelectedEntry (entry) {\r\n        function setSelected() {\r\n            this.setState( {selectedEntry:  this.state.selectedEntry === entry ? null : entry  } )\r\n        }\r\n        setSelected = setSelected.bind(this);\r\n        return setSelected\r\n    }\r\n\r\n    inputSection(section, inputStyle, inputs) {\r\n        // if (this.state.isEntrySelected[section]) {\r\n        if (this.state.selectedEntry === section) {\r\n\r\n            if (section == 'Emotions') {\r\n                return this.state.emotionButtons.emotionGroups.map((emotions, index) => (\r\n                    <View style={{width: '100%', alignItems: 'center'}}>\r\n                        <Text style={{fontSize: 15, color: 'white', paddingVertical: 11}}>{emotionGroupsNames[index]}</Text>\r\n                        <View key={index} style={[styles2.cardRow, inputStyle]}>\r\n                            {inputs(emotions)}\r\n                        </View>\r\n                    </View>\r\n                ))\r\n            } else {\r\n                return(\r\n                    <View style={[styles2.cardRow, inputStyle]}>\r\n                        {inputs}\r\n                    </View>\r\n                )    \r\n            }\r\n        } else {\r\n            return(\r\n                <></>\r\n            )\r\n        }\r\n\r\n    }\r\n\r\n    InputCard(section, sectionName, icon, inputStyle, inputs) {\r\n        return(\r\n            <View style={[styles2.card]}>\r\n                <Pressable style={styles2.cardRow}  onPress={this.setSelectedEntry(section)}>\r\n                    <Icon name={icon} fill='rgba(255,255,255,0.75)' height={25} width={25} style={styles2.entryIcon}/>\r\n                    <Text style={styles.entryTitle}> {sectionName} </Text>\r\n                </Pressable>\r\n\r\n                {this.inputSection(section=section, inputStyle=inputStyle, inputs=inputs)}  \r\n\r\n            </View>\r\n        )\r\n    }\r\n\r\n    onSaveButtonPress () {\r\n        if (!this.state.selectedMood) {\r\n            alert('Necessário adicionar uma avaliação.')\r\n\r\n        } else {\r\n            const newEntry = {\r\n                jornal: this.state.jornalEntry,\r\n                mood: this.state.selectedMood,\r\n                emotions: this.state.emotionButtons.basicEmotions.filter( emotion => this.state.emotionButtons.isSelectedEmotions[emotion] ) ,\r\n                address: this.state.address,\r\n                date: getToday(),\r\n                startTime: this.state.startTime,\r\n                endTime: FormattedTime(),\r\n                star: this.state.star,\r\n            }\r\n            this.postNewEntryAsync(newEntry)\r\n        }\r\n    }\r\n\r\n    async postNewEntryAsync(newEntry) {\r\n        this.setState({ isLoading: true });\r\n        var info = this.props.route.params.userInfo;\r\n\r\n        try {\r\n            const postUserEntryOpts = { \r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify( newEntry ),\r\n            }\r\n            var postUserEntryResult = await fetch( corsURI + appServerURI + 'Users/' + info.username + '/entries', postUserEntryOpts);\r\n            // var postUserEntryResult = await fetch('http://localhost:3000/Users/'+info.username +'/entries', postUserEntryOpts);\r\n\r\n            if (postUserEntryResult.ok) {\r\n                console.log('fetch POST request successful')\r\n                console.log('Status: ' + postUserEntryResult.status + ', ' + postUserEntryResult.statusText)\r\n                this.props.navigation.navigate('Entrances', {newPost: true} )    \r\n\r\n            } else {\r\n                console.log('fetch POST request failed. Throwing error...')\r\n                throw new Error('Status: ' + postUserEntryResult.status + ', ' + postUserEntryResult.statusText)\r\n            }\r\n\r\n        } catch (error) {\r\n            // alert('Erro no servidor, não foi possível adicionar a entrada. Por favor, tente novamente.')\r\n            console.log('Erro capturado:')\r\n            console.log(error);\r\n\r\n        } finally {\r\n        this.setState({ isLoading: false });\r\n        }\r\n\r\n    }\r\n  \r\n    render() {\r\n        console.log('Rendering \"Post Entry\" screen...')\r\n\r\n        return(\r\n            <ImageBackground source={require('../assets/wallpaper.jpg')} style={styles2.mainView}>\r\n                <ScrollView style={styles2.scrollView}>\r\n                    <View style={styles2.section}>\r\n                            {this.postEntryHeader()}\r\n                            {this.InputCard('Mood', 'Avaliação', 'activity', {justifyContent: 'space-between'}, this.MoodButtons())}\r\n                            {this.InputCard('Emotions', 'Emoções', 'color-palette', {flexWrap: 'wrap', justifyContent: 'space-evenly'}, this.EmotionButtons)}\r\n                            {this.InputCard('Jornal', 'Jornal', 'book-open', {flexDirection: 'column'}, this.JornalInput())}\r\n                    </View>\r\n                </ScrollView>  \r\n\r\n                <Pressable \r\n                onPress={this.onSaveButtonPress} \r\n                style={styles.saveButton}\r\n                >\r\n                    <Text style={{fontWeight:'bold', fontSize: 17}}>Salvar</Text>\r\n                </Pressable>\r\n    \r\n            </ImageBackground>\r\n        )    \r\n    }\r\n}","var styles = {\r\n    login: {\r\n        mainView: {\r\n            flex: 1,\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n            // paddingHorizontal: Platform.OS != 'web' ? '5%' : '5%',\r\n        },\r\n        titleView: {\r\n            flexDirection: 'row',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n            minHeight: 50,\r\n        },\r\n        title: {\r\n            fontSize: 25,\r\n            fontWeight: 'bold',\r\n            color: 'white',\r\n            alignSelf: 'center',\r\n        },\r\n        titleIcon: {\r\n            paddingLeft: 6,\r\n            paddingTop: 3,\r\n        },\r\n        card: {\r\n            height: '55%',\r\n            minHeight: 390,\r\n            width: 350,\r\n            paddingHorizontal: 10,\r\n            paddingVertical: 10,\r\n            borderWidth: 1,\r\n            borderRadius: 10,\r\n            backgroundColor: 'azure',\r\n        },\r\n        cardHeader: {\r\n            height: '25%',\r\n            width: '100%',\r\n        },\r\n        cardTitle: {\r\n            position: 'relative',\r\n            top: '30%',\r\n            left: '5%',\r\n            fontSize: 24,\r\n            fontWeight: 'bold',\r\n            color: 'black',\r\n        },\r\n        cardSection: {\r\n            height: '25%',\r\n            justifyContent: 'space-evenly',\r\n            alignItems: 'center',\r\n        },\r\n        loadingIcon: {\r\n            alignSelf: 'center'\r\n        },\r\n        inputField: {\r\n            minHeight: 40,\r\n            width: '100%',\r\n            paddingLeft: 10,\r\n            fontSize: 14,\r\n            borderWidth: 1,\r\n            borderRadius: 5,\r\n            backgroundColor: 'white'\r\n        },\r\n        button: {\r\n            height: 40,\r\n            width: '100%',\r\n            textAlign: 'center',\r\n            justifyContent: 'center',\r\n            borderWidth: 1,\r\n            borderRadius: 5,\r\n            borderColor: 'white',\r\n            backgroundColor: 'lightblue',        \r\n        },\r\n        buttonLabel: {\r\n            fontSize: 15,\r\n            fontWeight: 'bold',\r\n            color: 'black',\r\n        },\r\n        text: {\r\n            fontSize: 15,\r\n            textAlign: 'center',\r\n        },\r\n        msgBox: {\r\n            width: 350,\r\n            height: 36,\r\n            justifyContent: 'center',\r\n            backgroundColor: 'rgb(30,30,30)',\r\n            borderWidth: 1,\r\n            borderColor: 'rgb(40,40,40)',\r\n        },\r\n        msg: {\r\n            textAlign: 'center',\r\n            color: 'white',\r\n        },\r\n    }\r\n};\r\nexport default styles;","import { Icon } from 'react-native-eva-icons'\r\n\r\nimport React, { Component } from 'react';\r\nimport { View, Text, ImageBackground, TextInput, Pressable } from 'react-native';\r\nimport styles from '../styles/loginStyles'\r\n\r\nconst corsURI = 'https://morning-journey-78874.herokuapp.com/'\r\nconst appServerURI = 'https://mood-tracker-server.herokuapp.com/'\r\n\r\nclass LoginScreen extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      userInfo: {\r\n        password: '',\r\n        email: '',    \r\n        username: '',\r\n      },\r\n      loginMsg: '',\r\n      isUserAuth: false,\r\n      isDataLoading: false,\r\n    }\r\n    this.onChangeText = this.onChangeText.bind(this);\r\n    this.submitButton = this.submitButton.bind(this);\r\n    this.loginMsg = this.loginMsg.bind(this);\r\n    this.setLoginMsg = this.setLoginMsg.bind(this);\r\n    this.onSignIn = this.onSignIn.bind(this);\r\n    this.onSignUp = this.onSignUp.bind(this);\r\n  }\r\n\r\n  loadingIcon() {\r\n    if (this.state.isDataLoading) {\r\n      return  <Icon name='loader-outline' animation='pulse' width={25} height={25}></Icon>\r\n    } else {\r\n      return (\r\n        <>\r\n          <Icon name='log-in-outline' animation='pulse' width={25} height={25}></Icon>\r\n        </>\r\n      )\r\n    }\r\n  }\r\n\r\n  setLoginMsg(msg) {\r\n    this.setState({loginMsg: msg})\r\n    setTimeout( () => this.setState({loginMsg: ''}) , 1000 * 5 )\r\n  }\r\n\r\n  loginMsg() {\r\n      return(\r\n        <View style={[styles.login.msgBox, this.state.loginMsg ? {} : {backgroundColor: 'transparent', borderColor: 'transparent'} ]}>\r\n          <Text style={styles.login.msg}>{this.state.loginMsg}</Text>\r\n        </View>\r\n      )\r\n  }\r\n\r\n  onChangeText(textField) {\r\n    function setField(text) {\r\n      this.setState( { userInfo: { ...this.state.userInfo, [textField] : text}} )\r\n    }\r\n    setField = setField.bind(this);\r\n    return setField\r\n  }\r\n\r\n  submitButton(sign) {\r\n    const signIn = sign == 'signin'\r\n    return(\r\n      <Pressable onPress={signIn ? this.onSignIn : this.onSignUp} style={[styles.login.button]}>\r\n        <Text style={styles.login.buttonLabel}>{ signIn ? 'Entrar' : 'Cadastrar' }</Text>\r\n      </Pressable>\r\n    )\r\n  }\r\n\r\n  encryptedPassword() {\r\n    var encPass = ''\r\n    for (var i=0; i<this.state.userInfo.password.length; i++) {\r\n      encPass += '*'\r\n    }\r\n  return encPass\r\n}\r\n\r\n  LoginScreen() {\r\n    return(\r\n      <ImageBackground source={require('../assets/wallpaper.jpg')} style={[styles.login.mainView ,{justifyContent: 'space-evenly'}]}>\r\n        \r\n        <View style={styles.login.titleView}>\r\n          <Text style={styles.login.title}>Mood Tracker</Text>\r\n          <Icon name='clock-outline' width={25} height={25} fill='white' animation='pulse' style={styles.login.titleIcon} ></Icon>\r\n        </View>\r\n\r\n        <View style={styles.login.card}>\r\n          <View style={styles.login.cardHeader} >\r\n            <Text style={styles.login.cardTitle}>Entrar</Text>\r\n          </View>\r\n          <View style={styles.login.cardSection}>\r\n            <TextInput\r\n            placeholder='Email'\r\n            onChangeText={this.onChangeText('email')}\r\n            style={styles.login.inputField}\r\n            autoComplete='email'\r\n            importantForAutofill='yes'\r\n            >\r\n            </TextInput>\r\n            <TextInput\r\n            placeholder='Senha'\r\n            onChangeText={this.onChangeText('password')}\r\n            style={styles.login.inputField}\r\n            // value={this.encryptedPassword()}\r\n            secureTextEntry={true}\r\n            autoComplete='password'\r\n            importantForAutofill='yes'\r\n            ></TextInput>\r\n          </View>\r\n          <View style={styles.login.cardSection}>\r\n            {this.submitButton('signin')}\r\n            {this.submitButton('signup')}\r\n          </View>\r\n          <View style={[styles.login.cardSection]}>\r\n            {this.loadingIcon()}\r\n          </View>\r\n        </View>\r\n\r\n          {this.loginMsg()}\r\n\r\n      </ImageBackground>\r\n    )\r\n  }\r\n\r\n  async onSignIn() {\r\n\r\n    console.log('SIGNIN STATUS: started...')\r\n    var info = this.state.userInfo;\r\n    this.setState({ isDataLoading: true });\r\n\r\n    try {\r\n\r\n      var UsersResult = await fetch(corsURI + appServerURI + 'Users', { method: 'GET' });\r\n      const UsersStatus = 'Status: ' + UsersResult.status + ', ' + UsersResult.statusText\r\n      if (UsersResult.ok) {\r\n        console.log('fetch GET request for users data at signin successful.');\r\n        console.log(UsersStatus)\r\n      } else {\r\n        console.log('fetch GET request for users data at signin failed. Throwing error...')\r\n        throw new Error(UsersStatus)\r\n      }\r\n\r\n      const Users = await UsersResult.json();\r\n      const user = Users.filter((user) => user.email === info.email)[0]\r\n      \r\n      if ( user ) {          \r\n        \r\n        if (user.password === info.password) {\r\n          const userInfo = { ...info, username: info.email.split('@')[0]}\r\n          this.setState( {isUserAuth: true, userInfo} )\r\n          const successMsg = 'Login realizado com sucesso!'\r\n          this.setLoginMsg(successMsg)\r\n          console.log('SIGNIN STATUS: Sucesso.')\r\n\r\n        } else {\r\n          const errMsg = 'Senha incorreta.'\r\n          this.setLoginMsg(errMsg)\r\n          console.log('SIGNIN STATUS: ' + errMsg);\r\n        }\r\n\r\n      } else {\r\n        const errMsg = 'Email não cadastrado!'\r\n        this.setLoginMsg(errMsg)\r\n        console.log('SIGNIN STATUS: ' + errMsg)\r\n      }\r\n\r\n    } catch (error) {\r\n      const errMsg = 'Erro no servidor! Tente novamente...'\r\n      this.setLoginMsg(errMsg)\r\n      console.log('Error catched in fetch GET request for users data at  signin. Printing Error...')\r\n      console.log('SIGNIN STATUS:' + 'Erro capturado. Imprimindo erro...')\r\n      console.log(error);\r\n\r\n    } finally {\r\n      this.setState({ isDataLoading: false });\r\n      console.log('SIGNIN STATUS: Concluido.')\r\n      if (this.state.isUserAuth) this.props.authUser(this.state.userInfo)        // Father class component method that authenticates the user and redirects to entrances screen.\r\n    }\r\n  }\r\n\r\n  async onSignUp() {\r\n\r\n    console.log('SIGNUP STATUS: started...')\r\n    var info = this.state.userInfo;\r\n    this.setState({ isDataLoading: true });\r\n    \r\n    try {\r\n      var UsersResult = await fetch( corsURI + appServerURI + 'Users', { method: 'GET' } );\r\n      \r\n      const reqStatus = 'Status: ' + UsersResult.status + ', ' + UsersResult.statusText\r\n      if (UsersResult.ok) {\r\n        console.log('fetch GET request for users data at signup successful.')\r\n        console.log(reqStatus)\r\n      } else {\r\n        console.log('fetch GET request for users data at signup failed. Throwing error...')\r\n        throw new Error(reqStatus)\r\n      }\r\n\r\n      const Users = await UsersResult.json();\r\n      const User = Users.filter((user) => user.email === info.email)[0]\r\n      var postUserResult = {ok: false}\r\n      if ( !User ) {\r\n\r\n        info.username = info.email.split('@')[0]\r\n        const postUserOpts = { \r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify( { entries: [], ...info } )\r\n        }\r\n        \r\n        postUserResult = await fetch( corsURI + appServerURI +  'Users/' + info.username, postUserOpts );\r\n        const postUserStatus = 'Status: ' + postUserResult.status + ', ' + postUserResult.statusText\r\n\r\n        if (postUserResult.ok) {\r\n          const successMsg = 'Cadastro realizado com sucesso!'\r\n          this.setLoginMsg(successMsg)\r\n          console.log('fetch POST request for user data at signup successful.')\r\n          console.log(postUserStatus)\r\n          console.log('SING UP STATUS: ' + successMsg)\r\n\r\n        } else {\r\n          console.log('fetch POST request for user data at signup failed. Throwing error...')\r\n          throw new Error(postUserStatus)\r\n        }\r\n\r\n      } else { // ready to post user info and create new user account.\r\n        const errMsg = 'Email já cadastrado.'\r\n        this.setLoginMsg(errMsg)\r\n        console.log('SING UP STATUS: ' + errMsg)\r\n      }\r\n\r\n    } catch (error) {\r\n      const errMsg = 'Erro no servidor, não foi possível realizar o cadastro. Por favor, tente novamente.'\r\n      this.setLoginMsg(errMsg)\r\n      console.log('SING UP STATUS: Erro capturado. Imprimindo erro...')\r\n      console.log(error);\r\n\r\n    } finally {\r\n      this.setState({ isDataLoading: false })\r\n      console.log('SING UP STATUS: Concluido.')\r\n      if (postUserResult.ok)  this.onSignIn()\r\n    }\r\n  }\r\n\r\n  render() {\r\n\r\n    console.log('Rendering \"LoginComponent\" screen...')\r\n    return this.LoginScreen()\r\n  \r\n  }\r\n}\r\n\r\nexport default LoginScreen;","import { Icon } from 'react-native-eva-icons'\n\nimport React, { Component } from 'react';\nimport { Text, ImageBackground} from 'react-native';\n\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\n//import { createDrawerNavigator } from '@react-navigation/drawer';\n\nimport EntrancesScreen from './components/EntrancesComponent';\nimport PostEntranceScreen from './components/PostEntryComponent';\nimport LoginScreen from './components/LoginComponent'\n\nconst Tab = createBottomTabNavigator();\nconst Stack = createNativeStackNavigator();\n\nfunction HomeScreen(props) {\n  return(    \n    <Stack.Navigator \n    initialRouteName='Entrances' \n    screenOptions={{\n      headerShown: false,\n    }}\n    > \n      <Stack.Screen\n      name=\"Entrances\"\n      component={EntrancesScreen}\n      options={{title: 'Suas entradas'}}\n      initialParams={{userInfo: props.route.params.userInfo}}\n      />\n      <Stack.Screen\n      name=\"PostEntrance\"\n      component={PostEntranceScreen}\n      options={{title: 'Adicione uma  entrada'}}\n      initialParams={{userInfo: props.route.params.userInfo}}\n      />\n    </Stack.Navigator>\n  )\n}\n\nfunction SettingsScreen() {\n  return(\n    <ImageBackground source={require('./assets/wallpaper.jpg')} style={{width: '100%', height: '100%'}}>\n      <Text>Settings</Text>\n    </ImageBackground>\n  )\n}\n\nconst mainScreenOptions = ({ route }) => ({\n  headerShown: false,\n  tabBarActiveTintColor: 'tomato',\n  tabBarInactiveTintColor: 'gray',\n  tabBarHideOnKeyboard: true,\n  tabBarIcon: ({ focused, color, size }) => {\n    let iconName;\n    if (route.name === 'Home') {\n      iconName = focused\n        ? 'book'\n        : 'book-outline';\n    } else if (route.name === 'Settings') {\n      iconName = focused ? 'settings' : 'settings-outline';\n    }\n    // You can return any component that you like here!\n    return <Icon name={iconName} width={size} height={size} fill='grey'></Icon>\n  },\n})\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isUserAuth: false,\n      userInfo: null,\n    };\n    this.authUser = this.authUser.bind(this);\n  }\n\n  authUser(userInfo) {\n    console.log('User authenticated. Navigating to \"Entries\" screen...')\n    this.setState( {isUserAuth: true, userInfo} )\n  }\n\n  render() {\n\n    if (!this.state.isUserAuth) {\n      return <LoginScreen authUser={this.authUser} />\n    } else {\n      return (\n        <NavigationContainer>\n          <Tab.Navigator\n            screenOptions={mainScreenOptions}\n          >\n            <Tab.Screen name=\"Home\" component={HomeScreen} initialParams={{userInfo: this.state.userInfo}}/>\n            <Tab.Screen name=\"Settings\" component={SettingsScreen} initialParams={{userInfo: this.state.userInfo}} />\n          </Tab.Navigator>    \n        </NavigationContainer>\n      );  \n    }\n  }\n} \n\nexport default App;","import { registerRootComponent } from 'expo';\n\nimport App from './App';\n\n// registerRootComponent calls AppRegistry.registerComponent('main', () => App);\n// It also ensures that whether you load the app in Expo Go or in a native build,\n// the environment is set up appropriately\nregisterRootComponent(App);\n"],"sourceRoot":""}